//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NewFMS.HesabRayan {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiseToRevenueSystemsSoap", Namespace="http://tempuri.org/")]
    public partial class ServiseToRevenueSystems : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompanyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RevenueCodeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PartnershipListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountListAccountingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountListRevenueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SundriesTypeDescListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecovrySendedFicheOperationCompleted;
        
        private System.Threading.SendOrPostCallback VitiationRecovrySendedFicheOperationCompleted;
        
        private System.Threading.SendOrPostCallback VitiationSendedFicheOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInstalmentRevenueOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterNewFicheByAccYearCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterNewFicheByAccYearCostAndDiscountOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterNewFicheOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilesShowOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterCarDutyFicheOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnRecoverySendedFicheOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPaymentRecovrySendedFicheOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterInstalmentFicheByDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterInstalmentChequeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterInstalmentWithChequeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecoverFicheByBillAndPaymentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterClientRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReturnRecoveryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveBedBesByRenewCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiseToRevenueSystems() {
            this.Url = global::NewFMS.Properties.Settings.Default.NewFMS_HesabRayan_ServiseToRevenueSystems;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event CompanyListCompletedEventHandler CompanyListCompleted;
        
        /// <remarks/>
        public event ClientListCompletedEventHandler ClientListCompleted;
        
        /// <remarks/>
        public event RevenueCodeListCompletedEventHandler RevenueCodeListCompleted;
        
        /// <remarks/>
        public event PartnershipListCompletedEventHandler PartnershipListCompleted;
        
        /// <remarks/>
        public event AccountListAccountingCompletedEventHandler AccountListAccountingCompleted;
        
        /// <remarks/>
        public event AccountListRevenueCompletedEventHandler AccountListRevenueCompleted;
        
        /// <remarks/>
        public event SundriesTypeDescListCompletedEventHandler SundriesTypeDescListCompleted;
        
        /// <remarks/>
        public event RecovrySendedFicheCompletedEventHandler RecovrySendedFicheCompleted;
        
        /// <remarks/>
        public event VitiationRecovrySendedFicheCompletedEventHandler VitiationRecovrySendedFicheCompleted;
        
        /// <remarks/>
        public event VitiationSendedFicheCompletedEventHandler VitiationSendedFicheCompleted;
        
        /// <remarks/>
        public event InsertInstalmentRevenueCompletedEventHandler InsertInstalmentRevenueCompleted;
        
        /// <remarks/>
        public event RegisterNewFicheByAccYearCostCompletedEventHandler RegisterNewFicheByAccYearCostCompleted;
        
        /// <remarks/>
        public event RegisterNewFicheByAccYearCostAndDiscountCompletedEventHandler RegisterNewFicheByAccYearCostAndDiscountCompleted;
        
        /// <remarks/>
        public event RegisterNewFicheCompletedEventHandler RegisterNewFicheCompleted;
        
        /// <remarks/>
        public event FilesShowCompletedEventHandler FilesShowCompleted;
        
        /// <remarks/>
        public event RegisterCarDutyFicheCompletedEventHandler RegisterCarDutyFicheCompleted;
        
        /// <remarks/>
        public event ReturnRecoverySendedFicheCompletedEventHandler ReturnRecoverySendedFicheCompleted;
        
        /// <remarks/>
        public event EPaymentRecovrySendedFicheCompletedEventHandler EPaymentRecovrySendedFicheCompleted;
        
        /// <remarks/>
        public event RegisterInstalmentFicheByDetailCompletedEventHandler RegisterInstalmentFicheByDetailCompleted;
        
        /// <remarks/>
        public event RegisterInstalmentChequeCompletedEventHandler RegisterInstalmentChequeCompleted;
        
        /// <remarks/>
        public event RegisterInstalmentWithChequeCompletedEventHandler RegisterInstalmentWithChequeCompleted;
        
        /// <remarks/>
        public event RecoverFicheByBillAndPaymentIdCompletedEventHandler RecoverFicheByBillAndPaymentIdCompleted;
        
        /// <remarks/>
        public event RegisterClientRecordCompletedEventHandler RegisterClientRecordCompleted;
        
        /// <remarks/>
        public event UpdateReturnRecoveryStatusCompletedEventHandler UpdateReturnRecoveryStatusCompleted;
        
        /// <remarks/>
        public event RetrieveBedBesByRenewCodeCompletedEventHandler RetrieveBedBesByRenewCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompanyList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CompanyList() {
            object[] results = this.Invoke("CompanyList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CompanyListAsync() {
            this.CompanyListAsync(null);
        }
        
        /// <remarks/>
        public void CompanyListAsync(object userState) {
            if ((this.CompanyListOperationCompleted == null)) {
                this.CompanyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompanyListOperationCompleted);
            }
            this.InvokeAsync("CompanyList", new object[0], this.CompanyListOperationCompleted, userState);
        }
        
        private void OnCompanyListOperationCompleted(object arg) {
            if ((this.CompanyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompanyListCompleted(this, new CompanyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ClientList() {
            object[] results = this.Invoke("ClientList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ClientListAsync() {
            this.ClientListAsync(null);
        }
        
        /// <remarks/>
        public void ClientListAsync(object userState) {
            if ((this.ClientListOperationCompleted == null)) {
                this.ClientListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientListOperationCompleted);
            }
            this.InvokeAsync("ClientList", new object[0], this.ClientListOperationCompleted, userState);
        }
        
        private void OnClientListOperationCompleted(object arg) {
            if ((this.ClientListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientListCompleted(this, new ClientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RevenueCodeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RevenueCodeList() {
            object[] results = this.Invoke("RevenueCodeList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RevenueCodeListAsync() {
            this.RevenueCodeListAsync(null);
        }
        
        /// <remarks/>
        public void RevenueCodeListAsync(object userState) {
            if ((this.RevenueCodeListOperationCompleted == null)) {
                this.RevenueCodeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevenueCodeListOperationCompleted);
            }
            this.InvokeAsync("RevenueCodeList", new object[0], this.RevenueCodeListOperationCompleted, userState);
        }
        
        private void OnRevenueCodeListOperationCompleted(object arg) {
            if ((this.RevenueCodeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RevenueCodeListCompleted(this, new RevenueCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PartnershipList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PartnershipList() {
            object[] results = this.Invoke("PartnershipList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PartnershipListAsync() {
            this.PartnershipListAsync(null);
        }
        
        /// <remarks/>
        public void PartnershipListAsync(object userState) {
            if ((this.PartnershipListOperationCompleted == null)) {
                this.PartnershipListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPartnershipListOperationCompleted);
            }
            this.InvokeAsync("PartnershipList", new object[0], this.PartnershipListOperationCompleted, userState);
        }
        
        private void OnPartnershipListOperationCompleted(object arg) {
            if ((this.PartnershipListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PartnershipListCompleted(this, new PartnershipListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountListAccounting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AccountListAccounting(int companyID) {
            object[] results = this.Invoke("AccountListAccounting", new object[] {
                        companyID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AccountListAccountingAsync(int companyID) {
            this.AccountListAccountingAsync(companyID, null);
        }
        
        /// <remarks/>
        public void AccountListAccountingAsync(int companyID, object userState) {
            if ((this.AccountListAccountingOperationCompleted == null)) {
                this.AccountListAccountingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountListAccountingOperationCompleted);
            }
            this.InvokeAsync("AccountListAccounting", new object[] {
                        companyID}, this.AccountListAccountingOperationCompleted, userState);
        }
        
        private void OnAccountListAccountingOperationCompleted(object arg) {
            if ((this.AccountListAccountingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountListAccountingCompleted(this, new AccountListAccountingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountListRevenue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AccountListRevenue(int companyID) {
            object[] results = this.Invoke("AccountListRevenue", new object[] {
                        companyID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AccountListRevenueAsync(int companyID) {
            this.AccountListRevenueAsync(companyID, null);
        }
        
        /// <remarks/>
        public void AccountListRevenueAsync(int companyID, object userState) {
            if ((this.AccountListRevenueOperationCompleted == null)) {
                this.AccountListRevenueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountListRevenueOperationCompleted);
            }
            this.InvokeAsync("AccountListRevenue", new object[] {
                        companyID}, this.AccountListRevenueOperationCompleted, userState);
        }
        
        private void OnAccountListRevenueOperationCompleted(object arg) {
            if ((this.AccountListRevenueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountListRevenueCompleted(this, new AccountListRevenueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SundriesTypeDescList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SundriesTypeDescList() {
            object[] results = this.Invoke("SundriesTypeDescList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SundriesTypeDescListAsync() {
            this.SundriesTypeDescListAsync(null);
        }
        
        /// <remarks/>
        public void SundriesTypeDescListAsync(object userState) {
            if ((this.SundriesTypeDescListOperationCompleted == null)) {
                this.SundriesTypeDescListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSundriesTypeDescListOperationCompleted);
            }
            this.InvokeAsync("SundriesTypeDescList", new object[0], this.SundriesTypeDescListOperationCompleted, userState);
        }
        
        private void OnSundriesTypeDescListOperationCompleted(object arg) {
            if ((this.SundriesTypeDescListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SundriesTypeDescListCompleted(this, new SundriesTypeDescListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecovrySendedFiche", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RecovrySendedFiche(int SystemClientService, int CompanyId, string FicheNo, System.DateTime RecoveryDate, string RefCode) {
            object[] results = this.Invoke("RecovrySendedFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNo,
                        RecoveryDate,
                        RefCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecovrySendedFicheAsync(int SystemClientService, int CompanyId, string FicheNo, System.DateTime RecoveryDate, string RefCode) {
            this.RecovrySendedFicheAsync(SystemClientService, CompanyId, FicheNo, RecoveryDate, RefCode, null);
        }
        
        /// <remarks/>
        public void RecovrySendedFicheAsync(int SystemClientService, int CompanyId, string FicheNo, System.DateTime RecoveryDate, string RefCode, object userState) {
            if ((this.RecovrySendedFicheOperationCompleted == null)) {
                this.RecovrySendedFicheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecovrySendedFicheOperationCompleted);
            }
            this.InvokeAsync("RecovrySendedFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNo,
                        RecoveryDate,
                        RefCode}, this.RecovrySendedFicheOperationCompleted, userState);
        }
        
        private void OnRecovrySendedFicheOperationCompleted(object arg) {
            if ((this.RecovrySendedFicheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecovrySendedFicheCompleted(this, new RecovrySendedFicheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VitiationRecovrySendedFiche", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VitiationRecovrySendedFiche(int SystemClientService, int CompanyId, string FicheNo) {
            object[] results = this.Invoke("VitiationRecovrySendedFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VitiationRecovrySendedFicheAsync(int SystemClientService, int CompanyId, string FicheNo) {
            this.VitiationRecovrySendedFicheAsync(SystemClientService, CompanyId, FicheNo, null);
        }
        
        /// <remarks/>
        public void VitiationRecovrySendedFicheAsync(int SystemClientService, int CompanyId, string FicheNo, object userState) {
            if ((this.VitiationRecovrySendedFicheOperationCompleted == null)) {
                this.VitiationRecovrySendedFicheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVitiationRecovrySendedFicheOperationCompleted);
            }
            this.InvokeAsync("VitiationRecovrySendedFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNo}, this.VitiationRecovrySendedFicheOperationCompleted, userState);
        }
        
        private void OnVitiationRecovrySendedFicheOperationCompleted(object arg) {
            if ((this.VitiationRecovrySendedFicheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VitiationRecovrySendedFicheCompleted(this, new VitiationRecovrySendedFicheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VitiationSendedFiche", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VitiationSendedFiche(int SystemClientService, int CompanyId, string FicheNo) {
            object[] results = this.Invoke("VitiationSendedFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VitiationSendedFicheAsync(int SystemClientService, int CompanyId, string FicheNo) {
            this.VitiationSendedFicheAsync(SystemClientService, CompanyId, FicheNo, null);
        }
        
        /// <remarks/>
        public void VitiationSendedFicheAsync(int SystemClientService, int CompanyId, string FicheNo, object userState) {
            if ((this.VitiationSendedFicheOperationCompleted == null)) {
                this.VitiationSendedFicheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVitiationSendedFicheOperationCompleted);
            }
            this.InvokeAsync("VitiationSendedFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNo}, this.VitiationSendedFicheOperationCompleted, userState);
        }
        
        private void OnVitiationSendedFicheOperationCompleted(object arg) {
            if ((this.VitiationSendedFicheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VitiationSendedFicheCompleted(this, new VitiationSendedFicheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertInstalmentRevenue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertInstalmentRevenue(int SystemClientService, int IdCompany, int InstalmentNum, int ClientID, string ChequeNum, int MaturitryDate, string BankName, string BranchName, long ChequeCost, string AccountNum, string RecieptCode, int RevenueCode, float Cost) {
            object[] results = this.Invoke("InsertInstalmentRevenue", new object[] {
                        SystemClientService,
                        IdCompany,
                        InstalmentNum,
                        ClientID,
                        ChequeNum,
                        MaturitryDate,
                        BankName,
                        BranchName,
                        ChequeCost,
                        AccountNum,
                        RecieptCode,
                        RevenueCode,
                        Cost});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertInstalmentRevenueAsync(int SystemClientService, int IdCompany, int InstalmentNum, int ClientID, string ChequeNum, int MaturitryDate, string BankName, string BranchName, long ChequeCost, string AccountNum, string RecieptCode, int RevenueCode, float Cost) {
            this.InsertInstalmentRevenueAsync(SystemClientService, IdCompany, InstalmentNum, ClientID, ChequeNum, MaturitryDate, BankName, BranchName, ChequeCost, AccountNum, RecieptCode, RevenueCode, Cost, null);
        }
        
        /// <remarks/>
        public void InsertInstalmentRevenueAsync(int SystemClientService, int IdCompany, int InstalmentNum, int ClientID, string ChequeNum, int MaturitryDate, string BankName, string BranchName, long ChequeCost, string AccountNum, string RecieptCode, int RevenueCode, float Cost, object userState) {
            if ((this.InsertInstalmentRevenueOperationCompleted == null)) {
                this.InsertInstalmentRevenueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInstalmentRevenueOperationCompleted);
            }
            this.InvokeAsync("InsertInstalmentRevenue", new object[] {
                        SystemClientService,
                        IdCompany,
                        InstalmentNum,
                        ClientID,
                        ChequeNum,
                        MaturitryDate,
                        BankName,
                        BranchName,
                        ChequeCost,
                        AccountNum,
                        RecieptCode,
                        RevenueCode,
                        Cost}, this.InsertInstalmentRevenueOperationCompleted, userState);
        }
        
        private void OnInsertInstalmentRevenueOperationCompleted(object arg) {
            if ((this.InsertInstalmentRevenueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInstalmentRevenueCompleted(this, new InsertInstalmentRevenueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterNewFicheByAccYearCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterNewFicheByAccYearCost(
                    int SystemClientService, 
                    int IdCompany, 
                    string FicheNum, 
                    string ClientName, 
                    System.DateTime FicheDateCreate, 
                    string AccountNum, 
                    string FicheNo, 
                    string PaymentDesc, 
                    string BiilID, 
                    string PaymentID, 
                    string RenovationCode, 
                    string Pelaque, 
                    string PayNo, 
                    int TypeCode, 
                    int SystemType, 
                    string VehicleType, 
                    string VIN, 
                    long FicheCost, 
                    long totalDiscount, 
                    System.Xml.XmlNode FicheDetail, 
                    System.Xml.XmlNode FicheDetailByFisYear, 
                    System.Xml.XmlNode FicheAddAndSub) {
            object[] results = this.Invoke("RegisterNewFicheByAccYearCost", new object[] {
                        SystemClientService,
                        IdCompany,
                        FicheNum,
                        ClientName,
                        FicheDateCreate,
                        AccountNum,
                        FicheNo,
                        PaymentDesc,
                        BiilID,
                        PaymentID,
                        RenovationCode,
                        Pelaque,
                        PayNo,
                        TypeCode,
                        SystemType,
                        VehicleType,
                        VIN,
                        FicheCost,
                        totalDiscount,
                        FicheDetail,
                        FicheDetailByFisYear,
                        FicheAddAndSub});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterNewFicheByAccYearCostAsync(
                    int SystemClientService, 
                    int IdCompany, 
                    string FicheNum, 
                    string ClientName, 
                    System.DateTime FicheDateCreate, 
                    string AccountNum, 
                    string FicheNo, 
                    string PaymentDesc, 
                    string BiilID, 
                    string PaymentID, 
                    string RenovationCode, 
                    string Pelaque, 
                    string PayNo, 
                    int TypeCode, 
                    int SystemType, 
                    string VehicleType, 
                    string VIN, 
                    long FicheCost, 
                    long totalDiscount, 
                    System.Xml.XmlNode FicheDetail, 
                    System.Xml.XmlNode FicheDetailByFisYear, 
                    System.Xml.XmlNode FicheAddAndSub) {
            this.RegisterNewFicheByAccYearCostAsync(SystemClientService, IdCompany, FicheNum, ClientName, FicheDateCreate, AccountNum, FicheNo, PaymentDesc, BiilID, PaymentID, RenovationCode, Pelaque, PayNo, TypeCode, SystemType, VehicleType, VIN, FicheCost, totalDiscount, FicheDetail, FicheDetailByFisYear, FicheAddAndSub, null);
        }
        
        /// <remarks/>
        public void RegisterNewFicheByAccYearCostAsync(
                    int SystemClientService, 
                    int IdCompany, 
                    string FicheNum, 
                    string ClientName, 
                    System.DateTime FicheDateCreate, 
                    string AccountNum, 
                    string FicheNo, 
                    string PaymentDesc, 
                    string BiilID, 
                    string PaymentID, 
                    string RenovationCode, 
                    string Pelaque, 
                    string PayNo, 
                    int TypeCode, 
                    int SystemType, 
                    string VehicleType, 
                    string VIN, 
                    long FicheCost, 
                    long totalDiscount, 
                    System.Xml.XmlNode FicheDetail, 
                    System.Xml.XmlNode FicheDetailByFisYear, 
                    System.Xml.XmlNode FicheAddAndSub, 
                    object userState) {
            if ((this.RegisterNewFicheByAccYearCostOperationCompleted == null)) {
                this.RegisterNewFicheByAccYearCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterNewFicheByAccYearCostOperationCompleted);
            }
            this.InvokeAsync("RegisterNewFicheByAccYearCost", new object[] {
                        SystemClientService,
                        IdCompany,
                        FicheNum,
                        ClientName,
                        FicheDateCreate,
                        AccountNum,
                        FicheNo,
                        PaymentDesc,
                        BiilID,
                        PaymentID,
                        RenovationCode,
                        Pelaque,
                        PayNo,
                        TypeCode,
                        SystemType,
                        VehicleType,
                        VIN,
                        FicheCost,
                        totalDiscount,
                        FicheDetail,
                        FicheDetailByFisYear,
                        FicheAddAndSub}, this.RegisterNewFicheByAccYearCostOperationCompleted, userState);
        }
        
        private void OnRegisterNewFicheByAccYearCostOperationCompleted(object arg) {
            if ((this.RegisterNewFicheByAccYearCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterNewFicheByAccYearCostCompleted(this, new RegisterNewFicheByAccYearCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterNewFicheByAccYearCostAndDiscount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterNewFicheByAccYearCostAndDiscount(
                    int SystemClientService, 
                    int IdCompany, 
                    string FicheNum, 
                    string ClientName, 
                    System.DateTime FicheDateCreate, 
                    string AccountNum, 
                    string FicheNo, 
                    string PaymentDesc, 
                    string BiilID, 
                    string PaymentID, 
                    string RenovationCode, 
                    string Pelaque, 
                    string PayNo, 
                    int TypeCode, 
                    int SystemType, 
                    string VehicleType, 
                    string VIN, 
                    long FicheCost, 
                    long totalAmountSavingBond, 
                    long totalDiscount, 
                    System.Xml.XmlNode FicheDetail, 
                    System.Xml.XmlNode FicheDetailByFisYear, 
                    System.Xml.XmlNode FicheAddAndSub) {
            object[] results = this.Invoke("RegisterNewFicheByAccYearCostAndDiscount", new object[] {
                        SystemClientService,
                        IdCompany,
                        FicheNum,
                        ClientName,
                        FicheDateCreate,
                        AccountNum,
                        FicheNo,
                        PaymentDesc,
                        BiilID,
                        PaymentID,
                        RenovationCode,
                        Pelaque,
                        PayNo,
                        TypeCode,
                        SystemType,
                        VehicleType,
                        VIN,
                        FicheCost,
                        totalAmountSavingBond,
                        totalDiscount,
                        FicheDetail,
                        FicheDetailByFisYear,
                        FicheAddAndSub});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterNewFicheByAccYearCostAndDiscountAsync(
                    int SystemClientService, 
                    int IdCompany, 
                    string FicheNum, 
                    string ClientName, 
                    System.DateTime FicheDateCreate, 
                    string AccountNum, 
                    string FicheNo, 
                    string PaymentDesc, 
                    string BiilID, 
                    string PaymentID, 
                    string RenovationCode, 
                    string Pelaque, 
                    string PayNo, 
                    int TypeCode, 
                    int SystemType, 
                    string VehicleType, 
                    string VIN, 
                    long FicheCost, 
                    long totalAmountSavingBond, 
                    long totalDiscount, 
                    System.Xml.XmlNode FicheDetail, 
                    System.Xml.XmlNode FicheDetailByFisYear, 
                    System.Xml.XmlNode FicheAddAndSub) {
            this.RegisterNewFicheByAccYearCostAndDiscountAsync(SystemClientService, IdCompany, FicheNum, ClientName, FicheDateCreate, AccountNum, FicheNo, PaymentDesc, BiilID, PaymentID, RenovationCode, Pelaque, PayNo, TypeCode, SystemType, VehicleType, VIN, FicheCost, totalAmountSavingBond, totalDiscount, FicheDetail, FicheDetailByFisYear, FicheAddAndSub, null);
        }
        
        /// <remarks/>
        public void RegisterNewFicheByAccYearCostAndDiscountAsync(
                    int SystemClientService, 
                    int IdCompany, 
                    string FicheNum, 
                    string ClientName, 
                    System.DateTime FicheDateCreate, 
                    string AccountNum, 
                    string FicheNo, 
                    string PaymentDesc, 
                    string BiilID, 
                    string PaymentID, 
                    string RenovationCode, 
                    string Pelaque, 
                    string PayNo, 
                    int TypeCode, 
                    int SystemType, 
                    string VehicleType, 
                    string VIN, 
                    long FicheCost, 
                    long totalAmountSavingBond, 
                    long totalDiscount, 
                    System.Xml.XmlNode FicheDetail, 
                    System.Xml.XmlNode FicheDetailByFisYear, 
                    System.Xml.XmlNode FicheAddAndSub, 
                    object userState) {
            if ((this.RegisterNewFicheByAccYearCostAndDiscountOperationCompleted == null)) {
                this.RegisterNewFicheByAccYearCostAndDiscountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterNewFicheByAccYearCostAndDiscountOperationCompleted);
            }
            this.InvokeAsync("RegisterNewFicheByAccYearCostAndDiscount", new object[] {
                        SystemClientService,
                        IdCompany,
                        FicheNum,
                        ClientName,
                        FicheDateCreate,
                        AccountNum,
                        FicheNo,
                        PaymentDesc,
                        BiilID,
                        PaymentID,
                        RenovationCode,
                        Pelaque,
                        PayNo,
                        TypeCode,
                        SystemType,
                        VehicleType,
                        VIN,
                        FicheCost,
                        totalAmountSavingBond,
                        totalDiscount,
                        FicheDetail,
                        FicheDetailByFisYear,
                        FicheAddAndSub}, this.RegisterNewFicheByAccYearCostAndDiscountOperationCompleted, userState);
        }
        
        private void OnRegisterNewFicheByAccYearCostAndDiscountOperationCompleted(object arg) {
            if ((this.RegisterNewFicheByAccYearCostAndDiscountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterNewFicheByAccYearCostAndDiscountCompleted(this, new RegisterNewFicheByAccYearCostAndDiscountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterNewFiche", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterNewFiche(int SystemClientService, int CompanyId, string FicheNum, string ClientName, System.DateTime FicheDateCreate, string AccountNum, string FicheNo, string PayNo, string PaymentDesc, string BiilID, string PaymentID, string RenovationCode, string Pelaque, int TypeCode, System.Xml.XmlNode FicheDetail) {
            object[] results = this.Invoke("RegisterNewFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNum,
                        ClientName,
                        FicheDateCreate,
                        AccountNum,
                        FicheNo,
                        PayNo,
                        PaymentDesc,
                        BiilID,
                        PaymentID,
                        RenovationCode,
                        Pelaque,
                        TypeCode,
                        FicheDetail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterNewFicheAsync(int SystemClientService, int CompanyId, string FicheNum, string ClientName, System.DateTime FicheDateCreate, string AccountNum, string FicheNo, string PayNo, string PaymentDesc, string BiilID, string PaymentID, string RenovationCode, string Pelaque, int TypeCode, System.Xml.XmlNode FicheDetail) {
            this.RegisterNewFicheAsync(SystemClientService, CompanyId, FicheNum, ClientName, FicheDateCreate, AccountNum, FicheNo, PayNo, PaymentDesc, BiilID, PaymentID, RenovationCode, Pelaque, TypeCode, FicheDetail, null);
        }
        
        /// <remarks/>
        public void RegisterNewFicheAsync(
                    int SystemClientService, 
                    int CompanyId, 
                    string FicheNum, 
                    string ClientName, 
                    System.DateTime FicheDateCreate, 
                    string AccountNum, 
                    string FicheNo, 
                    string PayNo, 
                    string PaymentDesc, 
                    string BiilID, 
                    string PaymentID, 
                    string RenovationCode, 
                    string Pelaque, 
                    int TypeCode, 
                    System.Xml.XmlNode FicheDetail, 
                    object userState) {
            if ((this.RegisterNewFicheOperationCompleted == null)) {
                this.RegisterNewFicheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterNewFicheOperationCompleted);
            }
            this.InvokeAsync("RegisterNewFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNum,
                        ClientName,
                        FicheDateCreate,
                        AccountNum,
                        FicheNo,
                        PayNo,
                        PaymentDesc,
                        BiilID,
                        PaymentID,
                        RenovationCode,
                        Pelaque,
                        TypeCode,
                        FicheDetail}, this.RegisterNewFicheOperationCompleted, userState);
        }
        
        private void OnRegisterNewFicheOperationCompleted(object arg) {
            if ((this.RegisterNewFicheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterNewFicheCompleted(this, new RegisterNewFicheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FilesShow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PartnerShipSetting[] FilesShow() {
            object[] results = this.Invoke("FilesShow", new object[0]);
            return ((PartnerShipSetting[])(results[0]));
        }
        
        /// <remarks/>
        public void FilesShowAsync() {
            this.FilesShowAsync(null);
        }
        
        /// <remarks/>
        public void FilesShowAsync(object userState) {
            if ((this.FilesShowOperationCompleted == null)) {
                this.FilesShowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilesShowOperationCompleted);
            }
            this.InvokeAsync("FilesShow", new object[0], this.FilesShowOperationCompleted, userState);
        }
        
        private void OnFilesShowOperationCompleted(object arg) {
            if ((this.FilesShowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilesShowCompleted(this, new FilesShowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterCarDutyFiche", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterCarDutyFiche(
                    int SystemClientService, 
                    int IdCompany, 
                    string FicheNum, 
                    string ClientName, 
                    System.DateTime FicheDateCreate, 
                    string AccountNum, 
                    string FicheNo, 
                    string PaymentDesc, 
                    int TypeCode, 
                    string BiilID, 
                    string PaymentID, 
                    int RevenueID, 
                    long Amount, 
                    string Vehicletype, 
                    string VIN, 
                    long TaxCost) {
            object[] results = this.Invoke("RegisterCarDutyFiche", new object[] {
                        SystemClientService,
                        IdCompany,
                        FicheNum,
                        ClientName,
                        FicheDateCreate,
                        AccountNum,
                        FicheNo,
                        PaymentDesc,
                        TypeCode,
                        BiilID,
                        PaymentID,
                        RevenueID,
                        Amount,
                        Vehicletype,
                        VIN,
                        TaxCost});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterCarDutyFicheAsync(
                    int SystemClientService, 
                    int IdCompany, 
                    string FicheNum, 
                    string ClientName, 
                    System.DateTime FicheDateCreate, 
                    string AccountNum, 
                    string FicheNo, 
                    string PaymentDesc, 
                    int TypeCode, 
                    string BiilID, 
                    string PaymentID, 
                    int RevenueID, 
                    long Amount, 
                    string Vehicletype, 
                    string VIN, 
                    long TaxCost) {
            this.RegisterCarDutyFicheAsync(SystemClientService, IdCompany, FicheNum, ClientName, FicheDateCreate, AccountNum, FicheNo, PaymentDesc, TypeCode, BiilID, PaymentID, RevenueID, Amount, Vehicletype, VIN, TaxCost, null);
        }
        
        /// <remarks/>
        public void RegisterCarDutyFicheAsync(
                    int SystemClientService, 
                    int IdCompany, 
                    string FicheNum, 
                    string ClientName, 
                    System.DateTime FicheDateCreate, 
                    string AccountNum, 
                    string FicheNo, 
                    string PaymentDesc, 
                    int TypeCode, 
                    string BiilID, 
                    string PaymentID, 
                    int RevenueID, 
                    long Amount, 
                    string Vehicletype, 
                    string VIN, 
                    long TaxCost, 
                    object userState) {
            if ((this.RegisterCarDutyFicheOperationCompleted == null)) {
                this.RegisterCarDutyFicheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterCarDutyFicheOperationCompleted);
            }
            this.InvokeAsync("RegisterCarDutyFiche", new object[] {
                        SystemClientService,
                        IdCompany,
                        FicheNum,
                        ClientName,
                        FicheDateCreate,
                        AccountNum,
                        FicheNo,
                        PaymentDesc,
                        TypeCode,
                        BiilID,
                        PaymentID,
                        RevenueID,
                        Amount,
                        Vehicletype,
                        VIN,
                        TaxCost}, this.RegisterCarDutyFicheOperationCompleted, userState);
        }
        
        private void OnRegisterCarDutyFicheOperationCompleted(object arg) {
            if ((this.RegisterCarDutyFicheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCarDutyFicheCompleted(this, new RegisterCarDutyFicheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnRecoverySendedFiche", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReturnRecoverySendedFiche(int SystemClientService, int CompanyId, string FicheNo) {
            object[] results = this.Invoke("ReturnRecoverySendedFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnRecoverySendedFicheAsync(int SystemClientService, int CompanyId, string FicheNo) {
            this.ReturnRecoverySendedFicheAsync(SystemClientService, CompanyId, FicheNo, null);
        }
        
        /// <remarks/>
        public void ReturnRecoverySendedFicheAsync(int SystemClientService, int CompanyId, string FicheNo, object userState) {
            if ((this.ReturnRecoverySendedFicheOperationCompleted == null)) {
                this.ReturnRecoverySendedFicheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnRecoverySendedFicheOperationCompleted);
            }
            this.InvokeAsync("ReturnRecoverySendedFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNo}, this.ReturnRecoverySendedFicheOperationCompleted, userState);
        }
        
        private void OnReturnRecoverySendedFicheOperationCompleted(object arg) {
            if ((this.ReturnRecoverySendedFicheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnRecoverySendedFicheCompleted(this, new ReturnRecoverySendedFicheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EPaymentRecovrySendedFiche", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EPaymentRecovrySendedFiche(int SystemClientService, int CompanyId, string FicheNo, System.DateTime RecoveryDate, string RefCode, string EPBankId, string EPPortId, int RecoveryYear) {
            object[] results = this.Invoke("EPaymentRecovrySendedFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNo,
                        RecoveryDate,
                        RefCode,
                        EPBankId,
                        EPPortId,
                        RecoveryYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EPaymentRecovrySendedFicheAsync(int SystemClientService, int CompanyId, string FicheNo, System.DateTime RecoveryDate, string RefCode, string EPBankId, string EPPortId, int RecoveryYear) {
            this.EPaymentRecovrySendedFicheAsync(SystemClientService, CompanyId, FicheNo, RecoveryDate, RefCode, EPBankId, EPPortId, RecoveryYear, null);
        }
        
        /// <remarks/>
        public void EPaymentRecovrySendedFicheAsync(int SystemClientService, int CompanyId, string FicheNo, System.DateTime RecoveryDate, string RefCode, string EPBankId, string EPPortId, int RecoveryYear, object userState) {
            if ((this.EPaymentRecovrySendedFicheOperationCompleted == null)) {
                this.EPaymentRecovrySendedFicheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPaymentRecovrySendedFicheOperationCompleted);
            }
            this.InvokeAsync("EPaymentRecovrySendedFiche", new object[] {
                        SystemClientService,
                        CompanyId,
                        FicheNo,
                        RecoveryDate,
                        RefCode,
                        EPBankId,
                        EPPortId,
                        RecoveryYear}, this.EPaymentRecovrySendedFicheOperationCompleted, userState);
        }
        
        private void OnEPaymentRecovrySendedFicheOperationCompleted(object arg) {
            if ((this.EPaymentRecovrySendedFicheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPaymentRecovrySendedFicheCompleted(this, new EPaymentRecovrySendedFicheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterInstalmentFicheByDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterInstalmentFicheByDetail(int SystemClientService, int PartnershipId, int CompanyId, string InstalmentDate, string OrderManName, string InsReqLetterNum, string InsOrdLetterNum, long InsTotalCost, long PrePaymentCost, int InsCount, string StartInstalmentDate, int InstalmentDistance, string InsDescription, int RecoverySundriesFicheId, System.Xml.XmlNode FicheDetail) {
            object[] results = this.Invoke("RegisterInstalmentFicheByDetail", new object[] {
                        SystemClientService,
                        PartnershipId,
                        CompanyId,
                        InstalmentDate,
                        OrderManName,
                        InsReqLetterNum,
                        InsOrdLetterNum,
                        InsTotalCost,
                        PrePaymentCost,
                        InsCount,
                        StartInstalmentDate,
                        InstalmentDistance,
                        InsDescription,
                        RecoverySundriesFicheId,
                        FicheDetail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterInstalmentFicheByDetailAsync(int SystemClientService, int PartnershipId, int CompanyId, string InstalmentDate, string OrderManName, string InsReqLetterNum, string InsOrdLetterNum, long InsTotalCost, long PrePaymentCost, int InsCount, string StartInstalmentDate, int InstalmentDistance, string InsDescription, int RecoverySundriesFicheId, System.Xml.XmlNode FicheDetail) {
            this.RegisterInstalmentFicheByDetailAsync(SystemClientService, PartnershipId, CompanyId, InstalmentDate, OrderManName, InsReqLetterNum, InsOrdLetterNum, InsTotalCost, PrePaymentCost, InsCount, StartInstalmentDate, InstalmentDistance, InsDescription, RecoverySundriesFicheId, FicheDetail, null);
        }
        
        /// <remarks/>
        public void RegisterInstalmentFicheByDetailAsync(
                    int SystemClientService, 
                    int PartnershipId, 
                    int CompanyId, 
                    string InstalmentDate, 
                    string OrderManName, 
                    string InsReqLetterNum, 
                    string InsOrdLetterNum, 
                    long InsTotalCost, 
                    long PrePaymentCost, 
                    int InsCount, 
                    string StartInstalmentDate, 
                    int InstalmentDistance, 
                    string InsDescription, 
                    int RecoverySundriesFicheId, 
                    System.Xml.XmlNode FicheDetail, 
                    object userState) {
            if ((this.RegisterInstalmentFicheByDetailOperationCompleted == null)) {
                this.RegisterInstalmentFicheByDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterInstalmentFicheByDetailOperationCompleted);
            }
            this.InvokeAsync("RegisterInstalmentFicheByDetail", new object[] {
                        SystemClientService,
                        PartnershipId,
                        CompanyId,
                        InstalmentDate,
                        OrderManName,
                        InsReqLetterNum,
                        InsOrdLetterNum,
                        InsTotalCost,
                        PrePaymentCost,
                        InsCount,
                        StartInstalmentDate,
                        InstalmentDistance,
                        InsDescription,
                        RecoverySundriesFicheId,
                        FicheDetail}, this.RegisterInstalmentFicheByDetailOperationCompleted, userState);
        }
        
        private void OnRegisterInstalmentFicheByDetailOperationCompleted(object arg) {
            if ((this.RegisterInstalmentFicheByDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterInstalmentFicheByDetailCompleted(this, new RegisterInstalmentFicheByDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterInstalmentCheque", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RegisterInstalmentCheque(int SystemClientService, int PartnershipId, int CompanyId, int InstalmentID, System.Xml.XmlNode InstalmentCheques) {
            object[] results = this.Invoke("RegisterInstalmentCheque", new object[] {
                        SystemClientService,
                        PartnershipId,
                        CompanyId,
                        InstalmentID,
                        InstalmentCheques});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterInstalmentChequeAsync(int SystemClientService, int PartnershipId, int CompanyId, int InstalmentID, System.Xml.XmlNode InstalmentCheques) {
            this.RegisterInstalmentChequeAsync(SystemClientService, PartnershipId, CompanyId, InstalmentID, InstalmentCheques, null);
        }
        
        /// <remarks/>
        public void RegisterInstalmentChequeAsync(int SystemClientService, int PartnershipId, int CompanyId, int InstalmentID, System.Xml.XmlNode InstalmentCheques, object userState) {
            if ((this.RegisterInstalmentChequeOperationCompleted == null)) {
                this.RegisterInstalmentChequeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterInstalmentChequeOperationCompleted);
            }
            this.InvokeAsync("RegisterInstalmentCheque", new object[] {
                        SystemClientService,
                        PartnershipId,
                        CompanyId,
                        InstalmentID,
                        InstalmentCheques}, this.RegisterInstalmentChequeOperationCompleted, userState);
        }
        
        private void OnRegisterInstalmentChequeOperationCompleted(object arg) {
            if ((this.RegisterInstalmentChequeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterInstalmentChequeCompleted(this, new RegisterInstalmentChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterInstalmentWithCheque", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RegisterInstalmentWithCheque(
                    int SystemClientService, 
                    int PrepaymentFicheID, 
                    int CompanyId, 
                    string InstalmentDate, 
                    string OrderManName, 
                    string InsReqLetterNum, 
                    string InsOrdLetterNum, 
                    long InsTotalCost, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> PrePaymentCost, 
                    int InsCount, 
                    string StartInstalmentDate, 
                    int InstalmentDistance, 
                    string InsDescription, 
                    long InstalmentWageCost, 
                    System.Xml.XmlNode RevenuesDetail, 
                    System.Xml.XmlNode InstalmentCheques, 
                    int RecoverySundriesFicheId) {
            object[] results = this.Invoke("RegisterInstalmentWithCheque", new object[] {
                        SystemClientService,
                        PrepaymentFicheID,
                        CompanyId,
                        InstalmentDate,
                        OrderManName,
                        InsReqLetterNum,
                        InsOrdLetterNum,
                        InsTotalCost,
                        PrePaymentCost,
                        InsCount,
                        StartInstalmentDate,
                        InstalmentDistance,
                        InsDescription,
                        InstalmentWageCost,
                        RevenuesDetail,
                        InstalmentCheques,
                        RecoverySundriesFicheId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterInstalmentWithChequeAsync(
                    int SystemClientService, 
                    int PrepaymentFicheID, 
                    int CompanyId, 
                    string InstalmentDate, 
                    string OrderManName, 
                    string InsReqLetterNum, 
                    string InsOrdLetterNum, 
                    long InsTotalCost, 
                    System.Nullable<long> PrePaymentCost, 
                    int InsCount, 
                    string StartInstalmentDate, 
                    int InstalmentDistance, 
                    string InsDescription, 
                    long InstalmentWageCost, 
                    System.Xml.XmlNode RevenuesDetail, 
                    System.Xml.XmlNode InstalmentCheques, 
                    int RecoverySundriesFicheId) {
            this.RegisterInstalmentWithChequeAsync(SystemClientService, PrepaymentFicheID, CompanyId, InstalmentDate, OrderManName, InsReqLetterNum, InsOrdLetterNum, InsTotalCost, PrePaymentCost, InsCount, StartInstalmentDate, InstalmentDistance, InsDescription, InstalmentWageCost, RevenuesDetail, InstalmentCheques, RecoverySundriesFicheId, null);
        }
        
        /// <remarks/>
        public void RegisterInstalmentWithChequeAsync(
                    int SystemClientService, 
                    int PrepaymentFicheID, 
                    int CompanyId, 
                    string InstalmentDate, 
                    string OrderManName, 
                    string InsReqLetterNum, 
                    string InsOrdLetterNum, 
                    long InsTotalCost, 
                    System.Nullable<long> PrePaymentCost, 
                    int InsCount, 
                    string StartInstalmentDate, 
                    int InstalmentDistance, 
                    string InsDescription, 
                    long InstalmentWageCost, 
                    System.Xml.XmlNode RevenuesDetail, 
                    System.Xml.XmlNode InstalmentCheques, 
                    int RecoverySundriesFicheId, 
                    object userState) {
            if ((this.RegisterInstalmentWithChequeOperationCompleted == null)) {
                this.RegisterInstalmentWithChequeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterInstalmentWithChequeOperationCompleted);
            }
            this.InvokeAsync("RegisterInstalmentWithCheque", new object[] {
                        SystemClientService,
                        PrepaymentFicheID,
                        CompanyId,
                        InstalmentDate,
                        OrderManName,
                        InsReqLetterNum,
                        InsOrdLetterNum,
                        InsTotalCost,
                        PrePaymentCost,
                        InsCount,
                        StartInstalmentDate,
                        InstalmentDistance,
                        InsDescription,
                        InstalmentWageCost,
                        RevenuesDetail,
                        InstalmentCheques,
                        RecoverySundriesFicheId}, this.RegisterInstalmentWithChequeOperationCompleted, userState);
        }
        
        private void OnRegisterInstalmentWithChequeOperationCompleted(object arg) {
            if ((this.RegisterInstalmentWithChequeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterInstalmentWithChequeCompleted(this, new RegisterInstalmentWithChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecoverFicheByBillAndPaymentId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSTransaction RecoverFicheByBillAndPaymentId(string userName, string password, string billId, string paymentId, int bankCode, int branchCode, int paymentType, string paymentDate, string paymentTime, string trackingCode, int confirmationCode) {
            object[] results = this.Invoke("RecoverFicheByBillAndPaymentId", new object[] {
                        userName,
                        password,
                        billId,
                        paymentId,
                        bankCode,
                        branchCode,
                        paymentType,
                        paymentDate,
                        paymentTime,
                        trackingCode,
                        confirmationCode});
            return ((WSTransaction)(results[0]));
        }
        
        /// <remarks/>
        public void RecoverFicheByBillAndPaymentIdAsync(string userName, string password, string billId, string paymentId, int bankCode, int branchCode, int paymentType, string paymentDate, string paymentTime, string trackingCode, int confirmationCode) {
            this.RecoverFicheByBillAndPaymentIdAsync(userName, password, billId, paymentId, bankCode, branchCode, paymentType, paymentDate, paymentTime, trackingCode, confirmationCode, null);
        }
        
        /// <remarks/>
        public void RecoverFicheByBillAndPaymentIdAsync(string userName, string password, string billId, string paymentId, int bankCode, int branchCode, int paymentType, string paymentDate, string paymentTime, string trackingCode, int confirmationCode, object userState) {
            if ((this.RecoverFicheByBillAndPaymentIdOperationCompleted == null)) {
                this.RecoverFicheByBillAndPaymentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecoverFicheByBillAndPaymentIdOperationCompleted);
            }
            this.InvokeAsync("RecoverFicheByBillAndPaymentId", new object[] {
                        userName,
                        password,
                        billId,
                        paymentId,
                        bankCode,
                        branchCode,
                        paymentType,
                        paymentDate,
                        paymentTime,
                        trackingCode,
                        confirmationCode}, this.RecoverFicheByBillAndPaymentIdOperationCompleted, userState);
        }
        
        private void OnRecoverFicheByBillAndPaymentIdOperationCompleted(object arg) {
            if ((this.RecoverFicheByBillAndPaymentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecoverFicheByBillAndPaymentIdCompleted(this, new RecoverFicheByBillAndPaymentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterClientRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterClientRecord(
                    string number, 
                    string clientFName, 
                    string clinetLName, 
                    string regNo, 
                    string renewCode, 
                    string address, 
                    string address2, 
                    string nationalCode, 
                    string phone, 
                    string fax, 
                    string mobile, 
                    string email, 
                    string webSite, 
                    string postcode, 
                    bool isActive, 
                    int groupID, 
                    string comment, 
                    string clientFatherName, 
                    int creationDate) {
            object[] results = this.Invoke("RegisterClientRecord", new object[] {
                        number,
                        clientFName,
                        clinetLName,
                        regNo,
                        renewCode,
                        address,
                        address2,
                        nationalCode,
                        phone,
                        fax,
                        mobile,
                        email,
                        webSite,
                        postcode,
                        isActive,
                        groupID,
                        comment,
                        clientFatherName,
                        creationDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterClientRecordAsync(
                    string number, 
                    string clientFName, 
                    string clinetLName, 
                    string regNo, 
                    string renewCode, 
                    string address, 
                    string address2, 
                    string nationalCode, 
                    string phone, 
                    string fax, 
                    string mobile, 
                    string email, 
                    string webSite, 
                    string postcode, 
                    bool isActive, 
                    int groupID, 
                    string comment, 
                    string clientFatherName, 
                    int creationDate) {
            this.RegisterClientRecordAsync(number, clientFName, clinetLName, regNo, renewCode, address, address2, nationalCode, phone, fax, mobile, email, webSite, postcode, isActive, groupID, comment, clientFatherName, creationDate, null);
        }
        
        /// <remarks/>
        public void RegisterClientRecordAsync(
                    string number, 
                    string clientFName, 
                    string clinetLName, 
                    string regNo, 
                    string renewCode, 
                    string address, 
                    string address2, 
                    string nationalCode, 
                    string phone, 
                    string fax, 
                    string mobile, 
                    string email, 
                    string webSite, 
                    string postcode, 
                    bool isActive, 
                    int groupID, 
                    string comment, 
                    string clientFatherName, 
                    int creationDate, 
                    object userState) {
            if ((this.RegisterClientRecordOperationCompleted == null)) {
                this.RegisterClientRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterClientRecordOperationCompleted);
            }
            this.InvokeAsync("RegisterClientRecord", new object[] {
                        number,
                        clientFName,
                        clinetLName,
                        regNo,
                        renewCode,
                        address,
                        address2,
                        nationalCode,
                        phone,
                        fax,
                        mobile,
                        email,
                        webSite,
                        postcode,
                        isActive,
                        groupID,
                        comment,
                        clientFatherName,
                        creationDate}, this.RegisterClientRecordOperationCompleted, userState);
        }
        
        private void OnRegisterClientRecordOperationCompleted(object arg) {
            if ((this.RegisterClientRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterClientRecordCompleted(this, new RegisterClientRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateReturnRecoveryStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateReturnRecoveryStatus(int id, int ficheType) {
            object[] results = this.Invoke("UpdateReturnRecoveryStatus", new object[] {
                        id,
                        ficheType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReturnRecoveryStatusAsync(int id, int ficheType) {
            this.UpdateReturnRecoveryStatusAsync(id, ficheType, null);
        }
        
        /// <remarks/>
        public void UpdateReturnRecoveryStatusAsync(int id, int ficheType, object userState) {
            if ((this.UpdateReturnRecoveryStatusOperationCompleted == null)) {
                this.UpdateReturnRecoveryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReturnRecoveryStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateReturnRecoveryStatus", new object[] {
                        id,
                        ficheType}, this.UpdateReturnRecoveryStatusOperationCompleted, userState);
        }
        
        private void OnUpdateReturnRecoveryStatusOperationCompleted(object arg) {
            if ((this.UpdateReturnRecoveryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReturnRecoveryStatusCompleted(this, new UpdateReturnRecoveryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveBedBesByRenewCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RetrieveBedBesByRenewCode(string renewCode) {
            object[] results = this.Invoke("RetrieveBedBesByRenewCode", new object[] {
                        renewCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveBedBesByRenewCodeAsync(string renewCode) {
            this.RetrieveBedBesByRenewCodeAsync(renewCode, null);
        }
        
        /// <remarks/>
        public void RetrieveBedBesByRenewCodeAsync(string renewCode, object userState) {
            if ((this.RetrieveBedBesByRenewCodeOperationCompleted == null)) {
                this.RetrieveBedBesByRenewCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveBedBesByRenewCodeOperationCompleted);
            }
            this.InvokeAsync("RetrieveBedBesByRenewCode", new object[] {
                        renewCode}, this.RetrieveBedBesByRenewCodeOperationCompleted, userState);
        }
        
        private void OnRetrieveBedBesByRenewCodeOperationCompleted(object arg) {
            if ((this.RetrieveBedBesByRenewCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveBedBesByRenewCodeCompleted(this, new RetrieveBedBesByRenewCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PartnerShipSetting {
        
        private int pIDField;
        
        private int codeField;
        
        private string pNameField;
        
        /// <remarks/>
        public int PID {
            get {
                return this.pIDField;
            }
            set {
                this.pIDField = value;
            }
        }
        
        /// <remarks/>
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string PName {
            get {
                return this.pNameField;
            }
            set {
                this.pNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WSTransaction {
        
        private int codeField;
        
        private string tranDescField;
        
        /// <remarks/>
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string TranDesc {
            get {
                return this.tranDescField;
            }
            set {
                this.tranDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CompanyListCompletedEventHandler(object sender, CompanyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompanyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompanyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ClientListCompletedEventHandler(object sender, ClientListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RevenueCodeListCompletedEventHandler(object sender, RevenueCodeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RevenueCodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RevenueCodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void PartnershipListCompletedEventHandler(object sender, PartnershipListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PartnershipListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PartnershipListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AccountListAccountingCompletedEventHandler(object sender, AccountListAccountingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountListAccountingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountListAccountingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AccountListRevenueCompletedEventHandler(object sender, AccountListRevenueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountListRevenueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountListRevenueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SundriesTypeDescListCompletedEventHandler(object sender, SundriesTypeDescListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SundriesTypeDescListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SundriesTypeDescListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RecovrySendedFicheCompletedEventHandler(object sender, RecovrySendedFicheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecovrySendedFicheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecovrySendedFicheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VitiationRecovrySendedFicheCompletedEventHandler(object sender, VitiationRecovrySendedFicheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VitiationRecovrySendedFicheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VitiationRecovrySendedFicheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VitiationSendedFicheCompletedEventHandler(object sender, VitiationSendedFicheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VitiationSendedFicheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VitiationSendedFicheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertInstalmentRevenueCompletedEventHandler(object sender, InsertInstalmentRevenueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInstalmentRevenueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInstalmentRevenueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegisterNewFicheByAccYearCostCompletedEventHandler(object sender, RegisterNewFicheByAccYearCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterNewFicheByAccYearCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterNewFicheByAccYearCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegisterNewFicheByAccYearCostAndDiscountCompletedEventHandler(object sender, RegisterNewFicheByAccYearCostAndDiscountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterNewFicheByAccYearCostAndDiscountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterNewFicheByAccYearCostAndDiscountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegisterNewFicheCompletedEventHandler(object sender, RegisterNewFicheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterNewFicheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterNewFicheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FilesShowCompletedEventHandler(object sender, FilesShowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilesShowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilesShowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PartnerShipSetting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PartnerShipSetting[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegisterCarDutyFicheCompletedEventHandler(object sender, RegisterCarDutyFicheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCarDutyFicheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCarDutyFicheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReturnRecoverySendedFicheCompletedEventHandler(object sender, ReturnRecoverySendedFicheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnRecoverySendedFicheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnRecoverySendedFicheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EPaymentRecovrySendedFicheCompletedEventHandler(object sender, EPaymentRecovrySendedFicheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPaymentRecovrySendedFicheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPaymentRecovrySendedFicheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegisterInstalmentFicheByDetailCompletedEventHandler(object sender, RegisterInstalmentFicheByDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterInstalmentFicheByDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterInstalmentFicheByDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegisterInstalmentChequeCompletedEventHandler(object sender, RegisterInstalmentChequeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterInstalmentChequeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterInstalmentChequeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegisterInstalmentWithChequeCompletedEventHandler(object sender, RegisterInstalmentWithChequeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterInstalmentWithChequeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterInstalmentWithChequeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RecoverFicheByBillAndPaymentIdCompletedEventHandler(object sender, RecoverFicheByBillAndPaymentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecoverFicheByBillAndPaymentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecoverFicheByBillAndPaymentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSTransaction Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSTransaction)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegisterClientRecordCompletedEventHandler(object sender, RegisterClientRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterClientRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterClientRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateReturnRecoveryStatusCompletedEventHandler(object sender, UpdateReturnRecoveryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReturnRecoveryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReturnRecoveryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RetrieveBedBesByRenewCodeCompletedEventHandler(object sender, RetrieveBedBesByRenewCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveBedBesByRenewCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveBedBesByRenewCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591