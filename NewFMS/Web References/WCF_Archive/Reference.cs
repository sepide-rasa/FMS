//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NewFMS.WCF_Archive {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IArchiveService", Namespace="http://tempuri.org/")]
    public partial class ArchiveService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetArchiveTreeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArchiveTreeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertArchiveTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateArchiveTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteArchiveTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArchiveTree_ModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileMojazDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileMojazWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFileMojazOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFileMojazOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileMojazOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParticularPropertiesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParticularPropertiesWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertParticularPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateParticularPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteParticularPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertiesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertiesWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertiesValuesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertiesValuesWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPropertiesValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePropertiesValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePropertiesValuesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ArchiveService() {
            this.Url = global::NewFMS.Properties.Settings.Default.NewFMS_WCF_Archive_ArchiveService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetArchiveTreeDetailCompletedEventHandler GetArchiveTreeDetailCompleted;
        
        /// <remarks/>
        public event GetArchiveTreeWithFilterCompletedEventHandler GetArchiveTreeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertArchiveTreeCompletedEventHandler InsertArchiveTreeCompleted;
        
        /// <remarks/>
        public event UpdateArchiveTreeCompletedEventHandler UpdateArchiveTreeCompleted;
        
        /// <remarks/>
        public event DeleteArchiveTreeCompletedEventHandler DeleteArchiveTreeCompleted;
        
        /// <remarks/>
        public event GetArchiveTree_ModuleCompletedEventHandler GetArchiveTree_ModuleCompleted;
        
        /// <remarks/>
        public event GetFileMojazDetailCompletedEventHandler GetFileMojazDetailCompleted;
        
        /// <remarks/>
        public event GetFileMojazWithFilterCompletedEventHandler GetFileMojazWithFilterCompleted;
        
        /// <remarks/>
        public event InsertFileMojazCompletedEventHandler InsertFileMojazCompleted;
        
        /// <remarks/>
        public event UpdateFileMojazCompletedEventHandler UpdateFileMojazCompleted;
        
        /// <remarks/>
        public event DeleteFileMojazCompletedEventHandler DeleteFileMojazCompleted;
        
        /// <remarks/>
        public event GetParticularPropertiesDetailCompletedEventHandler GetParticularPropertiesDetailCompleted;
        
        /// <remarks/>
        public event GetParticularPropertiesWithFilterCompletedEventHandler GetParticularPropertiesWithFilterCompleted;
        
        /// <remarks/>
        public event InsertParticularPropertiesCompletedEventHandler InsertParticularPropertiesCompleted;
        
        /// <remarks/>
        public event UpdateParticularPropertiesCompletedEventHandler UpdateParticularPropertiesCompleted;
        
        /// <remarks/>
        public event DeleteParticularPropertiesCompletedEventHandler DeleteParticularPropertiesCompleted;
        
        /// <remarks/>
        public event GetPropertiesDetailCompletedEventHandler GetPropertiesDetailCompleted;
        
        /// <remarks/>
        public event GetPropertiesWithFilterCompletedEventHandler GetPropertiesWithFilterCompleted;
        
        /// <remarks/>
        public event InsertPropertiesCompletedEventHandler InsertPropertiesCompleted;
        
        /// <remarks/>
        public event UpdatePropertiesCompletedEventHandler UpdatePropertiesCompleted;
        
        /// <remarks/>
        public event DeletePropertiesCompletedEventHandler DeletePropertiesCompleted;
        
        /// <remarks/>
        public event GetPropertiesValuesDetailCompletedEventHandler GetPropertiesValuesDetailCompleted;
        
        /// <remarks/>
        public event GetPropertiesValuesWithFilterCompletedEventHandler GetPropertiesValuesWithFilterCompleted;
        
        /// <remarks/>
        public event InsertPropertiesValuesCompletedEventHandler InsertPropertiesValuesCompleted;
        
        /// <remarks/>
        public event UpdatePropertiesValuesCompletedEventHandler UpdatePropertiesValuesCompleted;
        
        /// <remarks/>
        public event DeletePropertiesValuesCompletedEventHandler DeletePropertiesValuesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetArchiveTreeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ArchiveTree GetArchiveTreeDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetArchiveTreeDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ArchiveTree)(results[0]));
        }
        
        /// <remarks/>
        public void GetArchiveTreeDetailAsync(int Id, int OrganId, string IP) {
            this.GetArchiveTreeDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetArchiveTreeDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetArchiveTreeDetailOperationCompleted == null)) {
                this.GetArchiveTreeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArchiveTreeDetailOperationCompleted);
            }
            this.InvokeAsync("GetArchiveTreeDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetArchiveTreeDetailOperationCompleted, userState);
        }
        
        private void OnGetArchiveTreeDetailOperationCompleted(object arg) {
            if ((this.GetArchiveTreeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArchiveTreeDetailCompleted(this, new GetArchiveTreeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetArchiveTreeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ArchiveTree[] GetArchiveTreeWithFilter(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetArchiveTreeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ArchiveTree[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArchiveTreeWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP) {
            this.GetArchiveTreeWithFilterAsync(FieldName, FilterValue, FilterValue2, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetArchiveTreeWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP, object userState) {
            if ((this.GetArchiveTreeWithFilterOperationCompleted == null)) {
                this.GetArchiveTreeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArchiveTreeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetArchiveTreeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        OrganId,
                        Top,
                        IP}, this.GetArchiveTreeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetArchiveTreeWithFilterOperationCompleted(object arg) {
            if ((this.GetArchiveTreeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArchiveTreeWithFilterCompleted(this, new GetArchiveTreeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/InsertArchiveTree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertArchiveTree([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, string Title, bool FileUpload, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertArchiveTree", new object[] {
                        PID,
                        Title,
                        FileUpload,
                        fldModuleId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertArchiveTreeAsync(System.Nullable<int> PID, string Title, bool FileUpload, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertArchiveTreeAsync(PID, Title, FileUpload, fldModuleId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertArchiveTreeAsync(System.Nullable<int> PID, string Title, bool FileUpload, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertArchiveTreeOperationCompleted == null)) {
                this.InsertArchiveTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertArchiveTreeOperationCompleted);
            }
            this.InvokeAsync("InsertArchiveTree", new object[] {
                        PID,
                        Title,
                        FileUpload,
                        fldModuleId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertArchiveTreeOperationCompleted, userState);
        }
        
        private void OnInsertArchiveTreeOperationCompleted(object arg) {
            if ((this.InsertArchiveTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertArchiveTreeCompleted(this, new InsertArchiveTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/UpdateArchiveTree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateArchiveTree(int Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, string Title, bool FileUpload, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateArchiveTree", new object[] {
                        Id,
                        PID,
                        Title,
                        FileUpload,
                        fldModuleId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateArchiveTreeAsync(int Id, System.Nullable<int> PID, string Title, bool FileUpload, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateArchiveTreeAsync(Id, PID, Title, FileUpload, fldModuleId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateArchiveTreeAsync(int Id, System.Nullable<int> PID, string Title, bool FileUpload, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateArchiveTreeOperationCompleted == null)) {
                this.UpdateArchiveTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateArchiveTreeOperationCompleted);
            }
            this.InvokeAsync("UpdateArchiveTree", new object[] {
                        Id,
                        PID,
                        Title,
                        FileUpload,
                        fldModuleId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateArchiveTreeOperationCompleted, userState);
        }
        
        private void OnUpdateArchiveTreeOperationCompleted(object arg) {
            if ((this.UpdateArchiveTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateArchiveTreeCompleted(this, new UpdateArchiveTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/DeleteArchiveTree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteArchiveTree(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteArchiveTree", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteArchiveTreeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteArchiveTreeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteArchiveTreeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteArchiveTreeOperationCompleted == null)) {
                this.DeleteArchiveTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteArchiveTreeOperationCompleted);
            }
            this.InvokeAsync("DeleteArchiveTree", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteArchiveTreeOperationCompleted, userState);
        }
        
        private void OnDeleteArchiveTreeOperationCompleted(object arg) {
            if ((this.DeleteArchiveTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteArchiveTreeCompleted(this, new DeleteArchiveTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetArchiveTree_Module", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ArchiveTree[] GetArchiveTree_Module(string FilterValue, int OrganId, int ModuleId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetArchiveTree_Module", new object[] {
                        FilterValue,
                        OrganId,
                        ModuleId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ArchiveTree[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArchiveTree_ModuleAsync(string FilterValue, int OrganId, int ModuleId, string IP) {
            this.GetArchiveTree_ModuleAsync(FilterValue, OrganId, ModuleId, IP, null);
        }
        
        /// <remarks/>
        public void GetArchiveTree_ModuleAsync(string FilterValue, int OrganId, int ModuleId, string IP, object userState) {
            if ((this.GetArchiveTree_ModuleOperationCompleted == null)) {
                this.GetArchiveTree_ModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArchiveTree_ModuleOperationCompleted);
            }
            this.InvokeAsync("GetArchiveTree_Module", new object[] {
                        FilterValue,
                        OrganId,
                        ModuleId,
                        IP}, this.GetArchiveTree_ModuleOperationCompleted, userState);
        }
        
        private void OnGetArchiveTree_ModuleOperationCompleted(object arg) {
            if ((this.GetArchiveTree_ModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArchiveTree_ModuleCompleted(this, new GetArchiveTree_ModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetFileMojazDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_FileMojaz GetFileMojazDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetFileMojazDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_FileMojaz)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileMojazDetailAsync(int Id, string IP) {
            this.GetFileMojazDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetFileMojazDetailAsync(int Id, string IP, object userState) {
            if ((this.GetFileMojazDetailOperationCompleted == null)) {
                this.GetFileMojazDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileMojazDetailOperationCompleted);
            }
            this.InvokeAsync("GetFileMojazDetail", new object[] {
                        Id,
                        IP}, this.GetFileMojazDetailOperationCompleted, userState);
        }
        
        private void OnGetFileMojazDetailOperationCompleted(object arg) {
            if ((this.GetFileMojazDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileMojazDetailCompleted(this, new GetFileMojazDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetFileMojazWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_FileMojaz[] GetFileMojazWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetFileMojazWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_FileMojaz[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileMojazWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetFileMojazWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetFileMojazWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetFileMojazWithFilterOperationCompleted == null)) {
                this.GetFileMojazWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileMojazWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetFileMojazWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetFileMojazWithFilterOperationCompleted, userState);
        }
        
        private void OnGetFileMojazWithFilterOperationCompleted(object arg) {
            if ((this.GetFileMojazWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileMojazWithFilterCompleted(this, new GetFileMojazWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/InsertFileMojaz", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertFileMojaz(int ArchiveTreeId, int FormatFileId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertFileMojaz", new object[] {
                        ArchiveTreeId,
                        FormatFileId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFileMojazAsync(int ArchiveTreeId, int FormatFileId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertFileMojazAsync(ArchiveTreeId, FormatFileId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertFileMojazAsync(int ArchiveTreeId, int FormatFileId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertFileMojazOperationCompleted == null)) {
                this.InsertFileMojazOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFileMojazOperationCompleted);
            }
            this.InvokeAsync("InsertFileMojaz", new object[] {
                        ArchiveTreeId,
                        FormatFileId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertFileMojazOperationCompleted, userState);
        }
        
        private void OnInsertFileMojazOperationCompleted(object arg) {
            if ((this.InsertFileMojazCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFileMojazCompleted(this, new InsertFileMojazCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/UpdateFileMojaz", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateFileMojaz(int Id, int ArchiveTreeId, int FormatFileId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateFileMojaz", new object[] {
                        Id,
                        ArchiveTreeId,
                        FormatFileId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFileMojazAsync(int Id, int ArchiveTreeId, int FormatFileId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateFileMojazAsync(Id, ArchiveTreeId, FormatFileId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateFileMojazAsync(int Id, int ArchiveTreeId, int FormatFileId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateFileMojazOperationCompleted == null)) {
                this.UpdateFileMojazOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFileMojazOperationCompleted);
            }
            this.InvokeAsync("UpdateFileMojaz", new object[] {
                        Id,
                        ArchiveTreeId,
                        FormatFileId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateFileMojazOperationCompleted, userState);
        }
        
        private void OnUpdateFileMojazOperationCompleted(object arg) {
            if ((this.UpdateFileMojazCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFileMojazCompleted(this, new UpdateFileMojazCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/DeleteFileMojaz", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteFileMojaz(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteFileMojaz", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileMojazAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteFileMojazAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteFileMojazAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteFileMojazOperationCompleted == null)) {
                this.DeleteFileMojazOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileMojazOperationCompleted);
            }
            this.InvokeAsync("DeleteFileMojaz", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteFileMojazOperationCompleted, userState);
        }
        
        private void OnDeleteFileMojazOperationCompleted(object arg) {
            if ((this.DeleteFileMojazCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileMojazCompleted(this, new DeleteFileMojazCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetParticularPropertiesDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ParticularProperties GetParticularPropertiesDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetParticularPropertiesDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ParticularProperties)(results[0]));
        }
        
        /// <remarks/>
        public void GetParticularPropertiesDetailAsync(int Id, string IP) {
            this.GetParticularPropertiesDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetParticularPropertiesDetailAsync(int Id, string IP, object userState) {
            if ((this.GetParticularPropertiesDetailOperationCompleted == null)) {
                this.GetParticularPropertiesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParticularPropertiesDetailOperationCompleted);
            }
            this.InvokeAsync("GetParticularPropertiesDetail", new object[] {
                        Id,
                        IP}, this.GetParticularPropertiesDetailOperationCompleted, userState);
        }
        
        private void OnGetParticularPropertiesDetailOperationCompleted(object arg) {
            if ((this.GetParticularPropertiesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParticularPropertiesDetailCompleted(this, new GetParticularPropertiesDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetParticularPropertiesWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ParticularProperties[] GetParticularPropertiesWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetParticularPropertiesWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ParticularProperties[])(results[0]));
        }
        
        /// <remarks/>
        public void GetParticularPropertiesWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetParticularPropertiesWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetParticularPropertiesWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetParticularPropertiesWithFilterOperationCompleted == null)) {
                this.GetParticularPropertiesWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParticularPropertiesWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetParticularPropertiesWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetParticularPropertiesWithFilterOperationCompleted, userState);
        }
        
        private void OnGetParticularPropertiesWithFilterOperationCompleted(object arg) {
            if ((this.GetParticularPropertiesWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParticularPropertiesWithFilterCompleted(this, new GetParticularPropertiesWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/InsertParticularProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertParticularProperties(int ArchiveTreeId, int PropertiesId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertParticularProperties", new object[] {
                        ArchiveTreeId,
                        PropertiesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertParticularPropertiesAsync(int ArchiveTreeId, int PropertiesId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertParticularPropertiesAsync(ArchiveTreeId, PropertiesId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertParticularPropertiesAsync(int ArchiveTreeId, int PropertiesId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertParticularPropertiesOperationCompleted == null)) {
                this.InsertParticularPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertParticularPropertiesOperationCompleted);
            }
            this.InvokeAsync("InsertParticularProperties", new object[] {
                        ArchiveTreeId,
                        PropertiesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertParticularPropertiesOperationCompleted, userState);
        }
        
        private void OnInsertParticularPropertiesOperationCompleted(object arg) {
            if ((this.InsertParticularPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertParticularPropertiesCompleted(this, new InsertParticularPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/UpdateParticularProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateParticularProperties(int Id, int ArchiveTreeId, int PropertiesId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateParticularProperties", new object[] {
                        Id,
                        ArchiveTreeId,
                        PropertiesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateParticularPropertiesAsync(int Id, int ArchiveTreeId, int PropertiesId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateParticularPropertiesAsync(Id, ArchiveTreeId, PropertiesId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateParticularPropertiesAsync(int Id, int ArchiveTreeId, int PropertiesId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateParticularPropertiesOperationCompleted == null)) {
                this.UpdateParticularPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateParticularPropertiesOperationCompleted);
            }
            this.InvokeAsync("UpdateParticularProperties", new object[] {
                        Id,
                        ArchiveTreeId,
                        PropertiesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateParticularPropertiesOperationCompleted, userState);
        }
        
        private void OnUpdateParticularPropertiesOperationCompleted(object arg) {
            if ((this.UpdateParticularPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateParticularPropertiesCompleted(this, new UpdateParticularPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/DeleteParticularProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteParticularProperties(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteParticularProperties", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteParticularPropertiesAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteParticularPropertiesAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteParticularPropertiesAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteParticularPropertiesOperationCompleted == null)) {
                this.DeleteParticularPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteParticularPropertiesOperationCompleted);
            }
            this.InvokeAsync("DeleteParticularProperties", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteParticularPropertiesOperationCompleted, userState);
        }
        
        private void OnDeleteParticularPropertiesOperationCompleted(object arg) {
            if ((this.DeleteParticularPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteParticularPropertiesCompleted(this, new DeleteParticularPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetPropertiesDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Properties GetPropertiesDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetPropertiesDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Properties)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertiesDetailAsync(int Id, string IP) {
            this.GetPropertiesDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetPropertiesDetailAsync(int Id, string IP, object userState) {
            if ((this.GetPropertiesDetailOperationCompleted == null)) {
                this.GetPropertiesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesDetailOperationCompleted);
            }
            this.InvokeAsync("GetPropertiesDetail", new object[] {
                        Id,
                        IP}, this.GetPropertiesDetailOperationCompleted, userState);
        }
        
        private void OnGetPropertiesDetailOperationCompleted(object arg) {
            if ((this.GetPropertiesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertiesDetailCompleted(this, new GetPropertiesDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetPropertiesWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Properties[] GetPropertiesWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetPropertiesWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Properties[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertiesWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetPropertiesWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetPropertiesWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetPropertiesWithFilterOperationCompleted == null)) {
                this.GetPropertiesWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetPropertiesWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetPropertiesWithFilterOperationCompleted, userState);
        }
        
        private void OnGetPropertiesWithFilterOperationCompleted(object arg) {
            if ((this.GetPropertiesWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertiesWithFilterCompleted(this, new GetPropertiesWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/InsertProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertProperties(string NameFn, string NameEn, int Type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> FormulId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertProperties", new object[] {
                        NameFn,
                        NameEn,
                        Type,
                        FormulId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPropertiesAsync(string NameFn, string NameEn, int Type, System.Nullable<int> FormulId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertPropertiesAsync(NameFn, NameEn, Type, FormulId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertPropertiesAsync(string NameFn, string NameEn, int Type, System.Nullable<int> FormulId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertPropertiesOperationCompleted == null)) {
                this.InsertPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPropertiesOperationCompleted);
            }
            this.InvokeAsync("InsertProperties", new object[] {
                        NameFn,
                        NameEn,
                        Type,
                        FormulId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertPropertiesOperationCompleted, userState);
        }
        
        private void OnInsertPropertiesOperationCompleted(object arg) {
            if ((this.InsertPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPropertiesCompleted(this, new InsertPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/UpdateProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateProperties(int Id, string NameFn, string NameEn, int Type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> FormulId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateProperties", new object[] {
                        Id,
                        NameFn,
                        NameEn,
                        Type,
                        FormulId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePropertiesAsync(int Id, string NameFn, string NameEn, int Type, System.Nullable<int> FormulId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdatePropertiesAsync(Id, NameFn, NameEn, Type, FormulId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdatePropertiesAsync(int Id, string NameFn, string NameEn, int Type, System.Nullable<int> FormulId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdatePropertiesOperationCompleted == null)) {
                this.UpdatePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePropertiesOperationCompleted);
            }
            this.InvokeAsync("UpdateProperties", new object[] {
                        Id,
                        NameFn,
                        NameEn,
                        Type,
                        FormulId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdatePropertiesOperationCompleted, userState);
        }
        
        private void OnUpdatePropertiesOperationCompleted(object arg) {
            if ((this.UpdatePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePropertiesCompleted(this, new UpdatePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/DeleteProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteProperties(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteProperties", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePropertiesAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeletePropertiesAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeletePropertiesAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeletePropertiesOperationCompleted == null)) {
                this.DeletePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePropertiesOperationCompleted);
            }
            this.InvokeAsync("DeleteProperties", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeletePropertiesOperationCompleted, userState);
        }
        
        private void OnDeletePropertiesOperationCompleted(object arg) {
            if ((this.DeletePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePropertiesCompleted(this, new DeletePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetPropertiesValuesDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_PropertiesValues GetPropertiesValuesDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetPropertiesValuesDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_PropertiesValues)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertiesValuesDetailAsync(int Id, string IP) {
            this.GetPropertiesValuesDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetPropertiesValuesDetailAsync(int Id, string IP, object userState) {
            if ((this.GetPropertiesValuesDetailOperationCompleted == null)) {
                this.GetPropertiesValuesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesValuesDetailOperationCompleted);
            }
            this.InvokeAsync("GetPropertiesValuesDetail", new object[] {
                        Id,
                        IP}, this.GetPropertiesValuesDetailOperationCompleted, userState);
        }
        
        private void OnGetPropertiesValuesDetailOperationCompleted(object arg) {
            if ((this.GetPropertiesValuesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertiesValuesDetailCompleted(this, new GetPropertiesValuesDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/GetPropertiesValuesWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_PropertiesValues[] GetPropertiesValuesWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetPropertiesValuesWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_PropertiesValues[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertiesValuesWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetPropertiesValuesWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetPropertiesValuesWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetPropertiesValuesWithFilterOperationCompleted == null)) {
                this.GetPropertiesValuesWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesValuesWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetPropertiesValuesWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetPropertiesValuesWithFilterOperationCompleted, userState);
        }
        
        private void OnGetPropertiesValuesWithFilterOperationCompleted(object arg) {
            if ((this.GetPropertiesValuesWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertiesValuesWithFilterCompleted(this, new GetPropertiesValuesWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/InsertPropertiesValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertPropertiesValues(int ParticularId, string Value, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertPropertiesValues", new object[] {
                        ParticularId,
                        Value,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPropertiesValuesAsync(int ParticularId, string Value, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertPropertiesValuesAsync(ParticularId, Value, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertPropertiesValuesAsync(int ParticularId, string Value, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertPropertiesValuesOperationCompleted == null)) {
                this.InsertPropertiesValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPropertiesValuesOperationCompleted);
            }
            this.InvokeAsync("InsertPropertiesValues", new object[] {
                        ParticularId,
                        Value,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertPropertiesValuesOperationCompleted, userState);
        }
        
        private void OnInsertPropertiesValuesOperationCompleted(object arg) {
            if ((this.InsertPropertiesValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPropertiesValuesCompleted(this, new InsertPropertiesValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/UpdatePropertiesValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePropertiesValues(int Id, int ParticularId, string Value, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdatePropertiesValues", new object[] {
                        Id,
                        ParticularId,
                        Value,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePropertiesValuesAsync(int Id, int ParticularId, string Value, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdatePropertiesValuesAsync(Id, ParticularId, Value, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdatePropertiesValuesAsync(int Id, int ParticularId, string Value, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdatePropertiesValuesOperationCompleted == null)) {
                this.UpdatePropertiesValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePropertiesValuesOperationCompleted);
            }
            this.InvokeAsync("UpdatePropertiesValues", new object[] {
                        Id,
                        ParticularId,
                        Value,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdatePropertiesValuesOperationCompleted, userState);
        }
        
        private void OnUpdatePropertiesValuesOperationCompleted(object arg) {
            if ((this.UpdatePropertiesValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePropertiesValuesCompleted(this, new UpdatePropertiesValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IArchiveService/DeletePropertiesValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeletePropertiesValues(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeletePropertiesValues", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePropertiesValuesAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeletePropertiesValuesAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeletePropertiesValuesAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeletePropertiesValuesOperationCompleted == null)) {
                this.DeletePropertiesValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePropertiesValuesOperationCompleted);
            }
            this.InvokeAsync("DeletePropertiesValues", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeletePropertiesValuesOperationCompleted, userState);
        }
        
        private void OnDeletePropertiesValuesOperationCompleted(object arg) {
            if ((this.DeletePropertiesValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePropertiesValuesCompleted(this, new DeletePropertiesValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ArchiveTree {
        
        private int fldIdField;
        
        private System.Nullable<int> fldPIDField;
        
        private string fldTitleField;
        
        private bool fldFileUploadField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private System.Nullable<int> fldOrganIdField;
        
        private System.Nullable<int> fldModuleIdField;
        
        private string fldMaduleNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public bool fldFileUpload {
            get {
                return this.fldFileUploadField;
            }
            set {
                this.fldFileUploadField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldModuleId {
            get {
                return this.fldModuleIdField;
            }
            set {
                this.fldModuleIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldMaduleName {
            get {
                return this.fldMaduleNameField;
            }
            set {
                this.fldMaduleNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_PropertiesValues {
        
        private int fldIdField;
        
        private int fldParticularIdField;
        
        private string fldValueField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldNameFnField;
        
        private string fldTitleField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldParticularId {
            get {
                return this.fldParticularIdField;
            }
            set {
                this.fldParticularIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldValue {
            get {
                return this.fldValueField;
            }
            set {
                this.fldValueField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameFn {
            get {
                return this.fldNameFnField;
            }
            set {
                this.fldNameFnField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Properties {
        
        private int fldIdField;
        
        private int fldTypeField;
        
        private System.Nullable<int> fldFormulIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldNameFnField;
        
        private string fldNameEnField;
        
        private string fldTypeNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldFormulId {
            get {
                return this.fldFormulIdField;
            }
            set {
                this.fldFormulIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameFn {
            get {
                return this.fldNameFnField;
            }
            set {
                this.fldNameFnField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameEn {
            get {
                return this.fldNameEnField;
            }
            set {
                this.fldNameEnField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeName {
            get {
                return this.fldTypeNameField;
            }
            set {
                this.fldTypeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ParticularProperties {
        
        private int fldIdField;
        
        private int fldArchiveTreeIdField;
        
        private int fldPropertiesIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldTitleField;
        
        private string fldNameFnField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldArchiveTreeId {
            get {
                return this.fldArchiveTreeIdField;
            }
            set {
                this.fldArchiveTreeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldPropertiesId {
            get {
                return this.fldPropertiesIdField;
            }
            set {
                this.fldPropertiesIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameFn {
            get {
                return this.fldNameFnField;
            }
            set {
                this.fldNameFnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_FileMojaz {
        
        private int fldIdField;
        
        private int fldArchiveTreeIdField;
        
        private int fldFormatFileIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldFormatNameField;
        
        private string fldPassvandField;
        
        private string fldTitleField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldArchiveTreeId {
            get {
                return this.fldArchiveTreeIdField;
            }
            set {
                this.fldArchiveTreeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldFormatFileId {
            get {
                return this.fldFormatFileIdField;
            }
            set {
                this.fldFormatFileIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldFormatName {
            get {
                return this.fldFormatNameField;
            }
            set {
                this.fldFormatNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldPassvand {
            get {
                return this.fldPassvandField;
            }
            set {
                this.fldPassvandField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ClsError {
        
        private string errorMsgField;
        
        private string msgField;
        
        private bool errorTypeField;
        
        private int outputIdField;
        
        private int outputId2Field;
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
            }
        }
        
        /// <remarks/>
        public bool ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId {
            get {
                return this.outputIdField;
            }
            set {
                this.outputIdField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId2 {
            get {
                return this.outputId2Field;
            }
            set {
                this.outputId2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetArchiveTreeDetailCompletedEventHandler(object sender, GetArchiveTreeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArchiveTreeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArchiveTreeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ArchiveTree Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ArchiveTree)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetArchiveTreeWithFilterCompletedEventHandler(object sender, GetArchiveTreeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArchiveTreeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArchiveTreeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ArchiveTree[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ArchiveTree[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertArchiveTreeCompletedEventHandler(object sender, InsertArchiveTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertArchiveTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertArchiveTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateArchiveTreeCompletedEventHandler(object sender, UpdateArchiveTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateArchiveTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateArchiveTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteArchiveTreeCompletedEventHandler(object sender, DeleteArchiveTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteArchiveTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteArchiveTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetArchiveTree_ModuleCompletedEventHandler(object sender, GetArchiveTree_ModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArchiveTree_ModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArchiveTree_ModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ArchiveTree[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ArchiveTree[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFileMojazDetailCompletedEventHandler(object sender, GetFileMojazDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileMojazDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileMojazDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_FileMojaz Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_FileMojaz)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFileMojazWithFilterCompletedEventHandler(object sender, GetFileMojazWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileMojazWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileMojazWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_FileMojaz[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_FileMojaz[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertFileMojazCompletedEventHandler(object sender, InsertFileMojazCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFileMojazCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFileMojazCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateFileMojazCompletedEventHandler(object sender, UpdateFileMojazCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFileMojazCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFileMojazCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteFileMojazCompletedEventHandler(object sender, DeleteFileMojazCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileMojazCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileMojazCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetParticularPropertiesDetailCompletedEventHandler(object sender, GetParticularPropertiesDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParticularPropertiesDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParticularPropertiesDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ParticularProperties Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ParticularProperties)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetParticularPropertiesWithFilterCompletedEventHandler(object sender, GetParticularPropertiesWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParticularPropertiesWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParticularPropertiesWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ParticularProperties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ParticularProperties[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertParticularPropertiesCompletedEventHandler(object sender, InsertParticularPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertParticularPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertParticularPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateParticularPropertiesCompletedEventHandler(object sender, UpdateParticularPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateParticularPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateParticularPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteParticularPropertiesCompletedEventHandler(object sender, DeleteParticularPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteParticularPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteParticularPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPropertiesDetailCompletedEventHandler(object sender, GetPropertiesDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertiesDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertiesDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Properties Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Properties)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPropertiesWithFilterCompletedEventHandler(object sender, GetPropertiesWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertiesWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertiesWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Properties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Properties[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertPropertiesCompletedEventHandler(object sender, InsertPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePropertiesCompletedEventHandler(object sender, UpdatePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeletePropertiesCompletedEventHandler(object sender, DeletePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPropertiesValuesDetailCompletedEventHandler(object sender, GetPropertiesValuesDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertiesValuesDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertiesValuesDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_PropertiesValues Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_PropertiesValues)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPropertiesValuesWithFilterCompletedEventHandler(object sender, GetPropertiesValuesWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertiesValuesWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertiesValuesWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_PropertiesValues[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_PropertiesValues[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertPropertiesValuesCompletedEventHandler(object sender, InsertPropertiesValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPropertiesValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPropertiesValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePropertiesValuesCompletedEventHandler(object sender, UpdatePropertiesValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePropertiesValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePropertiesValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeletePropertiesValuesCompletedEventHandler(object sender, DeletePropertiesValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePropertiesValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePropertiesValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591