//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NewFMS.WCF_Accounting {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IAccountingService", Namespace="http://tempuri.org/")]
    public partial class AccountingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDefaultCode_CodingOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidCode_CodingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRptByCodingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCoding_ProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMahiyatGardesh_MandeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentRecord_HeaderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentRecord_HeaderWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMortabetOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDocumentRecord_HeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentRecord_HeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentRecord_HeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastNum_AtfDocumentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDocumentFishDaramadOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMoratabSaziTarikhSanadOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGhatiOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableGhatiOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateArchive_FareiNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDocStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback Document_CopyInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentRecord_DetailsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentRecord_DetailsWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentRecord_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParvandeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFiscalYearDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFiscalYearWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFiscalYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFiscalYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFiscalYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptCodingStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptCodingTurnover_TarikhOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptCodingStatus_ParvandeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptCodingTurnoverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTypeHesabDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTypeHesabWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentRecorde_FileDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentRecorde_FileWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDocumentRecorde_FileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentRecorde_FileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentBookMarkDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentBookMarkWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDocumentBookMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentBookMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentBookMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDocumentRecorde_File_BookMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectDocumentRecorde_File_BookMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectBookmarkPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRemainOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyDocumentWithHeaderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCodingDetail_CaseTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCodingDetail_CaseTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCodingDetail_CaseTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCodingDetail_CaseTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCodingDetail_CaseTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankTemplate_HeaderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankTemplate_HeaderWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBankTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBankTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBankTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankBill_HeaderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankBill_HeaderWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCountDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMoghayeratBankiOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBankBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBankBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBankBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankBill_DetailsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankBill_DetailsWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectBankBill_TarikhOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankBillMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptDafaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountingTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountingTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAccountingTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountingTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountingTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCenterCostDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCenterCostWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCenterCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCenterCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCenterCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePID_Cost_TreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCostCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountingLevelDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountingLevelWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAccountingLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountingLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountingLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAccountingLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountingLevelDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAccountingLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupCenterCostDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupCenterCostWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGroupCenterCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupCenterCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGroupCenterCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTree_CenterCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeCenterCostDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeCenterCostWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTreeCenterCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTreeCenterCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTreeCenterCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePID_CostCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCenterco_TarifNashodehOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateCodingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateCodingWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTemplateCodingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTemplateCodingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTemplateCodingOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemNecessaryDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemNecessaryWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertItemNecessaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateItemNecessaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteItemNecessaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePID_ItemNecessaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateNameDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateNameWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTemplateNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTemplateNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTemplateNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMahiyatWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLevelsAccountingTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLevelsAccountingTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLevelsAccountingTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLevelsAccountingTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLevelsAccountingTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectAccountingTypeLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentDescDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentDescWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDocumentDescOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentDescOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentDescOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParamDocumentDescOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectEkhtetamiyeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectBastanHesabhaOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectHesabDaryaftaniOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectEftetahiyeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCaseTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCaseTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCaseTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoding_HeaderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoding_HeaderWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCoding_HeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCoding_HeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCoding_HeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyFromTemplateCodingToCodingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoding_DetailsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoding_DetailsWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCoding_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCoding_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCoding_DetailsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AccountingService() {
            this.Url = global::NewFMS.Properties.Settings.Default.NewFMS_WCF_Accounting_AccountingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDefaultCode_CodingCompletedEventHandler GetDefaultCode_CodingCompleted;
        
        /// <remarks/>
        public event CheckValidCode_CodingDetailCompletedEventHandler CheckValidCode_CodingDetailCompleted;
        
        /// <remarks/>
        public event GetRptByCodingCompletedEventHandler GetRptByCodingCompleted;
        
        /// <remarks/>
        public event SelectCoding_ProjectCompletedEventHandler SelectCoding_ProjectCompleted;
        
        /// <remarks/>
        public event CheckMahiyatGardesh_MandeCompletedEventHandler CheckMahiyatGardesh_MandeCompleted;
        
        /// <remarks/>
        public event GetDocumentRecord_HeaderDetailCompletedEventHandler GetDocumentRecord_HeaderDetailCompleted;
        
        /// <remarks/>
        public event GetDocumentRecord_HeaderWithFilterCompletedEventHandler GetDocumentRecord_HeaderWithFilterCompleted;
        
        /// <remarks/>
        public event SelectMortabetCompletedEventHandler SelectMortabetCompleted;
        
        /// <remarks/>
        public event InsertDocumentRecord_HeaderCompletedEventHandler InsertDocumentRecord_HeaderCompleted;
        
        /// <remarks/>
        public event UpdateDocumentRecord_HeaderCompletedEventHandler UpdateDocumentRecord_HeaderCompleted;
        
        /// <remarks/>
        public event DeleteDocumentRecord_HeaderCompletedEventHandler DeleteDocumentRecord_HeaderCompleted;
        
        /// <remarks/>
        public event GetLastNum_AtfDocumentRecordCompletedEventHandler GetLastNum_AtfDocumentRecordCompleted;
        
        /// <remarks/>
        public event InsertDocumentCompletedEventHandler InsertDocumentCompleted;
        
        /// <remarks/>
        public event UpdateDocumentCompletedEventHandler UpdateDocumentCompleted;
        
        /// <remarks/>
        public event InsertDocumentFishDaramadCompletedEventHandler InsertDocumentFishDaramadCompleted;
        
        /// <remarks/>
        public event UpdateMoratabSaziTarikhSanadCompletedEventHandler UpdateMoratabSaziTarikhSanadCompleted;
        
        /// <remarks/>
        public event UpdateGhatiCompletedEventHandler UpdateGhatiCompleted;
        
        /// <remarks/>
        public event DisableGhatiCompletedEventHandler DisableGhatiCompleted;
        
        /// <remarks/>
        public event UpdateArchive_FareiNumCompletedEventHandler UpdateArchive_FareiNumCompleted;
        
        /// <remarks/>
        public event CheckDocStatusCompletedEventHandler CheckDocStatusCompleted;
        
        /// <remarks/>
        public event Document_CopyInsertCompletedEventHandler Document_CopyInsertCompleted;
        
        /// <remarks/>
        public event GetDocumentRecord_DetailsDetailCompletedEventHandler GetDocumentRecord_DetailsDetailCompleted;
        
        /// <remarks/>
        public event GetDocumentRecord_DetailsWithFilterCompletedEventHandler GetDocumentRecord_DetailsWithFilterCompleted;
        
        /// <remarks/>
        public event GetDocFilesCompletedEventHandler GetDocFilesCompleted;
        
        /// <remarks/>
        public event DeleteDocumentRecord_DetailsCompletedEventHandler DeleteDocumentRecord_DetailsCompleted;
        
        /// <remarks/>
        public event DeleteDocumentDetailCompletedEventHandler DeleteDocumentDetailCompleted;
        
        /// <remarks/>
        public event GetCaseDetailCompletedEventHandler GetCaseDetailCompleted;
        
        /// <remarks/>
        public event GetCaseWithFilterCompletedEventHandler GetCaseWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCaseCompletedEventHandler InsertCaseCompleted;
        
        /// <remarks/>
        public event UpdateCaseCompletedEventHandler UpdateCaseCompleted;
        
        /// <remarks/>
        public event DeleteCaseCompletedEventHandler DeleteCaseCompleted;
        
        /// <remarks/>
        public event GetParvandeInfoCompletedEventHandler GetParvandeInfoCompleted;
        
        /// <remarks/>
        public event GetFiscalYearDetailCompletedEventHandler GetFiscalYearDetailCompleted;
        
        /// <remarks/>
        public event GetFiscalYearWithFilterCompletedEventHandler GetFiscalYearWithFilterCompleted;
        
        /// <remarks/>
        public event InsertFiscalYearCompletedEventHandler InsertFiscalYearCompleted;
        
        /// <remarks/>
        public event UpdateFiscalYearCompletedEventHandler UpdateFiscalYearCompleted;
        
        /// <remarks/>
        public event DeleteFiscalYearCompletedEventHandler DeleteFiscalYearCompleted;
        
        /// <remarks/>
        public event RptCodingStatusCompletedEventHandler RptCodingStatusCompleted;
        
        /// <remarks/>
        public event RptCodingTurnover_TarikhCompletedEventHandler RptCodingTurnover_TarikhCompleted;
        
        /// <remarks/>
        public event RptCodingStatus_ParvandeCompletedEventHandler RptCodingStatus_ParvandeCompleted;
        
        /// <remarks/>
        public event RptCodingTurnoverCompletedEventHandler RptCodingTurnoverCompleted;
        
        /// <remarks/>
        public event GetTypeHesabDetailCompletedEventHandler GetTypeHesabDetailCompleted;
        
        /// <remarks/>
        public event GetTypeHesabWithFilterCompletedEventHandler GetTypeHesabWithFilterCompleted;
        
        /// <remarks/>
        public event GetDocumentTypeWithFilterCompletedEventHandler GetDocumentTypeWithFilterCompleted;
        
        /// <remarks/>
        public event GetDocumentRecorde_FileDetailCompletedEventHandler GetDocumentRecorde_FileDetailCompleted;
        
        /// <remarks/>
        public event GetDocumentRecorde_FileWithFilterCompletedEventHandler GetDocumentRecorde_FileWithFilterCompleted;
        
        /// <remarks/>
        public event InsertDocumentRecorde_FileCompletedEventHandler InsertDocumentRecorde_FileCompleted;
        
        /// <remarks/>
        public event DeleteDocumentRecorde_FileCompletedEventHandler DeleteDocumentRecorde_FileCompleted;
        
        /// <remarks/>
        public event GetDocumentBookMarkDetailCompletedEventHandler GetDocumentBookMarkDetailCompleted;
        
        /// <remarks/>
        public event GetDocumentBookMarkWithFilterCompletedEventHandler GetDocumentBookMarkWithFilterCompleted;
        
        /// <remarks/>
        public event InsertDocumentBookMarkCompletedEventHandler InsertDocumentBookMarkCompleted;
        
        /// <remarks/>
        public event UpdateDocumentBookMarkCompletedEventHandler UpdateDocumentBookMarkCompleted;
        
        /// <remarks/>
        public event DeleteDocumentBookMarkCompletedEventHandler DeleteDocumentBookMarkCompleted;
        
        /// <remarks/>
        public event InsertDocumentRecorde_File_BookMarkCompletedEventHandler InsertDocumentRecorde_File_BookMarkCompleted;
        
        /// <remarks/>
        public event SelectDocumentRecorde_File_BookMarkCompletedEventHandler SelectDocumentRecorde_File_BookMarkCompleted;
        
        /// <remarks/>
        public event SelectBookmarkPathCompletedEventHandler SelectBookmarkPathCompleted;
        
        /// <remarks/>
        public event CheckRemainCompletedEventHandler CheckRemainCompleted;
        
        /// <remarks/>
        public event CopyDocumentWithHeaderIdCompletedEventHandler CopyDocumentWithHeaderIdCompleted;
        
        /// <remarks/>
        public event GetCodingDetail_CaseTypeDetailCompletedEventHandler GetCodingDetail_CaseTypeDetailCompleted;
        
        /// <remarks/>
        public event GetCodingDetail_CaseTypeWithFilterCompletedEventHandler GetCodingDetail_CaseTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCodingDetail_CaseTypeCompletedEventHandler InsertCodingDetail_CaseTypeCompleted;
        
        /// <remarks/>
        public event UpdateCodingDetail_CaseTypeCompletedEventHandler UpdateCodingDetail_CaseTypeCompleted;
        
        /// <remarks/>
        public event DeleteCodingDetail_CaseTypeCompletedEventHandler DeleteCodingDetail_CaseTypeCompleted;
        
        /// <remarks/>
        public event GetBankTemplate_HeaderDetailCompletedEventHandler GetBankTemplate_HeaderDetailCompleted;
        
        /// <remarks/>
        public event GetBankTemplate_HeaderWithFilterCompletedEventHandler GetBankTemplate_HeaderWithFilterCompleted;
        
        /// <remarks/>
        public event InsertBankTemplateCompletedEventHandler InsertBankTemplateCompleted;
        
        /// <remarks/>
        public event UpdateBankTemplateCompletedEventHandler UpdateBankTemplateCompleted;
        
        /// <remarks/>
        public event DeleteBankTemplateCompletedEventHandler DeleteBankTemplateCompleted;
        
        /// <remarks/>
        public event GetBankBill_HeaderDetailCompletedEventHandler GetBankBill_HeaderDetailCompleted;
        
        /// <remarks/>
        public event GetBankBill_HeaderWithFilterCompletedEventHandler GetBankBill_HeaderWithFilterCompleted;
        
        /// <remarks/>
        public event CheckCountDataCompletedEventHandler CheckCountDataCompleted;
        
        /// <remarks/>
        public event SelectMoghayeratBankiCompletedEventHandler SelectMoghayeratBankiCompleted;
        
        /// <remarks/>
        public event InsertBankBillCompletedEventHandler InsertBankBillCompleted;
        
        /// <remarks/>
        public event UpdateBankBillCompletedEventHandler UpdateBankBillCompleted;
        
        /// <remarks/>
        public event DeleteBankBillCompletedEventHandler DeleteBankBillCompleted;
        
        /// <remarks/>
        public event GetBankBill_DetailsDetailCompletedEventHandler GetBankBill_DetailsDetailCompleted;
        
        /// <remarks/>
        public event GetBankBill_DetailsWithFilterCompletedEventHandler GetBankBill_DetailsWithFilterCompleted;
        
        /// <remarks/>
        public event SelectBankBill_TarikhCompletedEventHandler SelectBankBill_TarikhCompleted;
        
        /// <remarks/>
        public event BankBillMapCompletedEventHandler BankBillMapCompleted;
        
        /// <remarks/>
        public event RptDafaterCompletedEventHandler RptDafaterCompleted;
        
        /// <remarks/>
        public event GetAccountingTypeDetailCompletedEventHandler GetAccountingTypeDetailCompleted;
        
        /// <remarks/>
        public event GetAccountingTypeWithFilterCompletedEventHandler GetAccountingTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAccountingTypeCompletedEventHandler InsertAccountingTypeCompleted;
        
        /// <remarks/>
        public event UpdateAccountingTypeCompletedEventHandler UpdateAccountingTypeCompleted;
        
        /// <remarks/>
        public event DeleteAccountingTypeCompletedEventHandler DeleteAccountingTypeCompleted;
        
        /// <remarks/>
        public event GetCenterCostDetailCompletedEventHandler GetCenterCostDetailCompleted;
        
        /// <remarks/>
        public event GetCenterCostWithFilterCompletedEventHandler GetCenterCostWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCenterCostCompletedEventHandler InsertCenterCostCompleted;
        
        /// <remarks/>
        public event UpdateCenterCostCompletedEventHandler UpdateCenterCostCompleted;
        
        /// <remarks/>
        public event DeleteCenterCostCompletedEventHandler DeleteCenterCostCompleted;
        
        /// <remarks/>
        public event UpdatePID_Cost_TreeCompletedEventHandler UpdatePID_Cost_TreeCompleted;
        
        /// <remarks/>
        public event IsCostCenterCompletedEventHandler IsCostCenterCompleted;
        
        /// <remarks/>
        public event GetAccountingLevelDetailCompletedEventHandler GetAccountingLevelDetailCompleted;
        
        /// <remarks/>
        public event GetAccountingLevelWithFilterCompletedEventHandler GetAccountingLevelWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAccountingLevelCompletedEventHandler InsertAccountingLevelCompleted;
        
        /// <remarks/>
        public event UpdateAccountingLevelCompletedEventHandler UpdateAccountingLevelCompleted;
        
        /// <remarks/>
        public event DeleteAccountingLevelCompletedEventHandler DeleteAccountingLevelCompleted;
        
        /// <remarks/>
        public event SelectAccountingLevelCompletedEventHandler SelectAccountingLevelCompleted;
        
        /// <remarks/>
        public event AccountingLevelDeleteCompletedEventHandler AccountingLevelDeleteCompleted;
        
        /// <remarks/>
        public event CheckAccountingLevelCompletedEventHandler CheckAccountingLevelCompleted;
        
        /// <remarks/>
        public event GetGroupCenterCostDetailCompletedEventHandler GetGroupCenterCostDetailCompleted;
        
        /// <remarks/>
        public event GetGroupCenterCostWithFilterCompletedEventHandler GetGroupCenterCostWithFilterCompleted;
        
        /// <remarks/>
        public event InsertGroupCenterCostCompletedEventHandler InsertGroupCenterCostCompleted;
        
        /// <remarks/>
        public event UpdateGroupCenterCostCompletedEventHandler UpdateGroupCenterCostCompleted;
        
        /// <remarks/>
        public event DeleteGroupCenterCostCompletedEventHandler DeleteGroupCenterCostCompleted;
        
        /// <remarks/>
        public event InsertTree_CenterCostCompletedEventHandler InsertTree_CenterCostCompleted;
        
        /// <remarks/>
        public event GetTreeCenterCostDetailCompletedEventHandler GetTreeCenterCostDetailCompleted;
        
        /// <remarks/>
        public event GetTreeCenterCostWithFilterCompletedEventHandler GetTreeCenterCostWithFilterCompleted;
        
        /// <remarks/>
        public event InsertTreeCenterCostCompletedEventHandler InsertTreeCenterCostCompleted;
        
        /// <remarks/>
        public event UpdateTreeCenterCostCompletedEventHandler UpdateTreeCenterCostCompleted;
        
        /// <remarks/>
        public event DeleteTreeCenterCostCompletedEventHandler DeleteTreeCenterCostCompleted;
        
        /// <remarks/>
        public event UpdatePID_CostCenterCompletedEventHandler UpdatePID_CostCenterCompleted;
        
        /// <remarks/>
        public event GetCenterco_TarifNashodehCompletedEventHandler GetCenterco_TarifNashodehCompleted;
        
        /// <remarks/>
        public event GetTemplateCodingDetailCompletedEventHandler GetTemplateCodingDetailCompleted;
        
        /// <remarks/>
        public event GetTemplateCodingWithFilterCompletedEventHandler GetTemplateCodingWithFilterCompleted;
        
        /// <remarks/>
        public event InsertTemplateCodingCompletedEventHandler InsertTemplateCodingCompleted;
        
        /// <remarks/>
        public event UpdateTemplateCodingCompletedEventHandler UpdateTemplateCodingCompleted;
        
        /// <remarks/>
        public event DeleteTemplateCodingCompletedEventHandler DeleteTemplateCodingCompleted;
        
        /// <remarks/>
        public event CheckValidCodeCompletedEventHandler CheckValidCodeCompleted;
        
        /// <remarks/>
        public event GetDefaultCodeCompletedEventHandler GetDefaultCodeCompleted;
        
        /// <remarks/>
        public event GetItemNecessaryDetailCompletedEventHandler GetItemNecessaryDetailCompleted;
        
        /// <remarks/>
        public event GetItemNecessaryWithFilterCompletedEventHandler GetItemNecessaryWithFilterCompleted;
        
        /// <remarks/>
        public event InsertItemNecessaryCompletedEventHandler InsertItemNecessaryCompleted;
        
        /// <remarks/>
        public event UpdateItemNecessaryCompletedEventHandler UpdateItemNecessaryCompleted;
        
        /// <remarks/>
        public event DeleteItemNecessaryCompletedEventHandler DeleteItemNecessaryCompleted;
        
        /// <remarks/>
        public event UpdatePID_ItemNecessaryCompletedEventHandler UpdatePID_ItemNecessaryCompleted;
        
        /// <remarks/>
        public event GetTemplateNameDetailCompletedEventHandler GetTemplateNameDetailCompleted;
        
        /// <remarks/>
        public event GetTemplateNameWithFilterCompletedEventHandler GetTemplateNameWithFilterCompleted;
        
        /// <remarks/>
        public event InsertTemplateNameCompletedEventHandler InsertTemplateNameCompleted;
        
        /// <remarks/>
        public event UpdateTemplateNameCompletedEventHandler UpdateTemplateNameCompleted;
        
        /// <remarks/>
        public event DeleteTemplateNameCompletedEventHandler DeleteTemplateNameCompleted;
        
        /// <remarks/>
        public event GetMahiyatWithFilterCompletedEventHandler GetMahiyatWithFilterCompleted;
        
        /// <remarks/>
        public event GetLevelsAccountingTypeDetailCompletedEventHandler GetLevelsAccountingTypeDetailCompleted;
        
        /// <remarks/>
        public event GetLevelsAccountingTypeWithFilterCompletedEventHandler GetLevelsAccountingTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertLevelsAccountingTypeCompletedEventHandler InsertLevelsAccountingTypeCompleted;
        
        /// <remarks/>
        public event UpdateLevelsAccountingTypeCompletedEventHandler UpdateLevelsAccountingTypeCompleted;
        
        /// <remarks/>
        public event DeleteLevelsAccountingTypeCompletedEventHandler DeleteLevelsAccountingTypeCompleted;
        
        /// <remarks/>
        public event selectAccountingTypeLevelCompletedEventHandler selectAccountingTypeLevelCompleted;
        
        /// <remarks/>
        public event GetDocumentDescDetailCompletedEventHandler GetDocumentDescDetailCompleted;
        
        /// <remarks/>
        public event GetDocumentDescWithFilterCompletedEventHandler GetDocumentDescWithFilterCompleted;
        
        /// <remarks/>
        public event InsertDocumentDescCompletedEventHandler InsertDocumentDescCompleted;
        
        /// <remarks/>
        public event UpdateDocumentDescCompletedEventHandler UpdateDocumentDescCompleted;
        
        /// <remarks/>
        public event DeleteDocumentDescCompletedEventHandler DeleteDocumentDescCompleted;
        
        /// <remarks/>
        public event GetParamDocumentDescCompletedEventHandler GetParamDocumentDescCompleted;
        
        /// <remarks/>
        public event SelectEkhtetamiyeCompletedEventHandler SelectEkhtetamiyeCompleted;
        
        /// <remarks/>
        public event SelectBastanHesabhaCompletedEventHandler SelectBastanHesabhaCompleted;
        
        /// <remarks/>
        public event SelectHesabDaryaftaniCompletedEventHandler SelectHesabDaryaftaniCompleted;
        
        /// <remarks/>
        public event SelectEftetahiyeCompletedEventHandler SelectEftetahiyeCompleted;
        
        /// <remarks/>
        public event GetCaseTypeDetailCompletedEventHandler GetCaseTypeDetailCompleted;
        
        /// <remarks/>
        public event GetCaseTypeWithFilterCompletedEventHandler GetCaseTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCaseTypeCompletedEventHandler InsertCaseTypeCompleted;
        
        /// <remarks/>
        public event UpdateCaseTypeCompletedEventHandler UpdateCaseTypeCompleted;
        
        /// <remarks/>
        public event DeleteCaseTypeCompletedEventHandler DeleteCaseTypeCompleted;
        
        /// <remarks/>
        public event GetCoding_HeaderDetailCompletedEventHandler GetCoding_HeaderDetailCompleted;
        
        /// <remarks/>
        public event GetCoding_HeaderWithFilterCompletedEventHandler GetCoding_HeaderWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCoding_HeaderCompletedEventHandler InsertCoding_HeaderCompleted;
        
        /// <remarks/>
        public event UpdateCoding_HeaderCompletedEventHandler UpdateCoding_HeaderCompleted;
        
        /// <remarks/>
        public event DeleteCoding_HeaderCompletedEventHandler DeleteCoding_HeaderCompleted;
        
        /// <remarks/>
        public event CopyFromTemplateCodingToCodingCompletedEventHandler CopyFromTemplateCodingToCodingCompleted;
        
        /// <remarks/>
        public event GetCoding_DetailsDetailCompletedEventHandler GetCoding_DetailsDetailCompleted;
        
        /// <remarks/>
        public event GetItemIdCompletedEventHandler GetItemIdCompleted;
        
        /// <remarks/>
        public event GetCoding_DetailsWithFilterCompletedEventHandler GetCoding_DetailsWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCoding_DetailsCompletedEventHandler InsertCoding_DetailsCompleted;
        
        /// <remarks/>
        public event UpdateCoding_DetailsCompletedEventHandler UpdateCoding_DetailsCompleted;
        
        /// <remarks/>
        public event DeleteCoding_DetailsCompletedEventHandler DeleteCoding_DetailsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDefaultCode_Coding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Coding_Details[] GetDefaultCode_Coding(int HeaderId, string PCode, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDefaultCode_Coding", new object[] {
                        HeaderId,
                        PCode,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Coding_Details[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultCode_CodingAsync(int HeaderId, string PCode, string IP) {
            this.GetDefaultCode_CodingAsync(HeaderId, PCode, IP, null);
        }
        
        /// <remarks/>
        public void GetDefaultCode_CodingAsync(int HeaderId, string PCode, string IP, object userState) {
            if ((this.GetDefaultCode_CodingOperationCompleted == null)) {
                this.GetDefaultCode_CodingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultCode_CodingOperationCompleted);
            }
            this.InvokeAsync("GetDefaultCode_Coding", new object[] {
                        HeaderId,
                        PCode,
                        IP}, this.GetDefaultCode_CodingOperationCompleted, userState);
        }
        
        private void OnGetDefaultCode_CodingOperationCompleted(object arg) {
            if ((this.GetDefaultCode_CodingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultCode_CodingCompleted(this, new GetDefaultCode_CodingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/CheckValidCode_CodingDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckValidCode_CodingDetail(int HeaderId, string Code, string PCode, int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("CheckValidCode_CodingDetail", new object[] {
                        HeaderId,
                        Code,
                        PCode,
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidCode_CodingDetailAsync(int HeaderId, string Code, string PCode, int Id, string IP) {
            this.CheckValidCode_CodingDetailAsync(HeaderId, Code, PCode, Id, IP, null);
        }
        
        /// <remarks/>
        public void CheckValidCode_CodingDetailAsync(int HeaderId, string Code, string PCode, int Id, string IP, object userState) {
            if ((this.CheckValidCode_CodingDetailOperationCompleted == null)) {
                this.CheckValidCode_CodingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidCode_CodingDetailOperationCompleted);
            }
            this.InvokeAsync("CheckValidCode_CodingDetail", new object[] {
                        HeaderId,
                        Code,
                        PCode,
                        Id,
                        IP}, this.CheckValidCode_CodingDetailOperationCompleted, userState);
        }
        
        private void OnCheckValidCode_CodingDetailOperationCompleted(object arg) {
            if ((this.CheckValidCode_CodingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidCode_CodingDetailCompleted(this, new CheckValidCode_CodingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetRptByCoding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_RptByCoding GetRptByCoding(int CodingId, int OrganId, short Year, byte ModuleId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetRptByCoding", new object[] {
                        CodingId,
                        OrganId,
                        Year,
                        ModuleId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_RptByCoding)(results[0]));
        }
        
        /// <remarks/>
        public void GetRptByCodingAsync(int CodingId, int OrganId, short Year, byte ModuleId, string IP) {
            this.GetRptByCodingAsync(CodingId, OrganId, Year, ModuleId, IP, null);
        }
        
        /// <remarks/>
        public void GetRptByCodingAsync(int CodingId, int OrganId, short Year, byte ModuleId, string IP, object userState) {
            if ((this.GetRptByCodingOperationCompleted == null)) {
                this.GetRptByCodingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRptByCodingOperationCompleted);
            }
            this.InvokeAsync("GetRptByCoding", new object[] {
                        CodingId,
                        OrganId,
                        Year,
                        ModuleId,
                        IP}, this.GetRptByCodingOperationCompleted, userState);
        }
        
        private void OnGetRptByCodingOperationCompleted(object arg) {
            if ((this.GetRptByCodingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRptByCodingCompleted(this, new GetRptByCodingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectCoding_Project", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Coding_ProjeFaaliat[] SelectCoding_Project(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectCoding_Project", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Coding_ProjeFaaliat[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectCoding_ProjectAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.SelectCoding_ProjectAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void SelectCoding_ProjectAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.SelectCoding_ProjectOperationCompleted == null)) {
                this.SelectCoding_ProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCoding_ProjectOperationCompleted);
            }
            this.InvokeAsync("SelectCoding_Project", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.SelectCoding_ProjectOperationCompleted, userState);
        }
        
        private void OnSelectCoding_ProjectOperationCompleted(object arg) {
            if ((this.SelectCoding_ProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCoding_ProjectCompleted(this, new SelectCoding_ProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/CheckMahiyatGardesh_Mande", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CheckMahiyatGardesh_Mande[] CheckMahiyatGardesh_Mande(int Id, int organid, short year, long bed, long best, int idDetail, int moduleSaveId, string IP, out ClsError Error) {
            object[] results = this.Invoke("CheckMahiyatGardesh_Mande", new object[] {
                        Id,
                        organid,
                        year,
                        bed,
                        best,
                        idDetail,
                        moduleSaveId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CheckMahiyatGardesh_Mande[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckMahiyatGardesh_MandeAsync(int Id, int organid, short year, long bed, long best, int idDetail, int moduleSaveId, string IP) {
            this.CheckMahiyatGardesh_MandeAsync(Id, organid, year, bed, best, idDetail, moduleSaveId, IP, null);
        }
        
        /// <remarks/>
        public void CheckMahiyatGardesh_MandeAsync(int Id, int organid, short year, long bed, long best, int idDetail, int moduleSaveId, string IP, object userState) {
            if ((this.CheckMahiyatGardesh_MandeOperationCompleted == null)) {
                this.CheckMahiyatGardesh_MandeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMahiyatGardesh_MandeOperationCompleted);
            }
            this.InvokeAsync("CheckMahiyatGardesh_Mande", new object[] {
                        Id,
                        organid,
                        year,
                        bed,
                        best,
                        idDetail,
                        moduleSaveId,
                        IP}, this.CheckMahiyatGardesh_MandeOperationCompleted, userState);
        }
        
        private void OnCheckMahiyatGardesh_MandeOperationCompleted(object arg) {
            if ((this.CheckMahiyatGardesh_MandeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMahiyatGardesh_MandeCompleted(this, new CheckMahiyatGardesh_MandeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentRecord_HeaderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecord_Header GetDocumentRecord_HeaderDetail(int Id, int OrganId, short Year, int Madule, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentRecord_HeaderDetail", new object[] {
                        Id,
                        OrganId,
                        Year,
                        Madule,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecord_Header)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentRecord_HeaderDetailAsync(int Id, int OrganId, short Year, int Madule, string IP) {
            this.GetDocumentRecord_HeaderDetailAsync(Id, OrganId, Year, Madule, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentRecord_HeaderDetailAsync(int Id, int OrganId, short Year, int Madule, string IP, object userState) {
            if ((this.GetDocumentRecord_HeaderDetailOperationCompleted == null)) {
                this.GetDocumentRecord_HeaderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentRecord_HeaderDetailOperationCompleted);
            }
            this.InvokeAsync("GetDocumentRecord_HeaderDetail", new object[] {
                        Id,
                        OrganId,
                        Year,
                        Madule,
                        IP}, this.GetDocumentRecord_HeaderDetailOperationCompleted, userState);
        }
        
        private void OnGetDocumentRecord_HeaderDetailOperationCompleted(object arg) {
            if ((this.GetDocumentRecord_HeaderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentRecord_HeaderDetailCompleted(this, new GetDocumentRecord_HeaderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentRecord_HeaderWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecord_Header[] GetDocumentRecord_HeaderWithFilter(string FieldName, string FilterValue, string value2, string value3, int OrganId, short Year, int Madule, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentRecord_HeaderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        value2,
                        value3,
                        OrganId,
                        Year,
                        Madule,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecord_Header[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentRecord_HeaderWithFilterAsync(string FieldName, string FilterValue, string value2, string value3, int OrganId, short Year, int Madule, int Top, string IP) {
            this.GetDocumentRecord_HeaderWithFilterAsync(FieldName, FilterValue, value2, value3, OrganId, Year, Madule, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentRecord_HeaderWithFilterAsync(string FieldName, string FilterValue, string value2, string value3, int OrganId, short Year, int Madule, int Top, string IP, object userState) {
            if ((this.GetDocumentRecord_HeaderWithFilterOperationCompleted == null)) {
                this.GetDocumentRecord_HeaderWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentRecord_HeaderWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetDocumentRecord_HeaderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        value2,
                        value3,
                        OrganId,
                        Year,
                        Madule,
                        Top,
                        IP}, this.GetDocumentRecord_HeaderWithFilterOperationCompleted, userState);
        }
        
        private void OnGetDocumentRecord_HeaderWithFilterOperationCompleted(object arg) {
            if ((this.GetDocumentRecord_HeaderWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentRecord_HeaderWithFilterCompleted(this, new GetDocumentRecord_HeaderWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectMortabet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecord_Header[] SelectMortabet(int HeaderId, int MaduleSaveId, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectMortabet", new object[] {
                        HeaderId,
                        MaduleSaveId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecord_Header[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectMortabetAsync(int HeaderId, int MaduleSaveId, string IP) {
            this.SelectMortabetAsync(HeaderId, MaduleSaveId, IP, null);
        }
        
        /// <remarks/>
        public void SelectMortabetAsync(int HeaderId, int MaduleSaveId, string IP, object userState) {
            if ((this.SelectMortabetOperationCompleted == null)) {
                this.SelectMortabetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMortabetOperationCompleted);
            }
            this.InvokeAsync("SelectMortabet", new object[] {
                        HeaderId,
                        MaduleSaveId,
                        IP}, this.SelectMortabetOperationCompleted, userState);
        }
        
        private void OnSelectMortabetOperationCompleted(object arg) {
            if ((this.SelectMortabetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMortabetCompleted(this, new SelectMortabetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertDocumentRecord_Header", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertDocumentRecord_Header(int DocumentNum, string ArchiveNum, string DescriptionDocu, string TarikhDocument, byte Accept, byte Type, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertDocumentRecord_Header", new object[] {
                        DocumentNum,
                        ArchiveNum,
                        DescriptionDocu,
                        TarikhDocument,
                        Accept,
                        Type,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDocumentRecord_HeaderAsync(int DocumentNum, string ArchiveNum, string DescriptionDocu, string TarikhDocument, byte Accept, byte Type, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertDocumentRecord_HeaderAsync(DocumentNum, ArchiveNum, DescriptionDocu, TarikhDocument, Accept, Type, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertDocumentRecord_HeaderAsync(int DocumentNum, string ArchiveNum, string DescriptionDocu, string TarikhDocument, byte Accept, byte Type, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertDocumentRecord_HeaderOperationCompleted == null)) {
                this.InsertDocumentRecord_HeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDocumentRecord_HeaderOperationCompleted);
            }
            this.InvokeAsync("InsertDocumentRecord_Header", new object[] {
                        DocumentNum,
                        ArchiveNum,
                        DescriptionDocu,
                        TarikhDocument,
                        Accept,
                        Type,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertDocumentRecord_HeaderOperationCompleted, userState);
        }
        
        private void OnInsertDocumentRecord_HeaderOperationCompleted(object arg) {
            if ((this.InsertDocumentRecord_HeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDocumentRecord_HeaderCompleted(this, new InsertDocumentRecord_HeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateDocumentRecord_Header", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDocumentRecord_Header(int Id, string ArchiveNum, string DescriptionDocu, string TarikhDocument, byte Accept, byte Type, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateDocumentRecord_Header", new object[] {
                        Id,
                        ArchiveNum,
                        DescriptionDocu,
                        TarikhDocument,
                        Accept,
                        Type,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDocumentRecord_HeaderAsync(int Id, string ArchiveNum, string DescriptionDocu, string TarikhDocument, byte Accept, byte Type, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateDocumentRecord_HeaderAsync(Id, ArchiveNum, DescriptionDocu, TarikhDocument, Accept, Type, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentRecord_HeaderAsync(int Id, string ArchiveNum, string DescriptionDocu, string TarikhDocument, byte Accept, byte Type, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateDocumentRecord_HeaderOperationCompleted == null)) {
                this.UpdateDocumentRecord_HeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentRecord_HeaderOperationCompleted);
            }
            this.InvokeAsync("UpdateDocumentRecord_Header", new object[] {
                        Id,
                        ArchiveNum,
                        DescriptionDocu,
                        TarikhDocument,
                        Accept,
                        Type,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateDocumentRecord_HeaderOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentRecord_HeaderOperationCompleted(object arg) {
            if ((this.UpdateDocumentRecord_HeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentRecord_HeaderCompleted(this, new UpdateDocumentRecord_HeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteDocumentRecord_Header", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDocumentRecord_Header(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteDocumentRecord_Header", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentRecord_HeaderAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteDocumentRecord_HeaderAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentRecord_HeaderAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteDocumentRecord_HeaderOperationCompleted == null)) {
                this.DeleteDocumentRecord_HeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentRecord_HeaderOperationCompleted);
            }
            this.InvokeAsync("DeleteDocumentRecord_Header", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteDocumentRecord_HeaderOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentRecord_HeaderOperationCompleted(object arg) {
            if ((this.DeleteDocumentRecord_HeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentRecord_HeaderCompleted(this, new DeleteDocumentRecord_HeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetLastNum_AtfDocumentRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecord_Header[] GetLastNum_AtfDocumentRecord(short Year, int OrganId, int ModuleDocId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLastNum_AtfDocumentRecord", new object[] {
                        Year,
                        OrganId,
                        ModuleDocId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecord_Header[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLastNum_AtfDocumentRecordAsync(short Year, int OrganId, int ModuleDocId, string IP) {
            this.GetLastNum_AtfDocumentRecordAsync(Year, OrganId, ModuleDocId, IP, null);
        }
        
        /// <remarks/>
        public void GetLastNum_AtfDocumentRecordAsync(short Year, int OrganId, int ModuleDocId, string IP, object userState) {
            if ((this.GetLastNum_AtfDocumentRecordOperationCompleted == null)) {
                this.GetLastNum_AtfDocumentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastNum_AtfDocumentRecordOperationCompleted);
            }
            this.InvokeAsync("GetLastNum_AtfDocumentRecord", new object[] {
                        Year,
                        OrganId,
                        ModuleDocId,
                        IP}, this.GetLastNum_AtfDocumentRecordOperationCompleted, userState);
        }
        
        private void OnGetLastNum_AtfDocumentRecordOperationCompleted(object arg) {
            if ((this.GetLastNum_AtfDocumentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastNum_AtfDocumentRecordCompleted(this, new GetLastNum_AtfDocumentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertDocument(
                    string ArchiveNum, 
                    string DescriptionDocu, 
                    string TarikhDocument, 
                    byte Accept, 
                    byte Type, 
                    System.Data.DataTable detail, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ModuleSaveId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ModuleErsalId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldShomareFaree, 
                    int fldFiscalYearId, 
                    int fldTypeSanad, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<byte> fldEdit, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("InsertDocument", new object[] {
                        ArchiveNum,
                        DescriptionDocu,
                        TarikhDocument,
                        Accept,
                        Type,
                        detail,
                        ModuleSaveId,
                        ModuleErsalId,
                        fldShomareFaree,
                        fldFiscalYearId,
                        fldTypeSanad,
                        fldPid,
                        fldEdit,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDocumentAsync(
                    string ArchiveNum, 
                    string DescriptionDocu, 
                    string TarikhDocument, 
                    byte Accept, 
                    byte Type, 
                    System.Data.DataTable detail, 
                    System.Nullable<int> ModuleSaveId, 
                    System.Nullable<int> ModuleErsalId, 
                    System.Nullable<int> fldShomareFaree, 
                    int fldFiscalYearId, 
                    int fldTypeSanad, 
                    System.Nullable<int> fldPid, 
                    System.Nullable<byte> fldEdit, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.InsertDocumentAsync(ArchiveNum, DescriptionDocu, TarikhDocument, Accept, Type, detail, ModuleSaveId, ModuleErsalId, fldShomareFaree, fldFiscalYearId, fldTypeSanad, fldPid, fldEdit, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertDocumentAsync(
                    string ArchiveNum, 
                    string DescriptionDocu, 
                    string TarikhDocument, 
                    byte Accept, 
                    byte Type, 
                    System.Data.DataTable detail, 
                    System.Nullable<int> ModuleSaveId, 
                    System.Nullable<int> ModuleErsalId, 
                    System.Nullable<int> fldShomareFaree, 
                    int fldFiscalYearId, 
                    int fldTypeSanad, 
                    System.Nullable<int> fldPid, 
                    System.Nullable<byte> fldEdit, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.InsertDocumentOperationCompleted == null)) {
                this.InsertDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDocumentOperationCompleted);
            }
            this.InvokeAsync("InsertDocument", new object[] {
                        ArchiveNum,
                        DescriptionDocu,
                        TarikhDocument,
                        Accept,
                        Type,
                        detail,
                        ModuleSaveId,
                        ModuleErsalId,
                        fldShomareFaree,
                        fldFiscalYearId,
                        fldTypeSanad,
                        fldPid,
                        fldEdit,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertDocumentOperationCompleted, userState);
        }
        
        private void OnInsertDocumentOperationCompleted(object arg) {
            if ((this.InsertDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDocumentCompleted(this, new InsertDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDocument(
                    int fldHeaderId, 
                    int DocumentNum, 
                    string ArchiveNum, 
                    string DescriptionDocu, 
                    string TarikhDocument, 
                    byte Accept, 
                    byte Type, 
                    System.Data.DataTable detail, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ModuleSaveId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ModuleErsalId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldShomareFaree, 
                    int fldTypeSanad, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateDocument", new object[] {
                        fldHeaderId,
                        DocumentNum,
                        ArchiveNum,
                        DescriptionDocu,
                        TarikhDocument,
                        Accept,
                        Type,
                        detail,
                        ModuleSaveId,
                        ModuleErsalId,
                        fldShomareFaree,
                        fldTypeSanad,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDocumentAsync(
                    int fldHeaderId, 
                    int DocumentNum, 
                    string ArchiveNum, 
                    string DescriptionDocu, 
                    string TarikhDocument, 
                    byte Accept, 
                    byte Type, 
                    System.Data.DataTable detail, 
                    System.Nullable<int> ModuleSaveId, 
                    System.Nullable<int> ModuleErsalId, 
                    System.Nullable<int> fldShomareFaree, 
                    int fldTypeSanad, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.UpdateDocumentAsync(fldHeaderId, DocumentNum, ArchiveNum, DescriptionDocu, TarikhDocument, Accept, Type, detail, ModuleSaveId, ModuleErsalId, fldShomareFaree, fldTypeSanad, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentAsync(
                    int fldHeaderId, 
                    int DocumentNum, 
                    string ArchiveNum, 
                    string DescriptionDocu, 
                    string TarikhDocument, 
                    byte Accept, 
                    byte Type, 
                    System.Data.DataTable detail, 
                    System.Nullable<int> ModuleSaveId, 
                    System.Nullable<int> ModuleErsalId, 
                    System.Nullable<int> fldShomareFaree, 
                    int fldTypeSanad, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.UpdateDocumentOperationCompleted == null)) {
                this.UpdateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentOperationCompleted);
            }
            this.InvokeAsync("UpdateDocument", new object[] {
                        fldHeaderId,
                        DocumentNum,
                        ArchiveNum,
                        DescriptionDocu,
                        TarikhDocument,
                        Accept,
                        Type,
                        detail,
                        ModuleSaveId,
                        ModuleErsalId,
                        fldShomareFaree,
                        fldTypeSanad,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateDocumentOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentOperationCompleted(object arg) {
            if ((this.UpdateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentCompleted(this, new UpdateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertDocumentFishDaramad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDocumentFishDaramad(int FiscalYearId, int FishId, int ModuleSaveId, int ModuleErsalId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertDocumentFishDaramad", new object[] {
                        FiscalYearId,
                        FishId,
                        ModuleSaveId,
                        ModuleErsalId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDocumentFishDaramadAsync(int FiscalYearId, int FishId, int ModuleSaveId, int ModuleErsalId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertDocumentFishDaramadAsync(FiscalYearId, FishId, ModuleSaveId, ModuleErsalId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertDocumentFishDaramadAsync(int FiscalYearId, int FishId, int ModuleSaveId, int ModuleErsalId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertDocumentFishDaramadOperationCompleted == null)) {
                this.InsertDocumentFishDaramadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDocumentFishDaramadOperationCompleted);
            }
            this.InvokeAsync("InsertDocumentFishDaramad", new object[] {
                        FiscalYearId,
                        FishId,
                        ModuleSaveId,
                        ModuleErsalId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertDocumentFishDaramadOperationCompleted, userState);
        }
        
        private void OnInsertDocumentFishDaramadOperationCompleted(object arg) {
            if ((this.InsertDocumentFishDaramadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDocumentFishDaramadCompleted(this, new InsertDocumentFishDaramadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateMoratabSaziTarikhSanad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMoratabSaziTarikhSanad(short Year, int moduleId, int OrganId, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateMoratabSaziTarikhSanad", new object[] {
                        Year,
                        moduleId,
                        OrganId,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMoratabSaziTarikhSanadAsync(short Year, int moduleId, int OrganId, string Username, string Password, string IP) {
            this.UpdateMoratabSaziTarikhSanadAsync(Year, moduleId, OrganId, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void UpdateMoratabSaziTarikhSanadAsync(short Year, int moduleId, int OrganId, string Username, string Password, string IP, object userState) {
            if ((this.UpdateMoratabSaziTarikhSanadOperationCompleted == null)) {
                this.UpdateMoratabSaziTarikhSanadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMoratabSaziTarikhSanadOperationCompleted);
            }
            this.InvokeAsync("UpdateMoratabSaziTarikhSanad", new object[] {
                        Year,
                        moduleId,
                        OrganId,
                        Username,
                        Password,
                        IP}, this.UpdateMoratabSaziTarikhSanadOperationCompleted, userState);
        }
        
        private void OnUpdateMoratabSaziTarikhSanadOperationCompleted(object arg) {
            if ((this.UpdateMoratabSaziTarikhSanadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMoratabSaziTarikhSanadCompleted(this, new UpdateMoratabSaziTarikhSanadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateGhati", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateGhati(int fldHeaderId, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateGhati", new object[] {
                        fldHeaderId,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGhatiAsync(int fldHeaderId, string Username, string Password, int OrganId, string IP) {
            this.UpdateGhatiAsync(fldHeaderId, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateGhatiAsync(int fldHeaderId, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateGhatiOperationCompleted == null)) {
                this.UpdateGhatiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGhatiOperationCompleted);
            }
            this.InvokeAsync("UpdateGhati", new object[] {
                        fldHeaderId,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateGhatiOperationCompleted, userState);
        }
        
        private void OnUpdateGhatiOperationCompleted(object arg) {
            if ((this.UpdateGhatiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGhatiCompleted(this, new UpdateGhatiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DisableGhati", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DisableGhati(int fldHeaderId, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DisableGhati", new object[] {
                        fldHeaderId,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DisableGhatiAsync(int fldHeaderId, string Username, string Password, int OrganId, string IP) {
            this.DisableGhatiAsync(fldHeaderId, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DisableGhatiAsync(int fldHeaderId, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DisableGhatiOperationCompleted == null)) {
                this.DisableGhatiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableGhatiOperationCompleted);
            }
            this.InvokeAsync("DisableGhati", new object[] {
                        fldHeaderId,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DisableGhatiOperationCompleted, userState);
        }
        
        private void OnDisableGhatiOperationCompleted(object arg) {
            if ((this.DisableGhatiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableGhatiCompleted(this, new DisableGhatiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateArchive_FareiNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateArchive_FareiNum(int fldHeaderId, string ArchiveNum, int FareiNum, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateArchive_FareiNum", new object[] {
                        fldHeaderId,
                        ArchiveNum,
                        FareiNum,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateArchive_FareiNumAsync(int fldHeaderId, string ArchiveNum, int FareiNum, string Username, string Password, int OrganId, string IP) {
            this.UpdateArchive_FareiNumAsync(fldHeaderId, ArchiveNum, FareiNum, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateArchive_FareiNumAsync(int fldHeaderId, string ArchiveNum, int FareiNum, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateArchive_FareiNumOperationCompleted == null)) {
                this.UpdateArchive_FareiNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateArchive_FareiNumOperationCompleted);
            }
            this.InvokeAsync("UpdateArchive_FareiNum", new object[] {
                        fldHeaderId,
                        ArchiveNum,
                        FareiNum,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateArchive_FareiNumOperationCompleted, userState);
        }
        
        private void OnUpdateArchive_FareiNumOperationCompleted(object arg) {
            if ((this.UpdateArchive_FareiNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateArchive_FareiNumCompleted(this, new UpdateArchive_FareiNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/CheckDocStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDocStatus(int DocHeaderId, string IP, out int Id, out ClsError Error) {
            object[] results = this.Invoke("CheckDocStatus", new object[] {
                        DocHeaderId,
                        IP});
            Id = ((int)(results[1]));
            Error = ((ClsError)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDocStatusAsync(int DocHeaderId, string IP) {
            this.CheckDocStatusAsync(DocHeaderId, IP, null);
        }
        
        /// <remarks/>
        public void CheckDocStatusAsync(int DocHeaderId, string IP, object userState) {
            if ((this.CheckDocStatusOperationCompleted == null)) {
                this.CheckDocStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDocStatusOperationCompleted);
            }
            this.InvokeAsync("CheckDocStatus", new object[] {
                        DocHeaderId,
                        IP}, this.CheckDocStatusOperationCompleted, userState);
        }
        
        private void OnCheckDocStatusOperationCompleted(object arg) {
            if ((this.CheckDocStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDocStatusCompleted(this, new CheckDocStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/Document_CopyInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Document_CopyInsert(int DocHeaderId, int OrganId, byte ModuleErsalId, byte ModuleSaveId, byte Type, string TarikhDocument, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("Document_CopyInsert", new object[] {
                        DocHeaderId,
                        OrganId,
                        ModuleErsalId,
                        ModuleSaveId,
                        Type,
                        TarikhDocument,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Document_CopyInsertAsync(int DocHeaderId, int OrganId, byte ModuleErsalId, byte ModuleSaveId, byte Type, string TarikhDocument, string Username, string Password, string IP) {
            this.Document_CopyInsertAsync(DocHeaderId, OrganId, ModuleErsalId, ModuleSaveId, Type, TarikhDocument, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void Document_CopyInsertAsync(int DocHeaderId, int OrganId, byte ModuleErsalId, byte ModuleSaveId, byte Type, string TarikhDocument, string Username, string Password, string IP, object userState) {
            if ((this.Document_CopyInsertOperationCompleted == null)) {
                this.Document_CopyInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocument_CopyInsertOperationCompleted);
            }
            this.InvokeAsync("Document_CopyInsert", new object[] {
                        DocHeaderId,
                        OrganId,
                        ModuleErsalId,
                        ModuleSaveId,
                        Type,
                        TarikhDocument,
                        Username,
                        Password,
                        IP}, this.Document_CopyInsertOperationCompleted, userState);
        }
        
        private void OnDocument_CopyInsertOperationCompleted(object arg) {
            if ((this.Document_CopyInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Document_CopyInsertCompleted(this, new Document_CopyInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentRecord_DetailsDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecord_Details GetDocumentRecord_DetailsDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentRecord_DetailsDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecord_Details)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentRecord_DetailsDetailAsync(int Id, string IP) {
            this.GetDocumentRecord_DetailsDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentRecord_DetailsDetailAsync(int Id, string IP, object userState) {
            if ((this.GetDocumentRecord_DetailsDetailOperationCompleted == null)) {
                this.GetDocumentRecord_DetailsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentRecord_DetailsDetailOperationCompleted);
            }
            this.InvokeAsync("GetDocumentRecord_DetailsDetail", new object[] {
                        Id,
                        IP}, this.GetDocumentRecord_DetailsDetailOperationCompleted, userState);
        }
        
        private void OnGetDocumentRecord_DetailsDetailOperationCompleted(object arg) {
            if ((this.GetDocumentRecord_DetailsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentRecord_DetailsDetailCompleted(this, new GetDocumentRecord_DetailsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentRecord_DetailsWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecord_Details[] GetDocumentRecord_DetailsWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentRecord_DetailsWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecord_Details[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentRecord_DetailsWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetDocumentRecord_DetailsWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentRecord_DetailsWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetDocumentRecord_DetailsWithFilterOperationCompleted == null)) {
                this.GetDocumentRecord_DetailsWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentRecord_DetailsWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetDocumentRecord_DetailsWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetDocumentRecord_DetailsWithFilterOperationCompleted, userState);
        }
        
        private void OnGetDocumentRecord_DetailsWithFilterOperationCompleted(object arg) {
            if ((this.GetDocumentRecord_DetailsWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentRecord_DetailsWithFilterCompleted(this, new GetDocumentRecord_DetailsWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocFiles[] GetDocFiles(short Year, int OrganId, int CodingId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocFiles", new object[] {
                        Year,
                        OrganId,
                        CodingId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocFiles[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocFilesAsync(short Year, int OrganId, int CodingId, string IP) {
            this.GetDocFilesAsync(Year, OrganId, CodingId, IP, null);
        }
        
        /// <remarks/>
        public void GetDocFilesAsync(short Year, int OrganId, int CodingId, string IP, object userState) {
            if ((this.GetDocFilesOperationCompleted == null)) {
                this.GetDocFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocFilesOperationCompleted);
            }
            this.InvokeAsync("GetDocFiles", new object[] {
                        Year,
                        OrganId,
                        CodingId,
                        IP}, this.GetDocFilesOperationCompleted, userState);
        }
        
        private void OnGetDocFilesOperationCompleted(object arg) {
            if ((this.GetDocFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocFilesCompleted(this, new GetDocFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteDocumentRecord_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDocumentRecord_Details(string FieldName, int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteDocumentRecord_Details", new object[] {
                        FieldName,
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentRecord_DetailsAsync(string FieldName, int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteDocumentRecord_DetailsAsync(FieldName, id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentRecord_DetailsAsync(string FieldName, int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteDocumentRecord_DetailsOperationCompleted == null)) {
                this.DeleteDocumentRecord_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentRecord_DetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteDocumentRecord_Details", new object[] {
                        FieldName,
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteDocumentRecord_DetailsOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentRecord_DetailsOperationCompleted(object arg) {
            if ((this.DeleteDocumentRecord_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentRecord_DetailsCompleted(this, new DeleteDocumentRecord_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteDocumentDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDocumentDetail(int HeaderId, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteDocumentDetail", new object[] {
                        HeaderId,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentDetailAsync(int HeaderId, string Username, string Password, int OrganId, string IP) {
            this.DeleteDocumentDetailAsync(HeaderId, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentDetailAsync(int HeaderId, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteDocumentDetailOperationCompleted == null)) {
                this.DeleteDocumentDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentDetailOperationCompleted);
            }
            this.InvokeAsync("DeleteDocumentDetail", new object[] {
                        HeaderId,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteDocumentDetailOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentDetailOperationCompleted(object arg) {
            if ((this.DeleteDocumentDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentDetailCompleted(this, new DeleteDocumentDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCaseDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Case GetCaseDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCaseDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Case)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseDetailAsync(int Id, string IP) {
            this.GetCaseDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetCaseDetailAsync(int Id, string IP, object userState) {
            if ((this.GetCaseDetailOperationCompleted == null)) {
                this.GetCaseDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseDetailOperationCompleted);
            }
            this.InvokeAsync("GetCaseDetail", new object[] {
                        Id,
                        IP}, this.GetCaseDetailOperationCompleted, userState);
        }
        
        private void OnGetCaseDetailOperationCompleted(object arg) {
            if ((this.GetCaseDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseDetailCompleted(this, new GetCaseDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCaseWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Case[] GetCaseWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCaseWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Case[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetCaseWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCaseWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetCaseWithFilterOperationCompleted == null)) {
                this.GetCaseWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCaseWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetCaseWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCaseWithFilterOperationCompleted(object arg) {
            if ((this.GetCaseWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseWithFilterCompleted(this, new GetCaseWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertCase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCase(int CaseTypeId, int SourceId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCase", new object[] {
                        CaseTypeId,
                        SourceId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCaseAsync(int CaseTypeId, int SourceId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertCaseAsync(CaseTypeId, SourceId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCaseAsync(int CaseTypeId, int SourceId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCaseOperationCompleted == null)) {
                this.InsertCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCaseOperationCompleted);
            }
            this.InvokeAsync("InsertCase", new object[] {
                        CaseTypeId,
                        SourceId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCaseOperationCompleted, userState);
        }
        
        private void OnInsertCaseOperationCompleted(object arg) {
            if ((this.InsertCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCaseCompleted(this, new InsertCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateCase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCase(int Id, int CaseTypeId, int SourceId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCase", new object[] {
                        Id,
                        CaseTypeId,
                        SourceId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCaseAsync(int Id, int CaseTypeId, int SourceId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCaseAsync(Id, CaseTypeId, SourceId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCaseAsync(int Id, int CaseTypeId, int SourceId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCaseOperationCompleted == null)) {
                this.UpdateCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCaseOperationCompleted);
            }
            this.InvokeAsync("UpdateCase", new object[] {
                        Id,
                        CaseTypeId,
                        SourceId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCaseOperationCompleted, userState);
        }
        
        private void OnUpdateCaseOperationCompleted(object arg) {
            if ((this.UpdateCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCaseCompleted(this, new UpdateCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteCase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCase(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCase", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCaseAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCaseAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCaseAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCaseOperationCompleted == null)) {
                this.DeleteCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCaseOperationCompleted);
            }
            this.InvokeAsync("DeleteCase", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCaseOperationCompleted, userState);
        }
        
        private void OnDeleteCaseOperationCompleted(object arg) {
            if ((this.DeleteCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCaseCompleted(this, new DeleteCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetParvandeInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ParvandeInfo[] GetParvandeInfo(string FieldName, string FilterValue, byte ParvandeType, int OrganId, short Year, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetParvandeInfo", new object[] {
                        FieldName,
                        FilterValue,
                        ParvandeType,
                        OrganId,
                        Year,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ParvandeInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetParvandeInfoAsync(string FieldName, string FilterValue, byte ParvandeType, int OrganId, short Year, int Top, string IP) {
            this.GetParvandeInfoAsync(FieldName, FilterValue, ParvandeType, OrganId, Year, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetParvandeInfoAsync(string FieldName, string FilterValue, byte ParvandeType, int OrganId, short Year, int Top, string IP, object userState) {
            if ((this.GetParvandeInfoOperationCompleted == null)) {
                this.GetParvandeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParvandeInfoOperationCompleted);
            }
            this.InvokeAsync("GetParvandeInfo", new object[] {
                        FieldName,
                        FilterValue,
                        ParvandeType,
                        OrganId,
                        Year,
                        Top,
                        IP}, this.GetParvandeInfoOperationCompleted, userState);
        }
        
        private void OnGetParvandeInfoOperationCompleted(object arg) {
            if ((this.GetParvandeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParvandeInfoCompleted(this, new GetParvandeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetFiscalYearDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_FiscalYear GetFiscalYearDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetFiscalYearDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_FiscalYear)(results[0]));
        }
        
        /// <remarks/>
        public void GetFiscalYearDetailAsync(int Id, int OrganId, string IP) {
            this.GetFiscalYearDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetFiscalYearDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetFiscalYearDetailOperationCompleted == null)) {
                this.GetFiscalYearDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFiscalYearDetailOperationCompleted);
            }
            this.InvokeAsync("GetFiscalYearDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetFiscalYearDetailOperationCompleted, userState);
        }
        
        private void OnGetFiscalYearDetailOperationCompleted(object arg) {
            if ((this.GetFiscalYearDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFiscalYearDetailCompleted(this, new GetFiscalYearDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetFiscalYearWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_FiscalYear[] GetFiscalYearWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetFiscalYearWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_FiscalYear[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFiscalYearWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetFiscalYearWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetFiscalYearWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetFiscalYearWithFilterOperationCompleted == null)) {
                this.GetFiscalYearWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFiscalYearWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetFiscalYearWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetFiscalYearWithFilterOperationCompleted, userState);
        }
        
        private void OnGetFiscalYearWithFilterOperationCompleted(object arg) {
            if ((this.GetFiscalYearWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFiscalYearWithFilterCompleted(this, new GetFiscalYearWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertFiscalYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertFiscalYear(short fldYear, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertFiscalYear", new object[] {
                        fldYear,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFiscalYearAsync(short fldYear, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertFiscalYearAsync(fldYear, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertFiscalYearAsync(short fldYear, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertFiscalYearOperationCompleted == null)) {
                this.InsertFiscalYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFiscalYearOperationCompleted);
            }
            this.InvokeAsync("InsertFiscalYear", new object[] {
                        fldYear,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertFiscalYearOperationCompleted, userState);
        }
        
        private void OnInsertFiscalYearOperationCompleted(object arg) {
            if ((this.InsertFiscalYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFiscalYearCompleted(this, new InsertFiscalYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateFiscalYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateFiscalYear(int Id, short fldYear, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateFiscalYear", new object[] {
                        Id,
                        fldYear,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFiscalYearAsync(int Id, short fldYear, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateFiscalYearAsync(Id, fldYear, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateFiscalYearAsync(int Id, short fldYear, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateFiscalYearOperationCompleted == null)) {
                this.UpdateFiscalYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFiscalYearOperationCompleted);
            }
            this.InvokeAsync("UpdateFiscalYear", new object[] {
                        Id,
                        fldYear,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateFiscalYearOperationCompleted, userState);
        }
        
        private void OnUpdateFiscalYearOperationCompleted(object arg) {
            if ((this.UpdateFiscalYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFiscalYearCompleted(this, new UpdateFiscalYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteFiscalYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteFiscalYear(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteFiscalYear", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFiscalYearAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteFiscalYearAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteFiscalYearAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteFiscalYearOperationCompleted == null)) {
                this.DeleteFiscalYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFiscalYearOperationCompleted);
            }
            this.InvokeAsync("DeleteFiscalYear", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteFiscalYearOperationCompleted, userState);
        }
        
        private void OnDeleteFiscalYearOperationCompleted(object arg) {
            if ((this.DeleteFiscalYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFiscalYearCompleted(this, new DeleteFiscalYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/RptCodingStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_RptCodingStatus[] RptCodingStatus(int CodingDetailId, byte flag, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, byte Type, string IP, out ClsError Error) {
            object[] results = this.Invoke("RptCodingStatus", new object[] {
                        CodingDetailId,
                        flag,
                        CaseTypeId,
                        SourceId,
                        Year,
                        OrganId,
                        moduleSaveId,
                        Type,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_RptCodingStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void RptCodingStatusAsync(int CodingDetailId, byte flag, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, byte Type, string IP) {
            this.RptCodingStatusAsync(CodingDetailId, flag, CaseTypeId, SourceId, Year, OrganId, moduleSaveId, Type, IP, null);
        }
        
        /// <remarks/>
        public void RptCodingStatusAsync(int CodingDetailId, byte flag, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, byte Type, string IP, object userState) {
            if ((this.RptCodingStatusOperationCompleted == null)) {
                this.RptCodingStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptCodingStatusOperationCompleted);
            }
            this.InvokeAsync("RptCodingStatus", new object[] {
                        CodingDetailId,
                        flag,
                        CaseTypeId,
                        SourceId,
                        Year,
                        OrganId,
                        moduleSaveId,
                        Type,
                        IP}, this.RptCodingStatusOperationCompleted, userState);
        }
        
        private void OnRptCodingStatusOperationCompleted(object arg) {
            if ((this.RptCodingStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptCodingStatusCompleted(this, new RptCodingStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/RptCodingTurnover_Tarikh", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_RptCodingTurnover[] RptCodingTurnover_Tarikh(int CodingDetailId, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, string IP, string AzTarikh, string TaTarikh, out ClsError Error) {
            object[] results = this.Invoke("RptCodingTurnover_Tarikh", new object[] {
                        CodingDetailId,
                        CaseTypeId,
                        SourceId,
                        Year,
                        OrganId,
                        moduleSaveId,
                        IP,
                        AzTarikh,
                        TaTarikh});
            Error = ((ClsError)(results[1]));
            return ((OBJ_RptCodingTurnover[])(results[0]));
        }
        
        /// <remarks/>
        public void RptCodingTurnover_TarikhAsync(int CodingDetailId, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, string IP, string AzTarikh, string TaTarikh) {
            this.RptCodingTurnover_TarikhAsync(CodingDetailId, CaseTypeId, SourceId, Year, OrganId, moduleSaveId, IP, AzTarikh, TaTarikh, null);
        }
        
        /// <remarks/>
        public void RptCodingTurnover_TarikhAsync(int CodingDetailId, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, string IP, string AzTarikh, string TaTarikh, object userState) {
            if ((this.RptCodingTurnover_TarikhOperationCompleted == null)) {
                this.RptCodingTurnover_TarikhOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptCodingTurnover_TarikhOperationCompleted);
            }
            this.InvokeAsync("RptCodingTurnover_Tarikh", new object[] {
                        CodingDetailId,
                        CaseTypeId,
                        SourceId,
                        Year,
                        OrganId,
                        moduleSaveId,
                        IP,
                        AzTarikh,
                        TaTarikh}, this.RptCodingTurnover_TarikhOperationCompleted, userState);
        }
        
        private void OnRptCodingTurnover_TarikhOperationCompleted(object arg) {
            if ((this.RptCodingTurnover_TarikhCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptCodingTurnover_TarikhCompleted(this, new RptCodingTurnover_TarikhCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/RptCodingStatus_Parvande", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_RptCodingStatus[] RptCodingStatus_Parvande(int CodingDetailId, byte flag, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, byte Type, string IP, out ClsError Error) {
            object[] results = this.Invoke("RptCodingStatus_Parvande", new object[] {
                        CodingDetailId,
                        flag,
                        CaseTypeId,
                        SourceId,
                        Year,
                        OrganId,
                        moduleSaveId,
                        Type,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_RptCodingStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void RptCodingStatus_ParvandeAsync(int CodingDetailId, byte flag, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, byte Type, string IP) {
            this.RptCodingStatus_ParvandeAsync(CodingDetailId, flag, CaseTypeId, SourceId, Year, OrganId, moduleSaveId, Type, IP, null);
        }
        
        /// <remarks/>
        public void RptCodingStatus_ParvandeAsync(int CodingDetailId, byte flag, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, byte Type, string IP, object userState) {
            if ((this.RptCodingStatus_ParvandeOperationCompleted == null)) {
                this.RptCodingStatus_ParvandeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptCodingStatus_ParvandeOperationCompleted);
            }
            this.InvokeAsync("RptCodingStatus_Parvande", new object[] {
                        CodingDetailId,
                        flag,
                        CaseTypeId,
                        SourceId,
                        Year,
                        OrganId,
                        moduleSaveId,
                        Type,
                        IP}, this.RptCodingStatus_ParvandeOperationCompleted, userState);
        }
        
        private void OnRptCodingStatus_ParvandeOperationCompleted(object arg) {
            if ((this.RptCodingStatus_ParvandeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptCodingStatus_ParvandeCompleted(this, new RptCodingStatus_ParvandeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/RptCodingTurnover", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_RptCodingTurnover[] RptCodingTurnover(int CodingDetailId, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, string IP, out ClsError Error) {
            object[] results = this.Invoke("RptCodingTurnover", new object[] {
                        CodingDetailId,
                        CaseTypeId,
                        SourceId,
                        Year,
                        OrganId,
                        moduleSaveId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_RptCodingTurnover[])(results[0]));
        }
        
        /// <remarks/>
        public void RptCodingTurnoverAsync(int CodingDetailId, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, string IP) {
            this.RptCodingTurnoverAsync(CodingDetailId, CaseTypeId, SourceId, Year, OrganId, moduleSaveId, IP, null);
        }
        
        /// <remarks/>
        public void RptCodingTurnoverAsync(int CodingDetailId, int CaseTypeId, int SourceId, short Year, int OrganId, int moduleSaveId, string IP, object userState) {
            if ((this.RptCodingTurnoverOperationCompleted == null)) {
                this.RptCodingTurnoverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptCodingTurnoverOperationCompleted);
            }
            this.InvokeAsync("RptCodingTurnover", new object[] {
                        CodingDetailId,
                        CaseTypeId,
                        SourceId,
                        Year,
                        OrganId,
                        moduleSaveId,
                        IP}, this.RptCodingTurnoverOperationCompleted, userState);
        }
        
        private void OnRptCodingTurnoverOperationCompleted(object arg) {
            if ((this.RptCodingTurnoverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptCodingTurnoverCompleted(this, new RptCodingTurnoverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetTypeHesabDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TypeHesab GetTypeHesabDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTypeHesabDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TypeHesab)(results[0]));
        }
        
        /// <remarks/>
        public void GetTypeHesabDetailAsync(int Id, string IP) {
            this.GetTypeHesabDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetTypeHesabDetailAsync(int Id, string IP, object userState) {
            if ((this.GetTypeHesabDetailOperationCompleted == null)) {
                this.GetTypeHesabDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTypeHesabDetailOperationCompleted);
            }
            this.InvokeAsync("GetTypeHesabDetail", new object[] {
                        Id,
                        IP}, this.GetTypeHesabDetailOperationCompleted, userState);
        }
        
        private void OnGetTypeHesabDetailOperationCompleted(object arg) {
            if ((this.GetTypeHesabDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTypeHesabDetailCompleted(this, new GetTypeHesabDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetTypeHesabWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TypeHesab[] GetTypeHesabWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTypeHesabWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TypeHesab[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTypeHesabWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetTypeHesabWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetTypeHesabWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetTypeHesabWithFilterOperationCompleted == null)) {
                this.GetTypeHesabWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTypeHesabWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetTypeHesabWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetTypeHesabWithFilterOperationCompleted, userState);
        }
        
        private void OnGetTypeHesabWithFilterOperationCompleted(object arg) {
            if ((this.GetTypeHesabWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTypeHesabWithFilterCompleted(this, new GetTypeHesabWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentType[] GetDocumentTypeWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypeWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetDocumentTypeWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypeWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetDocumentTypeWithFilterOperationCompleted == null)) {
                this.GetDocumentTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetDocumentTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetDocumentTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypeWithFilterCompleted(this, new GetDocumentTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentRecorde_FileDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecorde_File GetDocumentRecorde_FileDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentRecorde_FileDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecorde_File)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentRecorde_FileDetailAsync(int Id, string IP) {
            this.GetDocumentRecorde_FileDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentRecorde_FileDetailAsync(int Id, string IP, object userState) {
            if ((this.GetDocumentRecorde_FileDetailOperationCompleted == null)) {
                this.GetDocumentRecorde_FileDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentRecorde_FileDetailOperationCompleted);
            }
            this.InvokeAsync("GetDocumentRecorde_FileDetail", new object[] {
                        Id,
                        IP}, this.GetDocumentRecorde_FileDetailOperationCompleted, userState);
        }
        
        private void OnGetDocumentRecorde_FileDetailOperationCompleted(object arg) {
            if ((this.GetDocumentRecorde_FileDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentRecorde_FileDetailCompleted(this, new GetDocumentRecorde_FileDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentRecorde_FileWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecorde_File[] GetDocumentRecorde_FileWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentRecorde_FileWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecorde_File[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentRecorde_FileWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetDocumentRecorde_FileWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentRecorde_FileWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetDocumentRecorde_FileWithFilterOperationCompleted == null)) {
                this.GetDocumentRecorde_FileWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentRecorde_FileWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetDocumentRecorde_FileWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetDocumentRecorde_FileWithFilterOperationCompleted, userState);
        }
        
        private void OnGetDocumentRecorde_FileWithFilterOperationCompleted(object arg) {
            if ((this.GetDocumentRecorde_FileWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentRecorde_FileWithFilterCompleted(this, new GetDocumentRecorde_FileWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertDocumentRecorde_File", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDocumentRecorde_File(int DocumentHeaderId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Image, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertDocumentRecorde_File", new object[] {
                        DocumentHeaderId,
                        Image,
                        Pasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDocumentRecorde_FileAsync(int DocumentHeaderId, byte[] Image, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertDocumentRecorde_FileAsync(DocumentHeaderId, Image, Pasvand, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertDocumentRecorde_FileAsync(int DocumentHeaderId, byte[] Image, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertDocumentRecorde_FileOperationCompleted == null)) {
                this.InsertDocumentRecorde_FileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDocumentRecorde_FileOperationCompleted);
            }
            this.InvokeAsync("InsertDocumentRecorde_File", new object[] {
                        DocumentHeaderId,
                        Image,
                        Pasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertDocumentRecorde_FileOperationCompleted, userState);
        }
        
        private void OnInsertDocumentRecorde_FileOperationCompleted(object arg) {
            if ((this.InsertDocumentRecorde_FileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDocumentRecorde_FileCompleted(this, new InsertDocumentRecorde_FileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteDocumentRecorde_File", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDocumentRecorde_File(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteDocumentRecorde_File", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentRecorde_FileAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteDocumentRecorde_FileAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentRecorde_FileAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteDocumentRecorde_FileOperationCompleted == null)) {
                this.DeleteDocumentRecorde_FileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentRecorde_FileOperationCompleted);
            }
            this.InvokeAsync("DeleteDocumentRecorde_File", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteDocumentRecorde_FileOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentRecorde_FileOperationCompleted(object arg) {
            if ((this.DeleteDocumentRecorde_FileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentRecorde_FileCompleted(this, new DeleteDocumentRecorde_FileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentBookMarkDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentBookMark GetDocumentBookMarkDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentBookMarkDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentBookMark)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentBookMarkDetailAsync(int Id, int OrganId, string IP) {
            this.GetDocumentBookMarkDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentBookMarkDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetDocumentBookMarkDetailOperationCompleted == null)) {
                this.GetDocumentBookMarkDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentBookMarkDetailOperationCompleted);
            }
            this.InvokeAsync("GetDocumentBookMarkDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetDocumentBookMarkDetailOperationCompleted, userState);
        }
        
        private void OnGetDocumentBookMarkDetailOperationCompleted(object arg) {
            if ((this.GetDocumentBookMarkDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentBookMarkDetailCompleted(this, new GetDocumentBookMarkDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentBookMarkWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentBookMark[] GetDocumentBookMarkWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentBookMarkWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentBookMark[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentBookMarkWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetDocumentBookMarkWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentBookMarkWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetDocumentBookMarkWithFilterOperationCompleted == null)) {
                this.GetDocumentBookMarkWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentBookMarkWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetDocumentBookMarkWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetDocumentBookMarkWithFilterOperationCompleted, userState);
        }
        
        private void OnGetDocumentBookMarkWithFilterOperationCompleted(object arg) {
            if ((this.GetDocumentBookMarkWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentBookMarkWithFilterCompleted(this, new GetDocumentBookMarkWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertDocumentBookMark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDocumentBookMark(int fldDocumentRecordeId, int fldArchiveTreeId, int fldOrganId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertDocumentBookMark", new object[] {
                        fldDocumentRecordeId,
                        fldArchiveTreeId,
                        fldOrganId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDocumentBookMarkAsync(int fldDocumentRecordeId, int fldArchiveTreeId, int fldOrganId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertDocumentBookMarkAsync(fldDocumentRecordeId, fldArchiveTreeId, fldOrganId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertDocumentBookMarkAsync(int fldDocumentRecordeId, int fldArchiveTreeId, int fldOrganId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertDocumentBookMarkOperationCompleted == null)) {
                this.InsertDocumentBookMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDocumentBookMarkOperationCompleted);
            }
            this.InvokeAsync("InsertDocumentBookMark", new object[] {
                        fldDocumentRecordeId,
                        fldArchiveTreeId,
                        fldOrganId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertDocumentBookMarkOperationCompleted, userState);
        }
        
        private void OnInsertDocumentBookMarkOperationCompleted(object arg) {
            if ((this.InsertDocumentBookMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDocumentBookMarkCompleted(this, new InsertDocumentBookMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateDocumentBookMark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDocumentBookMark(int Id, int fldDocumentRecordeId, int fldArchiveTreeId, int fldOrganId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateDocumentBookMark", new object[] {
                        Id,
                        fldDocumentRecordeId,
                        fldArchiveTreeId,
                        fldOrganId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDocumentBookMarkAsync(int Id, int fldDocumentRecordeId, int fldArchiveTreeId, int fldOrganId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateDocumentBookMarkAsync(Id, fldDocumentRecordeId, fldArchiveTreeId, fldOrganId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentBookMarkAsync(int Id, int fldDocumentRecordeId, int fldArchiveTreeId, int fldOrganId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateDocumentBookMarkOperationCompleted == null)) {
                this.UpdateDocumentBookMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentBookMarkOperationCompleted);
            }
            this.InvokeAsync("UpdateDocumentBookMark", new object[] {
                        Id,
                        fldDocumentRecordeId,
                        fldArchiveTreeId,
                        fldOrganId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateDocumentBookMarkOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentBookMarkOperationCompleted(object arg) {
            if ((this.UpdateDocumentBookMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentBookMarkCompleted(this, new UpdateDocumentBookMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteDocumentBookMark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDocumentBookMark(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteDocumentBookMark", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentBookMarkAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteDocumentBookMarkAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentBookMarkAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteDocumentBookMarkOperationCompleted == null)) {
                this.DeleteDocumentBookMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentBookMarkOperationCompleted);
            }
            this.InvokeAsync("DeleteDocumentBookMark", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteDocumentBookMarkOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentBookMarkOperationCompleted(object arg) {
            if ((this.DeleteDocumentBookMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentBookMarkCompleted(this, new DeleteDocumentBookMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertDocumentRecorde_File_BookMark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDocumentRecorde_File_BookMark(int fldDocumentRecordeId, string Desc, System.Data.DataTable tblRecorde_File, string fldDocumentRecordeId_Del, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertDocumentRecorde_File_BookMark", new object[] {
                        fldDocumentRecordeId,
                        Desc,
                        tblRecorde_File,
                        fldDocumentRecordeId_Del,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDocumentRecorde_File_BookMarkAsync(int fldDocumentRecordeId, string Desc, System.Data.DataTable tblRecorde_File, string fldDocumentRecordeId_Del, string Username, string Password, int OrganId, string IP) {
            this.InsertDocumentRecorde_File_BookMarkAsync(fldDocumentRecordeId, Desc, tblRecorde_File, fldDocumentRecordeId_Del, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertDocumentRecorde_File_BookMarkAsync(int fldDocumentRecordeId, string Desc, System.Data.DataTable tblRecorde_File, string fldDocumentRecordeId_Del, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertDocumentRecorde_File_BookMarkOperationCompleted == null)) {
                this.InsertDocumentRecorde_File_BookMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDocumentRecorde_File_BookMarkOperationCompleted);
            }
            this.InvokeAsync("InsertDocumentRecorde_File_BookMark", new object[] {
                        fldDocumentRecordeId,
                        Desc,
                        tblRecorde_File,
                        fldDocumentRecordeId_Del,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertDocumentRecorde_File_BookMarkOperationCompleted, userState);
        }
        
        private void OnInsertDocumentRecorde_File_BookMarkOperationCompleted(object arg) {
            if ((this.InsertDocumentRecorde_File_BookMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDocumentRecorde_File_BookMarkCompleted(this, new InsertDocumentRecorde_File_BookMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectDocumentRecorde_File_BookMark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecorde_File_BookMark[] SelectDocumentRecorde_File_BookMark(string FieldName, int DocumentHeaderId, int ArchiveTreeId, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectDocumentRecorde_File_BookMark", new object[] {
                        FieldName,
                        DocumentHeaderId,
                        ArchiveTreeId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecorde_File_BookMark[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectDocumentRecorde_File_BookMarkAsync(string FieldName, int DocumentHeaderId, int ArchiveTreeId, string IP) {
            this.SelectDocumentRecorde_File_BookMarkAsync(FieldName, DocumentHeaderId, ArchiveTreeId, IP, null);
        }
        
        /// <remarks/>
        public void SelectDocumentRecorde_File_BookMarkAsync(string FieldName, int DocumentHeaderId, int ArchiveTreeId, string IP, object userState) {
            if ((this.SelectDocumentRecorde_File_BookMarkOperationCompleted == null)) {
                this.SelectDocumentRecorde_File_BookMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectDocumentRecorde_File_BookMarkOperationCompleted);
            }
            this.InvokeAsync("SelectDocumentRecorde_File_BookMark", new object[] {
                        FieldName,
                        DocumentHeaderId,
                        ArchiveTreeId,
                        IP}, this.SelectDocumentRecorde_File_BookMarkOperationCompleted, userState);
        }
        
        private void OnSelectDocumentRecorde_File_BookMarkOperationCompleted(object arg) {
            if ((this.SelectDocumentRecorde_File_BookMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectDocumentRecorde_File_BookMarkCompleted(this, new SelectDocumentRecorde_File_BookMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectBookmarkPath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ArchiveTree SelectBookmarkPath(int DocumentHeaderId, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectBookmarkPath", new object[] {
                        DocumentHeaderId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ArchiveTree)(results[0]));
        }
        
        /// <remarks/>
        public void SelectBookmarkPathAsync(int DocumentHeaderId, string IP) {
            this.SelectBookmarkPathAsync(DocumentHeaderId, IP, null);
        }
        
        /// <remarks/>
        public void SelectBookmarkPathAsync(int DocumentHeaderId, string IP, object userState) {
            if ((this.SelectBookmarkPathOperationCompleted == null)) {
                this.SelectBookmarkPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectBookmarkPathOperationCompleted);
            }
            this.InvokeAsync("SelectBookmarkPath", new object[] {
                        DocumentHeaderId,
                        IP}, this.SelectBookmarkPathOperationCompleted, userState);
        }
        
        private void OnSelectBookmarkPathOperationCompleted(object arg) {
            if ((this.SelectBookmarkPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectBookmarkPathCompleted(this, new SelectBookmarkPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/CheckRemain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CheckRemain[] CheckRemain(int Coding_DetailsId, int id, long Bedehkar, long Bestankar, int OrganId, short Year, int MaduleSaveId, string IP, out ClsError Error) {
            object[] results = this.Invoke("CheckRemain", new object[] {
                        Coding_DetailsId,
                        id,
                        Bedehkar,
                        Bestankar,
                        OrganId,
                        Year,
                        MaduleSaveId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CheckRemain[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckRemainAsync(int Coding_DetailsId, int id, long Bedehkar, long Bestankar, int OrganId, short Year, int MaduleSaveId, string IP) {
            this.CheckRemainAsync(Coding_DetailsId, id, Bedehkar, Bestankar, OrganId, Year, MaduleSaveId, IP, null);
        }
        
        /// <remarks/>
        public void CheckRemainAsync(int Coding_DetailsId, int id, long Bedehkar, long Bestankar, int OrganId, short Year, int MaduleSaveId, string IP, object userState) {
            if ((this.CheckRemainOperationCompleted == null)) {
                this.CheckRemainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRemainOperationCompleted);
            }
            this.InvokeAsync("CheckRemain", new object[] {
                        Coding_DetailsId,
                        id,
                        Bedehkar,
                        Bestankar,
                        OrganId,
                        Year,
                        MaduleSaveId,
                        IP}, this.CheckRemainOperationCompleted, userState);
        }
        
        private void OnCheckRemainOperationCompleted(object arg) {
            if ((this.CheckRemainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRemainCompleted(this, new CheckRemainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/CopyDocumentWithHeaderId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CopyDocumentWithHeaderId(int DocHeaderId, int OrganId, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("CopyDocumentWithHeaderId", new object[] {
                        DocHeaderId,
                        OrganId,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CopyDocumentWithHeaderIdAsync(int DocHeaderId, int OrganId, string Username, string Password, string IP) {
            this.CopyDocumentWithHeaderIdAsync(DocHeaderId, OrganId, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void CopyDocumentWithHeaderIdAsync(int DocHeaderId, int OrganId, string Username, string Password, string IP, object userState) {
            if ((this.CopyDocumentWithHeaderIdOperationCompleted == null)) {
                this.CopyDocumentWithHeaderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyDocumentWithHeaderIdOperationCompleted);
            }
            this.InvokeAsync("CopyDocumentWithHeaderId", new object[] {
                        DocHeaderId,
                        OrganId,
                        Username,
                        Password,
                        IP}, this.CopyDocumentWithHeaderIdOperationCompleted, userState);
        }
        
        private void OnCopyDocumentWithHeaderIdOperationCompleted(object arg) {
            if ((this.CopyDocumentWithHeaderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyDocumentWithHeaderIdCompleted(this, new CopyDocumentWithHeaderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCodingDetail_CaseTypeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CodingDetail_CaseType GetCodingDetail_CaseTypeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCodingDetail_CaseTypeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CodingDetail_CaseType)(results[0]));
        }
        
        /// <remarks/>
        public void GetCodingDetail_CaseTypeDetailAsync(int Id, string IP) {
            this.GetCodingDetail_CaseTypeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetCodingDetail_CaseTypeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetCodingDetail_CaseTypeDetailOperationCompleted == null)) {
                this.GetCodingDetail_CaseTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCodingDetail_CaseTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetCodingDetail_CaseTypeDetail", new object[] {
                        Id,
                        IP}, this.GetCodingDetail_CaseTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetCodingDetail_CaseTypeDetailOperationCompleted(object arg) {
            if ((this.GetCodingDetail_CaseTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCodingDetail_CaseTypeDetailCompleted(this, new GetCodingDetail_CaseTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCodingDetail_CaseTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CodingDetail_CaseType[] GetCodingDetail_CaseTypeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCodingDetail_CaseTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CodingDetail_CaseType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCodingDetail_CaseTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetCodingDetail_CaseTypeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCodingDetail_CaseTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetCodingDetail_CaseTypeWithFilterOperationCompleted == null)) {
                this.GetCodingDetail_CaseTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCodingDetail_CaseTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCodingDetail_CaseTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetCodingDetail_CaseTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCodingDetail_CaseTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetCodingDetail_CaseTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCodingDetail_CaseTypeWithFilterCompleted(this, new GetCodingDetail_CaseTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertCodingDetail_CaseType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCodingDetail_CaseType(int fldCodingDetailId, int fldCaseTypeId, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCodingDetail_CaseType", new object[] {
                        fldCodingDetailId,
                        fldCaseTypeId,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCodingDetail_CaseTypeAsync(int fldCodingDetailId, int fldCaseTypeId, string Username, string Password, int OrganId, string IP) {
            this.InsertCodingDetail_CaseTypeAsync(fldCodingDetailId, fldCaseTypeId, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCodingDetail_CaseTypeAsync(int fldCodingDetailId, int fldCaseTypeId, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCodingDetail_CaseTypeOperationCompleted == null)) {
                this.InsertCodingDetail_CaseTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCodingDetail_CaseTypeOperationCompleted);
            }
            this.InvokeAsync("InsertCodingDetail_CaseType", new object[] {
                        fldCodingDetailId,
                        fldCaseTypeId,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCodingDetail_CaseTypeOperationCompleted, userState);
        }
        
        private void OnInsertCodingDetail_CaseTypeOperationCompleted(object arg) {
            if ((this.InsertCodingDetail_CaseTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCodingDetail_CaseTypeCompleted(this, new InsertCodingDetail_CaseTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateCodingDetail_CaseType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCodingDetail_CaseType(int Id, int fldCodingDetailId, int fldCaseTypeId, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCodingDetail_CaseType", new object[] {
                        Id,
                        fldCodingDetailId,
                        fldCaseTypeId,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCodingDetail_CaseTypeAsync(int Id, int fldCodingDetailId, int fldCaseTypeId, string Username, string Password, int OrganId, string IP) {
            this.UpdateCodingDetail_CaseTypeAsync(Id, fldCodingDetailId, fldCaseTypeId, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCodingDetail_CaseTypeAsync(int Id, int fldCodingDetailId, int fldCaseTypeId, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCodingDetail_CaseTypeOperationCompleted == null)) {
                this.UpdateCodingDetail_CaseTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCodingDetail_CaseTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateCodingDetail_CaseType", new object[] {
                        Id,
                        fldCodingDetailId,
                        fldCaseTypeId,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCodingDetail_CaseTypeOperationCompleted, userState);
        }
        
        private void OnUpdateCodingDetail_CaseTypeOperationCompleted(object arg) {
            if ((this.UpdateCodingDetail_CaseTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCodingDetail_CaseTypeCompleted(this, new UpdateCodingDetail_CaseTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteCodingDetail_CaseType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCodingDetail_CaseType(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCodingDetail_CaseType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCodingDetail_CaseTypeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCodingDetail_CaseTypeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCodingDetail_CaseTypeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCodingDetail_CaseTypeOperationCompleted == null)) {
                this.DeleteCodingDetail_CaseTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCodingDetail_CaseTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteCodingDetail_CaseType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCodingDetail_CaseTypeOperationCompleted, userState);
        }
        
        private void OnDeleteCodingDetail_CaseTypeOperationCompleted(object arg) {
            if ((this.DeleteCodingDetail_CaseTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCodingDetail_CaseTypeCompleted(this, new DeleteCodingDetail_CaseTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetBankTemplate_HeaderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BankTemplate_Header GetBankTemplate_HeaderDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBankTemplate_HeaderDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BankTemplate_Header)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankTemplate_HeaderDetailAsync(int Id, string IP) {
            this.GetBankTemplate_HeaderDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetBankTemplate_HeaderDetailAsync(int Id, string IP, object userState) {
            if ((this.GetBankTemplate_HeaderDetailOperationCompleted == null)) {
                this.GetBankTemplate_HeaderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankTemplate_HeaderDetailOperationCompleted);
            }
            this.InvokeAsync("GetBankTemplate_HeaderDetail", new object[] {
                        Id,
                        IP}, this.GetBankTemplate_HeaderDetailOperationCompleted, userState);
        }
        
        private void OnGetBankTemplate_HeaderDetailOperationCompleted(object arg) {
            if ((this.GetBankTemplate_HeaderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankTemplate_HeaderDetailCompleted(this, new GetBankTemplate_HeaderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetBankTemplate_HeaderWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BankTemplate_Header[] GetBankTemplate_HeaderWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBankTemplate_HeaderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BankTemplate_Header[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBankTemplate_HeaderWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetBankTemplate_HeaderWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetBankTemplate_HeaderWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetBankTemplate_HeaderWithFilterOperationCompleted == null)) {
                this.GetBankTemplate_HeaderWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankTemplate_HeaderWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetBankTemplate_HeaderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetBankTemplate_HeaderWithFilterOperationCompleted, userState);
        }
        
        private void OnGetBankTemplate_HeaderWithFilterOperationCompleted(object arg) {
            if ((this.GetBankTemplate_HeaderWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankTemplate_HeaderWithFilterCompleted(this, new GetBankTemplate_HeaderWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertBankTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertBankTemplate(string NamePattern, short StartRow, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldImage, string fldPasvand, System.Data.DataTable Details, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertBankTemplate", new object[] {
                        NamePattern,
                        StartRow,
                        fldImage,
                        fldPasvand,
                        Details,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBankTemplateAsync(string NamePattern, short StartRow, byte[] fldImage, string fldPasvand, System.Data.DataTable Details, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertBankTemplateAsync(NamePattern, StartRow, fldImage, fldPasvand, Details, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertBankTemplateAsync(string NamePattern, short StartRow, byte[] fldImage, string fldPasvand, System.Data.DataTable Details, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertBankTemplateOperationCompleted == null)) {
                this.InsertBankTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBankTemplateOperationCompleted);
            }
            this.InvokeAsync("InsertBankTemplate", new object[] {
                        NamePattern,
                        StartRow,
                        fldImage,
                        fldPasvand,
                        Details,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertBankTemplateOperationCompleted, userState);
        }
        
        private void OnInsertBankTemplateOperationCompleted(object arg) {
            if ((this.InsertBankTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBankTemplateCompleted(this, new InsertBankTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateBankTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateBankTemplate(int Id, string NamePattern, short StartRow, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldFileId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldImage, string fldPasvand, System.Data.DataTable Details, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateBankTemplate", new object[] {
                        Id,
                        NamePattern,
                        StartRow,
                        fldFileId,
                        fldImage,
                        fldPasvand,
                        Details,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBankTemplateAsync(int Id, string NamePattern, short StartRow, System.Nullable<int> fldFileId, byte[] fldImage, string fldPasvand, System.Data.DataTable Details, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateBankTemplateAsync(Id, NamePattern, StartRow, fldFileId, fldImage, fldPasvand, Details, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateBankTemplateAsync(int Id, string NamePattern, short StartRow, System.Nullable<int> fldFileId, byte[] fldImage, string fldPasvand, System.Data.DataTable Details, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateBankTemplateOperationCompleted == null)) {
                this.UpdateBankTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBankTemplateOperationCompleted);
            }
            this.InvokeAsync("UpdateBankTemplate", new object[] {
                        Id,
                        NamePattern,
                        StartRow,
                        fldFileId,
                        fldImage,
                        fldPasvand,
                        Details,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateBankTemplateOperationCompleted, userState);
        }
        
        private void OnUpdateBankTemplateOperationCompleted(object arg) {
            if ((this.UpdateBankTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBankTemplateCompleted(this, new UpdateBankTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteBankTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteBankTemplate(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteBankTemplate", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBankTemplateAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteBankTemplateAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteBankTemplateAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteBankTemplateOperationCompleted == null)) {
                this.DeleteBankTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBankTemplateOperationCompleted);
            }
            this.InvokeAsync("DeleteBankTemplate", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteBankTemplateOperationCompleted, userState);
        }
        
        private void OnDeleteBankTemplateOperationCompleted(object arg) {
            if ((this.DeleteBankTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBankTemplateCompleted(this, new DeleteBankTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetBankBill_HeaderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BankBillHeader GetBankBill_HeaderDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBankBill_HeaderDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BankBillHeader)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankBill_HeaderDetailAsync(int Id, string IP) {
            this.GetBankBill_HeaderDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetBankBill_HeaderDetailAsync(int Id, string IP, object userState) {
            if ((this.GetBankBill_HeaderDetailOperationCompleted == null)) {
                this.GetBankBill_HeaderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankBill_HeaderDetailOperationCompleted);
            }
            this.InvokeAsync("GetBankBill_HeaderDetail", new object[] {
                        Id,
                        IP}, this.GetBankBill_HeaderDetailOperationCompleted, userState);
        }
        
        private void OnGetBankBill_HeaderDetailOperationCompleted(object arg) {
            if ((this.GetBankBill_HeaderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankBill_HeaderDetailCompleted(this, new GetBankBill_HeaderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetBankBill_HeaderWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BankBillHeader[] GetBankBill_HeaderWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBankBill_HeaderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BankBillHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBankBill_HeaderWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetBankBill_HeaderWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetBankBill_HeaderWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetBankBill_HeaderWithFilterOperationCompleted == null)) {
                this.GetBankBill_HeaderWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankBill_HeaderWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetBankBill_HeaderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetBankBill_HeaderWithFilterOperationCompleted, userState);
        }
        
        private void OnGetBankBill_HeaderWithFilterOperationCompleted(object arg) {
            if ((this.GetBankBill_HeaderWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankBill_HeaderWithFilterCompleted(this, new GetBankBill_HeaderWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/CheckCountData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> CheckCountData(int HeaderId, string IP, out ClsError Error) {
            object[] results = this.Invoke("CheckCountData", new object[] {
                        HeaderId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((System.Nullable<bool>)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCountDataAsync(int HeaderId, string IP) {
            this.CheckCountDataAsync(HeaderId, IP, null);
        }
        
        /// <remarks/>
        public void CheckCountDataAsync(int HeaderId, string IP, object userState) {
            if ((this.CheckCountDataOperationCompleted == null)) {
                this.CheckCountDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCountDataOperationCompleted);
            }
            this.InvokeAsync("CheckCountData", new object[] {
                        HeaderId,
                        IP}, this.CheckCountDataOperationCompleted, userState);
        }
        
        private void OnCheckCountDataOperationCompleted(object arg) {
            if ((this.CheckCountDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCountDataCompleted(this, new CheckCountDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectMoghayeratBanki", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MoghayeratBanki[] SelectMoghayeratBanki(string FieldName, int FiscalYearId, string AzTarikh, string TaTarikh, int ShomareHesabId, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectMoghayeratBanki", new object[] {
                        FieldName,
                        FiscalYearId,
                        AzTarikh,
                        TaTarikh,
                        ShomareHesabId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MoghayeratBanki[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectMoghayeratBankiAsync(string FieldName, int FiscalYearId, string AzTarikh, string TaTarikh, int ShomareHesabId, string IP) {
            this.SelectMoghayeratBankiAsync(FieldName, FiscalYearId, AzTarikh, TaTarikh, ShomareHesabId, IP, null);
        }
        
        /// <remarks/>
        public void SelectMoghayeratBankiAsync(string FieldName, int FiscalYearId, string AzTarikh, string TaTarikh, int ShomareHesabId, string IP, object userState) {
            if ((this.SelectMoghayeratBankiOperationCompleted == null)) {
                this.SelectMoghayeratBankiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMoghayeratBankiOperationCompleted);
            }
            this.InvokeAsync("SelectMoghayeratBanki", new object[] {
                        FieldName,
                        FiscalYearId,
                        AzTarikh,
                        TaTarikh,
                        ShomareHesabId,
                        IP}, this.SelectMoghayeratBankiOperationCompleted, userState);
        }
        
        private void OnSelectMoghayeratBankiOperationCompleted(object arg) {
            if ((this.SelectMoghayeratBankiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMoghayeratBankiCompleted(this, new SelectMoghayeratBankiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertBankBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertBankBill(string fldName, int fldPatternId, int fldShomareHesabId, int fldFiscalYearId, string fldJsonFile, string IP, string Desc, string Username, string Password, int OrganId, out ClsError Error) {
            object[] results = this.Invoke("InsertBankBill", new object[] {
                        fldName,
                        fldPatternId,
                        fldShomareHesabId,
                        fldFiscalYearId,
                        fldJsonFile,
                        IP,
                        Desc,
                        Username,
                        Password,
                        OrganId});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBankBillAsync(string fldName, int fldPatternId, int fldShomareHesabId, int fldFiscalYearId, string fldJsonFile, string IP, string Desc, string Username, string Password, int OrganId) {
            this.InsertBankBillAsync(fldName, fldPatternId, fldShomareHesabId, fldFiscalYearId, fldJsonFile, IP, Desc, Username, Password, OrganId, null);
        }
        
        /// <remarks/>
        public void InsertBankBillAsync(string fldName, int fldPatternId, int fldShomareHesabId, int fldFiscalYearId, string fldJsonFile, string IP, string Desc, string Username, string Password, int OrganId, object userState) {
            if ((this.InsertBankBillOperationCompleted == null)) {
                this.InsertBankBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBankBillOperationCompleted);
            }
            this.InvokeAsync("InsertBankBill", new object[] {
                        fldName,
                        fldPatternId,
                        fldShomareHesabId,
                        fldFiscalYearId,
                        fldJsonFile,
                        IP,
                        Desc,
                        Username,
                        Password,
                        OrganId}, this.InsertBankBillOperationCompleted, userState);
        }
        
        private void OnInsertBankBillOperationCompleted(object arg) {
            if ((this.InsertBankBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBankBillCompleted(this, new InsertBankBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateBankBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateBankBill(int Id, string fldName, int fldPatternId, int fldShomareHesabId, int fldFiscalYearId, string fldJsonFile, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateBankBill", new object[] {
                        Id,
                        fldName,
                        fldPatternId,
                        fldShomareHesabId,
                        fldFiscalYearId,
                        fldJsonFile,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBankBillAsync(int Id, string fldName, int fldPatternId, int fldShomareHesabId, int fldFiscalYearId, string fldJsonFile, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateBankBillAsync(Id, fldName, fldPatternId, fldShomareHesabId, fldFiscalYearId, fldJsonFile, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateBankBillAsync(int Id, string fldName, int fldPatternId, int fldShomareHesabId, int fldFiscalYearId, string fldJsonFile, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateBankBillOperationCompleted == null)) {
                this.UpdateBankBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBankBillOperationCompleted);
            }
            this.InvokeAsync("UpdateBankBill", new object[] {
                        Id,
                        fldName,
                        fldPatternId,
                        fldShomareHesabId,
                        fldFiscalYearId,
                        fldJsonFile,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateBankBillOperationCompleted, userState);
        }
        
        private void OnUpdateBankBillOperationCompleted(object arg) {
            if ((this.UpdateBankBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBankBillCompleted(this, new UpdateBankBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteBankBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteBankBill(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteBankBill", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBankBillAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteBankBillAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteBankBillAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteBankBillOperationCompleted == null)) {
                this.DeleteBankBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBankBillOperationCompleted);
            }
            this.InvokeAsync("DeleteBankBill", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteBankBillOperationCompleted, userState);
        }
        
        private void OnDeleteBankBillOperationCompleted(object arg) {
            if ((this.DeleteBankBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBankBillCompleted(this, new DeleteBankBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetBankBill_DetailsDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BankBillDetails GetBankBill_DetailsDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBankBill_DetailsDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BankBillDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankBill_DetailsDetailAsync(int Id, string IP) {
            this.GetBankBill_DetailsDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetBankBill_DetailsDetailAsync(int Id, string IP, object userState) {
            if ((this.GetBankBill_DetailsDetailOperationCompleted == null)) {
                this.GetBankBill_DetailsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankBill_DetailsDetailOperationCompleted);
            }
            this.InvokeAsync("GetBankBill_DetailsDetail", new object[] {
                        Id,
                        IP}, this.GetBankBill_DetailsDetailOperationCompleted, userState);
        }
        
        private void OnGetBankBill_DetailsDetailOperationCompleted(object arg) {
            if ((this.GetBankBill_DetailsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankBill_DetailsDetailCompleted(this, new GetBankBill_DetailsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetBankBill_DetailsWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BankBillDetails[] GetBankBill_DetailsWithFilter(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBankBill_DetailsWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BankBillDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBankBill_DetailsWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP) {
            this.GetBankBill_DetailsWithFilterAsync(FieldName, FilterValue, FilterValue2, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetBankBill_DetailsWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, object userState) {
            if ((this.GetBankBill_DetailsWithFilterOperationCompleted == null)) {
                this.GetBankBill_DetailsWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankBill_DetailsWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetBankBill_DetailsWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP}, this.GetBankBill_DetailsWithFilterOperationCompleted, userState);
        }
        
        private void OnGetBankBill_DetailsWithFilterOperationCompleted(object arg) {
            if ((this.GetBankBill_DetailsWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankBill_DetailsWithFilterCompleted(this, new GetBankBill_DetailsWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectBankBill_Tarikh", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BankBill_Tarikh SelectBankBill_Tarikh(int FiscalYearId, int shomareHesabId, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectBankBill_Tarikh", new object[] {
                        FiscalYearId,
                        shomareHesabId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BankBill_Tarikh)(results[0]));
        }
        
        /// <remarks/>
        public void SelectBankBill_TarikhAsync(int FiscalYearId, int shomareHesabId, string IP) {
            this.SelectBankBill_TarikhAsync(FiscalYearId, shomareHesabId, IP, null);
        }
        
        /// <remarks/>
        public void SelectBankBill_TarikhAsync(int FiscalYearId, int shomareHesabId, string IP, object userState) {
            if ((this.SelectBankBill_TarikhOperationCompleted == null)) {
                this.SelectBankBill_TarikhOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectBankBill_TarikhOperationCompleted);
            }
            this.InvokeAsync("SelectBankBill_Tarikh", new object[] {
                        FiscalYearId,
                        shomareHesabId,
                        IP}, this.SelectBankBill_TarikhOperationCompleted, userState);
        }
        
        private void OnSelectBankBill_TarikhOperationCompleted(object arg) {
            if ((this.SelectBankBill_TarikhCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectBankBill_TarikhCompleted(this, new SelectBankBill_TarikhCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/BankBillMap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BankBillMap(int BankBillId, int Document_HeaderId, byte Type, string SourceIds, string IP, string Desc, string Username, string Password, out ClsError Error) {
            object[] results = this.Invoke("BankBillMap", new object[] {
                        BankBillId,
                        Document_HeaderId,
                        Type,
                        SourceIds,
                        IP,
                        Desc,
                        Username,
                        Password});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BankBillMapAsync(int BankBillId, int Document_HeaderId, byte Type, string SourceIds, string IP, string Desc, string Username, string Password) {
            this.BankBillMapAsync(BankBillId, Document_HeaderId, Type, SourceIds, IP, Desc, Username, Password, null);
        }
        
        /// <remarks/>
        public void BankBillMapAsync(int BankBillId, int Document_HeaderId, byte Type, string SourceIds, string IP, string Desc, string Username, string Password, object userState) {
            if ((this.BankBillMapOperationCompleted == null)) {
                this.BankBillMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankBillMapOperationCompleted);
            }
            this.InvokeAsync("BankBillMap", new object[] {
                        BankBillId,
                        Document_HeaderId,
                        Type,
                        SourceIds,
                        IP,
                        Desc,
                        Username,
                        Password}, this.BankBillMapOperationCompleted, userState);
        }
        
        private void OnBankBillMapOperationCompleted(object arg) {
            if ((this.BankBillMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankBillMapCompleted(this, new BankBillMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/RptDafater", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Dafater[] RptDafater(string AzCode, string TaCode, int AzSanad, int TaSanad, byte Group, int FiscalYearId, int CaseTypeId, int SourceId, string IP, out ClsError Error) {
            object[] results = this.Invoke("RptDafater", new object[] {
                        AzCode,
                        TaCode,
                        AzSanad,
                        TaSanad,
                        Group,
                        FiscalYearId,
                        CaseTypeId,
                        SourceId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Dafater[])(results[0]));
        }
        
        /// <remarks/>
        public void RptDafaterAsync(string AzCode, string TaCode, int AzSanad, int TaSanad, byte Group, int FiscalYearId, int CaseTypeId, int SourceId, string IP) {
            this.RptDafaterAsync(AzCode, TaCode, AzSanad, TaSanad, Group, FiscalYearId, CaseTypeId, SourceId, IP, null);
        }
        
        /// <remarks/>
        public void RptDafaterAsync(string AzCode, string TaCode, int AzSanad, int TaSanad, byte Group, int FiscalYearId, int CaseTypeId, int SourceId, string IP, object userState) {
            if ((this.RptDafaterOperationCompleted == null)) {
                this.RptDafaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptDafaterOperationCompleted);
            }
            this.InvokeAsync("RptDafater", new object[] {
                        AzCode,
                        TaCode,
                        AzSanad,
                        TaSanad,
                        Group,
                        FiscalYearId,
                        CaseTypeId,
                        SourceId,
                        IP}, this.RptDafaterOperationCompleted, userState);
        }
        
        private void OnRptDafaterOperationCompleted(object arg) {
            if ((this.RptDafaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptDafaterCompleted(this, new RptDafaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetAccountingTypeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AccountingType GetAccountingTypeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAccountingTypeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AccountingType)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountingTypeDetailAsync(int Id, string IP) {
            this.GetAccountingTypeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetAccountingTypeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetAccountingTypeDetailOperationCompleted == null)) {
                this.GetAccountingTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountingTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetAccountingTypeDetail", new object[] {
                        Id,
                        IP}, this.GetAccountingTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetAccountingTypeDetailOperationCompleted(object arg) {
            if ((this.GetAccountingTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountingTypeDetailCompleted(this, new GetAccountingTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetAccountingTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AccountingType[] GetAccountingTypeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAccountingTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AccountingType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountingTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetAccountingTypeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAccountingTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetAccountingTypeWithFilterOperationCompleted == null)) {
                this.GetAccountingTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountingTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAccountingTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetAccountingTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAccountingTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetAccountingTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountingTypeWithFilterCompleted(this, new GetAccountingTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertAccountingType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAccountingType(string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAccountingType", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAccountingTypeAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertAccountingTypeAsync(Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAccountingTypeAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAccountingTypeOperationCompleted == null)) {
                this.InsertAccountingTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAccountingTypeOperationCompleted);
            }
            this.InvokeAsync("InsertAccountingType", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertAccountingTypeOperationCompleted, userState);
        }
        
        private void OnInsertAccountingTypeOperationCompleted(object arg) {
            if ((this.InsertAccountingTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAccountingTypeCompleted(this, new InsertAccountingTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateAccountingType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAccountingType(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAccountingType", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountingTypeAsync(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateAccountingTypeAsync(Id, Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAccountingTypeAsync(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateAccountingTypeOperationCompleted == null)) {
                this.UpdateAccountingTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountingTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountingType", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateAccountingTypeOperationCompleted, userState);
        }
        
        private void OnUpdateAccountingTypeOperationCompleted(object arg) {
            if ((this.UpdateAccountingTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountingTypeCompleted(this, new UpdateAccountingTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteAccountingType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAccountingType(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAccountingType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAccountingTypeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAccountingTypeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAccountingTypeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAccountingTypeOperationCompleted == null)) {
                this.DeleteAccountingTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountingTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountingType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAccountingTypeOperationCompleted, userState);
        }
        
        private void OnDeleteAccountingTypeOperationCompleted(object arg) {
            if ((this.DeleteAccountingTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountingTypeCompleted(this, new DeleteAccountingTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCenterCostDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CenterCost GetCenterCostDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCenterCostDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CenterCost)(results[0]));
        }
        
        /// <remarks/>
        public void GetCenterCostDetailAsync(int Id, int OrganId, string IP) {
            this.GetCenterCostDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetCenterCostDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetCenterCostDetailOperationCompleted == null)) {
                this.GetCenterCostDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCenterCostDetailOperationCompleted);
            }
            this.InvokeAsync("GetCenterCostDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetCenterCostDetailOperationCompleted, userState);
        }
        
        private void OnGetCenterCostDetailOperationCompleted(object arg) {
            if ((this.GetCenterCostDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCenterCostDetailCompleted(this, new GetCenterCostDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCenterCostWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CenterCost[] GetCenterCostWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCenterCostWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CenterCost[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCenterCostWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetCenterCostWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCenterCostWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetCenterCostWithFilterOperationCompleted == null)) {
                this.GetCenterCostWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCenterCostWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCenterCostWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetCenterCostWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCenterCostWithFilterOperationCompleted(object arg) {
            if ((this.GetCenterCostWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCenterCostWithFilterCompleted(this, new GetCenterCostWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertCenterCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCenterCost(string NameCenter, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCenterCost", new object[] {
                        NameCenter,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCenterCostAsync(string NameCenter, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertCenterCostAsync(NameCenter, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCenterCostAsync(string NameCenter, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCenterCostOperationCompleted == null)) {
                this.InsertCenterCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCenterCostOperationCompleted);
            }
            this.InvokeAsync("InsertCenterCost", new object[] {
                        NameCenter,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCenterCostOperationCompleted, userState);
        }
        
        private void OnInsertCenterCostOperationCompleted(object arg) {
            if ((this.InsertCenterCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCenterCostCompleted(this, new InsertCenterCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateCenterCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCenterCost(int Id, string NameCenter, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCenterCost", new object[] {
                        Id,
                        NameCenter,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCenterCostAsync(int Id, string NameCenter, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCenterCostAsync(Id, NameCenter, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCenterCostAsync(int Id, string NameCenter, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCenterCostOperationCompleted == null)) {
                this.UpdateCenterCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCenterCostOperationCompleted);
            }
            this.InvokeAsync("UpdateCenterCost", new object[] {
                        Id,
                        NameCenter,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCenterCostOperationCompleted, userState);
        }
        
        private void OnUpdateCenterCostOperationCompleted(object arg) {
            if ((this.UpdateCenterCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCenterCostCompleted(this, new UpdateCenterCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteCenterCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCenterCost(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCenterCost", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCenterCostAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCenterCostAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCenterCostAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCenterCostOperationCompleted == null)) {
                this.DeleteCenterCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCenterCostOperationCompleted);
            }
            this.InvokeAsync("DeleteCenterCost", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCenterCostOperationCompleted, userState);
        }
        
        private void OnDeleteCenterCostOperationCompleted(object arg) {
            if ((this.DeleteCenterCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCenterCostCompleted(this, new DeleteCenterCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdatePID_Cost_Tree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePID_Cost_Tree(int Cost_TreeId, int Parent, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdatePID_Cost_Tree", new object[] {
                        Cost_TreeId,
                        Parent,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePID_Cost_TreeAsync(int Cost_TreeId, int Parent, string Username, string Password, int OrganId, string IP) {
            this.UpdatePID_Cost_TreeAsync(Cost_TreeId, Parent, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdatePID_Cost_TreeAsync(int Cost_TreeId, int Parent, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdatePID_Cost_TreeOperationCompleted == null)) {
                this.UpdatePID_Cost_TreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePID_Cost_TreeOperationCompleted);
            }
            this.InvokeAsync("UpdatePID_Cost_Tree", new object[] {
                        Cost_TreeId,
                        Parent,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdatePID_Cost_TreeOperationCompleted, userState);
        }
        
        private void OnUpdatePID_Cost_TreeOperationCompleted(object arg) {
            if ((this.UpdatePID_Cost_TreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePID_Cost_TreeCompleted(this, new UpdatePID_Cost_TreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/IsCostCenter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IsCostCenter(int CodingId, string IP, out ClsError Error) {
            object[] results = this.Invoke("IsCostCenter", new object[] {
                        CodingId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IsCostCenterAsync(int CodingId, string IP) {
            this.IsCostCenterAsync(CodingId, IP, null);
        }
        
        /// <remarks/>
        public void IsCostCenterAsync(int CodingId, string IP, object userState) {
            if ((this.IsCostCenterOperationCompleted == null)) {
                this.IsCostCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCostCenterOperationCompleted);
            }
            this.InvokeAsync("IsCostCenter", new object[] {
                        CodingId,
                        IP}, this.IsCostCenterOperationCompleted, userState);
        }
        
        private void OnIsCostCenterOperationCompleted(object arg) {
            if ((this.IsCostCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCostCenterCompleted(this, new IsCostCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetAccountingLevelDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AccountingLevel GetAccountingLevelDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAccountingLevelDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AccountingLevel)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountingLevelDetailAsync(int Id, int OrganId, string IP) {
            this.GetAccountingLevelDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetAccountingLevelDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetAccountingLevelDetailOperationCompleted == null)) {
                this.GetAccountingLevelDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountingLevelDetailOperationCompleted);
            }
            this.InvokeAsync("GetAccountingLevelDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetAccountingLevelDetailOperationCompleted, userState);
        }
        
        private void OnGetAccountingLevelDetailOperationCompleted(object arg) {
            if ((this.GetAccountingLevelDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountingLevelDetailCompleted(this, new GetAccountingLevelDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetAccountingLevelWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AccountingLevel[] GetAccountingLevelWithFilter(string FieldName, string FilterValue, string value2, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAccountingLevelWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        value2,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AccountingLevel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountingLevelWithFilterAsync(string FieldName, string FilterValue, string value2, int OrganId, int Top, string IP) {
            this.GetAccountingLevelWithFilterAsync(FieldName, FilterValue, value2, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAccountingLevelWithFilterAsync(string FieldName, string FilterValue, string value2, int OrganId, int Top, string IP, object userState) {
            if ((this.GetAccountingLevelWithFilterOperationCompleted == null)) {
                this.GetAccountingLevelWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountingLevelWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAccountingLevelWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        value2,
                        OrganId,
                        Top,
                        IP}, this.GetAccountingLevelWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAccountingLevelWithFilterOperationCompleted(object arg) {
            if ((this.GetAccountingLevelWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountingLevelWithFilterCompleted(this, new GetAccountingLevelWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertAccountingLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAccountingLevel(string Name, short Year, int ArghamNum, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAccountingLevel", new object[] {
                        Name,
                        Year,
                        ArghamNum,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAccountingLevelAsync(string Name, short Year, int ArghamNum, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertAccountingLevelAsync(Name, Year, ArghamNum, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAccountingLevelAsync(string Name, short Year, int ArghamNum, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAccountingLevelOperationCompleted == null)) {
                this.InsertAccountingLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAccountingLevelOperationCompleted);
            }
            this.InvokeAsync("InsertAccountingLevel", new object[] {
                        Name,
                        Year,
                        ArghamNum,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertAccountingLevelOperationCompleted, userState);
        }
        
        private void OnInsertAccountingLevelOperationCompleted(object arg) {
            if ((this.InsertAccountingLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAccountingLevelCompleted(this, new InsertAccountingLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateAccountingLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAccountingLevel(int Id, string Name, short Year, int ArghamNum, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAccountingLevel", new object[] {
                        Id,
                        Name,
                        Year,
                        ArghamNum,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountingLevelAsync(int Id, string Name, short Year, int ArghamNum, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateAccountingLevelAsync(Id, Name, Year, ArghamNum, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAccountingLevelAsync(int Id, string Name, short Year, int ArghamNum, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateAccountingLevelOperationCompleted == null)) {
                this.UpdateAccountingLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountingLevelOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountingLevel", new object[] {
                        Id,
                        Name,
                        Year,
                        ArghamNum,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateAccountingLevelOperationCompleted, userState);
        }
        
        private void OnUpdateAccountingLevelOperationCompleted(object arg) {
            if ((this.UpdateAccountingLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountingLevelCompleted(this, new UpdateAccountingLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteAccountingLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAccountingLevel(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAccountingLevel", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAccountingLevelAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAccountingLevelAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAccountingLevelAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAccountingLevelOperationCompleted == null)) {
                this.DeleteAccountingLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountingLevelOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountingLevel", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAccountingLevelOperationCompleted, userState);
        }
        
        private void OnDeleteAccountingLevelOperationCompleted(object arg) {
            if ((this.DeleteAccountingLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountingLevelCompleted(this, new DeleteAccountingLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectAccountingLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AccountingLevel[] SelectAccountingLevel(short Year, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectAccountingLevel", new object[] {
                        Year,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AccountingLevel[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectAccountingLevelAsync(short Year, int OrganId, string IP) {
            this.SelectAccountingLevelAsync(Year, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void SelectAccountingLevelAsync(short Year, int OrganId, string IP, object userState) {
            if ((this.SelectAccountingLevelOperationCompleted == null)) {
                this.SelectAccountingLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAccountingLevelOperationCompleted);
            }
            this.InvokeAsync("SelectAccountingLevel", new object[] {
                        Year,
                        OrganId,
                        IP}, this.SelectAccountingLevelOperationCompleted, userState);
        }
        
        private void OnSelectAccountingLevelOperationCompleted(object arg) {
            if ((this.SelectAccountingLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAccountingLevelCompleted(this, new SelectAccountingLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/AccountingLevelDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AccountingLevelDelete(short Year, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("AccountingLevelDelete", new object[] {
                        Year,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccountingLevelDeleteAsync(short Year, string Username, string Password, int OrganId, string IP) {
            this.AccountingLevelDeleteAsync(Year, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void AccountingLevelDeleteAsync(short Year, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.AccountingLevelDeleteOperationCompleted == null)) {
                this.AccountingLevelDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountingLevelDeleteOperationCompleted);
            }
            this.InvokeAsync("AccountingLevelDelete", new object[] {
                        Year,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.AccountingLevelDeleteOperationCompleted, userState);
        }
        
        private void OnAccountingLevelDeleteOperationCompleted(object arg) {
            if ((this.AccountingLevelDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountingLevelDeleteCompleted(this, new AccountingLevelDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/CheckAccountingLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AccountingLevel[] CheckAccountingLevel(int AccountingTypeId, int OrganPostId, short Year, string IP, out ClsError Error) {
            object[] results = this.Invoke("CheckAccountingLevel", new object[] {
                        AccountingTypeId,
                        OrganPostId,
                        Year,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AccountingLevel[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckAccountingLevelAsync(int AccountingTypeId, int OrganPostId, short Year, string IP) {
            this.CheckAccountingLevelAsync(AccountingTypeId, OrganPostId, Year, IP, null);
        }
        
        /// <remarks/>
        public void CheckAccountingLevelAsync(int AccountingTypeId, int OrganPostId, short Year, string IP, object userState) {
            if ((this.CheckAccountingLevelOperationCompleted == null)) {
                this.CheckAccountingLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAccountingLevelOperationCompleted);
            }
            this.InvokeAsync("CheckAccountingLevel", new object[] {
                        AccountingTypeId,
                        OrganPostId,
                        Year,
                        IP}, this.CheckAccountingLevelOperationCompleted, userState);
        }
        
        private void OnCheckAccountingLevelOperationCompleted(object arg) {
            if ((this.CheckAccountingLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAccountingLevelCompleted(this, new CheckAccountingLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetGroupCenterCostDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GroupCenterCost GetGroupCenterCostDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetGroupCenterCostDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GroupCenterCost)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupCenterCostDetailAsync(int Id, int OrganId, string IP) {
            this.GetGroupCenterCostDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetGroupCenterCostDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetGroupCenterCostDetailOperationCompleted == null)) {
                this.GetGroupCenterCostDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupCenterCostDetailOperationCompleted);
            }
            this.InvokeAsync("GetGroupCenterCostDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetGroupCenterCostDetailOperationCompleted, userState);
        }
        
        private void OnGetGroupCenterCostDetailOperationCompleted(object arg) {
            if ((this.GetGroupCenterCostDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupCenterCostDetailCompleted(this, new GetGroupCenterCostDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetGroupCenterCostWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GroupCenterCost[] GetGroupCenterCostWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetGroupCenterCostWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GroupCenterCost[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupCenterCostWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetGroupCenterCostWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetGroupCenterCostWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetGroupCenterCostWithFilterOperationCompleted == null)) {
                this.GetGroupCenterCostWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupCenterCostWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetGroupCenterCostWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetGroupCenterCostWithFilterOperationCompleted, userState);
        }
        
        private void OnGetGroupCenterCostWithFilterOperationCompleted(object arg) {
            if ((this.GetGroupCenterCostWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupCenterCostWithFilterCompleted(this, new GetGroupCenterCostWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertGroupCenterCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertGroupCenterCost(string NameGroup, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertGroupCenterCost", new object[] {
                        NameGroup,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGroupCenterCostAsync(string NameGroup, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertGroupCenterCostAsync(NameGroup, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertGroupCenterCostAsync(string NameGroup, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertGroupCenterCostOperationCompleted == null)) {
                this.InsertGroupCenterCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGroupCenterCostOperationCompleted);
            }
            this.InvokeAsync("InsertGroupCenterCost", new object[] {
                        NameGroup,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertGroupCenterCostOperationCompleted, userState);
        }
        
        private void OnInsertGroupCenterCostOperationCompleted(object arg) {
            if ((this.InsertGroupCenterCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGroupCenterCostCompleted(this, new InsertGroupCenterCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateGroupCenterCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateGroupCenterCost(int Id, string NameGroup, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateGroupCenterCost", new object[] {
                        Id,
                        NameGroup,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupCenterCostAsync(int Id, string NameGroup, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateGroupCenterCostAsync(Id, NameGroup, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateGroupCenterCostAsync(int Id, string NameGroup, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateGroupCenterCostOperationCompleted == null)) {
                this.UpdateGroupCenterCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupCenterCostOperationCompleted);
            }
            this.InvokeAsync("UpdateGroupCenterCost", new object[] {
                        Id,
                        NameGroup,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateGroupCenterCostOperationCompleted, userState);
        }
        
        private void OnUpdateGroupCenterCostOperationCompleted(object arg) {
            if ((this.UpdateGroupCenterCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupCenterCostCompleted(this, new UpdateGroupCenterCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteGroupCenterCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteGroupCenterCost(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteGroupCenterCost", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGroupCenterCostAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteGroupCenterCostAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteGroupCenterCostAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteGroupCenterCostOperationCompleted == null)) {
                this.DeleteGroupCenterCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupCenterCostOperationCompleted);
            }
            this.InvokeAsync("DeleteGroupCenterCost", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteGroupCenterCostOperationCompleted, userState);
        }
        
        private void OnDeleteGroupCenterCostOperationCompleted(object arg) {
            if ((this.DeleteGroupCenterCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGroupCenterCostCompleted(this, new DeleteGroupCenterCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertTree_CenterCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertTree_CenterCost(int CenterCoId, int CostTreeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertTree_CenterCost", new object[] {
                        CenterCoId,
                        CostTreeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTree_CenterCostAsync(int CenterCoId, int CostTreeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertTree_CenterCostAsync(CenterCoId, CostTreeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertTree_CenterCostAsync(int CenterCoId, int CostTreeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertTree_CenterCostOperationCompleted == null)) {
                this.InsertTree_CenterCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTree_CenterCostOperationCompleted);
            }
            this.InvokeAsync("InsertTree_CenterCost", new object[] {
                        CenterCoId,
                        CostTreeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertTree_CenterCostOperationCompleted, userState);
        }
        
        private void OnInsertTree_CenterCostOperationCompleted(object arg) {
            if ((this.InsertTree_CenterCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTree_CenterCostCompleted(this, new InsertTree_CenterCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetTreeCenterCostDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TreeCenterCost GetTreeCenterCostDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTreeCenterCostDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TreeCenterCost)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeCenterCostDetailAsync(int Id, int OrganId, string IP) {
            this.GetTreeCenterCostDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetTreeCenterCostDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetTreeCenterCostDetailOperationCompleted == null)) {
                this.GetTreeCenterCostDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeCenterCostDetailOperationCompleted);
            }
            this.InvokeAsync("GetTreeCenterCostDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetTreeCenterCostDetailOperationCompleted, userState);
        }
        
        private void OnGetTreeCenterCostDetailOperationCompleted(object arg) {
            if ((this.GetTreeCenterCostDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeCenterCostDetailCompleted(this, new GetTreeCenterCostDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetTreeCenterCostWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TreeCenterCost[] GetTreeCenterCostWithFilter(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTreeCenterCostWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TreeCenterCost[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeCenterCostWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP) {
            this.GetTreeCenterCostWithFilterAsync(FieldName, FilterValue, FilterValue2, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetTreeCenterCostWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP, object userState) {
            if ((this.GetTreeCenterCostWithFilterOperationCompleted == null)) {
                this.GetTreeCenterCostWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeCenterCostWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetTreeCenterCostWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        OrganId,
                        Top,
                        IP}, this.GetTreeCenterCostWithFilterOperationCompleted, userState);
        }
        
        private void OnGetTreeCenterCostWithFilterOperationCompleted(object arg) {
            if ((this.GetTreeCenterCostWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeCenterCostWithFilterCompleted(this, new GetTreeCenterCostWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertTreeCenterCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertTreeCenterCost(string Name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, int GroupCenterCoId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertTreeCenterCost", new object[] {
                        Name,
                        PID,
                        GroupCenterCoId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTreeCenterCostAsync(string Name, System.Nullable<int> PID, int GroupCenterCoId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertTreeCenterCostAsync(Name, PID, GroupCenterCoId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertTreeCenterCostAsync(string Name, System.Nullable<int> PID, int GroupCenterCoId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertTreeCenterCostOperationCompleted == null)) {
                this.InsertTreeCenterCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTreeCenterCostOperationCompleted);
            }
            this.InvokeAsync("InsertTreeCenterCost", new object[] {
                        Name,
                        PID,
                        GroupCenterCoId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertTreeCenterCostOperationCompleted, userState);
        }
        
        private void OnInsertTreeCenterCostOperationCompleted(object arg) {
            if ((this.InsertTreeCenterCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTreeCenterCostCompleted(this, new InsertTreeCenterCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateTreeCenterCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateTreeCenterCost(int Id, string Name, int GroupCenterCoId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateTreeCenterCost", new object[] {
                        Id,
                        Name,
                        GroupCenterCoId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTreeCenterCostAsync(int Id, string Name, int GroupCenterCoId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateTreeCenterCostAsync(Id, Name, GroupCenterCoId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateTreeCenterCostAsync(int Id, string Name, int GroupCenterCoId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateTreeCenterCostOperationCompleted == null)) {
                this.UpdateTreeCenterCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTreeCenterCostOperationCompleted);
            }
            this.InvokeAsync("UpdateTreeCenterCost", new object[] {
                        Id,
                        Name,
                        GroupCenterCoId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateTreeCenterCostOperationCompleted, userState);
        }
        
        private void OnUpdateTreeCenterCostOperationCompleted(object arg) {
            if ((this.UpdateTreeCenterCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTreeCenterCostCompleted(this, new UpdateTreeCenterCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteTreeCenterCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteTreeCenterCost(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteTreeCenterCost", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTreeCenterCostAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteTreeCenterCostAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteTreeCenterCostAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteTreeCenterCostOperationCompleted == null)) {
                this.DeleteTreeCenterCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTreeCenterCostOperationCompleted);
            }
            this.InvokeAsync("DeleteTreeCenterCost", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteTreeCenterCostOperationCompleted, userState);
        }
        
        private void OnDeleteTreeCenterCostOperationCompleted(object arg) {
            if ((this.DeleteTreeCenterCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTreeCenterCostCompleted(this, new DeleteTreeCenterCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdatePID_CostCenter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePID_CostCenter(int Child, int Parent, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdatePID_CostCenter", new object[] {
                        Child,
                        Parent,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePID_CostCenterAsync(int Child, int Parent, string Username, string Password, int OrganId, string IP) {
            this.UpdatePID_CostCenterAsync(Child, Parent, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdatePID_CostCenterAsync(int Child, int Parent, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdatePID_CostCenterOperationCompleted == null)) {
                this.UpdatePID_CostCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePID_CostCenterOperationCompleted);
            }
            this.InvokeAsync("UpdatePID_CostCenter", new object[] {
                        Child,
                        Parent,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdatePID_CostCenterOperationCompleted, userState);
        }
        
        private void OnUpdatePID_CostCenterOperationCompleted(object arg) {
            if ((this.UpdatePID_CostCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePID_CostCenterCompleted(this, new UpdatePID_CostCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCenterco_TarifNashodeh", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Centerco_TarifNashodeh[] GetCenterco_TarifNashodeh(int GroupCenterCoId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCenterco_TarifNashodeh", new object[] {
                        GroupCenterCoId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Centerco_TarifNashodeh[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCenterco_TarifNashodehAsync(int GroupCenterCoId, string IP) {
            this.GetCenterco_TarifNashodehAsync(GroupCenterCoId, IP, null);
        }
        
        /// <remarks/>
        public void GetCenterco_TarifNashodehAsync(int GroupCenterCoId, string IP, object userState) {
            if ((this.GetCenterco_TarifNashodehOperationCompleted == null)) {
                this.GetCenterco_TarifNashodehOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCenterco_TarifNashodehOperationCompleted);
            }
            this.InvokeAsync("GetCenterco_TarifNashodeh", new object[] {
                        GroupCenterCoId,
                        IP}, this.GetCenterco_TarifNashodehOperationCompleted, userState);
        }
        
        private void OnGetCenterco_TarifNashodehOperationCompleted(object arg) {
            if ((this.GetCenterco_TarifNashodehCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCenterco_TarifNashodehCompleted(this, new GetCenterco_TarifNashodehCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetTemplateCodingDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TemplateCoding GetTemplateCodingDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTemplateCodingDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TemplateCoding)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateCodingDetailAsync(int Id, string IP) {
            this.GetTemplateCodingDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetTemplateCodingDetailAsync(int Id, string IP, object userState) {
            if ((this.GetTemplateCodingDetailOperationCompleted == null)) {
                this.GetTemplateCodingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateCodingDetailOperationCompleted);
            }
            this.InvokeAsync("GetTemplateCodingDetail", new object[] {
                        Id,
                        IP}, this.GetTemplateCodingDetailOperationCompleted, userState);
        }
        
        private void OnGetTemplateCodingDetailOperationCompleted(object arg) {
            if ((this.GetTemplateCodingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateCodingDetailCompleted(this, new GetTemplateCodingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetTemplateCodingWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TemplateCoding[] GetTemplateCodingWithFilter(string FieldName, string FilterValue, string FilterValue2, string FilterValue3, int HeaderCodingId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTemplateCodingWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        FilterValue3,
                        HeaderCodingId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TemplateCoding[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateCodingWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, string FilterValue3, int HeaderCodingId, int Top, string IP) {
            this.GetTemplateCodingWithFilterAsync(FieldName, FilterValue, FilterValue2, FilterValue3, HeaderCodingId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetTemplateCodingWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, string FilterValue3, int HeaderCodingId, int Top, string IP, object userState) {
            if ((this.GetTemplateCodingWithFilterOperationCompleted == null)) {
                this.GetTemplateCodingWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateCodingWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetTemplateCodingWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        FilterValue3,
                        HeaderCodingId,
                        Top,
                        IP}, this.GetTemplateCodingWithFilterOperationCompleted, userState);
        }
        
        private void OnGetTemplateCodingWithFilterOperationCompleted(object arg) {
            if ((this.GetTemplateCodingWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateCodingWithFilterCompleted(this, new GetTemplateCodingWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertTemplateCoding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertTemplateCoding(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ItemId, 
                    string Name, 
                    string PCod, 
                    int MahiyatId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> Mahiyat_GardeshId, 
                    string Code, 
                    int TempNameId, 
                    int LevelsAccountTypId, 
                    byte fldTypeHesabId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> AddChildNode, 
                    string CodeBudget, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("InsertTemplateCoding", new object[] {
                        PID,
                        ItemId,
                        Name,
                        PCod,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        Code,
                        TempNameId,
                        LevelsAccountTypId,
                        fldTypeHesabId,
                        AddChildNode,
                        CodeBudget,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTemplateCodingAsync(
                    System.Nullable<int> PID, 
                    System.Nullable<int> ItemId, 
                    string Name, 
                    string PCod, 
                    int MahiyatId, 
                    System.Nullable<int> Mahiyat_GardeshId, 
                    string Code, 
                    int TempNameId, 
                    int LevelsAccountTypId, 
                    byte fldTypeHesabId, 
                    System.Nullable<bool> AddChildNode, 
                    string CodeBudget, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.InsertTemplateCodingAsync(PID, ItemId, Name, PCod, MahiyatId, Mahiyat_GardeshId, Code, TempNameId, LevelsAccountTypId, fldTypeHesabId, AddChildNode, CodeBudget, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertTemplateCodingAsync(
                    System.Nullable<int> PID, 
                    System.Nullable<int> ItemId, 
                    string Name, 
                    string PCod, 
                    int MahiyatId, 
                    System.Nullable<int> Mahiyat_GardeshId, 
                    string Code, 
                    int TempNameId, 
                    int LevelsAccountTypId, 
                    byte fldTypeHesabId, 
                    System.Nullable<bool> AddChildNode, 
                    string CodeBudget, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.InsertTemplateCodingOperationCompleted == null)) {
                this.InsertTemplateCodingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTemplateCodingOperationCompleted);
            }
            this.InvokeAsync("InsertTemplateCoding", new object[] {
                        PID,
                        ItemId,
                        Name,
                        PCod,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        Code,
                        TempNameId,
                        LevelsAccountTypId,
                        fldTypeHesabId,
                        AddChildNode,
                        CodeBudget,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertTemplateCodingOperationCompleted, userState);
        }
        
        private void OnInsertTemplateCodingOperationCompleted(object arg) {
            if ((this.InsertTemplateCodingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTemplateCodingCompleted(this, new InsertTemplateCodingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateTemplateCoding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateTemplateCoding(
                    int Id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ItemId, 
                    string Name, 
                    int MahiyatId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> Mahiyat_GardeshId, 
                    string Code, 
                    int TempNameId, 
                    int LevelsAccountTypId, 
                    byte fldTypeHesabId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> AddChildNode, 
                    string CodeBudget, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateTemplateCoding", new object[] {
                        Id,
                        ItemId,
                        Name,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        Code,
                        TempNameId,
                        LevelsAccountTypId,
                        fldTypeHesabId,
                        AddChildNode,
                        CodeBudget,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTemplateCodingAsync(
                    int Id, 
                    System.Nullable<int> ItemId, 
                    string Name, 
                    int MahiyatId, 
                    System.Nullable<int> Mahiyat_GardeshId, 
                    string Code, 
                    int TempNameId, 
                    int LevelsAccountTypId, 
                    byte fldTypeHesabId, 
                    System.Nullable<bool> AddChildNode, 
                    string CodeBudget, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.UpdateTemplateCodingAsync(Id, ItemId, Name, MahiyatId, Mahiyat_GardeshId, Code, TempNameId, LevelsAccountTypId, fldTypeHesabId, AddChildNode, CodeBudget, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateTemplateCodingAsync(
                    int Id, 
                    System.Nullable<int> ItemId, 
                    string Name, 
                    int MahiyatId, 
                    System.Nullable<int> Mahiyat_GardeshId, 
                    string Code, 
                    int TempNameId, 
                    int LevelsAccountTypId, 
                    byte fldTypeHesabId, 
                    System.Nullable<bool> AddChildNode, 
                    string CodeBudget, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.UpdateTemplateCodingOperationCompleted == null)) {
                this.UpdateTemplateCodingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTemplateCodingOperationCompleted);
            }
            this.InvokeAsync("UpdateTemplateCoding", new object[] {
                        Id,
                        ItemId,
                        Name,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        Code,
                        TempNameId,
                        LevelsAccountTypId,
                        fldTypeHesabId,
                        AddChildNode,
                        CodeBudget,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateTemplateCodingOperationCompleted, userState);
        }
        
        private void OnUpdateTemplateCodingOperationCompleted(object arg) {
            if ((this.UpdateTemplateCodingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTemplateCodingCompleted(this, new UpdateTemplateCodingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteTemplateCoding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteTemplateCoding(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteTemplateCoding", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTemplateCodingAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteTemplateCodingAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteTemplateCodingAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteTemplateCodingOperationCompleted == null)) {
                this.DeleteTemplateCodingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTemplateCodingOperationCompleted);
            }
            this.InvokeAsync("DeleteTemplateCoding", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteTemplateCodingOperationCompleted, userState);
        }
        
        private void OnDeleteTemplateCodingOperationCompleted(object arg) {
            if ((this.DeleteTemplateCodingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTemplateCodingCompleted(this, new DeleteTemplateCodingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/CheckValidCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckValidCode(int AccountTypId, string Code, string PCod, int Id, int TempNameId, string IP, out ClsError Error) {
            object[] results = this.Invoke("CheckValidCode", new object[] {
                        AccountTypId,
                        Code,
                        PCod,
                        Id,
                        TempNameId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidCodeAsync(int AccountTypId, string Code, string PCod, int Id, int TempNameId, string IP) {
            this.CheckValidCodeAsync(AccountTypId, Code, PCod, Id, TempNameId, IP, null);
        }
        
        /// <remarks/>
        public void CheckValidCodeAsync(int AccountTypId, string Code, string PCod, int Id, int TempNameId, string IP, object userState) {
            if ((this.CheckValidCodeOperationCompleted == null)) {
                this.CheckValidCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidCodeOperationCompleted);
            }
            this.InvokeAsync("CheckValidCode", new object[] {
                        AccountTypId,
                        Code,
                        PCod,
                        Id,
                        TempNameId,
                        IP}, this.CheckValidCodeOperationCompleted, userState);
        }
        
        private void OnCheckValidCodeOperationCompleted(object arg) {
            if ((this.CheckValidCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidCodeCompleted(this, new CheckValidCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDefaultCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TemplateCoding[] GetDefaultCode(int AccountTypId, string PCod, int TempNameId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDefaultCode", new object[] {
                        AccountTypId,
                        PCod,
                        TempNameId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TemplateCoding[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultCodeAsync(int AccountTypId, string PCod, int TempNameId, string IP) {
            this.GetDefaultCodeAsync(AccountTypId, PCod, TempNameId, IP, null);
        }
        
        /// <remarks/>
        public void GetDefaultCodeAsync(int AccountTypId, string PCod, int TempNameId, string IP, object userState) {
            if ((this.GetDefaultCodeOperationCompleted == null)) {
                this.GetDefaultCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultCodeOperationCompleted);
            }
            this.InvokeAsync("GetDefaultCode", new object[] {
                        AccountTypId,
                        PCod,
                        TempNameId,
                        IP}, this.GetDefaultCodeOperationCompleted, userState);
        }
        
        private void OnGetDefaultCodeOperationCompleted(object arg) {
            if ((this.GetDefaultCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultCodeCompleted(this, new GetDefaultCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetItemNecessaryDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ItemNecessary GetItemNecessaryDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetItemNecessaryDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ItemNecessary)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemNecessaryDetailAsync(int Id, string IP) {
            this.GetItemNecessaryDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetItemNecessaryDetailAsync(int Id, string IP, object userState) {
            if ((this.GetItemNecessaryDetailOperationCompleted == null)) {
                this.GetItemNecessaryDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemNecessaryDetailOperationCompleted);
            }
            this.InvokeAsync("GetItemNecessaryDetail", new object[] {
                        Id,
                        IP}, this.GetItemNecessaryDetailOperationCompleted, userState);
        }
        
        private void OnGetItemNecessaryDetailOperationCompleted(object arg) {
            if ((this.GetItemNecessaryDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemNecessaryDetailCompleted(this, new GetItemNecessaryDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetItemNecessaryWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ItemNecessary[] GetItemNecessaryWithFilter(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetItemNecessaryWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ItemNecessary[])(results[0]));
        }
        
        /// <remarks/>
        public void GetItemNecessaryWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP) {
            this.GetItemNecessaryWithFilterAsync(FieldName, FilterValue, FilterValue2, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetItemNecessaryWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, object userState) {
            if ((this.GetItemNecessaryWithFilterOperationCompleted == null)) {
                this.GetItemNecessaryWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemNecessaryWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetItemNecessaryWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP}, this.GetItemNecessaryWithFilterOperationCompleted, userState);
        }
        
        private void OnGetItemNecessaryWithFilterOperationCompleted(object arg) {
            if ((this.GetItemNecessaryWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemNecessaryWithFilterCompleted(this, new GetItemNecessaryWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertItemNecessary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertItemNecessary([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, string NameItem, int MahiyatId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> Mahiyat_GardeshId, byte fldTypeHesabId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertItemNecessary", new object[] {
                        PID,
                        NameItem,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        fldTypeHesabId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertItemNecessaryAsync(System.Nullable<int> PID, string NameItem, int MahiyatId, System.Nullable<int> Mahiyat_GardeshId, byte fldTypeHesabId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertItemNecessaryAsync(PID, NameItem, MahiyatId, Mahiyat_GardeshId, fldTypeHesabId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertItemNecessaryAsync(System.Nullable<int> PID, string NameItem, int MahiyatId, System.Nullable<int> Mahiyat_GardeshId, byte fldTypeHesabId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertItemNecessaryOperationCompleted == null)) {
                this.InsertItemNecessaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertItemNecessaryOperationCompleted);
            }
            this.InvokeAsync("InsertItemNecessary", new object[] {
                        PID,
                        NameItem,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        fldTypeHesabId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertItemNecessaryOperationCompleted, userState);
        }
        
        private void OnInsertItemNecessaryOperationCompleted(object arg) {
            if ((this.InsertItemNecessaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertItemNecessaryCompleted(this, new InsertItemNecessaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateItemNecessary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateItemNecessary(int Id, string NameItem, int MahiyatId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> Mahiyat_GardeshId, byte fldTypeHesabId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateItemNecessary", new object[] {
                        Id,
                        NameItem,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        fldTypeHesabId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateItemNecessaryAsync(int Id, string NameItem, int MahiyatId, System.Nullable<int> Mahiyat_GardeshId, byte fldTypeHesabId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateItemNecessaryAsync(Id, NameItem, MahiyatId, Mahiyat_GardeshId, fldTypeHesabId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateItemNecessaryAsync(int Id, string NameItem, int MahiyatId, System.Nullable<int> Mahiyat_GardeshId, byte fldTypeHesabId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateItemNecessaryOperationCompleted == null)) {
                this.UpdateItemNecessaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateItemNecessaryOperationCompleted);
            }
            this.InvokeAsync("UpdateItemNecessary", new object[] {
                        Id,
                        NameItem,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        fldTypeHesabId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateItemNecessaryOperationCompleted, userState);
        }
        
        private void OnUpdateItemNecessaryOperationCompleted(object arg) {
            if ((this.UpdateItemNecessaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateItemNecessaryCompleted(this, new UpdateItemNecessaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteItemNecessary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteItemNecessary(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteItemNecessary", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteItemNecessaryAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteItemNecessaryAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteItemNecessaryAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteItemNecessaryOperationCompleted == null)) {
                this.DeleteItemNecessaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteItemNecessaryOperationCompleted);
            }
            this.InvokeAsync("DeleteItemNecessary", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteItemNecessaryOperationCompleted, userState);
        }
        
        private void OnDeleteItemNecessaryOperationCompleted(object arg) {
            if ((this.DeleteItemNecessaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteItemNecessaryCompleted(this, new DeleteItemNecessaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdatePID_ItemNecessary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePID_ItemNecessary(int ChildId, int ParentId, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdatePID_ItemNecessary", new object[] {
                        ChildId,
                        ParentId,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePID_ItemNecessaryAsync(int ChildId, int ParentId, string Username, string Password, int OrganId, string IP) {
            this.UpdatePID_ItemNecessaryAsync(ChildId, ParentId, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdatePID_ItemNecessaryAsync(int ChildId, int ParentId, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdatePID_ItemNecessaryOperationCompleted == null)) {
                this.UpdatePID_ItemNecessaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePID_ItemNecessaryOperationCompleted);
            }
            this.InvokeAsync("UpdatePID_ItemNecessary", new object[] {
                        ChildId,
                        ParentId,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdatePID_ItemNecessaryOperationCompleted, userState);
        }
        
        private void OnUpdatePID_ItemNecessaryOperationCompleted(object arg) {
            if ((this.UpdatePID_ItemNecessaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePID_ItemNecessaryCompleted(this, new UpdatePID_ItemNecessaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetTemplateNameDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TemplateName GetTemplateNameDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTemplateNameDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TemplateName)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateNameDetailAsync(int Id, string IP) {
            this.GetTemplateNameDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetTemplateNameDetailAsync(int Id, string IP, object userState) {
            if ((this.GetTemplateNameDetailOperationCompleted == null)) {
                this.GetTemplateNameDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateNameDetailOperationCompleted);
            }
            this.InvokeAsync("GetTemplateNameDetail", new object[] {
                        Id,
                        IP}, this.GetTemplateNameDetailOperationCompleted, userState);
        }
        
        private void OnGetTemplateNameDetailOperationCompleted(object arg) {
            if ((this.GetTemplateNameDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateNameDetailCompleted(this, new GetTemplateNameDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetTemplateNameWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TemplateName[] GetTemplateNameWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTemplateNameWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TemplateName[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateNameWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetTemplateNameWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetTemplateNameWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetTemplateNameWithFilterOperationCompleted == null)) {
                this.GetTemplateNameWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateNameWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetTemplateNameWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetTemplateNameWithFilterOperationCompleted, userState);
        }
        
        private void OnGetTemplateNameWithFilterOperationCompleted(object arg) {
            if ((this.GetTemplateNameWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateNameWithFilterCompleted(this, new GetTemplateNameWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertTemplateName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertTemplateName(string Name, int AccountingTypeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertTemplateName", new object[] {
                        Name,
                        AccountingTypeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTemplateNameAsync(string Name, int AccountingTypeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertTemplateNameAsync(Name, AccountingTypeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertTemplateNameAsync(string Name, int AccountingTypeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertTemplateNameOperationCompleted == null)) {
                this.InsertTemplateNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTemplateNameOperationCompleted);
            }
            this.InvokeAsync("InsertTemplateName", new object[] {
                        Name,
                        AccountingTypeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertTemplateNameOperationCompleted, userState);
        }
        
        private void OnInsertTemplateNameOperationCompleted(object arg) {
            if ((this.InsertTemplateNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTemplateNameCompleted(this, new InsertTemplateNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateTemplateName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateTemplateName(int Id, string Name, int AccountingTypeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateTemplateName", new object[] {
                        Id,
                        Name,
                        AccountingTypeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTemplateNameAsync(int Id, string Name, int AccountingTypeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateTemplateNameAsync(Id, Name, AccountingTypeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateTemplateNameAsync(int Id, string Name, int AccountingTypeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateTemplateNameOperationCompleted == null)) {
                this.UpdateTemplateNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTemplateNameOperationCompleted);
            }
            this.InvokeAsync("UpdateTemplateName", new object[] {
                        Id,
                        Name,
                        AccountingTypeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateTemplateNameOperationCompleted, userState);
        }
        
        private void OnUpdateTemplateNameOperationCompleted(object arg) {
            if ((this.UpdateTemplateNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTemplateNameCompleted(this, new UpdateTemplateNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteTemplateName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteTemplateName(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteTemplateName", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTemplateNameAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteTemplateNameAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteTemplateNameAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteTemplateNameOperationCompleted == null)) {
                this.DeleteTemplateNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTemplateNameOperationCompleted);
            }
            this.InvokeAsync("DeleteTemplateName", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteTemplateNameOperationCompleted, userState);
        }
        
        private void OnDeleteTemplateNameOperationCompleted(object arg) {
            if ((this.DeleteTemplateNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTemplateNameCompleted(this, new DeleteTemplateNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetMahiyatWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Mahiyat[] GetMahiyatWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMahiyatWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Mahiyat[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMahiyatWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetMahiyatWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetMahiyatWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetMahiyatWithFilterOperationCompleted == null)) {
                this.GetMahiyatWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMahiyatWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetMahiyatWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetMahiyatWithFilterOperationCompleted, userState);
        }
        
        private void OnGetMahiyatWithFilterOperationCompleted(object arg) {
            if ((this.GetMahiyatWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMahiyatWithFilterCompleted(this, new GetMahiyatWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetLevelsAccountingTypeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LevelsAccountingType GetLevelsAccountingTypeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLevelsAccountingTypeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LevelsAccountingType)(results[0]));
        }
        
        /// <remarks/>
        public void GetLevelsAccountingTypeDetailAsync(int Id, string IP) {
            this.GetLevelsAccountingTypeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetLevelsAccountingTypeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetLevelsAccountingTypeDetailOperationCompleted == null)) {
                this.GetLevelsAccountingTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLevelsAccountingTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetLevelsAccountingTypeDetail", new object[] {
                        Id,
                        IP}, this.GetLevelsAccountingTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetLevelsAccountingTypeDetailOperationCompleted(object arg) {
            if ((this.GetLevelsAccountingTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLevelsAccountingTypeDetailCompleted(this, new GetLevelsAccountingTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetLevelsAccountingTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LevelsAccountingType[] GetLevelsAccountingTypeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLevelsAccountingTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LevelsAccountingType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLevelsAccountingTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetLevelsAccountingTypeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetLevelsAccountingTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetLevelsAccountingTypeWithFilterOperationCompleted == null)) {
                this.GetLevelsAccountingTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLevelsAccountingTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetLevelsAccountingTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetLevelsAccountingTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetLevelsAccountingTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetLevelsAccountingTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLevelsAccountingTypeWithFilterCompleted(this, new GetLevelsAccountingTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertLevelsAccountingType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertLevelsAccountingType(string Name, int AccountTypeId, int ArghumNum, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertLevelsAccountingType", new object[] {
                        Name,
                        AccountTypeId,
                        ArghumNum,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLevelsAccountingTypeAsync(string Name, int AccountTypeId, int ArghumNum, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertLevelsAccountingTypeAsync(Name, AccountTypeId, ArghumNum, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertLevelsAccountingTypeAsync(string Name, int AccountTypeId, int ArghumNum, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertLevelsAccountingTypeOperationCompleted == null)) {
                this.InsertLevelsAccountingTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLevelsAccountingTypeOperationCompleted);
            }
            this.InvokeAsync("InsertLevelsAccountingType", new object[] {
                        Name,
                        AccountTypeId,
                        ArghumNum,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertLevelsAccountingTypeOperationCompleted, userState);
        }
        
        private void OnInsertLevelsAccountingTypeOperationCompleted(object arg) {
            if ((this.InsertLevelsAccountingTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLevelsAccountingTypeCompleted(this, new InsertLevelsAccountingTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateLevelsAccountingType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLevelsAccountingType(int Id, string Name, int AccountTypeId, int ArghumNum, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateLevelsAccountingType", new object[] {
                        Id,
                        Name,
                        AccountTypeId,
                        ArghumNum,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLevelsAccountingTypeAsync(int Id, string Name, int AccountTypeId, int ArghumNum, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateLevelsAccountingTypeAsync(Id, Name, AccountTypeId, ArghumNum, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLevelsAccountingTypeAsync(int Id, string Name, int AccountTypeId, int ArghumNum, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateLevelsAccountingTypeOperationCompleted == null)) {
                this.UpdateLevelsAccountingTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLevelsAccountingTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateLevelsAccountingType", new object[] {
                        Id,
                        Name,
                        AccountTypeId,
                        ArghumNum,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLevelsAccountingTypeOperationCompleted, userState);
        }
        
        private void OnUpdateLevelsAccountingTypeOperationCompleted(object arg) {
            if ((this.UpdateLevelsAccountingTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLevelsAccountingTypeCompleted(this, new UpdateLevelsAccountingTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteLevelsAccountingType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLevelsAccountingType(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLevelsAccountingType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLevelsAccountingTypeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteLevelsAccountingTypeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLevelsAccountingTypeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteLevelsAccountingTypeOperationCompleted == null)) {
                this.DeleteLevelsAccountingTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLevelsAccountingTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteLevelsAccountingType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteLevelsAccountingTypeOperationCompleted, userState);
        }
        
        private void OnDeleteLevelsAccountingTypeOperationCompleted(object arg) {
            if ((this.DeleteLevelsAccountingTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLevelsAccountingTypeCompleted(this, new DeleteLevelsAccountingTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/selectAccountingTypeLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LevelsAccountingType[] selectAccountingTypeLevel(int AccountTypeId, string IP, out ClsError Error) {
            object[] results = this.Invoke("selectAccountingTypeLevel", new object[] {
                        AccountTypeId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LevelsAccountingType[])(results[0]));
        }
        
        /// <remarks/>
        public void selectAccountingTypeLevelAsync(int AccountTypeId, string IP) {
            this.selectAccountingTypeLevelAsync(AccountTypeId, IP, null);
        }
        
        /// <remarks/>
        public void selectAccountingTypeLevelAsync(int AccountTypeId, string IP, object userState) {
            if ((this.selectAccountingTypeLevelOperationCompleted == null)) {
                this.selectAccountingTypeLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectAccountingTypeLevelOperationCompleted);
            }
            this.InvokeAsync("selectAccountingTypeLevel", new object[] {
                        AccountTypeId,
                        IP}, this.selectAccountingTypeLevelOperationCompleted, userState);
        }
        
        private void OnselectAccountingTypeLevelOperationCompleted(object arg) {
            if ((this.selectAccountingTypeLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectAccountingTypeLevelCompleted(this, new selectAccountingTypeLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentDescDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentDesc GetDocumentDescDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentDescDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentDesc)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentDescDetailAsync(int Id, string IP) {
            this.GetDocumentDescDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentDescDetailAsync(int Id, string IP, object userState) {
            if ((this.GetDocumentDescDetailOperationCompleted == null)) {
                this.GetDocumentDescDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentDescDetailOperationCompleted);
            }
            this.InvokeAsync("GetDocumentDescDetail", new object[] {
                        Id,
                        IP}, this.GetDocumentDescDetailOperationCompleted, userState);
        }
        
        private void OnGetDocumentDescDetailOperationCompleted(object arg) {
            if ((this.GetDocumentDescDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentDescDetailCompleted(this, new GetDocumentDescDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetDocumentDescWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentDesc[] GetDocumentDescWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDocumentDescWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentDesc[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentDescWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetDocumentDescWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetDocumentDescWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetDocumentDescWithFilterOperationCompleted == null)) {
                this.GetDocumentDescWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentDescWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetDocumentDescWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetDocumentDescWithFilterOperationCompleted, userState);
        }
        
        private void OnGetDocumentDescWithFilterOperationCompleted(object arg) {
            if ((this.GetDocumentDescWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentDescWithFilterCompleted(this, new GetDocumentDescWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertDocumentDesc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDocumentDesc(string Name, string DocDesc, bool flag, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertDocumentDesc", new object[] {
                        Name,
                        DocDesc,
                        flag,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDocumentDescAsync(string Name, string DocDesc, bool flag, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertDocumentDescAsync(Name, DocDesc, flag, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertDocumentDescAsync(string Name, string DocDesc, bool flag, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertDocumentDescOperationCompleted == null)) {
                this.InsertDocumentDescOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDocumentDescOperationCompleted);
            }
            this.InvokeAsync("InsertDocumentDesc", new object[] {
                        Name,
                        DocDesc,
                        flag,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertDocumentDescOperationCompleted, userState);
        }
        
        private void OnInsertDocumentDescOperationCompleted(object arg) {
            if ((this.InsertDocumentDescCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDocumentDescCompleted(this, new InsertDocumentDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateDocumentDesc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDocumentDesc(int Id, string Name, string DocDesc, bool flag, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateDocumentDesc", new object[] {
                        Id,
                        Name,
                        DocDesc,
                        flag,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDocumentDescAsync(int Id, string Name, string DocDesc, bool flag, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateDocumentDescAsync(Id, Name, DocDesc, flag, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentDescAsync(int Id, string Name, string DocDesc, bool flag, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateDocumentDescOperationCompleted == null)) {
                this.UpdateDocumentDescOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentDescOperationCompleted);
            }
            this.InvokeAsync("UpdateDocumentDesc", new object[] {
                        Id,
                        Name,
                        DocDesc,
                        flag,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateDocumentDescOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentDescOperationCompleted(object arg) {
            if ((this.UpdateDocumentDescCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentDescCompleted(this, new UpdateDocumentDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteDocumentDesc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDocumentDesc(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteDocumentDesc", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentDescAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteDocumentDescAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentDescAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteDocumentDescOperationCompleted == null)) {
                this.DeleteDocumentDescOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentDescOperationCompleted);
            }
            this.InvokeAsync("DeleteDocumentDesc", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteDocumentDescOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentDescOperationCompleted(object arg) {
            if ((this.DeleteDocumentDescCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentDescCompleted(this, new DeleteDocumentDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetParamDocumentDesc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ParamDocumentDesc[] GetParamDocumentDesc(string DocDesc, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetParamDocumentDesc", new object[] {
                        DocDesc,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ParamDocumentDesc[])(results[0]));
        }
        
        /// <remarks/>
        public void GetParamDocumentDescAsync(string DocDesc, string IP) {
            this.GetParamDocumentDescAsync(DocDesc, IP, null);
        }
        
        /// <remarks/>
        public void GetParamDocumentDescAsync(string DocDesc, string IP, object userState) {
            if ((this.GetParamDocumentDescOperationCompleted == null)) {
                this.GetParamDocumentDescOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParamDocumentDescOperationCompleted);
            }
            this.InvokeAsync("GetParamDocumentDesc", new object[] {
                        DocDesc,
                        IP}, this.GetParamDocumentDescOperationCompleted, userState);
        }
        
        private void OnGetParamDocumentDescOperationCompleted(object arg) {
            if ((this.GetParamDocumentDescCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParamDocumentDescCompleted(this, new GetParamDocumentDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectEkhtetamiye", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecord_Details[] SelectEkhtetamiye(int FiscalYearId, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectEkhtetamiye", new object[] {
                        FiscalYearId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecord_Details[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectEkhtetamiyeAsync(int FiscalYearId, string IP) {
            this.SelectEkhtetamiyeAsync(FiscalYearId, IP, null);
        }
        
        /// <remarks/>
        public void SelectEkhtetamiyeAsync(int FiscalYearId, string IP, object userState) {
            if ((this.SelectEkhtetamiyeOperationCompleted == null)) {
                this.SelectEkhtetamiyeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectEkhtetamiyeOperationCompleted);
            }
            this.InvokeAsync("SelectEkhtetamiye", new object[] {
                        FiscalYearId,
                        IP}, this.SelectEkhtetamiyeOperationCompleted, userState);
        }
        
        private void OnSelectEkhtetamiyeOperationCompleted(object arg) {
            if ((this.SelectEkhtetamiyeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectEkhtetamiyeCompleted(this, new SelectEkhtetamiyeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectBastanHesabha", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecord_Details[] SelectBastanHesabha(int FiscalYearId, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectBastanHesabha", new object[] {
                        FiscalYearId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecord_Details[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectBastanHesabhaAsync(int FiscalYearId, string IP) {
            this.SelectBastanHesabhaAsync(FiscalYearId, IP, null);
        }
        
        /// <remarks/>
        public void SelectBastanHesabhaAsync(int FiscalYearId, string IP, object userState) {
            if ((this.SelectBastanHesabhaOperationCompleted == null)) {
                this.SelectBastanHesabhaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectBastanHesabhaOperationCompleted);
            }
            this.InvokeAsync("SelectBastanHesabha", new object[] {
                        FiscalYearId,
                        IP}, this.SelectBastanHesabhaOperationCompleted, userState);
        }
        
        private void OnSelectBastanHesabhaOperationCompleted(object arg) {
            if ((this.SelectBastanHesabhaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectBastanHesabhaCompleted(this, new SelectBastanHesabhaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectHesabDaryaftani", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecord_Details[] SelectHesabDaryaftani(string FieldName, int FiscalYearId, int ShomareHesabId, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectHesabDaryaftani", new object[] {
                        FieldName,
                        FiscalYearId,
                        ShomareHesabId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecord_Details[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectHesabDaryaftaniAsync(string FieldName, int FiscalYearId, int ShomareHesabId, string IP) {
            this.SelectHesabDaryaftaniAsync(FieldName, FiscalYearId, ShomareHesabId, IP, null);
        }
        
        /// <remarks/>
        public void SelectHesabDaryaftaniAsync(string FieldName, int FiscalYearId, int ShomareHesabId, string IP, object userState) {
            if ((this.SelectHesabDaryaftaniOperationCompleted == null)) {
                this.SelectHesabDaryaftaniOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectHesabDaryaftaniOperationCompleted);
            }
            this.InvokeAsync("SelectHesabDaryaftani", new object[] {
                        FieldName,
                        FiscalYearId,
                        ShomareHesabId,
                        IP}, this.SelectHesabDaryaftaniOperationCompleted, userState);
        }
        
        private void OnSelectHesabDaryaftaniOperationCompleted(object arg) {
            if ((this.SelectHesabDaryaftaniCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectHesabDaryaftaniCompleted(this, new SelectHesabDaryaftaniCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/SelectEftetahiye", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DocumentRecord_Details[] SelectEftetahiye(int FiscalYearId, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectEftetahiye", new object[] {
                        FiscalYearId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DocumentRecord_Details[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectEftetahiyeAsync(int FiscalYearId, string IP) {
            this.SelectEftetahiyeAsync(FiscalYearId, IP, null);
        }
        
        /// <remarks/>
        public void SelectEftetahiyeAsync(int FiscalYearId, string IP, object userState) {
            if ((this.SelectEftetahiyeOperationCompleted == null)) {
                this.SelectEftetahiyeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectEftetahiyeOperationCompleted);
            }
            this.InvokeAsync("SelectEftetahiye", new object[] {
                        FiscalYearId,
                        IP}, this.SelectEftetahiyeOperationCompleted, userState);
        }
        
        private void OnSelectEftetahiyeOperationCompleted(object arg) {
            if ((this.SelectEftetahiyeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectEftetahiyeCompleted(this, new SelectEftetahiyeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCaseTypeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CaseType GetCaseTypeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCaseTypeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CaseType)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseTypeDetailAsync(int Id, string IP) {
            this.GetCaseTypeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetCaseTypeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetCaseTypeDetailOperationCompleted == null)) {
                this.GetCaseTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetCaseTypeDetail", new object[] {
                        Id,
                        IP}, this.GetCaseTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetCaseTypeDetailOperationCompleted(object arg) {
            if ((this.GetCaseTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseTypeDetailCompleted(this, new GetCaseTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCaseTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CaseType[] GetCaseTypeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCaseTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CaseType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetCaseTypeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCaseTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetCaseTypeWithFilterOperationCompleted == null)) {
                this.GetCaseTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCaseTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetCaseTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCaseTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetCaseTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseTypeWithFilterCompleted(this, new GetCaseTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertCaseType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCaseType(string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCaseType", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCaseTypeAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertCaseTypeAsync(Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCaseTypeAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCaseTypeOperationCompleted == null)) {
                this.InsertCaseTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCaseTypeOperationCompleted);
            }
            this.InvokeAsync("InsertCaseType", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCaseTypeOperationCompleted, userState);
        }
        
        private void OnInsertCaseTypeOperationCompleted(object arg) {
            if ((this.InsertCaseTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCaseTypeCompleted(this, new InsertCaseTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateCaseType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCaseType(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCaseType", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCaseTypeAsync(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCaseTypeAsync(Id, Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCaseTypeAsync(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCaseTypeOperationCompleted == null)) {
                this.UpdateCaseTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCaseTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateCaseType", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCaseTypeOperationCompleted, userState);
        }
        
        private void OnUpdateCaseTypeOperationCompleted(object arg) {
            if ((this.UpdateCaseTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCaseTypeCompleted(this, new UpdateCaseTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteCaseType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCaseType(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCaseType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCaseTypeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCaseTypeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCaseTypeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCaseTypeOperationCompleted == null)) {
                this.DeleteCaseTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCaseTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteCaseType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCaseTypeOperationCompleted, userState);
        }
        
        private void OnDeleteCaseTypeOperationCompleted(object arg) {
            if ((this.DeleteCaseTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCaseTypeCompleted(this, new DeleteCaseTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCoding_HeaderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Coding_Header GetCoding_HeaderDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCoding_HeaderDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Coding_Header)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoding_HeaderDetailAsync(int Id, int OrganId, string IP) {
            this.GetCoding_HeaderDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetCoding_HeaderDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetCoding_HeaderDetailOperationCompleted == null)) {
                this.GetCoding_HeaderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoding_HeaderDetailOperationCompleted);
            }
            this.InvokeAsync("GetCoding_HeaderDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetCoding_HeaderDetailOperationCompleted, userState);
        }
        
        private void OnGetCoding_HeaderDetailOperationCompleted(object arg) {
            if ((this.GetCoding_HeaderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoding_HeaderDetailCompleted(this, new GetCoding_HeaderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCoding_HeaderWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Coding_Header[] GetCoding_HeaderWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCoding_HeaderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Coding_Header[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCoding_HeaderWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetCoding_HeaderWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCoding_HeaderWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetCoding_HeaderWithFilterOperationCompleted == null)) {
                this.GetCoding_HeaderWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoding_HeaderWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCoding_HeaderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetCoding_HeaderWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCoding_HeaderWithFilterOperationCompleted(object arg) {
            if ((this.GetCoding_HeaderWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoding_HeaderWithFilterCompleted(this, new GetCoding_HeaderWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertCoding_Header", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCoding_Header(short Year, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCoding_Header", new object[] {
                        Year,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCoding_HeaderAsync(short Year, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertCoding_HeaderAsync(Year, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCoding_HeaderAsync(short Year, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCoding_HeaderOperationCompleted == null)) {
                this.InsertCoding_HeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCoding_HeaderOperationCompleted);
            }
            this.InvokeAsync("InsertCoding_Header", new object[] {
                        Year,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCoding_HeaderOperationCompleted, userState);
        }
        
        private void OnInsertCoding_HeaderOperationCompleted(object arg) {
            if ((this.InsertCoding_HeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCoding_HeaderCompleted(this, new InsertCoding_HeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateCoding_Header", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCoding_Header(int Id, short Year, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCoding_Header", new object[] {
                        Id,
                        Year,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCoding_HeaderAsync(int Id, short Year, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCoding_HeaderAsync(Id, Year, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCoding_HeaderAsync(int Id, short Year, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCoding_HeaderOperationCompleted == null)) {
                this.UpdateCoding_HeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCoding_HeaderOperationCompleted);
            }
            this.InvokeAsync("UpdateCoding_Header", new object[] {
                        Id,
                        Year,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCoding_HeaderOperationCompleted, userState);
        }
        
        private void OnUpdateCoding_HeaderOperationCompleted(object arg) {
            if ((this.UpdateCoding_HeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCoding_HeaderCompleted(this, new UpdateCoding_HeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteCoding_Header", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCoding_Header(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCoding_Header", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCoding_HeaderAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCoding_HeaderAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCoding_HeaderAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCoding_HeaderOperationCompleted == null)) {
                this.DeleteCoding_HeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCoding_HeaderOperationCompleted);
            }
            this.InvokeAsync("DeleteCoding_Header", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCoding_HeaderOperationCompleted, userState);
        }
        
        private void OnDeleteCoding_HeaderOperationCompleted(object arg) {
            if ((this.DeleteCoding_HeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCoding_HeaderCompleted(this, new DeleteCoding_HeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/CopyFromTemplateCodingToCoding", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CopyFromTemplateCodingToCoding(int HeaderId, int TempNameId, System.Data.DataTable IncomeCodes, int OrganId, string IP, string Username, string Password, out ClsError Error) {
            object[] results = this.Invoke("CopyFromTemplateCodingToCoding", new object[] {
                        HeaderId,
                        TempNameId,
                        IncomeCodes,
                        OrganId,
                        IP,
                        Username,
                        Password});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CopyFromTemplateCodingToCodingAsync(int HeaderId, int TempNameId, System.Data.DataTable IncomeCodes, int OrganId, string IP, string Username, string Password) {
            this.CopyFromTemplateCodingToCodingAsync(HeaderId, TempNameId, IncomeCodes, OrganId, IP, Username, Password, null);
        }
        
        /// <remarks/>
        public void CopyFromTemplateCodingToCodingAsync(int HeaderId, int TempNameId, System.Data.DataTable IncomeCodes, int OrganId, string IP, string Username, string Password, object userState) {
            if ((this.CopyFromTemplateCodingToCodingOperationCompleted == null)) {
                this.CopyFromTemplateCodingToCodingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyFromTemplateCodingToCodingOperationCompleted);
            }
            this.InvokeAsync("CopyFromTemplateCodingToCoding", new object[] {
                        HeaderId,
                        TempNameId,
                        IncomeCodes,
                        OrganId,
                        IP,
                        Username,
                        Password}, this.CopyFromTemplateCodingToCodingOperationCompleted, userState);
        }
        
        private void OnCopyFromTemplateCodingToCodingOperationCompleted(object arg) {
            if ((this.CopyFromTemplateCodingToCodingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyFromTemplateCodingToCodingCompleted(this, new CopyFromTemplateCodingToCodingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCoding_DetailsDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Coding_Details GetCoding_DetailsDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCoding_DetailsDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Coding_Details)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoding_DetailsDetailAsync(int Id, string IP) {
            this.GetCoding_DetailsDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetCoding_DetailsDetailAsync(int Id, string IP, object userState) {
            if ((this.GetCoding_DetailsDetailOperationCompleted == null)) {
                this.GetCoding_DetailsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoding_DetailsDetailOperationCompleted);
            }
            this.InvokeAsync("GetCoding_DetailsDetail", new object[] {
                        Id,
                        IP}, this.GetCoding_DetailsDetailOperationCompleted, userState);
        }
        
        private void OnGetCoding_DetailsDetailOperationCompleted(object arg) {
            if ((this.GetCoding_DetailsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoding_DetailsDetailCompleted(this, new GetCoding_DetailsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetItemId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetItemId(int HeaderId, int PId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetItemId", new object[] {
                        HeaderId,
                        PId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemIdAsync(int HeaderId, int PId, string IP) {
            this.GetItemIdAsync(HeaderId, PId, IP, null);
        }
        
        /// <remarks/>
        public void GetItemIdAsync(int HeaderId, int PId, string IP, object userState) {
            if ((this.GetItemIdOperationCompleted == null)) {
                this.GetItemIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemIdOperationCompleted);
            }
            this.InvokeAsync("GetItemId", new object[] {
                        HeaderId,
                        PId,
                        IP}, this.GetItemIdOperationCompleted, userState);
        }
        
        private void OnGetItemIdOperationCompleted(object arg) {
            if ((this.GetItemIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemIdCompleted(this, new GetItemIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/GetCoding_DetailsWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Coding_Details[] GetCoding_DetailsWithFilter(string FieldName, string FilterValue, string FilterValue2, string FilterValue3, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCoding_DetailsWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        FilterValue3,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Coding_Details[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCoding_DetailsWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, string FilterValue3, int Top, string IP) {
            this.GetCoding_DetailsWithFilterAsync(FieldName, FilterValue, FilterValue2, FilterValue3, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCoding_DetailsWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, string FilterValue3, int Top, string IP, object userState) {
            if ((this.GetCoding_DetailsWithFilterOperationCompleted == null)) {
                this.GetCoding_DetailsWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoding_DetailsWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCoding_DetailsWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        FilterValue3,
                        Top,
                        IP}, this.GetCoding_DetailsWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCoding_DetailsWithFilterOperationCompleted(object arg) {
            if ((this.GetCoding_DetailsWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoding_DetailsWithFilterCompleted(this, new GetCoding_DetailsWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/InsertCoding_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCoding_Details(
                    int HeaderId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, 
                    string PCod, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> TempCodingId, 
                    string Title, 
                    string Code, 
                    string CodeDaramad, 
                    int AccountLevelId, 
                    int MahiyatId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> Mahiyat_GardeshId, 
                    byte TypeHesabId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("InsertCoding_Details", new object[] {
                        HeaderId,
                        PID,
                        PCod,
                        TempCodingId,
                        Title,
                        Code,
                        CodeDaramad,
                        AccountLevelId,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        TypeHesabId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCoding_DetailsAsync(
                    int HeaderId, 
                    System.Nullable<int> PID, 
                    string PCod, 
                    System.Nullable<int> TempCodingId, 
                    string Title, 
                    string Code, 
                    string CodeDaramad, 
                    int AccountLevelId, 
                    int MahiyatId, 
                    System.Nullable<int> Mahiyat_GardeshId, 
                    byte TypeHesabId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.InsertCoding_DetailsAsync(HeaderId, PID, PCod, TempCodingId, Title, Code, CodeDaramad, AccountLevelId, MahiyatId, Mahiyat_GardeshId, TypeHesabId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCoding_DetailsAsync(
                    int HeaderId, 
                    System.Nullable<int> PID, 
                    string PCod, 
                    System.Nullable<int> TempCodingId, 
                    string Title, 
                    string Code, 
                    string CodeDaramad, 
                    int AccountLevelId, 
                    int MahiyatId, 
                    System.Nullable<int> Mahiyat_GardeshId, 
                    byte TypeHesabId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.InsertCoding_DetailsOperationCompleted == null)) {
                this.InsertCoding_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCoding_DetailsOperationCompleted);
            }
            this.InvokeAsync("InsertCoding_Details", new object[] {
                        HeaderId,
                        PID,
                        PCod,
                        TempCodingId,
                        Title,
                        Code,
                        CodeDaramad,
                        AccountLevelId,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        TypeHesabId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCoding_DetailsOperationCompleted, userState);
        }
        
        private void OnInsertCoding_DetailsOperationCompleted(object arg) {
            if ((this.InsertCoding_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCoding_DetailsCompleted(this, new InsertCoding_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/UpdateCoding_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCoding_Details(
                    int Id, 
                    int HeaderId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> TempCodingId, 
                    string Title, 
                    string Code, 
                    string CodeDaramad, 
                    int AccountLevelId, 
                    int MahiyatId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> Mahiyat_GardeshId, 
                    byte TypeHesabId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateCoding_Details", new object[] {
                        Id,
                        HeaderId,
                        TempCodingId,
                        Title,
                        Code,
                        CodeDaramad,
                        AccountLevelId,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        TypeHesabId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCoding_DetailsAsync(int Id, int HeaderId, System.Nullable<int> TempCodingId, string Title, string Code, string CodeDaramad, int AccountLevelId, int MahiyatId, System.Nullable<int> Mahiyat_GardeshId, byte TypeHesabId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCoding_DetailsAsync(Id, HeaderId, TempCodingId, Title, Code, CodeDaramad, AccountLevelId, MahiyatId, Mahiyat_GardeshId, TypeHesabId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCoding_DetailsAsync(
                    int Id, 
                    int HeaderId, 
                    System.Nullable<int> TempCodingId, 
                    string Title, 
                    string Code, 
                    string CodeDaramad, 
                    int AccountLevelId, 
                    int MahiyatId, 
                    System.Nullable<int> Mahiyat_GardeshId, 
                    byte TypeHesabId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.UpdateCoding_DetailsOperationCompleted == null)) {
                this.UpdateCoding_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCoding_DetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateCoding_Details", new object[] {
                        Id,
                        HeaderId,
                        TempCodingId,
                        Title,
                        Code,
                        CodeDaramad,
                        AccountLevelId,
                        MahiyatId,
                        Mahiyat_GardeshId,
                        TypeHesabId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCoding_DetailsOperationCompleted, userState);
        }
        
        private void OnUpdateCoding_DetailsOperationCompleted(object arg) {
            if ((this.UpdateCoding_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCoding_DetailsCompleted(this, new UpdateCoding_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAccountingService/DeleteCoding_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCoding_Details(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCoding_Details", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCoding_DetailsAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCoding_DetailsAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCoding_DetailsAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCoding_DetailsOperationCompleted == null)) {
                this.DeleteCoding_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCoding_DetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteCoding_Details", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCoding_DetailsOperationCompleted, userState);
        }
        
        private void OnDeleteCoding_DetailsOperationCompleted(object arg) {
            if ((this.DeleteCoding_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCoding_DetailsCompleted(this, new DeleteCoding_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Coding_Details {
        
        private int fldIdField;
        
        private string fldPCodField;
        
        private System.Nullable<int> fldTempCodingIdField;
        
        private string fldTitleField;
        
        private string fldCodeField;
        
        private int fldAccountLevelIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIpField;
        
        private int fldUserIdField;
        
        private int fldMahiyatIdField;
        
        private int fldHeaderCodIdField;
        
        private string fldName_TemplateCodingField;
        
        private string fldName_AccountingLevelField;
        
        private short fldYearField;
        
        private int fldOrganIdField;
        
        private int fldTempNameIdField;
        
        private int fldAccountingTypeIdField;
        
        private byte fldTypeHesabIdField;
        
        private string fldNameTypeHesabField;
        
        private string fldDaramadCodeField;
        
        private int fldItemIdParentField;
        
        private int lastNodeField;
        
        private System.Nullable<int> fldMahiyat_GardeshIdField;
        
        private System.Nullable<int> fldItemIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldPCod {
            get {
                return this.fldPCodField;
            }
            set {
                this.fldPCodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldTempCodingId {
            get {
                return this.fldTempCodingIdField;
            }
            set {
                this.fldTempCodingIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldCode {
            get {
                return this.fldCodeField;
            }
            set {
                this.fldCodeField = value;
            }
        }
        
        /// <remarks/>
        public int fldAccountLevelId {
            get {
                return this.fldAccountLevelIdField;
            }
            set {
                this.fldAccountLevelIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIp {
            get {
                return this.fldIpField;
            }
            set {
                this.fldIpField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldMahiyatId {
            get {
                return this.fldMahiyatIdField;
            }
            set {
                this.fldMahiyatIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldHeaderCodId {
            get {
                return this.fldHeaderCodIdField;
            }
            set {
                this.fldHeaderCodIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_TemplateCoding {
            get {
                return this.fldName_TemplateCodingField;
            }
            set {
                this.fldName_TemplateCodingField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_AccountingLevel {
            get {
                return this.fldName_AccountingLevelField;
            }
            set {
                this.fldName_AccountingLevelField = value;
            }
        }
        
        /// <remarks/>
        public short fldYear {
            get {
                return this.fldYearField;
            }
            set {
                this.fldYearField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldTempNameId {
            get {
                return this.fldTempNameIdField;
            }
            set {
                this.fldTempNameIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldAccountingTypeId {
            get {
                return this.fldAccountingTypeIdField;
            }
            set {
                this.fldAccountingTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public byte fldTypeHesabId {
            get {
                return this.fldTypeHesabIdField;
            }
            set {
                this.fldTypeHesabIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameTypeHesab {
            get {
                return this.fldNameTypeHesabField;
            }
            set {
                this.fldNameTypeHesabField = value;
            }
        }
        
        /// <remarks/>
        public string fldDaramadCode {
            get {
                return this.fldDaramadCodeField;
            }
            set {
                this.fldDaramadCodeField = value;
            }
        }
        
        /// <remarks/>
        public int fldItemIdParent {
            get {
                return this.fldItemIdParentField;
            }
            set {
                this.fldItemIdParentField = value;
            }
        }
        
        /// <remarks/>
        public int lastNode {
            get {
                return this.lastNodeField;
            }
            set {
                this.lastNodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMahiyat_GardeshId {
            get {
                return this.fldMahiyat_GardeshIdField;
            }
            set {
                this.fldMahiyat_GardeshIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldItemId {
            get {
                return this.fldItemIdField;
            }
            set {
                this.fldItemIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Coding_Header {
        
        private int fldIdField;
        
        private short fldYearField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public short fldYear {
            get {
                return this.fldYearField;
            }
            set {
                this.fldYearField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_CaseType {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ParamDocumentDesc {
        
        private string paramField;
        
        private string valueField;
        
        /// <remarks/>
        public string param {
            get {
                return this.paramField;
            }
            set {
                this.paramField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_DocumentDesc {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private string fldDocDescField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        private System.Nullable<bool> fldFlagField;
        
        private string fldFlagNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDocDesc {
            get {
                return this.fldDocDescField;
            }
            set {
                this.fldDocDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fldFlag {
            get {
                return this.fldFlagField;
            }
            set {
                this.fldFlagField = value;
            }
        }
        
        /// <remarks/>
        public string fldFlagName {
            get {
                return this.fldFlagNameField;
            }
            set {
                this.fldFlagNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_LevelsAccountingType {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private int fldAccountTypeIdField;
        
        private int fldArghumNumField;
        
        private string fldDescField;
        
        private System.DateTime flddateField;
        
        private string fldIpField;
        
        private int fldUserIdField;
        
        private string fldName_AccountingTypeField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldAccountTypeId {
            get {
                return this.fldAccountTypeIdField;
            }
            set {
                this.fldAccountTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldArghumNum {
            get {
                return this.fldArghumNumField;
            }
            set {
                this.fldArghumNumField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime flddate {
            get {
                return this.flddateField;
            }
            set {
                this.flddateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIp {
            get {
                return this.fldIpField;
            }
            set {
                this.fldIpField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_AccountingType {
            get {
                return this.fldName_AccountingTypeField;
            }
            set {
                this.fldName_AccountingTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Mahiyat {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIpField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIp {
            get {
                return this.fldIpField;
            }
            set {
                this.fldIpField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_TemplateName {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private int fldAccountingTypeIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIpField;
        
        private int fldUserIdField;
        
        private string fldName_AccountingTypeField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldAccountingTypeId {
            get {
                return this.fldAccountingTypeIdField;
            }
            set {
                this.fldAccountingTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIp {
            get {
                return this.fldIpField;
            }
            set {
                this.fldIpField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_AccountingType {
            get {
                return this.fldName_AccountingTypeField;
            }
            set {
                this.fldName_AccountingTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ItemNecessary {
        
        private int fldIdField;
        
        private string fldNameItemField;
        
        private int fldMahiyatIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIpField;
        
        private int fldUserIdField;
        
        private byte fldTypeHesabIdField;
        
        private string fldNameTypeHesabField;
        
        private System.Nullable<int> fldMahiyat_GardeshIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameItem {
            get {
                return this.fldNameItemField;
            }
            set {
                this.fldNameItemField = value;
            }
        }
        
        /// <remarks/>
        public int fldMahiyatId {
            get {
                return this.fldMahiyatIdField;
            }
            set {
                this.fldMahiyatIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIp {
            get {
                return this.fldIpField;
            }
            set {
                this.fldIpField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public byte fldTypeHesabId {
            get {
                return this.fldTypeHesabIdField;
            }
            set {
                this.fldTypeHesabIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameTypeHesab {
            get {
                return this.fldNameTypeHesabField;
            }
            set {
                this.fldNameTypeHesabField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMahiyat_GardeshId {
            get {
                return this.fldMahiyat_GardeshIdField;
            }
            set {
                this.fldMahiyat_GardeshIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_TemplateCoding {
        
        private int fldIdField;
        
        private System.Nullable<int> fldItemIdField;
        
        private string fldNameField;
        
        private string fldPCodField;
        
        private int fldMahiyatIdField;
        
        private string fldCodeField;
        
        private int fldTempNameIdField;
        
        private int fldLevelsAccountTypIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIpField;
        
        private int fldUserIdField;
        
        private string fldTemplateNameField;
        
        private string fldNameItemField;
        
        private string fldTitle_MahiyatField;
        
        private string fldName_LevelsAccountingTypeField;
        
        private string fldNameTypeHesabField;
        
        private byte fldTypeHesabIdField;
        
        private string fldDaramadCodeField;
        
        private string fldCodeBudgetField;
        
        private System.Nullable<bool> fldAddChildNodeField;
        
        private System.Nullable<int> fldMahiyat_GardeshIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldItemId {
            get {
                return this.fldItemIdField;
            }
            set {
                this.fldItemIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldPCod {
            get {
                return this.fldPCodField;
            }
            set {
                this.fldPCodField = value;
            }
        }
        
        /// <remarks/>
        public int fldMahiyatId {
            get {
                return this.fldMahiyatIdField;
            }
            set {
                this.fldMahiyatIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldCode {
            get {
                return this.fldCodeField;
            }
            set {
                this.fldCodeField = value;
            }
        }
        
        /// <remarks/>
        public int fldTempNameId {
            get {
                return this.fldTempNameIdField;
            }
            set {
                this.fldTempNameIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldLevelsAccountTypId {
            get {
                return this.fldLevelsAccountTypIdField;
            }
            set {
                this.fldLevelsAccountTypIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIp {
            get {
                return this.fldIpField;
            }
            set {
                this.fldIpField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTemplateName {
            get {
                return this.fldTemplateNameField;
            }
            set {
                this.fldTemplateNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameItem {
            get {
                return this.fldNameItemField;
            }
            set {
                this.fldNameItemField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle_Mahiyat {
            get {
                return this.fldTitle_MahiyatField;
            }
            set {
                this.fldTitle_MahiyatField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_LevelsAccountingType {
            get {
                return this.fldName_LevelsAccountingTypeField;
            }
            set {
                this.fldName_LevelsAccountingTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameTypeHesab {
            get {
                return this.fldNameTypeHesabField;
            }
            set {
                this.fldNameTypeHesabField = value;
            }
        }
        
        /// <remarks/>
        public byte fldTypeHesabId {
            get {
                return this.fldTypeHesabIdField;
            }
            set {
                this.fldTypeHesabIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDaramadCode {
            get {
                return this.fldDaramadCodeField;
            }
            set {
                this.fldDaramadCodeField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodeBudget {
            get {
                return this.fldCodeBudgetField;
            }
            set {
                this.fldCodeBudgetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fldAddChildNode {
            get {
                return this.fldAddChildNodeField;
            }
            set {
                this.fldAddChildNodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMahiyat_GardeshId {
            get {
                return this.fldMahiyat_GardeshIdField;
            }
            set {
                this.fldMahiyat_GardeshIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Centerco_TarifNashodeh {
        
        private int fldCenterCoIdField;
        
        private string fldNameCenterField;
        
        /// <remarks/>
        public int fldCenterCoId {
            get {
                return this.fldCenterCoIdField;
            }
            set {
                this.fldCenterCoIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameCenter {
            get {
                return this.fldNameCenterField;
            }
            set {
                this.fldNameCenterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_TreeCenterCost {
        
        private int fldIdField;
        
        private int fldOrganIdField;
        
        private int fldGroupCenterCoIdField;
        
        private System.Nullable<int> fldPIDField;
        
        private string fldNameField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        private int fldNodeTypeField;
        
        private int fldCenter_treeIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldGroupCenterCoId {
            get {
                return this.fldGroupCenterCoIdField;
            }
            set {
                this.fldGroupCenterCoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldNodeType {
            get {
                return this.fldNodeTypeField;
            }
            set {
                this.fldNodeTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fldCenter_treeId {
            get {
                return this.fldCenter_treeIdField;
            }
            set {
                this.fldCenter_treeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_GroupCenterCost {
        
        private int fldIdField;
        
        private int fldOrganIdField;
        
        private string fldNameGroupField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameGroup {
            get {
                return this.fldNameGroupField;
            }
            set {
                this.fldNameGroupField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_AccountingLevel {
        
        private int fldIdField;
        
        private int fldOrganIdField;
        
        private short fldYearField;
        
        private int fldArghamNumField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        private string fldNameField;
        
        private System.Nullable<long> fldLevelIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public short fldYear {
            get {
                return this.fldYearField;
            }
            set {
                this.fldYearField = value;
            }
        }
        
        /// <remarks/>
        public int fldArghamNum {
            get {
                return this.fldArghamNumField;
            }
            set {
                this.fldArghamNumField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLevelId {
            get {
                return this.fldLevelIdField;
            }
            set {
                this.fldLevelIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_CenterCost {
        
        private int fldIdField;
        
        private int fldOrganIdField;
        
        private string fldNameCenterField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameCenter {
            get {
                return this.fldNameCenterField;
            }
            set {
                this.fldNameCenterField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_AccountingType {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Dafater {
        
        private string fldCodeField;
        
        private string fldTitleField;
        
        private System.Nullable<long> fldBedehkarField;
        
        private System.Nullable<long> fldBestankarField;
        
        private int fldDocumentNumField;
        
        private string fldTarikhDocumentField;
        
        private string fldDescriptionDocuField;
        
        private System.Nullable<long> fldMandeField;
        
        /// <remarks/>
        public string fldCode {
            get {
                return this.fldCodeField;
            }
            set {
                this.fldCodeField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldBedehkar {
            get {
                return this.fldBedehkarField;
            }
            set {
                this.fldBedehkarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldBestankar {
            get {
                return this.fldBestankarField;
            }
            set {
                this.fldBestankarField = value;
            }
        }
        
        /// <remarks/>
        public int fldDocumentNum {
            get {
                return this.fldDocumentNumField;
            }
            set {
                this.fldDocumentNumField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhDocument {
            get {
                return this.fldTarikhDocumentField;
            }
            set {
                this.fldTarikhDocumentField = value;
            }
        }
        
        /// <remarks/>
        public string fldDescriptionDocu {
            get {
                return this.fldDescriptionDocuField;
            }
            set {
                this.fldDescriptionDocuField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldMande {
            get {
                return this.fldMandeField;
            }
            set {
                this.fldMandeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_BankBill_Tarikh {
        
        private string fldMinTarikhField;
        
        private string fldMaxTarikhField;
        
        /// <remarks/>
        public string fldMinTarikh {
            get {
                return this.fldMinTarikhField;
            }
            set {
                this.fldMinTarikhField = value;
            }
        }
        
        /// <remarks/>
        public string fldMaxTarikh {
            get {
                return this.fldMaxTarikhField;
            }
            set {
                this.fldMaxTarikhField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_BankBillDetails {
        
        private int fldIdField;
        
        private int fldHedearIdField;
        
        private long fldBedehkarField;
        
        private long fldBestankarField;
        
        private long fldMandehField;
        
        private string fldTarikhField;
        
        private string fldTimeField;
        
        private string fldCodePeygiriField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldHedearId {
            get {
                return this.fldHedearIdField;
            }
            set {
                this.fldHedearIdField = value;
            }
        }
        
        /// <remarks/>
        public long fldBedehkar {
            get {
                return this.fldBedehkarField;
            }
            set {
                this.fldBedehkarField = value;
            }
        }
        
        /// <remarks/>
        public long fldBestankar {
            get {
                return this.fldBestankarField;
            }
            set {
                this.fldBestankarField = value;
            }
        }
        
        /// <remarks/>
        public long fldMandeh {
            get {
                return this.fldMandehField;
            }
            set {
                this.fldMandehField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikh {
            get {
                return this.fldTarikhField;
            }
            set {
                this.fldTarikhField = value;
            }
        }
        
        /// <remarks/>
        public string fldTime {
            get {
                return this.fldTimeField;
            }
            set {
                this.fldTimeField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodePeygiri {
            get {
                return this.fldCodePeygiriField;
            }
            set {
                this.fldCodePeygiriField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_MoghayeratBanki {
        
        private long fldBedehkarField;
        
        private long fldBestankarField;
        
        private string fldTarikhField;
        
        private string fldCodePeygiriField;
        
        private long fldMandehField;
        
        private string fldTitleField;
        
        private int fldDocumentNumField;
        
        private string fldCodeField;
        
        /// <remarks/>
        public long fldBedehkar {
            get {
                return this.fldBedehkarField;
            }
            set {
                this.fldBedehkarField = value;
            }
        }
        
        /// <remarks/>
        public long fldBestankar {
            get {
                return this.fldBestankarField;
            }
            set {
                this.fldBestankarField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikh {
            get {
                return this.fldTarikhField;
            }
            set {
                this.fldTarikhField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodePeygiri {
            get {
                return this.fldCodePeygiriField;
            }
            set {
                this.fldCodePeygiriField = value;
            }
        }
        
        /// <remarks/>
        public long fldMandeh {
            get {
                return this.fldMandehField;
            }
            set {
                this.fldMandehField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public int fldDocumentNum {
            get {
                return this.fldDocumentNumField;
            }
            set {
                this.fldDocumentNumField = value;
            }
        }
        
        /// <remarks/>
        public string fldCode {
            get {
                return this.fldCodeField;
            }
            set {
                this.fldCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_BankBillHeader {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private int fldShomareHesabIdField;
        
        private int fldFiscalYearIdField;
        
        private string fldJsonFileField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        private int fldPatternIdField;
        
        private string fldNamePatternField;
        
        private string fldShomareHesabField;
        
        private string fldBankNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldShomareHesabId {
            get {
                return this.fldShomareHesabIdField;
            }
            set {
                this.fldShomareHesabIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldFiscalYearId {
            get {
                return this.fldFiscalYearIdField;
            }
            set {
                this.fldFiscalYearIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldJsonFile {
            get {
                return this.fldJsonFileField;
            }
            set {
                this.fldJsonFileField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldPatternId {
            get {
                return this.fldPatternIdField;
            }
            set {
                this.fldPatternIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNamePattern {
            get {
                return this.fldNamePatternField;
            }
            set {
                this.fldNamePatternField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareHesab {
            get {
                return this.fldShomareHesabField;
            }
            set {
                this.fldShomareHesabField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankName {
            get {
                return this.fldBankNameField;
            }
            set {
                this.fldBankNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_BankTemplate_Header {
        
        private int fldIdField;
        
        private string fldNamePatternField;
        
        private short fldStartRowField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        private string fldBankNameField;
        
        private string fldPasvandField;
        
        private System.Nullable<int> fldFileIdField;
        
        private string fldBankIdField;
        
        private string fldDetailsIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNamePattern {
            get {
                return this.fldNamePatternField;
            }
            set {
                this.fldNamePatternField = value;
            }
        }
        
        /// <remarks/>
        public short fldStartRow {
            get {
                return this.fldStartRowField;
            }
            set {
                this.fldStartRowField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankName {
            get {
                return this.fldBankNameField;
            }
            set {
                this.fldBankNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldPasvand {
            get {
                return this.fldPasvandField;
            }
            set {
                this.fldPasvandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldFileId {
            get {
                return this.fldFileIdField;
            }
            set {
                this.fldFileIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankId {
            get {
                return this.fldBankIdField;
            }
            set {
                this.fldBankIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDetailsId {
            get {
                return this.fldDetailsIdField;
            }
            set {
                this.fldDetailsIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_CodingDetail_CaseType {
        
        private int fldIdField;
        
        private int fldCodingDetailIdField;
        
        private int fldCaseTypeIdField;
        
        private int fldUserIdField;
        
        private string fldIPField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldCodingDetailId {
            get {
                return this.fldCodingDetailIdField;
            }
            set {
                this.fldCodingDetailIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldCaseTypeId {
            get {
                return this.fldCaseTypeIdField;
            }
            set {
                this.fldCaseTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_CheckRemain {
        
        private System.Nullable<bool> fldCheckField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fldCheck {
            get {
                return this.fldCheckField;
            }
            set {
                this.fldCheckField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ArchiveTree {
        
        private int fldIdField;
        
        private System.Nullable<int> fldPIDField;
        
        private string fldTitleField;
        
        private bool fldFileUploadField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private System.Nullable<int> fldOrganIdField;
        
        private System.Nullable<int> fldModuleIdField;
        
        private string fldMaduleNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public bool fldFileUpload {
            get {
                return this.fldFileUploadField;
            }
            set {
                this.fldFileUploadField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldModuleId {
            get {
                return this.fldModuleIdField;
            }
            set {
                this.fldModuleIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldMaduleName {
            get {
                return this.fldMaduleNameField;
            }
            set {
                this.fldMaduleNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_DocumentRecorde_File_BookMark {
        
        private int fldIdField;
        
        private byte[] fldImageField;
        
        private string fldPasvandField;
        
        private System.Nullable<int> fldArchiveTreeIdField;
        
        private System.Nullable<bool> fldIsBookMarkField;
        
        private string fldTitleField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fldImage {
            get {
                return this.fldImageField;
            }
            set {
                this.fldImageField = value;
            }
        }
        
        /// <remarks/>
        public string fldPasvand {
            get {
                return this.fldPasvandField;
            }
            set {
                this.fldPasvandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldArchiveTreeId {
            get {
                return this.fldArchiveTreeIdField;
            }
            set {
                this.fldArchiveTreeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fldIsBookMark {
            get {
                return this.fldIsBookMarkField;
            }
            set {
                this.fldIsBookMarkField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_DocumentBookMark {
        
        private int fldIdField;
        
        private int fldDocumentRecordeIdField;
        
        private int fldArchiveTreeIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldDocumentRecordeId {
            get {
                return this.fldDocumentRecordeIdField;
            }
            set {
                this.fldDocumentRecordeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldArchiveTreeId {
            get {
                return this.fldArchiveTreeIdField;
            }
            set {
                this.fldArchiveTreeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_DocumentRecorde_File {
        
        private int fldIdField;
        
        private int fldDocumentHeaderIdField;
        
        private int fldFileIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldDocumentHeaderId {
            get {
                return this.fldDocumentHeaderIdField;
            }
            set {
                this.fldDocumentHeaderIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldFileId {
            get {
                return this.fldFileIdField;
            }
            set {
                this.fldFileIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_DocumentType {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_TypeHesab {
        
        private byte fldIdField;
        
        private string fldNameField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public byte fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_RptCodingTurnover {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private string fldParentTitleField;
        
        private System.Nullable<long> fldBedehkar_tField;
        
        private System.Nullable<long> fldBestankar_tField;
        
        private int fldTypeField;
        
        private System.Nullable<long> fldMande_tField;
        
        private string fldTypeName_tField;
        
        private int fldDocumentNumField;
        
        private string fldDescriptionDocuField;
        
        private long fldBedehkarField;
        
        private long fldBestankarField;
        
        private int fldDocument_HedearIdField;
        
        private string fldParvandeField;
        
        private string fldTarikhDocumentField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldParentTitle {
            get {
                return this.fldParentTitleField;
            }
            set {
                this.fldParentTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldBedehkar_t {
            get {
                return this.fldBedehkar_tField;
            }
            set {
                this.fldBedehkar_tField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldBestankar_t {
            get {
                return this.fldBestankar_tField;
            }
            set {
                this.fldBestankar_tField = value;
            }
        }
        
        /// <remarks/>
        public int fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldMande_t {
            get {
                return this.fldMande_tField;
            }
            set {
                this.fldMande_tField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeName_t {
            get {
                return this.fldTypeName_tField;
            }
            set {
                this.fldTypeName_tField = value;
            }
        }
        
        /// <remarks/>
        public int fldDocumentNum {
            get {
                return this.fldDocumentNumField;
            }
            set {
                this.fldDocumentNumField = value;
            }
        }
        
        /// <remarks/>
        public string fldDescriptionDocu {
            get {
                return this.fldDescriptionDocuField;
            }
            set {
                this.fldDescriptionDocuField = value;
            }
        }
        
        /// <remarks/>
        public long fldBedehkar {
            get {
                return this.fldBedehkarField;
            }
            set {
                this.fldBedehkarField = value;
            }
        }
        
        /// <remarks/>
        public long fldBestankar {
            get {
                return this.fldBestankarField;
            }
            set {
                this.fldBestankarField = value;
            }
        }
        
        /// <remarks/>
        public int fldDocument_HedearId {
            get {
                return this.fldDocument_HedearIdField;
            }
            set {
                this.fldDocument_HedearIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldParvande {
            get {
                return this.fldParvandeField;
            }
            set {
                this.fldParvandeField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhDocument {
            get {
                return this.fldTarikhDocumentField;
            }
            set {
                this.fldTarikhDocumentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_RptCodingStatus {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private string fldParentTitleField;
        
        private System.Nullable<long> fldMandeField;
        
        private string fldTypeNameField;
        
        private int fldTypeField;
        
        private string fldParvandeField;
        
        private int fldCaseTypeIdField;
        
        private int fldSourceIdField;
        
        private System.Nullable<int> fldMahiyatIdField;
        
        private int fldNoe_MahiyatField;
        
        private int fldNoe_MandeField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldParentTitle {
            get {
                return this.fldParentTitleField;
            }
            set {
                this.fldParentTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldMande {
            get {
                return this.fldMandeField;
            }
            set {
                this.fldMandeField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeName {
            get {
                return this.fldTypeNameField;
            }
            set {
                this.fldTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldParvande {
            get {
                return this.fldParvandeField;
            }
            set {
                this.fldParvandeField = value;
            }
        }
        
        /// <remarks/>
        public int fldCaseTypeId {
            get {
                return this.fldCaseTypeIdField;
            }
            set {
                this.fldCaseTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldSourceId {
            get {
                return this.fldSourceIdField;
            }
            set {
                this.fldSourceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMahiyatId {
            get {
                return this.fldMahiyatIdField;
            }
            set {
                this.fldMahiyatIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldNoe_Mahiyat {
            get {
                return this.fldNoe_MahiyatField;
            }
            set {
                this.fldNoe_MahiyatField = value;
            }
        }
        
        /// <remarks/>
        public int fldNoe_Mande {
            get {
                return this.fldNoe_MandeField;
            }
            set {
                this.fldNoe_MandeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_FiscalYear {
        
        private int fldIdField;
        
        private int fldOrganIdField;
        
        private short fldYearField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public short fldYear {
            get {
                return this.fldYearField;
            }
            set {
                this.fldYearField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ParvandeInfo {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private string fldCodemeliField;
        
        private string fldStartContractField;
        
        private string fldEndContractField;
        
        private System.Nullable<long> fldMablaghField;
        
        private string fldShenasePardakhtField;
        
        private string fldShenaseGhabzField;
        
        private string fldShomareHesabField;
        
        private string fldIsEbtalField;
        
        private string fldSharhField;
        
        private string fldTypeField;
        
        private System.Nullable<int> fldTypeIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodemeli {
            get {
                return this.fldCodemeliField;
            }
            set {
                this.fldCodemeliField = value;
            }
        }
        
        /// <remarks/>
        public string fldStartContract {
            get {
                return this.fldStartContractField;
            }
            set {
                this.fldStartContractField = value;
            }
        }
        
        /// <remarks/>
        public string fldEndContract {
            get {
                return this.fldEndContractField;
            }
            set {
                this.fldEndContractField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldMablagh {
            get {
                return this.fldMablaghField;
            }
            set {
                this.fldMablaghField = value;
            }
        }
        
        /// <remarks/>
        public string fldShenasePardakht {
            get {
                return this.fldShenasePardakhtField;
            }
            set {
                this.fldShenasePardakhtField = value;
            }
        }
        
        /// <remarks/>
        public string fldShenaseGhabz {
            get {
                return this.fldShenaseGhabzField;
            }
            set {
                this.fldShenaseGhabzField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareHesab {
            get {
                return this.fldShomareHesabField;
            }
            set {
                this.fldShomareHesabField = value;
            }
        }
        
        /// <remarks/>
        public string fldIsEbtal {
            get {
                return this.fldIsEbtalField;
            }
            set {
                this.fldIsEbtalField = value;
            }
        }
        
        /// <remarks/>
        public string fldSharh {
            get {
                return this.fldSharhField;
            }
            set {
                this.fldSharhField = value;
            }
        }
        
        /// <remarks/>
        public string fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldTypeId {
            get {
                return this.fldTypeIdField;
            }
            set {
                this.fldTypeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Case {
        
        private int fldIdField;
        
        private int fldCaseTypeIdField;
        
        private int fldSourceIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldCaseTypeId {
            get {
                return this.fldCaseTypeIdField;
            }
            set {
                this.fldCaseTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldSourceId {
            get {
                return this.fldSourceIdField;
            }
            set {
                this.fldSourceIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_DocFiles {
        
        private int fldIdField;
        
        private int fldCaseTypeIdField;
        
        private string fldNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldCaseTypeId {
            get {
                return this.fldCaseTypeIdField;
            }
            set {
                this.fldCaseTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_DocumentRecord_Details {
        
        private int fldIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIdField;
        
        private int fldDocument_HedearIdField;
        
        private int fldCodingIdField;
        
        private string fldDescriptionField;
        
        private long fldBedehkarField;
        
        private long fldBestankarField;
        
        private System.Nullable<int> fldCenterCoIdField;
        
        private System.Nullable<int> fldCaseIdField;
        
        private string fldIPField;
        
        private int fldSourceIdField;
        
        private int fldCaseTypeIdField;
        
        private string fldNameField;
        
        private string fldNameCenterField;
        
        private System.Nullable<short> fldOrderField;
        
        private string fldCodeField;
        
        private string fldNameCodingField;
        
        private string fldName_CodeDetailField;
        
        private int fldSerialFishField;
        
        private long fldMandeField;
        
        private string fldNameShakhsField;
        
        private int fldElamAvarezIdField;
        
        private System.Nullable<int> fldModuleErsalIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldDocument_HedearId {
            get {
                return this.fldDocument_HedearIdField;
            }
            set {
                this.fldDocument_HedearIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldCodingId {
            get {
                return this.fldCodingIdField;
            }
            set {
                this.fldCodingIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDescription {
            get {
                return this.fldDescriptionField;
            }
            set {
                this.fldDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public long fldBedehkar {
            get {
                return this.fldBedehkarField;
            }
            set {
                this.fldBedehkarField = value;
            }
        }
        
        /// <remarks/>
        public long fldBestankar {
            get {
                return this.fldBestankarField;
            }
            set {
                this.fldBestankarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldCenterCoId {
            get {
                return this.fldCenterCoIdField;
            }
            set {
                this.fldCenterCoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldCaseId {
            get {
                return this.fldCaseIdField;
            }
            set {
                this.fldCaseIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldSourceId {
            get {
                return this.fldSourceIdField;
            }
            set {
                this.fldSourceIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldCaseTypeId {
            get {
                return this.fldCaseTypeIdField;
            }
            set {
                this.fldCaseTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameCenter {
            get {
                return this.fldNameCenterField;
            }
            set {
                this.fldNameCenterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> fldOrder {
            get {
                return this.fldOrderField;
            }
            set {
                this.fldOrderField = value;
            }
        }
        
        /// <remarks/>
        public string fldCode {
            get {
                return this.fldCodeField;
            }
            set {
                this.fldCodeField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameCoding {
            get {
                return this.fldNameCodingField;
            }
            set {
                this.fldNameCodingField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_CodeDetail {
            get {
                return this.fldName_CodeDetailField;
            }
            set {
                this.fldName_CodeDetailField = value;
            }
        }
        
        /// <remarks/>
        public int fldSerialFish {
            get {
                return this.fldSerialFishField;
            }
            set {
                this.fldSerialFishField = value;
            }
        }
        
        /// <remarks/>
        public long fldMande {
            get {
                return this.fldMandeField;
            }
            set {
                this.fldMandeField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameShakhs {
            get {
                return this.fldNameShakhsField;
            }
            set {
                this.fldNameShakhsField = value;
            }
        }
        
        /// <remarks/>
        public int fldElamAvarezId {
            get {
                return this.fldElamAvarezIdField;
            }
            set {
                this.fldElamAvarezIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldModuleErsalId {
            get {
                return this.fldModuleErsalIdField;
            }
            set {
                this.fldModuleErsalIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_DocumentRecord_Header {
        
        private int fldIdField;
        
        private int fldDocumentNumField;
        
        private System.Nullable<int> fldAtfNumField;
        
        private string fldArchiveNumField;
        
        private string fldDescriptionDocuField;
        
        private int fldOrganIdField;
        
        private string fldTarikhDocumentField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        private byte fldAcceptField;
        
        private byte fldTypeField;
        
        private string fldTypeNameField;
        
        private System.Nullable<int> shomareRoozaneField;
        
        private System.Nullable<int> fldShomareFareeField;
        
        private short fldYearField;
        
        private System.Nullable<int> fldFiscalYearIdField;
        
        private System.Nullable<int> fldTypeSanadField;
        
        private string fldTypeSanadNameField;
        
        private string fldNameModuleField;
        
        private System.Nullable<int> fldModuleErsalIdField;
        
        private bool fldIsArchiveField;
        
        private System.Nullable<int> fldDocumentNum_PidField;
        
        private int fldPIdField;
        
        private string fldTypeSanadName_PidField;
        
        private System.Nullable<int> fldMainDocNumField;
        
        private int fldFlagField;
        
        private byte fldIsMapField;
        
        private System.Nullable<byte> fldEditField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldDocumentNum {
            get {
                return this.fldDocumentNumField;
            }
            set {
                this.fldDocumentNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldAtfNum {
            get {
                return this.fldAtfNumField;
            }
            set {
                this.fldAtfNumField = value;
            }
        }
        
        /// <remarks/>
        public string fldArchiveNum {
            get {
                return this.fldArchiveNumField;
            }
            set {
                this.fldArchiveNumField = value;
            }
        }
        
        /// <remarks/>
        public string fldDescriptionDocu {
            get {
                return this.fldDescriptionDocuField;
            }
            set {
                this.fldDescriptionDocuField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhDocument {
            get {
                return this.fldTarikhDocumentField;
            }
            set {
                this.fldTarikhDocumentField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public byte fldAccept {
            get {
                return this.fldAcceptField;
            }
            set {
                this.fldAcceptField = value;
            }
        }
        
        /// <remarks/>
        public byte fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeName {
            get {
                return this.fldTypeNameField;
            }
            set {
                this.fldTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ShomareRoozane {
            get {
                return this.shomareRoozaneField;
            }
            set {
                this.shomareRoozaneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldShomareFaree {
            get {
                return this.fldShomareFareeField;
            }
            set {
                this.fldShomareFareeField = value;
            }
        }
        
        /// <remarks/>
        public short fldYear {
            get {
                return this.fldYearField;
            }
            set {
                this.fldYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldFiscalYearId {
            get {
                return this.fldFiscalYearIdField;
            }
            set {
                this.fldFiscalYearIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldTypeSanad {
            get {
                return this.fldTypeSanadField;
            }
            set {
                this.fldTypeSanadField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeSanadName {
            get {
                return this.fldTypeSanadNameField;
            }
            set {
                this.fldTypeSanadNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameModule {
            get {
                return this.fldNameModuleField;
            }
            set {
                this.fldNameModuleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldModuleErsalId {
            get {
                return this.fldModuleErsalIdField;
            }
            set {
                this.fldModuleErsalIdField = value;
            }
        }
        
        /// <remarks/>
        public bool fldIsArchive {
            get {
                return this.fldIsArchiveField;
            }
            set {
                this.fldIsArchiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldDocumentNum_Pid {
            get {
                return this.fldDocumentNum_PidField;
            }
            set {
                this.fldDocumentNum_PidField = value;
            }
        }
        
        /// <remarks/>
        public int fldPId {
            get {
                return this.fldPIdField;
            }
            set {
                this.fldPIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeSanadName_Pid {
            get {
                return this.fldTypeSanadName_PidField;
            }
            set {
                this.fldTypeSanadName_PidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMainDocNum {
            get {
                return this.fldMainDocNumField;
            }
            set {
                this.fldMainDocNumField = value;
            }
        }
        
        /// <remarks/>
        public int fldFlag {
            get {
                return this.fldFlagField;
            }
            set {
                this.fldFlagField = value;
            }
        }
        
        /// <remarks/>
        public byte fldIsMap {
            get {
                return this.fldIsMapField;
            }
            set {
                this.fldIsMapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<byte> fldEdit {
            get {
                return this.fldEditField;
            }
            set {
                this.fldEditField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_CheckMahiyatGardesh_Mande {
        
        private System.Nullable<long> fldBedehkarField;
        
        private System.Nullable<long> fldBestankarField;
        
        private int fldMahiyatMondeField;
        
        private int fldMahiyatGardeshField;
        
        private System.Nullable<int> fldMahiyat_GardeshIdField;
        
        private System.Nullable<int> fldMahiyatIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldBedehkar {
            get {
                return this.fldBedehkarField;
            }
            set {
                this.fldBedehkarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldBestankar {
            get {
                return this.fldBestankarField;
            }
            set {
                this.fldBestankarField = value;
            }
        }
        
        /// <remarks/>
        public int fldMahiyatMonde {
            get {
                return this.fldMahiyatMondeField;
            }
            set {
                this.fldMahiyatMondeField = value;
            }
        }
        
        /// <remarks/>
        public int fldMahiyatGardesh {
            get {
                return this.fldMahiyatGardeshField;
            }
            set {
                this.fldMahiyatGardeshField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMahiyat_GardeshId {
            get {
                return this.fldMahiyat_GardeshIdField;
            }
            set {
                this.fldMahiyat_GardeshIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMahiyatId {
            get {
                return this.fldMahiyatIdField;
            }
            set {
                this.fldMahiyatIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Coding_ProjeFaaliat {
        
        private int fldIdField;
        
        private int fldCodingDetailIdField;
        
        private string fldCodingTitleField;
        
        private System.Nullable<int> fldMahiyatIdField;
        
        private string fldCodeAccField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldCodingDetailId {
            get {
                return this.fldCodingDetailIdField;
            }
            set {
                this.fldCodingDetailIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodingTitle {
            get {
                return this.fldCodingTitleField;
            }
            set {
                this.fldCodingTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMahiyatId {
            get {
                return this.fldMahiyatIdField;
            }
            set {
                this.fldMahiyatIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodeAcc {
            get {
                return this.fldCodeAccField;
            }
            set {
                this.fldCodeAccField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_RptByCoding {
        
        private System.Nullable<long> fldBedehkarField;
        
        private System.Nullable<long> fldBestankarField;
        
        private System.Nullable<long> mandehHeasbField;
        
        private System.Nullable<long> gardeshHesabField;
        
        private string fldTitleField;
        
        private int fldTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldBedehkar {
            get {
                return this.fldBedehkarField;
            }
            set {
                this.fldBedehkarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldBestankar {
            get {
                return this.fldBestankarField;
            }
            set {
                this.fldBestankarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> MandehHeasb {
            get {
                return this.mandehHeasbField;
            }
            set {
                this.mandehHeasbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> GardeshHesab {
            get {
                return this.gardeshHesabField;
            }
            set {
                this.gardeshHesabField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public int fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ClsError {
        
        private string errorMsgField;
        
        private string msgField;
        
        private bool errorTypeField;
        
        private int outputIdField;
        
        private int outputId2Field;
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
            }
        }
        
        /// <remarks/>
        public bool ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId {
            get {
                return this.outputIdField;
            }
            set {
                this.outputIdField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId2 {
            get {
                return this.outputId2Field;
            }
            set {
                this.outputId2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDefaultCode_CodingCompletedEventHandler(object sender, GetDefaultCode_CodingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultCode_CodingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultCode_CodingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Coding_Details[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Coding_Details[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckValidCode_CodingDetailCompletedEventHandler(object sender, CheckValidCode_CodingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidCode_CodingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidCode_CodingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRptByCodingCompletedEventHandler(object sender, GetRptByCodingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRptByCodingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRptByCodingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_RptByCoding Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_RptByCoding)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectCoding_ProjectCompletedEventHandler(object sender, SelectCoding_ProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCoding_ProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCoding_ProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Coding_ProjeFaaliat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Coding_ProjeFaaliat[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckMahiyatGardesh_MandeCompletedEventHandler(object sender, CheckMahiyatGardesh_MandeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMahiyatGardesh_MandeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMahiyatGardesh_MandeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CheckMahiyatGardesh_Mande[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CheckMahiyatGardesh_Mande[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentRecord_HeaderDetailCompletedEventHandler(object sender, GetDocumentRecord_HeaderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentRecord_HeaderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentRecord_HeaderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecord_Header Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecord_Header)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentRecord_HeaderWithFilterCompletedEventHandler(object sender, GetDocumentRecord_HeaderWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentRecord_HeaderWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentRecord_HeaderWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecord_Header[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecord_Header[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectMortabetCompletedEventHandler(object sender, SelectMortabetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectMortabetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectMortabetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecord_Header[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecord_Header[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertDocumentRecord_HeaderCompletedEventHandler(object sender, InsertDocumentRecord_HeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDocumentRecord_HeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDocumentRecord_HeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateDocumentRecord_HeaderCompletedEventHandler(object sender, UpdateDocumentRecord_HeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDocumentRecord_HeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDocumentRecord_HeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDocumentRecord_HeaderCompletedEventHandler(object sender, DeleteDocumentRecord_HeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocumentRecord_HeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocumentRecord_HeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLastNum_AtfDocumentRecordCompletedEventHandler(object sender, GetLastNum_AtfDocumentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastNum_AtfDocumentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastNum_AtfDocumentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecord_Header[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecord_Header[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertDocumentCompletedEventHandler(object sender, InsertDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateDocumentCompletedEventHandler(object sender, UpdateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertDocumentFishDaramadCompletedEventHandler(object sender, InsertDocumentFishDaramadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDocumentFishDaramadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDocumentFishDaramadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateMoratabSaziTarikhSanadCompletedEventHandler(object sender, UpdateMoratabSaziTarikhSanadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMoratabSaziTarikhSanadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMoratabSaziTarikhSanadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateGhatiCompletedEventHandler(object sender, UpdateGhatiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGhatiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGhatiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DisableGhatiCompletedEventHandler(object sender, DisableGhatiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableGhatiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableGhatiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateArchive_FareiNumCompletedEventHandler(object sender, UpdateArchive_FareiNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateArchive_FareiNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateArchive_FareiNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckDocStatusCompletedEventHandler(object sender, CheckDocStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDocStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDocStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Document_CopyInsertCompletedEventHandler(object sender, Document_CopyInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Document_CopyInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Document_CopyInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentRecord_DetailsDetailCompletedEventHandler(object sender, GetDocumentRecord_DetailsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentRecord_DetailsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentRecord_DetailsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecord_Details Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecord_Details)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentRecord_DetailsWithFilterCompletedEventHandler(object sender, GetDocumentRecord_DetailsWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentRecord_DetailsWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentRecord_DetailsWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecord_Details[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecord_Details[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocFilesCompletedEventHandler(object sender, GetDocFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocFiles[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocFiles[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDocumentRecord_DetailsCompletedEventHandler(object sender, DeleteDocumentRecord_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocumentRecord_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocumentRecord_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDocumentDetailCompletedEventHandler(object sender, DeleteDocumentDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocumentDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocumentDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCaseDetailCompletedEventHandler(object sender, GetCaseDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Case Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Case)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCaseWithFilterCompletedEventHandler(object sender, GetCaseWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Case[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Case[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCaseCompletedEventHandler(object sender, InsertCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCaseCompletedEventHandler(object sender, UpdateCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCaseCompletedEventHandler(object sender, DeleteCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetParvandeInfoCompletedEventHandler(object sender, GetParvandeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParvandeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParvandeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ParvandeInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ParvandeInfo[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFiscalYearDetailCompletedEventHandler(object sender, GetFiscalYearDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFiscalYearDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFiscalYearDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_FiscalYear Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_FiscalYear)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFiscalYearWithFilterCompletedEventHandler(object sender, GetFiscalYearWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFiscalYearWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFiscalYearWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_FiscalYear[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_FiscalYear[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertFiscalYearCompletedEventHandler(object sender, InsertFiscalYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFiscalYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFiscalYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateFiscalYearCompletedEventHandler(object sender, UpdateFiscalYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFiscalYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFiscalYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteFiscalYearCompletedEventHandler(object sender, DeleteFiscalYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFiscalYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFiscalYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RptCodingStatusCompletedEventHandler(object sender, RptCodingStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptCodingStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptCodingStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_RptCodingStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_RptCodingStatus[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RptCodingTurnover_TarikhCompletedEventHandler(object sender, RptCodingTurnover_TarikhCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptCodingTurnover_TarikhCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptCodingTurnover_TarikhCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_RptCodingTurnover[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_RptCodingTurnover[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RptCodingStatus_ParvandeCompletedEventHandler(object sender, RptCodingStatus_ParvandeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptCodingStatus_ParvandeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptCodingStatus_ParvandeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_RptCodingStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_RptCodingStatus[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RptCodingTurnoverCompletedEventHandler(object sender, RptCodingTurnoverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptCodingTurnoverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptCodingTurnoverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_RptCodingTurnover[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_RptCodingTurnover[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTypeHesabDetailCompletedEventHandler(object sender, GetTypeHesabDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTypeHesabDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTypeHesabDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TypeHesab Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TypeHesab)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTypeHesabWithFilterCompletedEventHandler(object sender, GetTypeHesabWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTypeHesabWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTypeHesabWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TypeHesab[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TypeHesab[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentTypeWithFilterCompletedEventHandler(object sender, GetDocumentTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentRecorde_FileDetailCompletedEventHandler(object sender, GetDocumentRecorde_FileDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentRecorde_FileDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentRecorde_FileDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecorde_File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecorde_File)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentRecorde_FileWithFilterCompletedEventHandler(object sender, GetDocumentRecorde_FileWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentRecorde_FileWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentRecorde_FileWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecorde_File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecorde_File[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertDocumentRecorde_FileCompletedEventHandler(object sender, InsertDocumentRecorde_FileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDocumentRecorde_FileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDocumentRecorde_FileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDocumentRecorde_FileCompletedEventHandler(object sender, DeleteDocumentRecorde_FileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocumentRecorde_FileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocumentRecorde_FileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentBookMarkDetailCompletedEventHandler(object sender, GetDocumentBookMarkDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentBookMarkDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentBookMarkDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentBookMark Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentBookMark)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentBookMarkWithFilterCompletedEventHandler(object sender, GetDocumentBookMarkWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentBookMarkWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentBookMarkWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentBookMark[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentBookMark[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertDocumentBookMarkCompletedEventHandler(object sender, InsertDocumentBookMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDocumentBookMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDocumentBookMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateDocumentBookMarkCompletedEventHandler(object sender, UpdateDocumentBookMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDocumentBookMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDocumentBookMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDocumentBookMarkCompletedEventHandler(object sender, DeleteDocumentBookMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocumentBookMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocumentBookMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertDocumentRecorde_File_BookMarkCompletedEventHandler(object sender, InsertDocumentRecorde_File_BookMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDocumentRecorde_File_BookMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDocumentRecorde_File_BookMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectDocumentRecorde_File_BookMarkCompletedEventHandler(object sender, SelectDocumentRecorde_File_BookMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectDocumentRecorde_File_BookMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectDocumentRecorde_File_BookMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecorde_File_BookMark[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecorde_File_BookMark[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectBookmarkPathCompletedEventHandler(object sender, SelectBookmarkPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectBookmarkPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectBookmarkPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ArchiveTree Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ArchiveTree)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckRemainCompletedEventHandler(object sender, CheckRemainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRemainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRemainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CheckRemain[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CheckRemain[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CopyDocumentWithHeaderIdCompletedEventHandler(object sender, CopyDocumentWithHeaderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyDocumentWithHeaderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyDocumentWithHeaderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCodingDetail_CaseTypeDetailCompletedEventHandler(object sender, GetCodingDetail_CaseTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCodingDetail_CaseTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCodingDetail_CaseTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CodingDetail_CaseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CodingDetail_CaseType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCodingDetail_CaseTypeWithFilterCompletedEventHandler(object sender, GetCodingDetail_CaseTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCodingDetail_CaseTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCodingDetail_CaseTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CodingDetail_CaseType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CodingDetail_CaseType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCodingDetail_CaseTypeCompletedEventHandler(object sender, InsertCodingDetail_CaseTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCodingDetail_CaseTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCodingDetail_CaseTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCodingDetail_CaseTypeCompletedEventHandler(object sender, UpdateCodingDetail_CaseTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCodingDetail_CaseTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCodingDetail_CaseTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCodingDetail_CaseTypeCompletedEventHandler(object sender, DeleteCodingDetail_CaseTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCodingDetail_CaseTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCodingDetail_CaseTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBankTemplate_HeaderDetailCompletedEventHandler(object sender, GetBankTemplate_HeaderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankTemplate_HeaderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankTemplate_HeaderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BankTemplate_Header Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BankTemplate_Header)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBankTemplate_HeaderWithFilterCompletedEventHandler(object sender, GetBankTemplate_HeaderWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankTemplate_HeaderWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankTemplate_HeaderWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BankTemplate_Header[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BankTemplate_Header[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBankTemplateCompletedEventHandler(object sender, InsertBankTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBankTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBankTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBankTemplateCompletedEventHandler(object sender, UpdateBankTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBankTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBankTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteBankTemplateCompletedEventHandler(object sender, DeleteBankTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBankTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBankTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBankBill_HeaderDetailCompletedEventHandler(object sender, GetBankBill_HeaderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankBill_HeaderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankBill_HeaderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BankBillHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BankBillHeader)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBankBill_HeaderWithFilterCompletedEventHandler(object sender, GetBankBill_HeaderWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankBill_HeaderWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankBill_HeaderWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BankBillHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BankBillHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckCountDataCompletedEventHandler(object sender, CheckCountDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCountDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCountDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectMoghayeratBankiCompletedEventHandler(object sender, SelectMoghayeratBankiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectMoghayeratBankiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectMoghayeratBankiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MoghayeratBanki[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MoghayeratBanki[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBankBillCompletedEventHandler(object sender, InsertBankBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBankBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBankBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBankBillCompletedEventHandler(object sender, UpdateBankBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBankBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBankBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteBankBillCompletedEventHandler(object sender, DeleteBankBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBankBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBankBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBankBill_DetailsDetailCompletedEventHandler(object sender, GetBankBill_DetailsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankBill_DetailsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankBill_DetailsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BankBillDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BankBillDetails)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBankBill_DetailsWithFilterCompletedEventHandler(object sender, GetBankBill_DetailsWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankBill_DetailsWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankBill_DetailsWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BankBillDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BankBillDetails[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectBankBill_TarikhCompletedEventHandler(object sender, SelectBankBill_TarikhCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectBankBill_TarikhCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectBankBill_TarikhCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BankBill_Tarikh Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BankBill_Tarikh)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BankBillMapCompletedEventHandler(object sender, BankBillMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankBillMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankBillMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RptDafaterCompletedEventHandler(object sender, RptDafaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptDafaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptDafaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Dafater[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Dafater[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAccountingTypeDetailCompletedEventHandler(object sender, GetAccountingTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountingTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountingTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AccountingType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AccountingType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAccountingTypeWithFilterCompletedEventHandler(object sender, GetAccountingTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountingTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountingTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AccountingType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AccountingType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAccountingTypeCompletedEventHandler(object sender, InsertAccountingTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAccountingTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAccountingTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAccountingTypeCompletedEventHandler(object sender, UpdateAccountingTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountingTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountingTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAccountingTypeCompletedEventHandler(object sender, DeleteAccountingTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAccountingTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAccountingTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCenterCostDetailCompletedEventHandler(object sender, GetCenterCostDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCenterCostDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCenterCostDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CenterCost Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CenterCost)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCenterCostWithFilterCompletedEventHandler(object sender, GetCenterCostWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCenterCostWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCenterCostWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CenterCost[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CenterCost[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCenterCostCompletedEventHandler(object sender, InsertCenterCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCenterCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCenterCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCenterCostCompletedEventHandler(object sender, UpdateCenterCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCenterCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCenterCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCenterCostCompletedEventHandler(object sender, DeleteCenterCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCenterCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCenterCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePID_Cost_TreeCompletedEventHandler(object sender, UpdatePID_Cost_TreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePID_Cost_TreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePID_Cost_TreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IsCostCenterCompletedEventHandler(object sender, IsCostCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCostCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCostCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAccountingLevelDetailCompletedEventHandler(object sender, GetAccountingLevelDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountingLevelDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountingLevelDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AccountingLevel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AccountingLevel)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAccountingLevelWithFilterCompletedEventHandler(object sender, GetAccountingLevelWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountingLevelWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountingLevelWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AccountingLevel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AccountingLevel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAccountingLevelCompletedEventHandler(object sender, InsertAccountingLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAccountingLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAccountingLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAccountingLevelCompletedEventHandler(object sender, UpdateAccountingLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountingLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountingLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAccountingLevelCompletedEventHandler(object sender, DeleteAccountingLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAccountingLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAccountingLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectAccountingLevelCompletedEventHandler(object sender, SelectAccountingLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAccountingLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAccountingLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AccountingLevel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AccountingLevel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AccountingLevelDeleteCompletedEventHandler(object sender, AccountingLevelDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountingLevelDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountingLevelDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckAccountingLevelCompletedEventHandler(object sender, CheckAccountingLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAccountingLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAccountingLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AccountingLevel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AccountingLevel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGroupCenterCostDetailCompletedEventHandler(object sender, GetGroupCenterCostDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupCenterCostDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupCenterCostDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GroupCenterCost Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GroupCenterCost)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGroupCenterCostWithFilterCompletedEventHandler(object sender, GetGroupCenterCostWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupCenterCostWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupCenterCostWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GroupCenterCost[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GroupCenterCost[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertGroupCenterCostCompletedEventHandler(object sender, InsertGroupCenterCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGroupCenterCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGroupCenterCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateGroupCenterCostCompletedEventHandler(object sender, UpdateGroupCenterCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupCenterCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupCenterCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteGroupCenterCostCompletedEventHandler(object sender, DeleteGroupCenterCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGroupCenterCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGroupCenterCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertTree_CenterCostCompletedEventHandler(object sender, InsertTree_CenterCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTree_CenterCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTree_CenterCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTreeCenterCostDetailCompletedEventHandler(object sender, GetTreeCenterCostDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeCenterCostDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeCenterCostDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TreeCenterCost Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TreeCenterCost)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTreeCenterCostWithFilterCompletedEventHandler(object sender, GetTreeCenterCostWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeCenterCostWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeCenterCostWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TreeCenterCost[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TreeCenterCost[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertTreeCenterCostCompletedEventHandler(object sender, InsertTreeCenterCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTreeCenterCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTreeCenterCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateTreeCenterCostCompletedEventHandler(object sender, UpdateTreeCenterCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTreeCenterCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTreeCenterCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteTreeCenterCostCompletedEventHandler(object sender, DeleteTreeCenterCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTreeCenterCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTreeCenterCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePID_CostCenterCompletedEventHandler(object sender, UpdatePID_CostCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePID_CostCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePID_CostCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCenterco_TarifNashodehCompletedEventHandler(object sender, GetCenterco_TarifNashodehCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCenterco_TarifNashodehCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCenterco_TarifNashodehCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Centerco_TarifNashodeh[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Centerco_TarifNashodeh[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTemplateCodingDetailCompletedEventHandler(object sender, GetTemplateCodingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateCodingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateCodingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TemplateCoding Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TemplateCoding)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTemplateCodingWithFilterCompletedEventHandler(object sender, GetTemplateCodingWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateCodingWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateCodingWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TemplateCoding[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TemplateCoding[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertTemplateCodingCompletedEventHandler(object sender, InsertTemplateCodingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTemplateCodingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTemplateCodingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateTemplateCodingCompletedEventHandler(object sender, UpdateTemplateCodingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTemplateCodingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTemplateCodingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteTemplateCodingCompletedEventHandler(object sender, DeleteTemplateCodingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTemplateCodingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTemplateCodingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckValidCodeCompletedEventHandler(object sender, CheckValidCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDefaultCodeCompletedEventHandler(object sender, GetDefaultCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TemplateCoding[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TemplateCoding[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetItemNecessaryDetailCompletedEventHandler(object sender, GetItemNecessaryDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemNecessaryDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemNecessaryDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ItemNecessary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ItemNecessary)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetItemNecessaryWithFilterCompletedEventHandler(object sender, GetItemNecessaryWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemNecessaryWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemNecessaryWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ItemNecessary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ItemNecessary[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertItemNecessaryCompletedEventHandler(object sender, InsertItemNecessaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertItemNecessaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertItemNecessaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateItemNecessaryCompletedEventHandler(object sender, UpdateItemNecessaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateItemNecessaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateItemNecessaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteItemNecessaryCompletedEventHandler(object sender, DeleteItemNecessaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteItemNecessaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteItemNecessaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePID_ItemNecessaryCompletedEventHandler(object sender, UpdatePID_ItemNecessaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePID_ItemNecessaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePID_ItemNecessaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTemplateNameDetailCompletedEventHandler(object sender, GetTemplateNameDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateNameDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateNameDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TemplateName Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TemplateName)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTemplateNameWithFilterCompletedEventHandler(object sender, GetTemplateNameWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateNameWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateNameWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TemplateName[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TemplateName[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertTemplateNameCompletedEventHandler(object sender, InsertTemplateNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTemplateNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTemplateNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateTemplateNameCompletedEventHandler(object sender, UpdateTemplateNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTemplateNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTemplateNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteTemplateNameCompletedEventHandler(object sender, DeleteTemplateNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTemplateNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTemplateNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMahiyatWithFilterCompletedEventHandler(object sender, GetMahiyatWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMahiyatWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMahiyatWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Mahiyat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Mahiyat[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLevelsAccountingTypeDetailCompletedEventHandler(object sender, GetLevelsAccountingTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLevelsAccountingTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLevelsAccountingTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LevelsAccountingType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LevelsAccountingType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLevelsAccountingTypeWithFilterCompletedEventHandler(object sender, GetLevelsAccountingTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLevelsAccountingTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLevelsAccountingTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LevelsAccountingType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LevelsAccountingType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLevelsAccountingTypeCompletedEventHandler(object sender, InsertLevelsAccountingTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLevelsAccountingTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLevelsAccountingTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLevelsAccountingTypeCompletedEventHandler(object sender, UpdateLevelsAccountingTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLevelsAccountingTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLevelsAccountingTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLevelsAccountingTypeCompletedEventHandler(object sender, DeleteLevelsAccountingTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLevelsAccountingTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLevelsAccountingTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void selectAccountingTypeLevelCompletedEventHandler(object sender, selectAccountingTypeLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectAccountingTypeLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectAccountingTypeLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LevelsAccountingType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LevelsAccountingType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentDescDetailCompletedEventHandler(object sender, GetDocumentDescDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentDescDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentDescDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentDesc Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentDesc)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentDescWithFilterCompletedEventHandler(object sender, GetDocumentDescWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentDescWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentDescWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentDesc[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentDesc[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertDocumentDescCompletedEventHandler(object sender, InsertDocumentDescCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDocumentDescCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDocumentDescCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateDocumentDescCompletedEventHandler(object sender, UpdateDocumentDescCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDocumentDescCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDocumentDescCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDocumentDescCompletedEventHandler(object sender, DeleteDocumentDescCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocumentDescCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocumentDescCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetParamDocumentDescCompletedEventHandler(object sender, GetParamDocumentDescCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParamDocumentDescCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParamDocumentDescCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ParamDocumentDesc[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ParamDocumentDesc[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectEkhtetamiyeCompletedEventHandler(object sender, SelectEkhtetamiyeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectEkhtetamiyeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectEkhtetamiyeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecord_Details[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecord_Details[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectBastanHesabhaCompletedEventHandler(object sender, SelectBastanHesabhaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectBastanHesabhaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectBastanHesabhaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecord_Details[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecord_Details[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectHesabDaryaftaniCompletedEventHandler(object sender, SelectHesabDaryaftaniCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectHesabDaryaftaniCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectHesabDaryaftaniCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecord_Details[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecord_Details[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectEftetahiyeCompletedEventHandler(object sender, SelectEftetahiyeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectEftetahiyeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectEftetahiyeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DocumentRecord_Details[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DocumentRecord_Details[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCaseTypeDetailCompletedEventHandler(object sender, GetCaseTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CaseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CaseType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCaseTypeWithFilterCompletedEventHandler(object sender, GetCaseTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CaseType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CaseType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCaseTypeCompletedEventHandler(object sender, InsertCaseTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCaseTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCaseTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCaseTypeCompletedEventHandler(object sender, UpdateCaseTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCaseTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCaseTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCaseTypeCompletedEventHandler(object sender, DeleteCaseTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCaseTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCaseTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCoding_HeaderDetailCompletedEventHandler(object sender, GetCoding_HeaderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoding_HeaderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoding_HeaderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Coding_Header Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Coding_Header)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCoding_HeaderWithFilterCompletedEventHandler(object sender, GetCoding_HeaderWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoding_HeaderWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoding_HeaderWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Coding_Header[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Coding_Header[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCoding_HeaderCompletedEventHandler(object sender, InsertCoding_HeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCoding_HeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCoding_HeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCoding_HeaderCompletedEventHandler(object sender, UpdateCoding_HeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCoding_HeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCoding_HeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCoding_HeaderCompletedEventHandler(object sender, DeleteCoding_HeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCoding_HeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCoding_HeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CopyFromTemplateCodingToCodingCompletedEventHandler(object sender, CopyFromTemplateCodingToCodingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyFromTemplateCodingToCodingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyFromTemplateCodingToCodingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCoding_DetailsDetailCompletedEventHandler(object sender, GetCoding_DetailsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoding_DetailsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoding_DetailsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Coding_Details Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Coding_Details)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetItemIdCompletedEventHandler(object sender, GetItemIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCoding_DetailsWithFilterCompletedEventHandler(object sender, GetCoding_DetailsWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoding_DetailsWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoding_DetailsWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Coding_Details[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Coding_Details[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCoding_DetailsCompletedEventHandler(object sender, InsertCoding_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCoding_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCoding_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCoding_DetailsCompletedEventHandler(object sender, UpdateCoding_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCoding_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCoding_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCoding_DetailsCompletedEventHandler(object sender, DeleteCoding_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCoding_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCoding_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591