//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NewFMS.WCF_Chek {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IChekService", Namespace="http://tempuri.org/")]
    public partial class ChekService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOlgoCheckDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOlgoCheckWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOlgoCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOlgoCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOlgoCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDasteCheckDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDasteCheckWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDasteCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDasteCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDasteCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSodorCheckDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSodorCheckWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSumMablaghCheck_FactorOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSodorCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSodorCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSodorCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAghsatCheckAmaniDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAghsatCheckAmaniWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAghsatCheckAmaniOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAghsatCheckAmaniOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAghsatCheckAmaniOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusAghsatCheckAmaniOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAghsatChckAmaniForChckVaredeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCheckHayeVaredeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCheckHayeVaredeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCheckHayeVaredeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCheckHayeVaredeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCheckHayeVaredeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertChekStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ChekService() {
            this.Url = global::NewFMS.Properties.Settings.Default.NewFMS_WCF_Chek_ChekService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOlgoCheckDetailCompletedEventHandler GetOlgoCheckDetailCompleted;
        
        /// <remarks/>
        public event GetOlgoCheckWithFilterCompletedEventHandler GetOlgoCheckWithFilterCompleted;
        
        /// <remarks/>
        public event InsertOlgoCheckCompletedEventHandler InsertOlgoCheckCompleted;
        
        /// <remarks/>
        public event UpdateOlgoCheckCompletedEventHandler UpdateOlgoCheckCompleted;
        
        /// <remarks/>
        public event DeleteOlgoCheckCompletedEventHandler DeleteOlgoCheckCompleted;
        
        /// <remarks/>
        public event GetDasteCheckDetailCompletedEventHandler GetDasteCheckDetailCompleted;
        
        /// <remarks/>
        public event GetDasteCheckWithFilterCompletedEventHandler GetDasteCheckWithFilterCompleted;
        
        /// <remarks/>
        public event InsertDasteCheckCompletedEventHandler InsertDasteCheckCompleted;
        
        /// <remarks/>
        public event UpdateDasteCheckCompletedEventHandler UpdateDasteCheckCompleted;
        
        /// <remarks/>
        public event DeleteDasteCheckCompletedEventHandler DeleteDasteCheckCompleted;
        
        /// <remarks/>
        public event GetSodorCheckDetailCompletedEventHandler GetSodorCheckDetailCompleted;
        
        /// <remarks/>
        public event GetSodorCheckWithFilterCompletedEventHandler GetSodorCheckWithFilterCompleted;
        
        /// <remarks/>
        public event GetSumMablaghCheck_FactorCompletedEventHandler GetSumMablaghCheck_FactorCompleted;
        
        /// <remarks/>
        public event InsertSodorCheckCompletedEventHandler InsertSodorCheckCompleted;
        
        /// <remarks/>
        public event UpdateSodorCheckCompletedEventHandler UpdateSodorCheckCompleted;
        
        /// <remarks/>
        public event DeleteSodorCheckCompletedEventHandler DeleteSodorCheckCompleted;
        
        /// <remarks/>
        public event GetAghsatCheckAmaniDetailCompletedEventHandler GetAghsatCheckAmaniDetailCompleted;
        
        /// <remarks/>
        public event GetAghsatCheckAmaniWithFilterCompletedEventHandler GetAghsatCheckAmaniWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAghsatCheckAmaniCompletedEventHandler InsertAghsatCheckAmaniCompleted;
        
        /// <remarks/>
        public event UpdateAghsatCheckAmaniCompletedEventHandler UpdateAghsatCheckAmaniCompleted;
        
        /// <remarks/>
        public event DeleteAghsatCheckAmaniCompletedEventHandler DeleteAghsatCheckAmaniCompleted;
        
        /// <remarks/>
        public event UpdateStatusAghsatCheckAmaniCompletedEventHandler UpdateStatusAghsatCheckAmaniCompleted;
        
        /// <remarks/>
        public event DeleteAghsatChckAmaniForChckVaredeIdCompletedEventHandler DeleteAghsatChckAmaniForChckVaredeIdCompleted;
        
        /// <remarks/>
        public event GetCheckHayeVaredeDetailCompletedEventHandler GetCheckHayeVaredeDetailCompleted;
        
        /// <remarks/>
        public event GetCheckHayeVaredeWithFilterCompletedEventHandler GetCheckHayeVaredeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCheckHayeVaredeCompletedEventHandler InsertCheckHayeVaredeCompleted;
        
        /// <remarks/>
        public event UpdateCheckHayeVaredeCompletedEventHandler UpdateCheckHayeVaredeCompleted;
        
        /// <remarks/>
        public event DeleteCheckHayeVaredeCompletedEventHandler DeleteCheckHayeVaredeCompleted;
        
        /// <remarks/>
        public event InsertChekStatusCompletedEventHandler InsertChekStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetOlgoCheckDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_OlgoCheck GetOlgoCheckDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetOlgoCheckDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_OlgoCheck)(results[0]));
        }
        
        /// <remarks/>
        public void GetOlgoCheckDetailAsync(int Id, int OrganId, string IP) {
            this.GetOlgoCheckDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetOlgoCheckDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetOlgoCheckDetailOperationCompleted == null)) {
                this.GetOlgoCheckDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOlgoCheckDetailOperationCompleted);
            }
            this.InvokeAsync("GetOlgoCheckDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetOlgoCheckDetailOperationCompleted, userState);
        }
        
        private void OnGetOlgoCheckDetailOperationCompleted(object arg) {
            if ((this.GetOlgoCheckDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOlgoCheckDetailCompleted(this, new GetOlgoCheckDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetOlgoCheckWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_OlgoCheck[] GetOlgoCheckWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetOlgoCheckWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_OlgoCheck[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOlgoCheckWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetOlgoCheckWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetOlgoCheckWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetOlgoCheckWithFilterOperationCompleted == null)) {
                this.GetOlgoCheckWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOlgoCheckWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetOlgoCheckWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetOlgoCheckWithFilterOperationCompleted, userState);
        }
        
        private void OnGetOlgoCheckWithFilterOperationCompleted(object arg) {
            if ((this.GetOlgoCheckWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOlgoCheckWithFilterCompleted(this, new GetOlgoCheckWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/InsertOlgoCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertOlgoCheck(string Title, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File, string Pasvand, int BankId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertOlgoCheck", new object[] {
                        Title,
                        File,
                        Pasvand,
                        BankId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOlgoCheckAsync(string Title, byte[] File, string Pasvand, int BankId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertOlgoCheckAsync(Title, File, Pasvand, BankId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertOlgoCheckAsync(string Title, byte[] File, string Pasvand, int BankId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertOlgoCheckOperationCompleted == null)) {
                this.InsertOlgoCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOlgoCheckOperationCompleted);
            }
            this.InvokeAsync("InsertOlgoCheck", new object[] {
                        Title,
                        File,
                        Pasvand,
                        BankId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertOlgoCheckOperationCompleted, userState);
        }
        
        private void OnInsertOlgoCheckOperationCompleted(object arg) {
            if ((this.InsertOlgoCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOlgoCheckCompleted(this, new InsertOlgoCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/UpdateOlgoCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOlgoCheck(int fldId, string Title, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File, string Pasvand, int FileId, int BankId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateOlgoCheck", new object[] {
                        fldId,
                        Title,
                        File,
                        Pasvand,
                        FileId,
                        BankId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOlgoCheckAsync(int fldId, string Title, byte[] File, string Pasvand, int FileId, int BankId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateOlgoCheckAsync(fldId, Title, File, Pasvand, FileId, BankId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateOlgoCheckAsync(int fldId, string Title, byte[] File, string Pasvand, int FileId, int BankId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateOlgoCheckOperationCompleted == null)) {
                this.UpdateOlgoCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOlgoCheckOperationCompleted);
            }
            this.InvokeAsync("UpdateOlgoCheck", new object[] {
                        fldId,
                        Title,
                        File,
                        Pasvand,
                        FileId,
                        BankId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateOlgoCheckOperationCompleted, userState);
        }
        
        private void OnUpdateOlgoCheckOperationCompleted(object arg) {
            if ((this.UpdateOlgoCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOlgoCheckCompleted(this, new UpdateOlgoCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/DeleteOlgoCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteOlgoCheck(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteOlgoCheck", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOlgoCheckAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteOlgoCheckAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteOlgoCheckAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteOlgoCheckOperationCompleted == null)) {
                this.DeleteOlgoCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOlgoCheckOperationCompleted);
            }
            this.InvokeAsync("DeleteOlgoCheck", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteOlgoCheckOperationCompleted, userState);
        }
        
        private void OnDeleteOlgoCheckOperationCompleted(object arg) {
            if ((this.DeleteOlgoCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOlgoCheckCompleted(this, new DeleteOlgoCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetDasteCheckDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DasteCheck GetDasteCheckDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDasteCheckDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DasteCheck)(results[0]));
        }
        
        /// <remarks/>
        public void GetDasteCheckDetailAsync(int Id, int OrganId, string IP) {
            this.GetDasteCheckDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetDasteCheckDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetDasteCheckDetailOperationCompleted == null)) {
                this.GetDasteCheckDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDasteCheckDetailOperationCompleted);
            }
            this.InvokeAsync("GetDasteCheckDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetDasteCheckDetailOperationCompleted, userState);
        }
        
        private void OnGetDasteCheckDetailOperationCompleted(object arg) {
            if ((this.GetDasteCheckDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDasteCheckDetailCompleted(this, new GetDasteCheckDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetDasteCheckWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DasteCheck[] GetDasteCheckWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDasteCheckWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DasteCheck[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDasteCheckWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetDasteCheckWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetDasteCheckWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetDasteCheckWithFilterOperationCompleted == null)) {
                this.GetDasteCheckWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDasteCheckWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetDasteCheckWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetDasteCheckWithFilterOperationCompleted, userState);
        }
        
        private void OnGetDasteCheckWithFilterOperationCompleted(object arg) {
            if ((this.GetDasteCheckWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDasteCheckWithFilterCompleted(this, new GetDasteCheckWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/InsertDasteCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDasteCheck(int OlgoCheckId, int ShomareHesabId, string MoshakhaseDasteCheck, byte TedadBarg, string ShoroeSeriyal, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertDasteCheck", new object[] {
                        OlgoCheckId,
                        ShomareHesabId,
                        MoshakhaseDasteCheck,
                        TedadBarg,
                        ShoroeSeriyal,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDasteCheckAsync(int OlgoCheckId, int ShomareHesabId, string MoshakhaseDasteCheck, byte TedadBarg, string ShoroeSeriyal, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertDasteCheckAsync(OlgoCheckId, ShomareHesabId, MoshakhaseDasteCheck, TedadBarg, ShoroeSeriyal, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertDasteCheckAsync(int OlgoCheckId, int ShomareHesabId, string MoshakhaseDasteCheck, byte TedadBarg, string ShoroeSeriyal, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertDasteCheckOperationCompleted == null)) {
                this.InsertDasteCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDasteCheckOperationCompleted);
            }
            this.InvokeAsync("InsertDasteCheck", new object[] {
                        OlgoCheckId,
                        ShomareHesabId,
                        MoshakhaseDasteCheck,
                        TedadBarg,
                        ShoroeSeriyal,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertDasteCheckOperationCompleted, userState);
        }
        
        private void OnInsertDasteCheckOperationCompleted(object arg) {
            if ((this.InsertDasteCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDasteCheckCompleted(this, new InsertDasteCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/UpdateDasteCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDasteCheck(int fldId, int OlgoCheckId, int ShomareHesabId, string MoshakhaseDasteCheck, byte TedadBarg, string ShoroeSeriyal, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateDasteCheck", new object[] {
                        fldId,
                        OlgoCheckId,
                        ShomareHesabId,
                        MoshakhaseDasteCheck,
                        TedadBarg,
                        ShoroeSeriyal,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDasteCheckAsync(int fldId, int OlgoCheckId, int ShomareHesabId, string MoshakhaseDasteCheck, byte TedadBarg, string ShoroeSeriyal, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateDasteCheckAsync(fldId, OlgoCheckId, ShomareHesabId, MoshakhaseDasteCheck, TedadBarg, ShoroeSeriyal, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateDasteCheckAsync(int fldId, int OlgoCheckId, int ShomareHesabId, string MoshakhaseDasteCheck, byte TedadBarg, string ShoroeSeriyal, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateDasteCheckOperationCompleted == null)) {
                this.UpdateDasteCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDasteCheckOperationCompleted);
            }
            this.InvokeAsync("UpdateDasteCheck", new object[] {
                        fldId,
                        OlgoCheckId,
                        ShomareHesabId,
                        MoshakhaseDasteCheck,
                        TedadBarg,
                        ShoroeSeriyal,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateDasteCheckOperationCompleted, userState);
        }
        
        private void OnUpdateDasteCheckOperationCompleted(object arg) {
            if ((this.UpdateDasteCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDasteCheckCompleted(this, new UpdateDasteCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/DeleteDasteCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDasteCheck(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteDasteCheck", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDasteCheckAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteDasteCheckAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteDasteCheckAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteDasteCheckOperationCompleted == null)) {
                this.DeleteDasteCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDasteCheckOperationCompleted);
            }
            this.InvokeAsync("DeleteDasteCheck", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteDasteCheckOperationCompleted, userState);
        }
        
        private void OnDeleteDasteCheckOperationCompleted(object arg) {
            if ((this.DeleteDasteCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDasteCheckCompleted(this, new DeleteDasteCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetSodorCheckDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_SodorCheck GetSodorCheckDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSodorCheckDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_SodorCheck)(results[0]));
        }
        
        /// <remarks/>
        public void GetSodorCheckDetailAsync(int Id, int OrganId, string IP) {
            this.GetSodorCheckDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetSodorCheckDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetSodorCheckDetailOperationCompleted == null)) {
                this.GetSodorCheckDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSodorCheckDetailOperationCompleted);
            }
            this.InvokeAsync("GetSodorCheckDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetSodorCheckDetailOperationCompleted, userState);
        }
        
        private void OnGetSodorCheckDetailOperationCompleted(object arg) {
            if ((this.GetSodorCheckDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSodorCheckDetailCompleted(this, new GetSodorCheckDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetSodorCheckWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_SodorCheck[] GetSodorCheckWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSodorCheckWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_SodorCheck[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSodorCheckWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetSodorCheckWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetSodorCheckWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetSodorCheckWithFilterOperationCompleted == null)) {
                this.GetSodorCheckWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSodorCheckWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetSodorCheckWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetSodorCheckWithFilterOperationCompleted, userState);
        }
        
        private void OnGetSodorCheckWithFilterOperationCompleted(object arg) {
            if ((this.GetSodorCheckWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSodorCheckWithFilterCompleted(this, new GetSodorCheckWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetSumMablaghCheck_Factor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetSumMablaghCheck_Factor(string FieldName, string FilterValue, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSumMablaghCheck_Factor", new object[] {
                        FieldName,
                        FilterValue,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetSumMablaghCheck_FactorAsync(string FieldName, string FilterValue, string IP) {
            this.GetSumMablaghCheck_FactorAsync(FieldName, FilterValue, IP, null);
        }
        
        /// <remarks/>
        public void GetSumMablaghCheck_FactorAsync(string FieldName, string FilterValue, string IP, object userState) {
            if ((this.GetSumMablaghCheck_FactorOperationCompleted == null)) {
                this.GetSumMablaghCheck_FactorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSumMablaghCheck_FactorOperationCompleted);
            }
            this.InvokeAsync("GetSumMablaghCheck_Factor", new object[] {
                        FieldName,
                        FilterValue,
                        IP}, this.GetSumMablaghCheck_FactorOperationCompleted, userState);
        }
        
        private void OnGetSumMablaghCheck_FactorOperationCompleted(object arg) {
            if ((this.GetSumMablaghCheck_FactorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSumMablaghCheck_FactorCompleted(this, new GetSumMablaghCheck_FactorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/InsertSodorCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSodorCheck(
                    int DasteCheckId, 
                    string TarikhVosol, 
                    int AshkhasId, 
                    string CodeSerialCheck, 
                    string Babat, 
                    bool BabatFlag, 
                    long Mablagh, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> FactorId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ContractId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> TankhahGroupId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("InsertSodorCheck", new object[] {
                        DasteCheckId,
                        TarikhVosol,
                        AshkhasId,
                        CodeSerialCheck,
                        Babat,
                        BabatFlag,
                        Mablagh,
                        FactorId,
                        ContractId,
                        TankhahGroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSodorCheckAsync(int DasteCheckId, string TarikhVosol, int AshkhasId, string CodeSerialCheck, string Babat, bool BabatFlag, long Mablagh, System.Nullable<int> FactorId, System.Nullable<int> ContractId, System.Nullable<int> TankhahGroupId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertSodorCheckAsync(DasteCheckId, TarikhVosol, AshkhasId, CodeSerialCheck, Babat, BabatFlag, Mablagh, FactorId, ContractId, TankhahGroupId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertSodorCheckAsync(
                    int DasteCheckId, 
                    string TarikhVosol, 
                    int AshkhasId, 
                    string CodeSerialCheck, 
                    string Babat, 
                    bool BabatFlag, 
                    long Mablagh, 
                    System.Nullable<int> FactorId, 
                    System.Nullable<int> ContractId, 
                    System.Nullable<int> TankhahGroupId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.InsertSodorCheckOperationCompleted == null)) {
                this.InsertSodorCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSodorCheckOperationCompleted);
            }
            this.InvokeAsync("InsertSodorCheck", new object[] {
                        DasteCheckId,
                        TarikhVosol,
                        AshkhasId,
                        CodeSerialCheck,
                        Babat,
                        BabatFlag,
                        Mablagh,
                        FactorId,
                        ContractId,
                        TankhahGroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertSodorCheckOperationCompleted, userState);
        }
        
        private void OnInsertSodorCheckOperationCompleted(object arg) {
            if ((this.InsertSodorCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSodorCheckCompleted(this, new InsertSodorCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/UpdateSodorCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSodorCheck(
                    int fldId, 
                    int DasteCheckId, 
                    string TarikhVosol, 
                    int AshkhasId, 
                    string CodeSerialCheck, 
                    string Babat, 
                    bool BabatFlag, 
                    long Mablagh, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> FactorId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ContractId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> TankhahGroupId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateSodorCheck", new object[] {
                        fldId,
                        DasteCheckId,
                        TarikhVosol,
                        AshkhasId,
                        CodeSerialCheck,
                        Babat,
                        BabatFlag,
                        Mablagh,
                        FactorId,
                        ContractId,
                        TankhahGroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSodorCheckAsync(
                    int fldId, 
                    int DasteCheckId, 
                    string TarikhVosol, 
                    int AshkhasId, 
                    string CodeSerialCheck, 
                    string Babat, 
                    bool BabatFlag, 
                    long Mablagh, 
                    System.Nullable<int> FactorId, 
                    System.Nullable<int> ContractId, 
                    System.Nullable<int> TankhahGroupId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.UpdateSodorCheckAsync(fldId, DasteCheckId, TarikhVosol, AshkhasId, CodeSerialCheck, Babat, BabatFlag, Mablagh, FactorId, ContractId, TankhahGroupId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateSodorCheckAsync(
                    int fldId, 
                    int DasteCheckId, 
                    string TarikhVosol, 
                    int AshkhasId, 
                    string CodeSerialCheck, 
                    string Babat, 
                    bool BabatFlag, 
                    long Mablagh, 
                    System.Nullable<int> FactorId, 
                    System.Nullable<int> ContractId, 
                    System.Nullable<int> TankhahGroupId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.UpdateSodorCheckOperationCompleted == null)) {
                this.UpdateSodorCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSodorCheckOperationCompleted);
            }
            this.InvokeAsync("UpdateSodorCheck", new object[] {
                        fldId,
                        DasteCheckId,
                        TarikhVosol,
                        AshkhasId,
                        CodeSerialCheck,
                        Babat,
                        BabatFlag,
                        Mablagh,
                        FactorId,
                        ContractId,
                        TankhahGroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateSodorCheckOperationCompleted, userState);
        }
        
        private void OnUpdateSodorCheckOperationCompleted(object arg) {
            if ((this.UpdateSodorCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSodorCheckCompleted(this, new UpdateSodorCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/DeleteSodorCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSodorCheck(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteSodorCheck", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSodorCheckAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteSodorCheckAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteSodorCheckAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteSodorCheckOperationCompleted == null)) {
                this.DeleteSodorCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSodorCheckOperationCompleted);
            }
            this.InvokeAsync("DeleteSodorCheck", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteSodorCheckOperationCompleted, userState);
        }
        
        private void OnDeleteSodorCheckOperationCompleted(object arg) {
            if ((this.DeleteSodorCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSodorCheckCompleted(this, new DeleteSodorCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetAghsatCheckAmaniDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AghsatCheckAmani GetAghsatCheckAmaniDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAghsatCheckAmaniDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AghsatCheckAmani)(results[0]));
        }
        
        /// <remarks/>
        public void GetAghsatCheckAmaniDetailAsync(int Id, int OrganId, string IP) {
            this.GetAghsatCheckAmaniDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetAghsatCheckAmaniDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetAghsatCheckAmaniDetailOperationCompleted == null)) {
                this.GetAghsatCheckAmaniDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAghsatCheckAmaniDetailOperationCompleted);
            }
            this.InvokeAsync("GetAghsatCheckAmaniDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetAghsatCheckAmaniDetailOperationCompleted, userState);
        }
        
        private void OnGetAghsatCheckAmaniDetailOperationCompleted(object arg) {
            if ((this.GetAghsatCheckAmaniDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAghsatCheckAmaniDetailCompleted(this, new GetAghsatCheckAmaniDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetAghsatCheckAmaniWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AghsatCheckAmani[] GetAghsatCheckAmaniWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAghsatCheckAmaniWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AghsatCheckAmani[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAghsatCheckAmaniWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetAghsatCheckAmaniWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAghsatCheckAmaniWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetAghsatCheckAmaniWithFilterOperationCompleted == null)) {
                this.GetAghsatCheckAmaniWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAghsatCheckAmaniWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAghsatCheckAmaniWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetAghsatCheckAmaniWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAghsatCheckAmaniWithFilterOperationCompleted(object arg) {
            if ((this.GetAghsatCheckAmaniWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAghsatCheckAmaniWithFilterCompleted(this, new GetAghsatCheckAmaniWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/InsertAghsatCheckAmani", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAghsatCheckAmani(long Mablagh, string Tarikh, string Nobat, int CheckHayeVaredeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAghsatCheckAmani", new object[] {
                        Mablagh,
                        Tarikh,
                        Nobat,
                        CheckHayeVaredeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAghsatCheckAmaniAsync(long Mablagh, string Tarikh, string Nobat, int CheckHayeVaredeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertAghsatCheckAmaniAsync(Mablagh, Tarikh, Nobat, CheckHayeVaredeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAghsatCheckAmaniAsync(long Mablagh, string Tarikh, string Nobat, int CheckHayeVaredeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAghsatCheckAmaniOperationCompleted == null)) {
                this.InsertAghsatCheckAmaniOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAghsatCheckAmaniOperationCompleted);
            }
            this.InvokeAsync("InsertAghsatCheckAmani", new object[] {
                        Mablagh,
                        Tarikh,
                        Nobat,
                        CheckHayeVaredeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertAghsatCheckAmaniOperationCompleted, userState);
        }
        
        private void OnInsertAghsatCheckAmaniOperationCompleted(object arg) {
            if ((this.InsertAghsatCheckAmaniCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAghsatCheckAmaniCompleted(this, new InsertAghsatCheckAmaniCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/UpdateAghsatCheckAmani", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAghsatCheckAmani(int fldId, long Mablagh, string Tarikh, string Nobat, int CheckHayeVaredeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAghsatCheckAmani", new object[] {
                        fldId,
                        Mablagh,
                        Tarikh,
                        Nobat,
                        CheckHayeVaredeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAghsatCheckAmaniAsync(int fldId, long Mablagh, string Tarikh, string Nobat, int CheckHayeVaredeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateAghsatCheckAmaniAsync(fldId, Mablagh, Tarikh, Nobat, CheckHayeVaredeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAghsatCheckAmaniAsync(int fldId, long Mablagh, string Tarikh, string Nobat, int CheckHayeVaredeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateAghsatCheckAmaniOperationCompleted == null)) {
                this.UpdateAghsatCheckAmaniOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAghsatCheckAmaniOperationCompleted);
            }
            this.InvokeAsync("UpdateAghsatCheckAmani", new object[] {
                        fldId,
                        Mablagh,
                        Tarikh,
                        Nobat,
                        CheckHayeVaredeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateAghsatCheckAmaniOperationCompleted, userState);
        }
        
        private void OnUpdateAghsatCheckAmaniOperationCompleted(object arg) {
            if ((this.UpdateAghsatCheckAmaniCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAghsatCheckAmaniCompleted(this, new UpdateAghsatCheckAmaniCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/DeleteAghsatCheckAmani", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAghsatCheckAmani(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAghsatCheckAmani", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAghsatCheckAmaniAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAghsatCheckAmaniAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAghsatCheckAmaniAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAghsatCheckAmaniOperationCompleted == null)) {
                this.DeleteAghsatCheckAmaniOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAghsatCheckAmaniOperationCompleted);
            }
            this.InvokeAsync("DeleteAghsatCheckAmani", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAghsatCheckAmaniOperationCompleted, userState);
        }
        
        private void OnDeleteAghsatCheckAmaniOperationCompleted(object arg) {
            if ((this.DeleteAghsatCheckAmaniCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAghsatCheckAmaniCompleted(this, new DeleteAghsatCheckAmaniCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/UpdateStatusAghsatCheckAmani", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateStatusAghsatCheckAmani(int fldId, string TarikhPardakht, byte Vaziat, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateStatusAghsatCheckAmani", new object[] {
                        fldId,
                        TarikhPardakht,
                        Vaziat,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStatusAghsatCheckAmaniAsync(int fldId, string TarikhPardakht, byte Vaziat, string Username, string Password, int OrganId, string IP) {
            this.UpdateStatusAghsatCheckAmaniAsync(fldId, TarikhPardakht, Vaziat, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateStatusAghsatCheckAmaniAsync(int fldId, string TarikhPardakht, byte Vaziat, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateStatusAghsatCheckAmaniOperationCompleted == null)) {
                this.UpdateStatusAghsatCheckAmaniOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusAghsatCheckAmaniOperationCompleted);
            }
            this.InvokeAsync("UpdateStatusAghsatCheckAmani", new object[] {
                        fldId,
                        TarikhPardakht,
                        Vaziat,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateStatusAghsatCheckAmaniOperationCompleted, userState);
        }
        
        private void OnUpdateStatusAghsatCheckAmaniOperationCompleted(object arg) {
            if ((this.UpdateStatusAghsatCheckAmaniCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusAghsatCheckAmaniCompleted(this, new UpdateStatusAghsatCheckAmaniCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/DeleteAghsatChckAmaniForChckVaredeId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAghsatChckAmaniForChckVaredeId(int ChekVardeId, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAghsatChckAmaniForChckVaredeId", new object[] {
                        ChekVardeId,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAghsatChckAmaniForChckVaredeIdAsync(int ChekVardeId, string Username, string Password, int OrganId, string IP) {
            this.DeleteAghsatChckAmaniForChckVaredeIdAsync(ChekVardeId, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAghsatChckAmaniForChckVaredeIdAsync(int ChekVardeId, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAghsatChckAmaniForChckVaredeIdOperationCompleted == null)) {
                this.DeleteAghsatChckAmaniForChckVaredeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAghsatChckAmaniForChckVaredeIdOperationCompleted);
            }
            this.InvokeAsync("DeleteAghsatChckAmaniForChckVaredeId", new object[] {
                        ChekVardeId,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAghsatChckAmaniForChckVaredeIdOperationCompleted, userState);
        }
        
        private void OnDeleteAghsatChckAmaniForChckVaredeIdOperationCompleted(object arg) {
            if ((this.DeleteAghsatChckAmaniForChckVaredeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAghsatChckAmaniForChckVaredeIdCompleted(this, new DeleteAghsatChckAmaniForChckVaredeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetCheckHayeVaredeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CheckHayeVarede GetCheckHayeVaredeDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCheckHayeVaredeDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CheckHayeVarede)(results[0]));
        }
        
        /// <remarks/>
        public void GetCheckHayeVaredeDetailAsync(int Id, int OrganId, string IP) {
            this.GetCheckHayeVaredeDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetCheckHayeVaredeDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetCheckHayeVaredeDetailOperationCompleted == null)) {
                this.GetCheckHayeVaredeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCheckHayeVaredeDetailOperationCompleted);
            }
            this.InvokeAsync("GetCheckHayeVaredeDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetCheckHayeVaredeDetailOperationCompleted, userState);
        }
        
        private void OnGetCheckHayeVaredeDetailOperationCompleted(object arg) {
            if ((this.GetCheckHayeVaredeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCheckHayeVaredeDetailCompleted(this, new GetCheckHayeVaredeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/GetCheckHayeVaredeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CheckHayeVarede[] GetCheckHayeVaredeWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCheckHayeVaredeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CheckHayeVarede[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCheckHayeVaredeWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetCheckHayeVaredeWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCheckHayeVaredeWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetCheckHayeVaredeWithFilterOperationCompleted == null)) {
                this.GetCheckHayeVaredeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCheckHayeVaredeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCheckHayeVaredeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetCheckHayeVaredeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCheckHayeVaredeWithFilterOperationCompleted(object arg) {
            if ((this.GetCheckHayeVaredeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCheckHayeVaredeWithFilterCompleted(this, new GetCheckHayeVaredeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/InsertCheckHayeVarede", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCheckHayeVarede(int ShobeId, int Mablagh, int AshkhasId, string TarikhVosolCheck, string TarikhDaryaftCheck, string ShenaseKamelCheck, string Babat, bool NoeeCheck, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCheckHayeVarede", new object[] {
                        ShobeId,
                        Mablagh,
                        AshkhasId,
                        TarikhVosolCheck,
                        TarikhDaryaftCheck,
                        ShenaseKamelCheck,
                        Babat,
                        NoeeCheck,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCheckHayeVaredeAsync(int ShobeId, int Mablagh, int AshkhasId, string TarikhVosolCheck, string TarikhDaryaftCheck, string ShenaseKamelCheck, string Babat, bool NoeeCheck, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertCheckHayeVaredeAsync(ShobeId, Mablagh, AshkhasId, TarikhVosolCheck, TarikhDaryaftCheck, ShenaseKamelCheck, Babat, NoeeCheck, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCheckHayeVaredeAsync(int ShobeId, int Mablagh, int AshkhasId, string TarikhVosolCheck, string TarikhDaryaftCheck, string ShenaseKamelCheck, string Babat, bool NoeeCheck, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCheckHayeVaredeOperationCompleted == null)) {
                this.InsertCheckHayeVaredeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCheckHayeVaredeOperationCompleted);
            }
            this.InvokeAsync("InsertCheckHayeVarede", new object[] {
                        ShobeId,
                        Mablagh,
                        AshkhasId,
                        TarikhVosolCheck,
                        TarikhDaryaftCheck,
                        ShenaseKamelCheck,
                        Babat,
                        NoeeCheck,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCheckHayeVaredeOperationCompleted, userState);
        }
        
        private void OnInsertCheckHayeVaredeOperationCompleted(object arg) {
            if ((this.InsertCheckHayeVaredeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCheckHayeVaredeCompleted(this, new InsertCheckHayeVaredeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/UpdateCheckHayeVarede", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCheckHayeVarede(int fldId, int ShobeId, int Mablagh, int AshkhasId, string TarikhVosolCheck, string TarikhDaryaftCheck, string ShenaseKamelCheck, string Babat, bool NoeeCheck, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCheckHayeVarede", new object[] {
                        fldId,
                        ShobeId,
                        Mablagh,
                        AshkhasId,
                        TarikhVosolCheck,
                        TarikhDaryaftCheck,
                        ShenaseKamelCheck,
                        Babat,
                        NoeeCheck,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCheckHayeVaredeAsync(int fldId, int ShobeId, int Mablagh, int AshkhasId, string TarikhVosolCheck, string TarikhDaryaftCheck, string ShenaseKamelCheck, string Babat, bool NoeeCheck, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCheckHayeVaredeAsync(fldId, ShobeId, Mablagh, AshkhasId, TarikhVosolCheck, TarikhDaryaftCheck, ShenaseKamelCheck, Babat, NoeeCheck, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCheckHayeVaredeAsync(int fldId, int ShobeId, int Mablagh, int AshkhasId, string TarikhVosolCheck, string TarikhDaryaftCheck, string ShenaseKamelCheck, string Babat, bool NoeeCheck, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCheckHayeVaredeOperationCompleted == null)) {
                this.UpdateCheckHayeVaredeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCheckHayeVaredeOperationCompleted);
            }
            this.InvokeAsync("UpdateCheckHayeVarede", new object[] {
                        fldId,
                        ShobeId,
                        Mablagh,
                        AshkhasId,
                        TarikhVosolCheck,
                        TarikhDaryaftCheck,
                        ShenaseKamelCheck,
                        Babat,
                        NoeeCheck,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCheckHayeVaredeOperationCompleted, userState);
        }
        
        private void OnUpdateCheckHayeVaredeOperationCompleted(object arg) {
            if ((this.UpdateCheckHayeVaredeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCheckHayeVaredeCompleted(this, new UpdateCheckHayeVaredeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/DeleteCheckHayeVarede", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCheckHayeVarede(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCheckHayeVarede", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCheckHayeVaredeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCheckHayeVaredeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCheckHayeVaredeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCheckHayeVaredeOperationCompleted == null)) {
                this.DeleteCheckHayeVaredeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCheckHayeVaredeOperationCompleted);
            }
            this.InvokeAsync("DeleteCheckHayeVarede", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCheckHayeVaredeOperationCompleted, userState);
        }
        
        private void OnDeleteCheckHayeVaredeOperationCompleted(object arg) {
            if ((this.DeleteCheckHayeVaredeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCheckHayeVaredeCompleted(this, new DeleteCheckHayeVaredeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IChekService/InsertChekStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertChekStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> SodorCheckId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> CheckVaredeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> AghsatId, byte Status, string Tarikh, string Desc, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertChekStatus", new object[] {
                        SodorCheckId,
                        CheckVaredeId,
                        AghsatId,
                        Status,
                        Tarikh,
                        Desc,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertChekStatusAsync(System.Nullable<int> SodorCheckId, System.Nullable<int> CheckVaredeId, System.Nullable<int> AghsatId, byte Status, string Tarikh, string Desc, string Username, string Password, string IP) {
            this.InsertChekStatusAsync(SodorCheckId, CheckVaredeId, AghsatId, Status, Tarikh, Desc, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void InsertChekStatusAsync(System.Nullable<int> SodorCheckId, System.Nullable<int> CheckVaredeId, System.Nullable<int> AghsatId, byte Status, string Tarikh, string Desc, string Username, string Password, string IP, object userState) {
            if ((this.InsertChekStatusOperationCompleted == null)) {
                this.InsertChekStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertChekStatusOperationCompleted);
            }
            this.InvokeAsync("InsertChekStatus", new object[] {
                        SodorCheckId,
                        CheckVaredeId,
                        AghsatId,
                        Status,
                        Tarikh,
                        Desc,
                        Username,
                        Password,
                        IP}, this.InsertChekStatusOperationCompleted, userState);
        }
        
        private void OnInsertChekStatusOperationCompleted(object arg) {
            if ((this.InsertChekStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertChekStatusCompleted(this, new InsertChekStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_OlgoCheck {
        
        private int fldIdField;
        
        private int fldIdFileField;
        
        private int fldIdBankField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldTitleField;
        
        private string fldBankNameField;
        
        private int fldOrganIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldIdFile {
            get {
                return this.fldIdFileField;
            }
            set {
                this.fldIdFileField = value;
            }
        }
        
        /// <remarks/>
        public int fldIdBank {
            get {
                return this.fldIdBankField;
            }
            set {
                this.fldIdBankField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankName {
            get {
                return this.fldBankNameField;
            }
            set {
                this.fldBankNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_CheckHayeVarede {
        
        private int fldIdField;
        
        private System.Nullable<int> fldIdShobeField;
        
        private long fldMablaghField;
        
        private System.Nullable<int> fldAshkhasIdField;
        
        private string fldTarikhVosolCheckField;
        
        private System.Nullable<int> fldOrganIdField;
        
        private string fldTarikhDaryaftCheckField;
        
        private string fldShenaseKamelCheckField;
        
        private string fldBabatField;
        
        private bool fldNoeeCheckField;
        
        private string noeeCheckNameField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string tarikhSabtField;
        
        private string fldShobeNameField;
        
        private string fldBankNameField;
        
        private int fldBankIdField;
        
        private string nameFamilyField;
        
        private System.Nullable<byte> fldvaziatField;
        
        private string nameVaziatField;
        
        private string fldTarikhVaziatField;
        
        private int fldStatusField;
        
        private string fldCodemeliField;
        
        private string fldTypeShakhsField;
        
        private string fldSaderKonandehField;
        
        private bool fldReceiveField;
        
        private string fldReceiveNameField;
        
        private int fldElamAvarezIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldIdShobe {
            get {
                return this.fldIdShobeField;
            }
            set {
                this.fldIdShobeField = value;
            }
        }
        
        /// <remarks/>
        public long fldMablagh {
            get {
                return this.fldMablaghField;
            }
            set {
                this.fldMablaghField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldAshkhasId {
            get {
                return this.fldAshkhasIdField;
            }
            set {
                this.fldAshkhasIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhVosolCheck {
            get {
                return this.fldTarikhVosolCheckField;
            }
            set {
                this.fldTarikhVosolCheckField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhDaryaftCheck {
            get {
                return this.fldTarikhDaryaftCheckField;
            }
            set {
                this.fldTarikhDaryaftCheckField = value;
            }
        }
        
        /// <remarks/>
        public string fldShenaseKamelCheck {
            get {
                return this.fldShenaseKamelCheckField;
            }
            set {
                this.fldShenaseKamelCheckField = value;
            }
        }
        
        /// <remarks/>
        public string fldBabat {
            get {
                return this.fldBabatField;
            }
            set {
                this.fldBabatField = value;
            }
        }
        
        /// <remarks/>
        public bool fldNoeeCheck {
            get {
                return this.fldNoeeCheckField;
            }
            set {
                this.fldNoeeCheckField = value;
            }
        }
        
        /// <remarks/>
        public string NoeeCheckName {
            get {
                return this.noeeCheckNameField;
            }
            set {
                this.noeeCheckNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string TarikhSabt {
            get {
                return this.tarikhSabtField;
            }
            set {
                this.tarikhSabtField = value;
            }
        }
        
        /// <remarks/>
        public string fldShobeName {
            get {
                return this.fldShobeNameField;
            }
            set {
                this.fldShobeNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankName {
            get {
                return this.fldBankNameField;
            }
            set {
                this.fldBankNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldBankId {
            get {
                return this.fldBankIdField;
            }
            set {
                this.fldBankIdField = value;
            }
        }
        
        /// <remarks/>
        public string NameFamily {
            get {
                return this.nameFamilyField;
            }
            set {
                this.nameFamilyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<byte> fldvaziat {
            get {
                return this.fldvaziatField;
            }
            set {
                this.fldvaziatField = value;
            }
        }
        
        /// <remarks/>
        public string NameVaziat {
            get {
                return this.nameVaziatField;
            }
            set {
                this.nameVaziatField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhVaziat {
            get {
                return this.fldTarikhVaziatField;
            }
            set {
                this.fldTarikhVaziatField = value;
            }
        }
        
        /// <remarks/>
        public int fldStatus {
            get {
                return this.fldStatusField;
            }
            set {
                this.fldStatusField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodemeli {
            get {
                return this.fldCodemeliField;
            }
            set {
                this.fldCodemeliField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeShakhs {
            get {
                return this.fldTypeShakhsField;
            }
            set {
                this.fldTypeShakhsField = value;
            }
        }
        
        /// <remarks/>
        public string fldSaderKonandeh {
            get {
                return this.fldSaderKonandehField;
            }
            set {
                this.fldSaderKonandehField = value;
            }
        }
        
        /// <remarks/>
        public bool fldReceive {
            get {
                return this.fldReceiveField;
            }
            set {
                this.fldReceiveField = value;
            }
        }
        
        /// <remarks/>
        public string fldReceiveName {
            get {
                return this.fldReceiveNameField;
            }
            set {
                this.fldReceiveNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldElamAvarezId {
            get {
                return this.fldElamAvarezIdField;
            }
            set {
                this.fldElamAvarezIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_AghsatCheckAmani {
        
        private int fldIdField;
        
        private long fldMablaghField;
        
        private string fldTarikhField;
        
        private string fldNobatField;
        
        private System.Nullable<byte> fldVaziatField;
        
        private int fldIdCheckHayeVaredeField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string nameVaziatField;
        
        private string fldTarikhVaziatField;
        
        private int fldOrganIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public long fldMablagh {
            get {
                return this.fldMablaghField;
            }
            set {
                this.fldMablaghField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikh {
            get {
                return this.fldTarikhField;
            }
            set {
                this.fldTarikhField = value;
            }
        }
        
        /// <remarks/>
        public string fldNobat {
            get {
                return this.fldNobatField;
            }
            set {
                this.fldNobatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<byte> fldVaziat {
            get {
                return this.fldVaziatField;
            }
            set {
                this.fldVaziatField = value;
            }
        }
        
        /// <remarks/>
        public int fldIdCheckHayeVarede {
            get {
                return this.fldIdCheckHayeVaredeField;
            }
            set {
                this.fldIdCheckHayeVaredeField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string NameVaziat {
            get {
                return this.nameVaziatField;
            }
            set {
                this.nameVaziatField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhVaziat {
            get {
                return this.fldTarikhVaziatField;
            }
            set {
                this.fldTarikhVaziatField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_SodorCheck {
        
        private int fldIdField;
        
        private int fldIdDasteCheckField;
        
        private string fldTarikhVosolField;
        
        private string fldDarVajhField;
        
        private string fldCodeSerialCheckField;
        
        private string fldBabatField;
        
        private bool fldBabatFlagField;
        
        private long fldMablaghField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldMoshakhaseDasteCheckField;
        
        private string fldBankNameField;
        
        private string tarikhSabtField;
        
        private string nameShobeField;
        
        private string name_FamilyField;
        
        private string shomareMeliField;
        
        private string fldShomareHesabField;
        
        private int ashkhasIdField;
        
        private string babatTextField;
        
        private string tarikhShamsiField;
        
        private string mablaghBeHorofField;
        
        private byte fldvaziatField;
        
        private string nameVaziatField;
        
        private string fldTarikhVaziatField;
        
        private int fldOrganIdField;
        
        private System.Nullable<int> fldTankhahGroupIdField;
        
        private System.Nullable<int> fldFactorIdField;
        
        private System.Nullable<int> fldContractIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldIdDasteCheck {
            get {
                return this.fldIdDasteCheckField;
            }
            set {
                this.fldIdDasteCheckField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhVosol {
            get {
                return this.fldTarikhVosolField;
            }
            set {
                this.fldTarikhVosolField = value;
            }
        }
        
        /// <remarks/>
        public string fldDarVajh {
            get {
                return this.fldDarVajhField;
            }
            set {
                this.fldDarVajhField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodeSerialCheck {
            get {
                return this.fldCodeSerialCheckField;
            }
            set {
                this.fldCodeSerialCheckField = value;
            }
        }
        
        /// <remarks/>
        public string fldBabat {
            get {
                return this.fldBabatField;
            }
            set {
                this.fldBabatField = value;
            }
        }
        
        /// <remarks/>
        public bool fldBabatFlag {
            get {
                return this.fldBabatFlagField;
            }
            set {
                this.fldBabatFlagField = value;
            }
        }
        
        /// <remarks/>
        public long fldMablagh {
            get {
                return this.fldMablaghField;
            }
            set {
                this.fldMablaghField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldMoshakhaseDasteCheck {
            get {
                return this.fldMoshakhaseDasteCheckField;
            }
            set {
                this.fldMoshakhaseDasteCheckField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankName {
            get {
                return this.fldBankNameField;
            }
            set {
                this.fldBankNameField = value;
            }
        }
        
        /// <remarks/>
        public string TarikhSabt {
            get {
                return this.tarikhSabtField;
            }
            set {
                this.tarikhSabtField = value;
            }
        }
        
        /// <remarks/>
        public string NameShobe {
            get {
                return this.nameShobeField;
            }
            set {
                this.nameShobeField = value;
            }
        }
        
        /// <remarks/>
        public string Name_Family {
            get {
                return this.name_FamilyField;
            }
            set {
                this.name_FamilyField = value;
            }
        }
        
        /// <remarks/>
        public string ShomareMeli {
            get {
                return this.shomareMeliField;
            }
            set {
                this.shomareMeliField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareHesab {
            get {
                return this.fldShomareHesabField;
            }
            set {
                this.fldShomareHesabField = value;
            }
        }
        
        /// <remarks/>
        public int AshkhasId {
            get {
                return this.ashkhasIdField;
            }
            set {
                this.ashkhasIdField = value;
            }
        }
        
        /// <remarks/>
        public string BabatText {
            get {
                return this.babatTextField;
            }
            set {
                this.babatTextField = value;
            }
        }
        
        /// <remarks/>
        public string TarikhShamsi {
            get {
                return this.tarikhShamsiField;
            }
            set {
                this.tarikhShamsiField = value;
            }
        }
        
        /// <remarks/>
        public string MablaghBeHorof {
            get {
                return this.mablaghBeHorofField;
            }
            set {
                this.mablaghBeHorofField = value;
            }
        }
        
        /// <remarks/>
        public byte fldvaziat {
            get {
                return this.fldvaziatField;
            }
            set {
                this.fldvaziatField = value;
            }
        }
        
        /// <remarks/>
        public string NameVaziat {
            get {
                return this.nameVaziatField;
            }
            set {
                this.nameVaziatField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhVaziat {
            get {
                return this.fldTarikhVaziatField;
            }
            set {
                this.fldTarikhVaziatField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldTankhahGroupId {
            get {
                return this.fldTankhahGroupIdField;
            }
            set {
                this.fldTankhahGroupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldFactorId {
            get {
                return this.fldFactorIdField;
            }
            set {
                this.fldFactorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldContractId {
            get {
                return this.fldContractIdField;
            }
            set {
                this.fldContractIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_DasteCheck {
        
        private int fldIdField;
        
        private int fldIdOlgoCheckField;
        
        private string fldShomareHesabField;
        
        private string fldMoshakhaseDasteCheckField;
        
        private byte fldTedadBargField;
        
        private string fldShoroeSeriyalField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private int fldIdShomareHesabField;
        
        private string fldBankNameField;
        
        private string fldOlguField;
        
        private string fldShobeNameField;
        
        private int fldOrganIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldIdOlgoCheck {
            get {
                return this.fldIdOlgoCheckField;
            }
            set {
                this.fldIdOlgoCheckField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareHesab {
            get {
                return this.fldShomareHesabField;
            }
            set {
                this.fldShomareHesabField = value;
            }
        }
        
        /// <remarks/>
        public string fldMoshakhaseDasteCheck {
            get {
                return this.fldMoshakhaseDasteCheckField;
            }
            set {
                this.fldMoshakhaseDasteCheckField = value;
            }
        }
        
        /// <remarks/>
        public byte fldTedadBarg {
            get {
                return this.fldTedadBargField;
            }
            set {
                this.fldTedadBargField = value;
            }
        }
        
        /// <remarks/>
        public string fldShoroeSeriyal {
            get {
                return this.fldShoroeSeriyalField;
            }
            set {
                this.fldShoroeSeriyalField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldIdShomareHesab {
            get {
                return this.fldIdShomareHesabField;
            }
            set {
                this.fldIdShomareHesabField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankName {
            get {
                return this.fldBankNameField;
            }
            set {
                this.fldBankNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldOlgu {
            get {
                return this.fldOlguField;
            }
            set {
                this.fldOlguField = value;
            }
        }
        
        /// <remarks/>
        public string fldShobeName {
            get {
                return this.fldShobeNameField;
            }
            set {
                this.fldShobeNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ClsError {
        
        private string errorMsgField;
        
        private string msgField;
        
        private bool errorTypeField;
        
        private int outputIdField;
        
        private int outputId2Field;
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
            }
        }
        
        /// <remarks/>
        public bool ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId {
            get {
                return this.outputIdField;
            }
            set {
                this.outputIdField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId2 {
            get {
                return this.outputId2Field;
            }
            set {
                this.outputId2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetOlgoCheckDetailCompletedEventHandler(object sender, GetOlgoCheckDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOlgoCheckDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOlgoCheckDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_OlgoCheck Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_OlgoCheck)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetOlgoCheckWithFilterCompletedEventHandler(object sender, GetOlgoCheckWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOlgoCheckWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOlgoCheckWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_OlgoCheck[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_OlgoCheck[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertOlgoCheckCompletedEventHandler(object sender, InsertOlgoCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOlgoCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOlgoCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateOlgoCheckCompletedEventHandler(object sender, UpdateOlgoCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOlgoCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOlgoCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteOlgoCheckCompletedEventHandler(object sender, DeleteOlgoCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOlgoCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOlgoCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDasteCheckDetailCompletedEventHandler(object sender, GetDasteCheckDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDasteCheckDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDasteCheckDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DasteCheck Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DasteCheck)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDasteCheckWithFilterCompletedEventHandler(object sender, GetDasteCheckWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDasteCheckWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDasteCheckWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DasteCheck[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DasteCheck[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertDasteCheckCompletedEventHandler(object sender, InsertDasteCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDasteCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDasteCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateDasteCheckCompletedEventHandler(object sender, UpdateDasteCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDasteCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDasteCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDasteCheckCompletedEventHandler(object sender, DeleteDasteCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDasteCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDasteCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSodorCheckDetailCompletedEventHandler(object sender, GetSodorCheckDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSodorCheckDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSodorCheckDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_SodorCheck Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_SodorCheck)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSodorCheckWithFilterCompletedEventHandler(object sender, GetSodorCheckWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSodorCheckWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSodorCheckWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_SodorCheck[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_SodorCheck[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSumMablaghCheck_FactorCompletedEventHandler(object sender, GetSumMablaghCheck_FactorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSumMablaghCheck_FactorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSumMablaghCheck_FactorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertSodorCheckCompletedEventHandler(object sender, InsertSodorCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSodorCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSodorCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSodorCheckCompletedEventHandler(object sender, UpdateSodorCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSodorCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSodorCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSodorCheckCompletedEventHandler(object sender, DeleteSodorCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSodorCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSodorCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAghsatCheckAmaniDetailCompletedEventHandler(object sender, GetAghsatCheckAmaniDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAghsatCheckAmaniDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAghsatCheckAmaniDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AghsatCheckAmani Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AghsatCheckAmani)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAghsatCheckAmaniWithFilterCompletedEventHandler(object sender, GetAghsatCheckAmaniWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAghsatCheckAmaniWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAghsatCheckAmaniWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AghsatCheckAmani[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AghsatCheckAmani[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAghsatCheckAmaniCompletedEventHandler(object sender, InsertAghsatCheckAmaniCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAghsatCheckAmaniCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAghsatCheckAmaniCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAghsatCheckAmaniCompletedEventHandler(object sender, UpdateAghsatCheckAmaniCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAghsatCheckAmaniCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAghsatCheckAmaniCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAghsatCheckAmaniCompletedEventHandler(object sender, DeleteAghsatCheckAmaniCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAghsatCheckAmaniCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAghsatCheckAmaniCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateStatusAghsatCheckAmaniCompletedEventHandler(object sender, UpdateStatusAghsatCheckAmaniCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStatusAghsatCheckAmaniCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStatusAghsatCheckAmaniCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAghsatChckAmaniForChckVaredeIdCompletedEventHandler(object sender, DeleteAghsatChckAmaniForChckVaredeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAghsatChckAmaniForChckVaredeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAghsatChckAmaniForChckVaredeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCheckHayeVaredeDetailCompletedEventHandler(object sender, GetCheckHayeVaredeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCheckHayeVaredeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCheckHayeVaredeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CheckHayeVarede Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CheckHayeVarede)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCheckHayeVaredeWithFilterCompletedEventHandler(object sender, GetCheckHayeVaredeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCheckHayeVaredeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCheckHayeVaredeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CheckHayeVarede[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CheckHayeVarede[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCheckHayeVaredeCompletedEventHandler(object sender, InsertCheckHayeVaredeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCheckHayeVaredeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCheckHayeVaredeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCheckHayeVaredeCompletedEventHandler(object sender, UpdateCheckHayeVaredeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCheckHayeVaredeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCheckHayeVaredeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCheckHayeVaredeCompletedEventHandler(object sender, DeleteCheckHayeVaredeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCheckHayeVaredeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCheckHayeVaredeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertChekStatusCompletedEventHandler(object sender, InsertChekStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertChekStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertChekStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591