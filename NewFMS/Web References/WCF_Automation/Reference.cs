//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NewFMS.WCF_Automation {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IAutomationService", Namespace="http://tempuri.org/")]
    public partial class AutomationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DeleteLetterAttachmentLetterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoneveshtDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoneveshtWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRoneveshtOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRoneveshtOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRoneveshtOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterFollowDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterFollowWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLetterFollowOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterFollowOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterFollowOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterFollowLetterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiverAssignmentTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiverAssignmentTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReceiverAssignmentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReceiverAssignmentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReceiverAssignmentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLetterNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryLetterDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryLetterWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertHistoryLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHistoryLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteHistoryLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTabagheBandiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterStatusWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterNumDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterStatusIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectInboxOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectSavedLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectSentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectTrashOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterBoxDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterBoxWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLetterBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterBoxLetterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterTabagheBandiDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterTabagheBandiWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLetterTabagheBandiOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterTabagheBandiOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterTabagheBandiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssignmentStatusWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssignmentDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssignmentWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAssignmentLetterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInternalAssignmentReceiverDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInternalAssignmentReceiverWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInternalAssignmentReceiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInternalAssignmentReceiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInternalAssignmentReceiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInternalAssignmentReceiverBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInternalAssignmentReceiverStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInternalAssignmentSenderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInternalAssignmentSenderWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInternalAssignmentSenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInternalAssignmentSenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInternalAssignmentSenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInternalAssignmentSenderBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArchiveDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArchiveWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterArchiveDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterArchiveWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLetterArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterArchiveLetterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignerDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignerWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSignerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSignerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSignerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalLetterReceiverDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalLetterReceiverWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalLetterReceiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateExternalLetterReceiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExternalLetterReceiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalLetterSenderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalLetterSenderWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalLetterSenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateExternalLetterSenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExternalLetterSenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInternalLetterReceiverDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInternalLetterReceiverWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInternalLetterReceiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInternalLetterReceiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInternalLetterReceiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentFileDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentFileWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertContentFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContentFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContentFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterAttachmentDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterAttachmentWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLetterAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommisionDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommisionWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCommisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCommisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCommisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommision_PostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssignmentTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssignmentTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAssignmentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAssignmentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAssignmentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImmediacyDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImmediacyWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertImmediacyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateImmediacyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImmediacyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumberingFormatDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumberingFormatWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNumberingFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNumberingFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNumberingFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSecurityTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSecurityTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSecurityTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettingWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecretariat_OrganizationUnitDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecretariat_OrganizationUnitWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSecretariat_OrganizationUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSecretariat_OrganizationUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSecretariat_OrganizationUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubstituteDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubstituteWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSubstituteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSubstituteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSubstituteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMergeFieldTypesWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterTemplateDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterTemplateWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLetterTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterTemplate_FormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMergeField_LetterTemplateDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMergeField_LetterTemplateWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMergeField_LetterTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMergeField_LetterTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMergeField_LetterTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferralRulesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferralRulesWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReferralRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReferralRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReferralRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSavedMessageWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageAttachmentDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageAttachmentWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMessageAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMessageAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessageAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterFileMojazDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLetterFileMojazWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLetterFileMojazOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLetterFileMojazOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLetterFileMojazOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTabagheBandiDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTabagheBandiWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTabagheBandiOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTabagheBandiOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AutomationService() {
            this.Url = global::NewFMS.Properties.Settings.Default.NewFMS_WCF_Automation_AutomationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DeleteLetterAttachmentLetterIDCompletedEventHandler DeleteLetterAttachmentLetterIDCompleted;
        
        /// <remarks/>
        public event GetRoneveshtDetailCompletedEventHandler GetRoneveshtDetailCompleted;
        
        /// <remarks/>
        public event GetRoneveshtWithFilterCompletedEventHandler GetRoneveshtWithFilterCompleted;
        
        /// <remarks/>
        public event InsertRoneveshtCompletedEventHandler InsertRoneveshtCompleted;
        
        /// <remarks/>
        public event UpdateRoneveshtCompletedEventHandler UpdateRoneveshtCompleted;
        
        /// <remarks/>
        public event DeleteRoneveshtCompletedEventHandler DeleteRoneveshtCompleted;
        
        /// <remarks/>
        public event GetLetterFollowDetailCompletedEventHandler GetLetterFollowDetailCompleted;
        
        /// <remarks/>
        public event GetLetterFollowWithFilterCompletedEventHandler GetLetterFollowWithFilterCompleted;
        
        /// <remarks/>
        public event InsertLetterFollowCompletedEventHandler InsertLetterFollowCompleted;
        
        /// <remarks/>
        public event UpdateLetterFollowCompletedEventHandler UpdateLetterFollowCompleted;
        
        /// <remarks/>
        public event DeleteLetterFollowCompletedEventHandler DeleteLetterFollowCompleted;
        
        /// <remarks/>
        public event DeleteLetterFollowLetterIDCompletedEventHandler DeleteLetterFollowLetterIDCompleted;
        
        /// <remarks/>
        public event GetReceiverAssignmentTypeDetailCompletedEventHandler GetReceiverAssignmentTypeDetailCompleted;
        
        /// <remarks/>
        public event GetReceiverAssignmentTypeWithFilterCompletedEventHandler GetReceiverAssignmentTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertReceiverAssignmentTypeCompletedEventHandler InsertReceiverAssignmentTypeCompleted;
        
        /// <remarks/>
        public event UpdateReceiverAssignmentTypeCompletedEventHandler UpdateReceiverAssignmentTypeCompleted;
        
        /// <remarks/>
        public event DeleteReceiverAssignmentTypeCompletedEventHandler DeleteReceiverAssignmentTypeCompleted;
        
        /// <remarks/>
        public event InsertLetterNumberCompletedEventHandler InsertLetterNumberCompleted;
        
        /// <remarks/>
        public event GetHistoryLetterDetailCompletedEventHandler GetHistoryLetterDetailCompleted;
        
        /// <remarks/>
        public event GetHistoryLetterWithFilterCompletedEventHandler GetHistoryLetterWithFilterCompleted;
        
        /// <remarks/>
        public event InsertHistoryLetterCompletedEventHandler InsertHistoryLetterCompleted;
        
        /// <remarks/>
        public event UpdateHistoryLetterCompletedEventHandler UpdateHistoryLetterCompleted;
        
        /// <remarks/>
        public event DeleteHistoryLetterCompletedEventHandler DeleteHistoryLetterCompleted;
        
        /// <remarks/>
        public event DeleteTabagheBandiCompletedEventHandler DeleteTabagheBandiCompleted;
        
        /// <remarks/>
        public event GetLetterStatusWithFilterCompletedEventHandler GetLetterStatusWithFilterCompleted;
        
        /// <remarks/>
        public event GetLetterDetailCompletedEventHandler GetLetterDetailCompleted;
        
        /// <remarks/>
        public event GetLetterWithFilterCompletedEventHandler GetLetterWithFilterCompleted;
        
        /// <remarks/>
        public event InsertLetterCompletedEventHandler InsertLetterCompleted;
        
        /// <remarks/>
        public event UpdateLetterCompletedEventHandler UpdateLetterCompleted;
        
        /// <remarks/>
        public event DeleteLetterCompletedEventHandler DeleteLetterCompleted;
        
        /// <remarks/>
        public event UpdateLetterNumDateCompletedEventHandler UpdateLetterNumDateCompleted;
        
        /// <remarks/>
        public event UpdateLetterStatusIdCompletedEventHandler UpdateLetterStatusIdCompleted;
        
        /// <remarks/>
        public event SelectInboxCompletedEventHandler SelectInboxCompleted;
        
        /// <remarks/>
        public event SelectSavedLetterCompletedEventHandler SelectSavedLetterCompleted;
        
        /// <remarks/>
        public event SelectSentCompletedEventHandler SelectSentCompleted;
        
        /// <remarks/>
        public event SelectTrashCompletedEventHandler SelectTrashCompleted;
        
        /// <remarks/>
        public event GetLetterBoxDetailCompletedEventHandler GetLetterBoxDetailCompleted;
        
        /// <remarks/>
        public event GetLetterBoxWithFilterCompletedEventHandler GetLetterBoxWithFilterCompleted;
        
        /// <remarks/>
        public event InsertLetterBoxCompletedEventHandler InsertLetterBoxCompleted;
        
        /// <remarks/>
        public event UpdateLetterBoxCompletedEventHandler UpdateLetterBoxCompleted;
        
        /// <remarks/>
        public event DeleteLetterBoxCompletedEventHandler DeleteLetterBoxCompleted;
        
        /// <remarks/>
        public event DeleteLetterBoxLetterIDCompletedEventHandler DeleteLetterBoxLetterIDCompleted;
        
        /// <remarks/>
        public event GetLetterTabagheBandiDetailCompletedEventHandler GetLetterTabagheBandiDetailCompleted;
        
        /// <remarks/>
        public event GetLetterTabagheBandiWithFilterCompletedEventHandler GetLetterTabagheBandiWithFilterCompleted;
        
        /// <remarks/>
        public event InsertLetterTabagheBandiCompletedEventHandler InsertLetterTabagheBandiCompleted;
        
        /// <remarks/>
        public event UpdateLetterTabagheBandiCompletedEventHandler UpdateLetterTabagheBandiCompleted;
        
        /// <remarks/>
        public event DeleteLetterTabagheBandiCompletedEventHandler DeleteLetterTabagheBandiCompleted;
        
        /// <remarks/>
        public event GetAssignmentStatusWithFilterCompletedEventHandler GetAssignmentStatusWithFilterCompleted;
        
        /// <remarks/>
        public event GetAssignmentDetailCompletedEventHandler GetAssignmentDetailCompleted;
        
        /// <remarks/>
        public event GetAssignmentWithFilterCompletedEventHandler GetAssignmentWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAssignmentCompletedEventHandler InsertAssignmentCompleted;
        
        /// <remarks/>
        public event UpdateAssignmentCompletedEventHandler UpdateAssignmentCompleted;
        
        /// <remarks/>
        public event DeleteAssignmentCompletedEventHandler DeleteAssignmentCompleted;
        
        /// <remarks/>
        public event DeleteAssignmentLetterIDCompletedEventHandler DeleteAssignmentLetterIDCompleted;
        
        /// <remarks/>
        public event GetInternalAssignmentReceiverDetailCompletedEventHandler GetInternalAssignmentReceiverDetailCompleted;
        
        /// <remarks/>
        public event GetInternalAssignmentReceiverWithFilterCompletedEventHandler GetInternalAssignmentReceiverWithFilterCompleted;
        
        /// <remarks/>
        public event InsertInternalAssignmentReceiverCompletedEventHandler InsertInternalAssignmentReceiverCompleted;
        
        /// <remarks/>
        public event UpdateInternalAssignmentReceiverCompletedEventHandler UpdateInternalAssignmentReceiverCompleted;
        
        /// <remarks/>
        public event DeleteInternalAssignmentReceiverCompletedEventHandler DeleteInternalAssignmentReceiverCompleted;
        
        /// <remarks/>
        public event UpdateInternalAssignmentReceiverBoxCompletedEventHandler UpdateInternalAssignmentReceiverBoxCompleted;
        
        /// <remarks/>
        public event UpdateInternalAssignmentReceiverStatusCompletedEventHandler UpdateInternalAssignmentReceiverStatusCompleted;
        
        /// <remarks/>
        public event GetInternalAssignmentSenderDetailCompletedEventHandler GetInternalAssignmentSenderDetailCompleted;
        
        /// <remarks/>
        public event GetInternalAssignmentSenderWithFilterCompletedEventHandler GetInternalAssignmentSenderWithFilterCompleted;
        
        /// <remarks/>
        public event InsertInternalAssignmentSenderCompletedEventHandler InsertInternalAssignmentSenderCompleted;
        
        /// <remarks/>
        public event UpdateInternalAssignmentSenderCompletedEventHandler UpdateInternalAssignmentSenderCompleted;
        
        /// <remarks/>
        public event DeleteInternalAssignmentSenderCompletedEventHandler DeleteInternalAssignmentSenderCompleted;
        
        /// <remarks/>
        public event UpdateInternalAssignmentSenderBoxCompletedEventHandler UpdateInternalAssignmentSenderBoxCompleted;
        
        /// <remarks/>
        public event GetArchiveDetailCompletedEventHandler GetArchiveDetailCompleted;
        
        /// <remarks/>
        public event GetArchiveWithFilterCompletedEventHandler GetArchiveWithFilterCompleted;
        
        /// <remarks/>
        public event InsertArchiveCompletedEventHandler InsertArchiveCompleted;
        
        /// <remarks/>
        public event UpdateArchiveCompletedEventHandler UpdateArchiveCompleted;
        
        /// <remarks/>
        public event DeleteArchiveCompletedEventHandler DeleteArchiveCompleted;
        
        /// <remarks/>
        public event GetLetterArchiveDetailCompletedEventHandler GetLetterArchiveDetailCompleted;
        
        /// <remarks/>
        public event GetLetterArchiveWithFilterCompletedEventHandler GetLetterArchiveWithFilterCompleted;
        
        /// <remarks/>
        public event InsertLetterArchiveCompletedEventHandler InsertLetterArchiveCompleted;
        
        /// <remarks/>
        public event UpdateLetterArchiveCompletedEventHandler UpdateLetterArchiveCompleted;
        
        /// <remarks/>
        public event DeleteLetterArchiveCompletedEventHandler DeleteLetterArchiveCompleted;
        
        /// <remarks/>
        public event DeleteLetterArchiveLetterIDCompletedEventHandler DeleteLetterArchiveLetterIDCompleted;
        
        /// <remarks/>
        public event GetSignerDetailCompletedEventHandler GetSignerDetailCompleted;
        
        /// <remarks/>
        public event GetSignerWithFilterCompletedEventHandler GetSignerWithFilterCompleted;
        
        /// <remarks/>
        public event InsertSignerCompletedEventHandler InsertSignerCompleted;
        
        /// <remarks/>
        public event UpdateSignerCompletedEventHandler UpdateSignerCompleted;
        
        /// <remarks/>
        public event DeleteSignerCompletedEventHandler DeleteSignerCompleted;
        
        /// <remarks/>
        public event GetExternalLetterReceiverDetailCompletedEventHandler GetExternalLetterReceiverDetailCompleted;
        
        /// <remarks/>
        public event GetExternalLetterReceiverWithFilterCompletedEventHandler GetExternalLetterReceiverWithFilterCompleted;
        
        /// <remarks/>
        public event InsertExternalLetterReceiverCompletedEventHandler InsertExternalLetterReceiverCompleted;
        
        /// <remarks/>
        public event UpdateExternalLetterReceiverCompletedEventHandler UpdateExternalLetterReceiverCompleted;
        
        /// <remarks/>
        public event DeleteExternalLetterReceiverCompletedEventHandler DeleteExternalLetterReceiverCompleted;
        
        /// <remarks/>
        public event GetExternalLetterSenderDetailCompletedEventHandler GetExternalLetterSenderDetailCompleted;
        
        /// <remarks/>
        public event GetExternalLetterSenderWithFilterCompletedEventHandler GetExternalLetterSenderWithFilterCompleted;
        
        /// <remarks/>
        public event InsertExternalLetterSenderCompletedEventHandler InsertExternalLetterSenderCompleted;
        
        /// <remarks/>
        public event UpdateExternalLetterSenderCompletedEventHandler UpdateExternalLetterSenderCompleted;
        
        /// <remarks/>
        public event DeleteExternalLetterSenderCompletedEventHandler DeleteExternalLetterSenderCompleted;
        
        /// <remarks/>
        public event GetInternalLetterReceiverDetailCompletedEventHandler GetInternalLetterReceiverDetailCompleted;
        
        /// <remarks/>
        public event GetInternalLetterReceiverWithFilterCompletedEventHandler GetInternalLetterReceiverWithFilterCompleted;
        
        /// <remarks/>
        public event InsertInternalLetterReceiverCompletedEventHandler InsertInternalLetterReceiverCompleted;
        
        /// <remarks/>
        public event UpdateInternalLetterReceiverCompletedEventHandler UpdateInternalLetterReceiverCompleted;
        
        /// <remarks/>
        public event DeleteInternalLetterReceiverCompletedEventHandler DeleteInternalLetterReceiverCompleted;
        
        /// <remarks/>
        public event GetContentFileDetailCompletedEventHandler GetContentFileDetailCompleted;
        
        /// <remarks/>
        public event GetContentFileWithFilterCompletedEventHandler GetContentFileWithFilterCompleted;
        
        /// <remarks/>
        public event InsertContentFileCompletedEventHandler InsertContentFileCompleted;
        
        /// <remarks/>
        public event UpdateContentFileCompletedEventHandler UpdateContentFileCompleted;
        
        /// <remarks/>
        public event DeleteContentFileCompletedEventHandler DeleteContentFileCompleted;
        
        /// <remarks/>
        public event GetLetterAttachmentDetailCompletedEventHandler GetLetterAttachmentDetailCompleted;
        
        /// <remarks/>
        public event GetLetterAttachmentWithFilterCompletedEventHandler GetLetterAttachmentWithFilterCompleted;
        
        /// <remarks/>
        public event InsertLetterAttachmentCompletedEventHandler InsertLetterAttachmentCompleted;
        
        /// <remarks/>
        public event UpdateLetterAttachmentCompletedEventHandler UpdateLetterAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteLetterAttachmentCompletedEventHandler DeleteLetterAttachmentCompleted;
        
        /// <remarks/>
        public event GetCommisionDetailCompletedEventHandler GetCommisionDetailCompleted;
        
        /// <remarks/>
        public event GetCommisionWithFilterCompletedEventHandler GetCommisionWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCommisionCompletedEventHandler InsertCommisionCompleted;
        
        /// <remarks/>
        public event UpdateCommisionCompletedEventHandler UpdateCommisionCompleted;
        
        /// <remarks/>
        public event DeleteCommisionCompletedEventHandler DeleteCommisionCompleted;
        
        /// <remarks/>
        public event GetCommision_PostCompletedEventHandler GetCommision_PostCompleted;
        
        /// <remarks/>
        public event GetAssignmentTypeDetailCompletedEventHandler GetAssignmentTypeDetailCompleted;
        
        /// <remarks/>
        public event GetAssignmentTypeWithFilterCompletedEventHandler GetAssignmentTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAssignmentTypeCompletedEventHandler InsertAssignmentTypeCompleted;
        
        /// <remarks/>
        public event UpdateAssignmentTypeCompletedEventHandler UpdateAssignmentTypeCompleted;
        
        /// <remarks/>
        public event DeleteAssignmentTypeCompletedEventHandler DeleteAssignmentTypeCompleted;
        
        /// <remarks/>
        public event GetImmediacyDetailCompletedEventHandler GetImmediacyDetailCompleted;
        
        /// <remarks/>
        public event GetImmediacyWithFilterCompletedEventHandler GetImmediacyWithFilterCompleted;
        
        /// <remarks/>
        public event InsertImmediacyCompletedEventHandler InsertImmediacyCompleted;
        
        /// <remarks/>
        public event UpdateImmediacyCompletedEventHandler UpdateImmediacyCompleted;
        
        /// <remarks/>
        public event DeleteImmediacyCompletedEventHandler DeleteImmediacyCompleted;
        
        /// <remarks/>
        public event GetNumberingFormatDetailCompletedEventHandler GetNumberingFormatDetailCompleted;
        
        /// <remarks/>
        public event GetNumberingFormatWithFilterCompletedEventHandler GetNumberingFormatWithFilterCompleted;
        
        /// <remarks/>
        public event InsertNumberingFormatCompletedEventHandler InsertNumberingFormatCompleted;
        
        /// <remarks/>
        public event UpdateNumberingFormatCompletedEventHandler UpdateNumberingFormatCompleted;
        
        /// <remarks/>
        public event DeleteNumberingFormatCompletedEventHandler DeleteNumberingFormatCompleted;
        
        /// <remarks/>
        public event GetSecurityTypeDetailCompletedEventHandler GetSecurityTypeDetailCompleted;
        
        /// <remarks/>
        public event GetSecurityTypeWithFilterCompletedEventHandler GetSecurityTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertSecurityTypeCompletedEventHandler InsertSecurityTypeCompleted;
        
        /// <remarks/>
        public event UpdateSecurityTypeCompletedEventHandler UpdateSecurityTypeCompleted;
        
        /// <remarks/>
        public event DeleteSecurityTypeCompletedEventHandler DeleteSecurityTypeCompleted;
        
        /// <remarks/>
        public event GetSettingDetailCompletedEventHandler GetSettingDetailCompleted;
        
        /// <remarks/>
        public event GetSettingWithFilterCompletedEventHandler GetSettingWithFilterCompleted;
        
        /// <remarks/>
        public event InsertSettingCompletedEventHandler InsertSettingCompleted;
        
        /// <remarks/>
        public event UpdateSettingCompletedEventHandler UpdateSettingCompleted;
        
        /// <remarks/>
        public event DeleteSettingCompletedEventHandler DeleteSettingCompleted;
        
        /// <remarks/>
        public event GetSecretariat_OrganizationUnitDetailCompletedEventHandler GetSecretariat_OrganizationUnitDetailCompleted;
        
        /// <remarks/>
        public event GetSecretariat_OrganizationUnitWithFilterCompletedEventHandler GetSecretariat_OrganizationUnitWithFilterCompleted;
        
        /// <remarks/>
        public event InsertSecretariat_OrganizationUnitCompletedEventHandler InsertSecretariat_OrganizationUnitCompleted;
        
        /// <remarks/>
        public event UpdateSecretariat_OrganizationUnitCompletedEventHandler UpdateSecretariat_OrganizationUnitCompleted;
        
        /// <remarks/>
        public event DeleteSecretariat_OrganizationUnitCompletedEventHandler DeleteSecretariat_OrganizationUnitCompleted;
        
        /// <remarks/>
        public event GetSubstituteDetailCompletedEventHandler GetSubstituteDetailCompleted;
        
        /// <remarks/>
        public event GetSubstituteWithFilterCompletedEventHandler GetSubstituteWithFilterCompleted;
        
        /// <remarks/>
        public event InsertSubstituteCompletedEventHandler InsertSubstituteCompleted;
        
        /// <remarks/>
        public event UpdateSubstituteCompletedEventHandler UpdateSubstituteCompleted;
        
        /// <remarks/>
        public event DeleteSubstituteCompletedEventHandler DeleteSubstituteCompleted;
        
        /// <remarks/>
        public event GetMergeFieldTypesWithFilterCompletedEventHandler GetMergeFieldTypesWithFilterCompleted;
        
        /// <remarks/>
        public event GetLetterTemplateDetailCompletedEventHandler GetLetterTemplateDetailCompleted;
        
        /// <remarks/>
        public event GetLetterTemplateWithFilterCompletedEventHandler GetLetterTemplateWithFilterCompleted;
        
        /// <remarks/>
        public event InsertLetterTemplateCompletedEventHandler InsertLetterTemplateCompleted;
        
        /// <remarks/>
        public event UpdateLetterTemplateCompletedEventHandler UpdateLetterTemplateCompleted;
        
        /// <remarks/>
        public event DeleteLetterTemplateCompletedEventHandler DeleteLetterTemplateCompleted;
        
        /// <remarks/>
        public event UpdateLetterTemplate_FormatCompletedEventHandler UpdateLetterTemplate_FormatCompleted;
        
        /// <remarks/>
        public event GetMergeField_LetterTemplateDetailCompletedEventHandler GetMergeField_LetterTemplateDetailCompleted;
        
        /// <remarks/>
        public event GetMergeField_LetterTemplateWithFilterCompletedEventHandler GetMergeField_LetterTemplateWithFilterCompleted;
        
        /// <remarks/>
        public event InsertMergeField_LetterTemplateCompletedEventHandler InsertMergeField_LetterTemplateCompleted;
        
        /// <remarks/>
        public event UpdateMergeField_LetterTemplateCompletedEventHandler UpdateMergeField_LetterTemplateCompleted;
        
        /// <remarks/>
        public event DeleteMergeField_LetterTemplateCompletedEventHandler DeleteMergeField_LetterTemplateCompleted;
        
        /// <remarks/>
        public event GetReferralRulesDetailCompletedEventHandler GetReferralRulesDetailCompleted;
        
        /// <remarks/>
        public event GetReferralRulesWithFilterCompletedEventHandler GetReferralRulesWithFilterCompleted;
        
        /// <remarks/>
        public event InsertReferralRulesCompletedEventHandler InsertReferralRulesCompleted;
        
        /// <remarks/>
        public event UpdateReferralRulesCompletedEventHandler UpdateReferralRulesCompleted;
        
        /// <remarks/>
        public event DeleteReferralRulesCompletedEventHandler DeleteReferralRulesCompleted;
        
        /// <remarks/>
        public event GetMessageDetailCompletedEventHandler GetMessageDetailCompleted;
        
        /// <remarks/>
        public event GetMessageWithFilterCompletedEventHandler GetMessageWithFilterCompleted;
        
        /// <remarks/>
        public event InsertMessageCompletedEventHandler InsertMessageCompleted;
        
        /// <remarks/>
        public event UpdateMessageCompletedEventHandler UpdateMessageCompleted;
        
        /// <remarks/>
        public event DeleteMessageCompletedEventHandler DeleteMessageCompleted;
        
        /// <remarks/>
        public event GetSavedMessageWithFilterCompletedEventHandler GetSavedMessageWithFilterCompleted;
        
        /// <remarks/>
        public event GetMessageAttachmentDetailCompletedEventHandler GetMessageAttachmentDetailCompleted;
        
        /// <remarks/>
        public event GetMessageAttachmentWithFilterCompletedEventHandler GetMessageAttachmentWithFilterCompleted;
        
        /// <remarks/>
        public event InsertMessageAttachmentCompletedEventHandler InsertMessageAttachmentCompleted;
        
        /// <remarks/>
        public event UpdateMessageAttachmentCompletedEventHandler UpdateMessageAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteMessageAttachmentCompletedEventHandler DeleteMessageAttachmentCompleted;
        
        /// <remarks/>
        public event GetLetterFileMojazDetailCompletedEventHandler GetLetterFileMojazDetailCompleted;
        
        /// <remarks/>
        public event GetLetterFileMojazWithFilterCompletedEventHandler GetLetterFileMojazWithFilterCompleted;
        
        /// <remarks/>
        public event InsertLetterFileMojazCompletedEventHandler InsertLetterFileMojazCompleted;
        
        /// <remarks/>
        public event UpdateLetterFileMojazCompletedEventHandler UpdateLetterFileMojazCompleted;
        
        /// <remarks/>
        public event DeleteLetterFileMojazCompletedEventHandler DeleteLetterFileMojazCompleted;
        
        /// <remarks/>
        public event GetBoxDetailCompletedEventHandler GetBoxDetailCompleted;
        
        /// <remarks/>
        public event GetBoxWithFilterCompletedEventHandler GetBoxWithFilterCompleted;
        
        /// <remarks/>
        public event InsertBoxCompletedEventHandler InsertBoxCompleted;
        
        /// <remarks/>
        public event UpdateBoxCompletedEventHandler UpdateBoxCompleted;
        
        /// <remarks/>
        public event DeleteBoxCompletedEventHandler DeleteBoxCompleted;
        
        /// <remarks/>
        public event GetBoxTypeIdCompletedEventHandler GetBoxTypeIdCompleted;
        
        /// <remarks/>
        public event GetBoxTypeWithFilterCompletedEventHandler GetBoxTypeWithFilterCompleted;
        
        /// <remarks/>
        public event GetTabagheBandiDetailCompletedEventHandler GetTabagheBandiDetailCompleted;
        
        /// <remarks/>
        public event GetTabagheBandiWithFilterCompletedEventHandler GetTabagheBandiWithFilterCompleted;
        
        /// <remarks/>
        public event InsertTabagheBandiCompletedEventHandler InsertTabagheBandiCompleted;
        
        /// <remarks/>
        public event UpdateTabagheBandiCompletedEventHandler UpdateTabagheBandiCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterAttachmentLetterID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterAttachmentLetterID(long id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterAttachmentLetterID", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterAttachmentLetterIDAsync(long id, string Username, string Password, int OrganId, string IP) {
            this.DeleteLetterAttachmentLetterIDAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterAttachmentLetterIDAsync(long id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteLetterAttachmentLetterIDOperationCompleted == null)) {
                this.DeleteLetterAttachmentLetterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterAttachmentLetterIDOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterAttachmentLetterID", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteLetterAttachmentLetterIDOperationCompleted, userState);
        }
        
        private void OnDeleteLetterAttachmentLetterIDOperationCompleted(object arg) {
            if ((this.DeleteLetterAttachmentLetterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterAttachmentLetterIDCompleted(this, new DeleteLetterAttachmentLetterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetRoneveshtDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Ronevesht GetRoneveshtDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetRoneveshtDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Ronevesht)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoneveshtDetailAsync(int Id, int OrganId, string IP) {
            this.GetRoneveshtDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetRoneveshtDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetRoneveshtDetailOperationCompleted == null)) {
                this.GetRoneveshtDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoneveshtDetailOperationCompleted);
            }
            this.InvokeAsync("GetRoneveshtDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetRoneveshtDetailOperationCompleted, userState);
        }
        
        private void OnGetRoneveshtDetailOperationCompleted(object arg) {
            if ((this.GetRoneveshtDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoneveshtDetailCompleted(this, new GetRoneveshtDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetRoneveshtWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Ronevesht[] GetRoneveshtWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetRoneveshtWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Ronevesht[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRoneveshtWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetRoneveshtWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetRoneveshtWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetRoneveshtWithFilterOperationCompleted == null)) {
                this.GetRoneveshtWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoneveshtWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetRoneveshtWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetRoneveshtWithFilterOperationCompleted, userState);
        }
        
        private void OnGetRoneveshtWithFilterOperationCompleted(object arg) {
            if ((this.GetRoneveshtWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoneveshtWithFilterCompleted(this, new GetRoneveshtWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertRonevesht", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertRonevesht(long fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldAshkhasHoghoghiTitlesId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldCommisionId, int fldAssignmentTypeId, string fldText, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertRonevesht", new object[] {
                        fldLetterId,
                        fldAshkhasHoghoghiTitlesId,
                        fldCommisionId,
                        fldAssignmentTypeId,
                        fldText,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRoneveshtAsync(long fldLetterId, System.Nullable<int> fldAshkhasHoghoghiTitlesId, System.Nullable<int> fldCommisionId, int fldAssignmentTypeId, string fldText, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertRoneveshtAsync(fldLetterId, fldAshkhasHoghoghiTitlesId, fldCommisionId, fldAssignmentTypeId, fldText, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertRoneveshtAsync(long fldLetterId, System.Nullable<int> fldAshkhasHoghoghiTitlesId, System.Nullable<int> fldCommisionId, int fldAssignmentTypeId, string fldText, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertRoneveshtOperationCompleted == null)) {
                this.InsertRoneveshtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRoneveshtOperationCompleted);
            }
            this.InvokeAsync("InsertRonevesht", new object[] {
                        fldLetterId,
                        fldAshkhasHoghoghiTitlesId,
                        fldCommisionId,
                        fldAssignmentTypeId,
                        fldText,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertRoneveshtOperationCompleted, userState);
        }
        
        private void OnInsertRoneveshtOperationCompleted(object arg) {
            if ((this.InsertRoneveshtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRoneveshtCompleted(this, new InsertRoneveshtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateRonevesht", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateRonevesht(int Id, long fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldAshkhasHoghoghiTitlesId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldCommisionId, int fldAssignmentTypeId, string fldText, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateRonevesht", new object[] {
                        Id,
                        fldLetterId,
                        fldAshkhasHoghoghiTitlesId,
                        fldCommisionId,
                        fldAssignmentTypeId,
                        fldText,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRoneveshtAsync(int Id, long fldLetterId, System.Nullable<int> fldAshkhasHoghoghiTitlesId, System.Nullable<int> fldCommisionId, int fldAssignmentTypeId, string fldText, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateRoneveshtAsync(Id, fldLetterId, fldAshkhasHoghoghiTitlesId, fldCommisionId, fldAssignmentTypeId, fldText, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateRoneveshtAsync(int Id, long fldLetterId, System.Nullable<int> fldAshkhasHoghoghiTitlesId, System.Nullable<int> fldCommisionId, int fldAssignmentTypeId, string fldText, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateRoneveshtOperationCompleted == null)) {
                this.UpdateRoneveshtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRoneveshtOperationCompleted);
            }
            this.InvokeAsync("UpdateRonevesht", new object[] {
                        Id,
                        fldLetterId,
                        fldAshkhasHoghoghiTitlesId,
                        fldCommisionId,
                        fldAssignmentTypeId,
                        fldText,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateRoneveshtOperationCompleted, userState);
        }
        
        private void OnUpdateRoneveshtOperationCompleted(object arg) {
            if ((this.UpdateRoneveshtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRoneveshtCompleted(this, new UpdateRoneveshtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteRonevesht", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteRonevesht(string FieldNAme, long id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteRonevesht", new object[] {
                        FieldNAme,
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRoneveshtAsync(string FieldNAme, long id, string Username, string Password, int OrganId, string IP) {
            this.DeleteRoneveshtAsync(FieldNAme, id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteRoneveshtAsync(string FieldNAme, long id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteRoneveshtOperationCompleted == null)) {
                this.DeleteRoneveshtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRoneveshtOperationCompleted);
            }
            this.InvokeAsync("DeleteRonevesht", new object[] {
                        FieldNAme,
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteRoneveshtOperationCompleted, userState);
        }
        
        private void OnDeleteRoneveshtOperationCompleted(object arg) {
            if ((this.DeleteRoneveshtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRoneveshtCompleted(this, new DeleteRoneveshtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterFollowDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterFollow GetLetterFollowDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterFollowDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterFollow)(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterFollowDetailAsync(int Id, int OrganId, string IP) {
            this.GetLetterFollowDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterFollowDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetLetterFollowDetailOperationCompleted == null)) {
                this.GetLetterFollowDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterFollowDetailOperationCompleted);
            }
            this.InvokeAsync("GetLetterFollowDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetLetterFollowDetailOperationCompleted, userState);
        }
        
        private void OnGetLetterFollowDetailOperationCompleted(object arg) {
            if ((this.GetLetterFollowDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterFollowDetailCompleted(this, new GetLetterFollowDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterFollowWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterFollow[] GetLetterFollowWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterFollowWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterFollow[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterFollowWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetLetterFollowWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterFollowWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetLetterFollowWithFilterOperationCompleted == null)) {
                this.GetLetterFollowWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterFollowWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetLetterFollowWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetLetterFollowWithFilterOperationCompleted, userState);
        }
        
        private void OnGetLetterFollowWithFilterOperationCompleted(object arg) {
            if ((this.GetLetterFollowWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterFollowWithFilterCompleted(this, new GetLetterFollowWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertLetterFollow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertLetterFollow(long fldLetterId, string fldLetterText, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertLetterFollow", new object[] {
                        fldLetterId,
                        fldLetterText,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLetterFollowAsync(long fldLetterId, string fldLetterText, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertLetterFollowAsync(fldLetterId, fldLetterText, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertLetterFollowAsync(long fldLetterId, string fldLetterText, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertLetterFollowOperationCompleted == null)) {
                this.InsertLetterFollowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLetterFollowOperationCompleted);
            }
            this.InvokeAsync("InsertLetterFollow", new object[] {
                        fldLetterId,
                        fldLetterText,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertLetterFollowOperationCompleted, userState);
        }
        
        private void OnInsertLetterFollowOperationCompleted(object arg) {
            if ((this.InsertLetterFollowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLetterFollowCompleted(this, new InsertLetterFollowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetterFollow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetterFollow(int Id, long fldLetterId, string fldLetterText, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateLetterFollow", new object[] {
                        Id,
                        fldLetterId,
                        fldLetterText,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterFollowAsync(int Id, long fldLetterId, string fldLetterText, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateLetterFollowAsync(Id, fldLetterId, fldLetterText, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterFollowAsync(int Id, long fldLetterId, string fldLetterText, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateLetterFollowOperationCompleted == null)) {
                this.UpdateLetterFollowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterFollowOperationCompleted);
            }
            this.InvokeAsync("UpdateLetterFollow", new object[] {
                        Id,
                        fldLetterId,
                        fldLetterText,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLetterFollowOperationCompleted, userState);
        }
        
        private void OnUpdateLetterFollowOperationCompleted(object arg) {
            if ((this.UpdateLetterFollowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterFollowCompleted(this, new UpdateLetterFollowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterFollow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterFollow(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterFollow", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterFollowAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteLetterFollowAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterFollowAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteLetterFollowOperationCompleted == null)) {
                this.DeleteLetterFollowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterFollowOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterFollow", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteLetterFollowOperationCompleted, userState);
        }
        
        private void OnDeleteLetterFollowOperationCompleted(object arg) {
            if ((this.DeleteLetterFollowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterFollowCompleted(this, new DeleteLetterFollowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterFollowLetterID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterFollowLetterID(long id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterFollowLetterID", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterFollowLetterIDAsync(long id, string Username, string Password, int OrganId, string IP) {
            this.DeleteLetterFollowLetterIDAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterFollowLetterIDAsync(long id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteLetterFollowLetterIDOperationCompleted == null)) {
                this.DeleteLetterFollowLetterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterFollowLetterIDOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterFollowLetterID", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteLetterFollowLetterIDOperationCompleted, userState);
        }
        
        private void OnDeleteLetterFollowLetterIDOperationCompleted(object arg) {
            if ((this.DeleteLetterFollowLetterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterFollowLetterIDCompleted(this, new DeleteLetterFollowLetterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetReceiverAssignmentTypeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ReceiverAssignmentType GetReceiverAssignmentTypeDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetReceiverAssignmentTypeDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ReceiverAssignmentType)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiverAssignmentTypeDetailAsync(int Id, int OrganId, string IP) {
            this.GetReceiverAssignmentTypeDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetReceiverAssignmentTypeDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetReceiverAssignmentTypeDetailOperationCompleted == null)) {
                this.GetReceiverAssignmentTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiverAssignmentTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetReceiverAssignmentTypeDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetReceiverAssignmentTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetReceiverAssignmentTypeDetailOperationCompleted(object arg) {
            if ((this.GetReceiverAssignmentTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiverAssignmentTypeDetailCompleted(this, new GetReceiverAssignmentTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetReceiverAssignmentTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ReceiverAssignmentType[] GetReceiverAssignmentTypeWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetReceiverAssignmentTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ReceiverAssignmentType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiverAssignmentTypeWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetReceiverAssignmentTypeWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetReceiverAssignmentTypeWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetReceiverAssignmentTypeWithFilterOperationCompleted == null)) {
                this.GetReceiverAssignmentTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiverAssignmentTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetReceiverAssignmentTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetReceiverAssignmentTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetReceiverAssignmentTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetReceiverAssignmentTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiverAssignmentTypeWithFilterCompleted(this, new GetReceiverAssignmentTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertReceiverAssignmentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertReceiverAssignmentType(int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertReceiverAssignmentType", new object[] {
                        fldAssignmentID,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        fldAssignmentTypeID,
                        fldBoxID,
                        fldLetterReadDate,
                        fldShowTypeT_F,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertReceiverAssignmentTypeAsync(int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertReceiverAssignmentTypeAsync(fldAssignmentID, fldReceiverComisionID, fldAssignmentStatusID, fldAssignmentTypeID, fldBoxID, fldLetterReadDate, fldShowTypeT_F, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertReceiverAssignmentTypeAsync(int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertReceiverAssignmentTypeOperationCompleted == null)) {
                this.InsertReceiverAssignmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReceiverAssignmentTypeOperationCompleted);
            }
            this.InvokeAsync("InsertReceiverAssignmentType", new object[] {
                        fldAssignmentID,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        fldAssignmentTypeID,
                        fldBoxID,
                        fldLetterReadDate,
                        fldShowTypeT_F,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertReceiverAssignmentTypeOperationCompleted, userState);
        }
        
        private void OnInsertReceiverAssignmentTypeOperationCompleted(object arg) {
            if ((this.InsertReceiverAssignmentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReceiverAssignmentTypeCompleted(this, new InsertReceiverAssignmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateReceiverAssignmentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateReceiverAssignmentType(int Id, int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateReceiverAssignmentType", new object[] {
                        Id,
                        fldAssignmentID,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        fldAssignmentTypeID,
                        fldBoxID,
                        fldLetterReadDate,
                        fldShowTypeT_F,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReceiverAssignmentTypeAsync(int Id, int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateReceiverAssignmentTypeAsync(Id, fldAssignmentID, fldReceiverComisionID, fldAssignmentStatusID, fldAssignmentTypeID, fldBoxID, fldLetterReadDate, fldShowTypeT_F, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateReceiverAssignmentTypeAsync(int Id, int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateReceiverAssignmentTypeOperationCompleted == null)) {
                this.UpdateReceiverAssignmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReceiverAssignmentTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateReceiverAssignmentType", new object[] {
                        Id,
                        fldAssignmentID,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        fldAssignmentTypeID,
                        fldBoxID,
                        fldLetterReadDate,
                        fldShowTypeT_F,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateReceiverAssignmentTypeOperationCompleted, userState);
        }
        
        private void OnUpdateReceiverAssignmentTypeOperationCompleted(object arg) {
            if ((this.UpdateReceiverAssignmentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReceiverAssignmentTypeCompleted(this, new UpdateReceiverAssignmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteReceiverAssignmentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteReceiverAssignmentType(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteReceiverAssignmentType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReceiverAssignmentTypeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteReceiverAssignmentTypeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteReceiverAssignmentTypeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteReceiverAssignmentTypeOperationCompleted == null)) {
                this.DeleteReceiverAssignmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReceiverAssignmentTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteReceiverAssignmentType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteReceiverAssignmentTypeOperationCompleted, userState);
        }
        
        private void OnDeleteReceiverAssignmentTypeOperationCompleted(object arg) {
            if ((this.DeleteReceiverAssignmentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReceiverAssignmentTypeCompleted(this, new DeleteReceiverAssignmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertLetterNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertLetterNumber(long fldLetterId, int StartNumber, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertLetterNumber", new object[] {
                        fldLetterId,
                        StartNumber,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLetterNumberAsync(long fldLetterId, int StartNumber, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertLetterNumberAsync(fldLetterId, StartNumber, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertLetterNumberAsync(long fldLetterId, int StartNumber, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertLetterNumberOperationCompleted == null)) {
                this.InsertLetterNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLetterNumberOperationCompleted);
            }
            this.InvokeAsync("InsertLetterNumber", new object[] {
                        fldLetterId,
                        StartNumber,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertLetterNumberOperationCompleted, userState);
        }
        
        private void OnInsertLetterNumberOperationCompleted(object arg) {
            if ((this.InsertLetterNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLetterNumberCompleted(this, new InsertLetterNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetHistoryLetterDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_HistoryLetter GetHistoryLetterDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetHistoryLetterDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_HistoryLetter)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryLetterDetailAsync(int Id, int OrganId, string IP) {
            this.GetHistoryLetterDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetHistoryLetterDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetHistoryLetterDetailOperationCompleted == null)) {
                this.GetHistoryLetterDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryLetterDetailOperationCompleted);
            }
            this.InvokeAsync("GetHistoryLetterDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetHistoryLetterDetailOperationCompleted, userState);
        }
        
        private void OnGetHistoryLetterDetailOperationCompleted(object arg) {
            if ((this.GetHistoryLetterDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryLetterDetailCompleted(this, new GetHistoryLetterDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetHistoryLetterWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_HistoryLetter[] GetHistoryLetterWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetHistoryLetterWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_HistoryLetter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryLetterWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetHistoryLetterWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetHistoryLetterWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetHistoryLetterWithFilterOperationCompleted == null)) {
                this.GetHistoryLetterWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryLetterWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetHistoryLetterWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetHistoryLetterWithFilterOperationCompleted, userState);
        }
        
        private void OnGetHistoryLetterWithFilterOperationCompleted(object arg) {
            if ((this.GetHistoryLetterWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryLetterWithFilterCompleted(this, new GetHistoryLetterWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertHistoryLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertHistoryLetter(long fldCurrentLetter_Id, int fldHistoryType_Id, long fldHistoryLetter_Id, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertHistoryLetter", new object[] {
                        fldCurrentLetter_Id,
                        fldHistoryType_Id,
                        fldHistoryLetter_Id,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertHistoryLetterAsync(long fldCurrentLetter_Id, int fldHistoryType_Id, long fldHistoryLetter_Id, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertHistoryLetterAsync(fldCurrentLetter_Id, fldHistoryType_Id, fldHistoryLetter_Id, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertHistoryLetterAsync(long fldCurrentLetter_Id, int fldHistoryType_Id, long fldHistoryLetter_Id, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertHistoryLetterOperationCompleted == null)) {
                this.InsertHistoryLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHistoryLetterOperationCompleted);
            }
            this.InvokeAsync("InsertHistoryLetter", new object[] {
                        fldCurrentLetter_Id,
                        fldHistoryType_Id,
                        fldHistoryLetter_Id,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertHistoryLetterOperationCompleted, userState);
        }
        
        private void OnInsertHistoryLetterOperationCompleted(object arg) {
            if ((this.InsertHistoryLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHistoryLetterCompleted(this, new InsertHistoryLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateHistoryLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateHistoryLetter(int Id, long fldCurrentLetter_Id, int fldHistoryType_Id, long fldHistoryLetter_Id, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateHistoryLetter", new object[] {
                        Id,
                        fldCurrentLetter_Id,
                        fldHistoryType_Id,
                        fldHistoryLetter_Id,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateHistoryLetterAsync(int Id, long fldCurrentLetter_Id, int fldHistoryType_Id, long fldHistoryLetter_Id, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateHistoryLetterAsync(Id, fldCurrentLetter_Id, fldHistoryType_Id, fldHistoryLetter_Id, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateHistoryLetterAsync(int Id, long fldCurrentLetter_Id, int fldHistoryType_Id, long fldHistoryLetter_Id, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateHistoryLetterOperationCompleted == null)) {
                this.UpdateHistoryLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHistoryLetterOperationCompleted);
            }
            this.InvokeAsync("UpdateHistoryLetter", new object[] {
                        Id,
                        fldCurrentLetter_Id,
                        fldHistoryType_Id,
                        fldHistoryLetter_Id,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateHistoryLetterOperationCompleted, userState);
        }
        
        private void OnUpdateHistoryLetterOperationCompleted(object arg) {
            if ((this.UpdateHistoryLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHistoryLetterCompleted(this, new UpdateHistoryLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteHistoryLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteHistoryLetter(int Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteHistoryLetter", new object[] {
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteHistoryLetterAsync(int Id, string Username, string Password, string IP) {
            this.DeleteHistoryLetterAsync(Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteHistoryLetterAsync(int Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteHistoryLetterOperationCompleted == null)) {
                this.DeleteHistoryLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteHistoryLetterOperationCompleted);
            }
            this.InvokeAsync("DeleteHistoryLetter", new object[] {
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteHistoryLetterOperationCompleted, userState);
        }
        
        private void OnDeleteHistoryLetterOperationCompleted(object arg) {
            if ((this.DeleteHistoryLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteHistoryLetterCompleted(this, new DeleteHistoryLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteTabagheBandi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteTabagheBandi(int Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteTabagheBandi", new object[] {
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTabagheBandiAsync(int Id, string Username, string Password, string IP) {
            this.DeleteTabagheBandiAsync(Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteTabagheBandiAsync(int Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteTabagheBandiOperationCompleted == null)) {
                this.DeleteTabagheBandiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTabagheBandiOperationCompleted);
            }
            this.InvokeAsync("DeleteTabagheBandi", new object[] {
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteTabagheBandiOperationCompleted, userState);
        }
        
        private void OnDeleteTabagheBandiOperationCompleted(object arg) {
            if ((this.DeleteTabagheBandiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTabagheBandiCompleted(this, new DeleteTabagheBandiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterStatusWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterStatus[] GetLetterStatusWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterStatusWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterStatusWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetLetterStatusWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterStatusWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetLetterStatusWithFilterOperationCompleted == null)) {
                this.GetLetterStatusWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterStatusWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetLetterStatusWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetLetterStatusWithFilterOperationCompleted, userState);
        }
        
        private void OnGetLetterStatusWithFilterOperationCompleted(object arg) {
            if ((this.GetLetterStatusWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterStatusWithFilterCompleted(this, new GetLetterStatusWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Letter GetLetterDetail(long Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Letter)(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterDetailAsync(long Id, int OrganId, string IP) {
            this.GetLetterDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterDetailAsync(long Id, int OrganId, string IP, object userState) {
            if ((this.GetLetterDetailOperationCompleted == null)) {
                this.GetLetterDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterDetailOperationCompleted);
            }
            this.InvokeAsync("GetLetterDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetLetterDetailOperationCompleted, userState);
        }
        
        private void OnGetLetterDetailOperationCompleted(object arg) {
            if ((this.GetLetterDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterDetailCompleted(this, new GetLetterDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Letter[] GetLetterWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Letter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetLetterWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetLetterWithFilterOperationCompleted == null)) {
                this.GetLetterWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetLetterWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetLetterWithFilterOperationCompleted, userState);
        }
        
        private void OnGetLetterWithFilterOperationCompleted(object arg) {
            if ((this.GetLetterWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterWithFilterCompleted(this, new GetLetterWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClsError InsertLetter(
                    int fldYear, 
                    string fldSubject, 
                    string fldLetterNumber, 
                    string fldLetterDate, 
                    string fldKeywords, 
                    int fldLetterStatusID, 
                    int fldComisionID, 
                    int fldImmediacyID, 
                    int fldSecurityTypeID, 
                    int fldLetterTypeID, 
                    byte fldSignType, 
                    string MatnLetter, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> LetterTempId, 
                    string fldFont, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            object[] results = this.Invoke("InsertLetter", new object[] {
                        fldYear,
                        fldSubject,
                        fldLetterNumber,
                        fldLetterDate,
                        fldKeywords,
                        fldLetterStatusID,
                        fldComisionID,
                        fldImmediacyID,
                        fldSecurityTypeID,
                        fldLetterTypeID,
                        fldSignType,
                        MatnLetter,
                        LetterTempId,
                        fldFont,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            return ((ClsError)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLetterAsync(
                    int fldYear, 
                    string fldSubject, 
                    string fldLetterNumber, 
                    string fldLetterDate, 
                    string fldKeywords, 
                    int fldLetterStatusID, 
                    int fldComisionID, 
                    int fldImmediacyID, 
                    int fldSecurityTypeID, 
                    int fldLetterTypeID, 
                    byte fldSignType, 
                    string MatnLetter, 
                    System.Nullable<int> LetterTempId, 
                    string fldFont, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.InsertLetterAsync(fldYear, fldSubject, fldLetterNumber, fldLetterDate, fldKeywords, fldLetterStatusID, fldComisionID, fldImmediacyID, fldSecurityTypeID, fldLetterTypeID, fldSignType, MatnLetter, LetterTempId, fldFont, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertLetterAsync(
                    int fldYear, 
                    string fldSubject, 
                    string fldLetterNumber, 
                    string fldLetterDate, 
                    string fldKeywords, 
                    int fldLetterStatusID, 
                    int fldComisionID, 
                    int fldImmediacyID, 
                    int fldSecurityTypeID, 
                    int fldLetterTypeID, 
                    byte fldSignType, 
                    string MatnLetter, 
                    System.Nullable<int> LetterTempId, 
                    string fldFont, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.InsertLetterOperationCompleted == null)) {
                this.InsertLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLetterOperationCompleted);
            }
            this.InvokeAsync("InsertLetter", new object[] {
                        fldYear,
                        fldSubject,
                        fldLetterNumber,
                        fldLetterDate,
                        fldKeywords,
                        fldLetterStatusID,
                        fldComisionID,
                        fldImmediacyID,
                        fldSecurityTypeID,
                        fldLetterTypeID,
                        fldSignType,
                        MatnLetter,
                        LetterTempId,
                        fldFont,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertLetterOperationCompleted, userState);
        }
        
        private void OnInsertLetterOperationCompleted(object arg) {
            if ((this.InsertLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLetterCompleted(this, new InsertLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetter(
                    long Id, 
                    string fldSubject, 
                    string fldLetterNumber, 
                    string fldLetterDate, 
                    string fldKeywords, 
                    int fldComisionID, 
                    int fldImmediacyID, 
                    int fldSecurityTypeID, 
                    int fldLetterTypeID, 
                    byte fldSignType, 
                    string MatnLetter, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> LetterTempId, 
                    string fldFont, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateLetter", new object[] {
                        Id,
                        fldSubject,
                        fldLetterNumber,
                        fldLetterDate,
                        fldKeywords,
                        fldComisionID,
                        fldImmediacyID,
                        fldSecurityTypeID,
                        fldLetterTypeID,
                        fldSignType,
                        MatnLetter,
                        LetterTempId,
                        fldFont,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterAsync(
                    long Id, 
                    string fldSubject, 
                    string fldLetterNumber, 
                    string fldLetterDate, 
                    string fldKeywords, 
                    int fldComisionID, 
                    int fldImmediacyID, 
                    int fldSecurityTypeID, 
                    int fldLetterTypeID, 
                    byte fldSignType, 
                    string MatnLetter, 
                    System.Nullable<int> LetterTempId, 
                    string fldFont, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.UpdateLetterAsync(Id, fldSubject, fldLetterNumber, fldLetterDate, fldKeywords, fldComisionID, fldImmediacyID, fldSecurityTypeID, fldLetterTypeID, fldSignType, MatnLetter, LetterTempId, fldFont, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterAsync(
                    long Id, 
                    string fldSubject, 
                    string fldLetterNumber, 
                    string fldLetterDate, 
                    string fldKeywords, 
                    int fldComisionID, 
                    int fldImmediacyID, 
                    int fldSecurityTypeID, 
                    int fldLetterTypeID, 
                    byte fldSignType, 
                    string MatnLetter, 
                    System.Nullable<int> LetterTempId, 
                    string fldFont, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.UpdateLetterOperationCompleted == null)) {
                this.UpdateLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterOperationCompleted);
            }
            this.InvokeAsync("UpdateLetter", new object[] {
                        Id,
                        fldSubject,
                        fldLetterNumber,
                        fldLetterDate,
                        fldKeywords,
                        fldComisionID,
                        fldImmediacyID,
                        fldSecurityTypeID,
                        fldLetterTypeID,
                        fldSignType,
                        MatnLetter,
                        LetterTempId,
                        fldFont,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLetterOperationCompleted, userState);
        }
        
        private void OnUpdateLetterOperationCompleted(object arg) {
            if ((this.UpdateLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterCompleted(this, new UpdateLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetter(long Id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetter", new object[] {
                        Id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterAsync(long Id, string Username, string Password, int OrganId, string IP) {
            this.DeleteLetterAsync(Id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterAsync(long Id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteLetterOperationCompleted == null)) {
                this.DeleteLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterOperationCompleted);
            }
            this.InvokeAsync("DeleteLetter", new object[] {
                        Id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteLetterOperationCompleted, userState);
        }
        
        private void OnDeleteLetterOperationCompleted(object arg) {
            if ((this.DeleteLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterCompleted(this, new DeleteLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetterNumDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetterNumDate(long Id, string fldLetterNumber, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateLetterNumDate", new object[] {
                        Id,
                        fldLetterNumber,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterNumDateAsync(long Id, string fldLetterNumber, string Username, string Password, int OrganId, string IP) {
            this.UpdateLetterNumDateAsync(Id, fldLetterNumber, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterNumDateAsync(long Id, string fldLetterNumber, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateLetterNumDateOperationCompleted == null)) {
                this.UpdateLetterNumDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterNumDateOperationCompleted);
            }
            this.InvokeAsync("UpdateLetterNumDate", new object[] {
                        Id,
                        fldLetterNumber,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLetterNumDateOperationCompleted, userState);
        }
        
        private void OnUpdateLetterNumDateOperationCompleted(object arg) {
            if ((this.UpdateLetterNumDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterNumDateCompleted(this, new UpdateLetterNumDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetterStatusId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetterStatusId(long LetterId, int fldLetterStatusID, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateLetterStatusId", new object[] {
                        LetterId,
                        fldLetterStatusID,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterStatusIdAsync(long LetterId, int fldLetterStatusID, string Username, string Password, string IP) {
            this.UpdateLetterStatusIdAsync(LetterId, fldLetterStatusID, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterStatusIdAsync(long LetterId, int fldLetterStatusID, string Username, string Password, string IP, object userState) {
            if ((this.UpdateLetterStatusIdOperationCompleted == null)) {
                this.UpdateLetterStatusIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterStatusIdOperationCompleted);
            }
            this.InvokeAsync("UpdateLetterStatusId", new object[] {
                        LetterId,
                        fldLetterStatusID,
                        Username,
                        Password,
                        IP}, this.UpdateLetterStatusIdOperationCompleted, userState);
        }
        
        private void OnUpdateLetterStatusIdOperationCompleted(object arg) {
            if ((this.UpdateLetterStatusIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterStatusIdCompleted(this, new UpdateLetterStatusIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/SelectInbox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Inbox[] SelectInbox(string FieldName, string Start, string End, int BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectInbox", new object[] {
                        FieldName,
                        Start,
                        End,
                        BoxId,
                        TabaghebandiId,
                        Value,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Inbox[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectInboxAsync(string FieldName, string Start, string End, int BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP) {
            this.SelectInboxAsync(FieldName, Start, End, BoxId, TabaghebandiId, Value, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void SelectInboxAsync(string FieldName, string Start, string End, int BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP, object userState) {
            if ((this.SelectInboxOperationCompleted == null)) {
                this.SelectInboxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectInboxOperationCompleted);
            }
            this.InvokeAsync("SelectInbox", new object[] {
                        FieldName,
                        Start,
                        End,
                        BoxId,
                        TabaghebandiId,
                        Value,
                        OrganId,
                        Top,
                        IP}, this.SelectInboxOperationCompleted, userState);
        }
        
        private void OnSelectInboxOperationCompleted(object arg) {
            if ((this.SelectInboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectInboxCompleted(this, new SelectInboxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/SelectSavedLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_SavedLetter[] SelectSavedLetter(string FieldName, string Start, string End, string BoxId, int TabaghebandiId, string value, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectSavedLetter", new object[] {
                        FieldName,
                        Start,
                        End,
                        BoxId,
                        TabaghebandiId,
                        value,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_SavedLetter[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectSavedLetterAsync(string FieldName, string Start, string End, string BoxId, int TabaghebandiId, string value, int OrganId, int Top, string IP) {
            this.SelectSavedLetterAsync(FieldName, Start, End, BoxId, TabaghebandiId, value, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void SelectSavedLetterAsync(string FieldName, string Start, string End, string BoxId, int TabaghebandiId, string value, int OrganId, int Top, string IP, object userState) {
            if ((this.SelectSavedLetterOperationCompleted == null)) {
                this.SelectSavedLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectSavedLetterOperationCompleted);
            }
            this.InvokeAsync("SelectSavedLetter", new object[] {
                        FieldName,
                        Start,
                        End,
                        BoxId,
                        TabaghebandiId,
                        value,
                        OrganId,
                        Top,
                        IP}, this.SelectSavedLetterOperationCompleted, userState);
        }
        
        private void OnSelectSavedLetterOperationCompleted(object arg) {
            if ((this.SelectSavedLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectSavedLetterCompleted(this, new SelectSavedLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/SelectSent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Sent[] SelectSent(string FieldName, string Start, string End, int BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectSent", new object[] {
                        FieldName,
                        Start,
                        End,
                        BoxId,
                        TabaghebandiId,
                        Value,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Sent[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectSentAsync(string FieldName, string Start, string End, int BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP) {
            this.SelectSentAsync(FieldName, Start, End, BoxId, TabaghebandiId, Value, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void SelectSentAsync(string FieldName, string Start, string End, int BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP, object userState) {
            if ((this.SelectSentOperationCompleted == null)) {
                this.SelectSentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectSentOperationCompleted);
            }
            this.InvokeAsync("SelectSent", new object[] {
                        FieldName,
                        Start,
                        End,
                        BoxId,
                        TabaghebandiId,
                        Value,
                        OrganId,
                        Top,
                        IP}, this.SelectSentOperationCompleted, userState);
        }
        
        private void OnSelectSentOperationCompleted(object arg) {
            if ((this.SelectSentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectSentCompleted(this, new SelectSentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/SelectTrash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Trash[] SelectTrash(string FieldName, string Start, string End, int BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectTrash", new object[] {
                        FieldName,
                        Start,
                        End,
                        BoxId,
                        TabaghebandiId,
                        Value,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Trash[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectTrashAsync(string FieldName, string Start, string End, int BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP) {
            this.SelectTrashAsync(FieldName, Start, End, BoxId, TabaghebandiId, Value, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void SelectTrashAsync(string FieldName, string Start, string End, int BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP, object userState) {
            if ((this.SelectTrashOperationCompleted == null)) {
                this.SelectTrashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectTrashOperationCompleted);
            }
            this.InvokeAsync("SelectTrash", new object[] {
                        FieldName,
                        Start,
                        End,
                        BoxId,
                        TabaghebandiId,
                        Value,
                        OrganId,
                        Top,
                        IP}, this.SelectTrashOperationCompleted, userState);
        }
        
        private void OnSelectTrashOperationCompleted(object arg) {
            if ((this.SelectTrashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectTrashCompleted(this, new SelectTrashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterBoxDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterBox GetLetterBoxDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterBoxDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterBox)(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterBoxDetailAsync(int Id, int OrganId, string IP) {
            this.GetLetterBoxDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterBoxDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetLetterBoxDetailOperationCompleted == null)) {
                this.GetLetterBoxDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterBoxDetailOperationCompleted);
            }
            this.InvokeAsync("GetLetterBoxDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetLetterBoxDetailOperationCompleted, userState);
        }
        
        private void OnGetLetterBoxDetailOperationCompleted(object arg) {
            if ((this.GetLetterBoxDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterBoxDetailCompleted(this, new GetLetterBoxDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterBoxWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterBox[] GetLetterBoxWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterBoxWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterBox[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterBoxWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetLetterBoxWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterBoxWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetLetterBoxWithFilterOperationCompleted == null)) {
                this.GetLetterBoxWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterBoxWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetLetterBoxWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetLetterBoxWithFilterOperationCompleted, userState);
        }
        
        private void OnGetLetterBoxWithFilterOperationCompleted(object arg) {
            if ((this.GetLetterBoxWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterBoxWithFilterCompleted(this, new GetLetterBoxWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertLetterBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertLetterBox(int fldBoxId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertLetterBox", new object[] {
                        fldBoxId,
                        fldLetterId,
                        fldMessageId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLetterBoxAsync(int fldBoxId, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertLetterBoxAsync(fldBoxId, fldLetterId, fldMessageId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertLetterBoxAsync(int fldBoxId, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertLetterBoxOperationCompleted == null)) {
                this.InsertLetterBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLetterBoxOperationCompleted);
            }
            this.InvokeAsync("InsertLetterBox", new object[] {
                        fldBoxId,
                        fldLetterId,
                        fldMessageId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertLetterBoxOperationCompleted, userState);
        }
        
        private void OnInsertLetterBoxOperationCompleted(object arg) {
            if ((this.InsertLetterBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLetterBoxCompleted(this, new InsertLetterBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetterBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetterBox(int Id, int fldBoxId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateLetterBox", new object[] {
                        Id,
                        fldBoxId,
                        fldLetterId,
                        fldMessageId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterBoxAsync(int Id, int fldBoxId, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateLetterBoxAsync(Id, fldBoxId, fldLetterId, fldMessageId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterBoxAsync(int Id, int fldBoxId, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateLetterBoxOperationCompleted == null)) {
                this.UpdateLetterBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterBoxOperationCompleted);
            }
            this.InvokeAsync("UpdateLetterBox", new object[] {
                        Id,
                        fldBoxId,
                        fldLetterId,
                        fldMessageId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLetterBoxOperationCompleted, userState);
        }
        
        private void OnUpdateLetterBoxOperationCompleted(object arg) {
            if ((this.UpdateLetterBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterBoxCompleted(this, new UpdateLetterBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterBox(int Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterBox", new object[] {
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterBoxAsync(int Id, string Username, string Password, string IP) {
            this.DeleteLetterBoxAsync(Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterBoxAsync(int Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteLetterBoxOperationCompleted == null)) {
                this.DeleteLetterBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterBoxOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterBox", new object[] {
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteLetterBoxOperationCompleted, userState);
        }
        
        private void OnDeleteLetterBoxOperationCompleted(object arg) {
            if ((this.DeleteLetterBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterBoxCompleted(this, new DeleteLetterBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterBoxLetterID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterBoxLetterID(string FieldName, long Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterBoxLetterID", new object[] {
                        FieldName,
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterBoxLetterIDAsync(string FieldName, long Id, string Username, string Password, string IP) {
            this.DeleteLetterBoxLetterIDAsync(FieldName, Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterBoxLetterIDAsync(string FieldName, long Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteLetterBoxLetterIDOperationCompleted == null)) {
                this.DeleteLetterBoxLetterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterBoxLetterIDOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterBoxLetterID", new object[] {
                        FieldName,
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteLetterBoxLetterIDOperationCompleted, userState);
        }
        
        private void OnDeleteLetterBoxLetterIDOperationCompleted(object arg) {
            if ((this.DeleteLetterBoxLetterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterBoxLetterIDCompleted(this, new DeleteLetterBoxLetterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterTabagheBandiDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterTabagheBandi GetLetterTabagheBandiDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterTabagheBandiDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterTabagheBandi)(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterTabagheBandiDetailAsync(int Id, int OrganId, string IP) {
            this.GetLetterTabagheBandiDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterTabagheBandiDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetLetterTabagheBandiDetailOperationCompleted == null)) {
                this.GetLetterTabagheBandiDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterTabagheBandiDetailOperationCompleted);
            }
            this.InvokeAsync("GetLetterTabagheBandiDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetLetterTabagheBandiDetailOperationCompleted, userState);
        }
        
        private void OnGetLetterTabagheBandiDetailOperationCompleted(object arg) {
            if ((this.GetLetterTabagheBandiDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterTabagheBandiDetailCompleted(this, new GetLetterTabagheBandiDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterTabagheBandiWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterTabagheBandi[] GetLetterTabagheBandiWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterTabagheBandiWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterTabagheBandi[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterTabagheBandiWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetLetterTabagheBandiWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterTabagheBandiWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetLetterTabagheBandiWithFilterOperationCompleted == null)) {
                this.GetLetterTabagheBandiWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterTabagheBandiWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetLetterTabagheBandiWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetLetterTabagheBandiWithFilterOperationCompleted, userState);
        }
        
        private void OnGetLetterTabagheBandiWithFilterOperationCompleted(object arg) {
            if ((this.GetLetterTabagheBandiWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterTabagheBandiWithFilterCompleted(this, new GetLetterTabagheBandiWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertLetterTabagheBandi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertLetterTabagheBandi(int fldTabagheBandiId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertLetterTabagheBandi", new object[] {
                        fldTabagheBandiId,
                        fldLetterId,
                        fldMessageId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLetterTabagheBandiAsync(int fldTabagheBandiId, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertLetterTabagheBandiAsync(fldTabagheBandiId, fldLetterId, fldMessageId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertLetterTabagheBandiAsync(int fldTabagheBandiId, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertLetterTabagheBandiOperationCompleted == null)) {
                this.InsertLetterTabagheBandiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLetterTabagheBandiOperationCompleted);
            }
            this.InvokeAsync("InsertLetterTabagheBandi", new object[] {
                        fldTabagheBandiId,
                        fldLetterId,
                        fldMessageId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertLetterTabagheBandiOperationCompleted, userState);
        }
        
        private void OnInsertLetterTabagheBandiOperationCompleted(object arg) {
            if ((this.InsertLetterTabagheBandiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLetterTabagheBandiCompleted(this, new InsertLetterTabagheBandiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetterTabagheBandi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetterTabagheBandi(int Id, int fldTabagheBandiId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateLetterTabagheBandi", new object[] {
                        Id,
                        fldTabagheBandiId,
                        fldLetterId,
                        fldMessageId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterTabagheBandiAsync(int Id, int fldTabagheBandiId, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateLetterTabagheBandiAsync(Id, fldTabagheBandiId, fldLetterId, fldMessageId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterTabagheBandiAsync(int Id, int fldTabagheBandiId, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateLetterTabagheBandiOperationCompleted == null)) {
                this.UpdateLetterTabagheBandiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterTabagheBandiOperationCompleted);
            }
            this.InvokeAsync("UpdateLetterTabagheBandi", new object[] {
                        Id,
                        fldTabagheBandiId,
                        fldLetterId,
                        fldMessageId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLetterTabagheBandiOperationCompleted, userState);
        }
        
        private void OnUpdateLetterTabagheBandiOperationCompleted(object arg) {
            if ((this.UpdateLetterTabagheBandiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterTabagheBandiCompleted(this, new UpdateLetterTabagheBandiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterTabagheBandi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterTabagheBandi(string FieldName, long Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterTabagheBandi", new object[] {
                        FieldName,
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterTabagheBandiAsync(string FieldName, long Id, string Username, string Password, string IP) {
            this.DeleteLetterTabagheBandiAsync(FieldName, Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterTabagheBandiAsync(string FieldName, long Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteLetterTabagheBandiOperationCompleted == null)) {
                this.DeleteLetterTabagheBandiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterTabagheBandiOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterTabagheBandi", new object[] {
                        FieldName,
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteLetterTabagheBandiOperationCompleted, userState);
        }
        
        private void OnDeleteLetterTabagheBandiOperationCompleted(object arg) {
            if ((this.DeleteLetterTabagheBandiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterTabagheBandiCompleted(this, new DeleteLetterTabagheBandiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetAssignmentStatusWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AssignmentStatus[] GetAssignmentStatusWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAssignmentStatusWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AssignmentStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssignmentStatusWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetAssignmentStatusWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAssignmentStatusWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetAssignmentStatusWithFilterOperationCompleted == null)) {
                this.GetAssignmentStatusWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssignmentStatusWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAssignmentStatusWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetAssignmentStatusWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAssignmentStatusWithFilterOperationCompleted(object arg) {
            if ((this.GetAssignmentStatusWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssignmentStatusWithFilterCompleted(this, new GetAssignmentStatusWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetAssignmentDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Assignment GetAssignmentDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAssignmentDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Assignment)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssignmentDetailAsync(int Id, int OrganId, string IP) {
            this.GetAssignmentDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetAssignmentDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetAssignmentDetailOperationCompleted == null)) {
                this.GetAssignmentDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssignmentDetailOperationCompleted);
            }
            this.InvokeAsync("GetAssignmentDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetAssignmentDetailOperationCompleted, userState);
        }
        
        private void OnGetAssignmentDetailOperationCompleted(object arg) {
            if ((this.GetAssignmentDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssignmentDetailCompleted(this, new GetAssignmentDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetAssignmentWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Assignment[] GetAssignmentWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAssignmentWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Assignment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssignmentWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetAssignmentWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAssignmentWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetAssignmentWithFilterOperationCompleted == null)) {
                this.GetAssignmentWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssignmentWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAssignmentWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetAssignmentWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAssignmentWithFilterOperationCompleted(object arg) {
            if ((this.GetAssignmentWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssignmentWithFilterCompleted(this, new GetAssignmentWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertAssignment([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, string fldAnswerDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldSourceAssId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAssignment", new object[] {
                        fldLetterID,
                        fldMessageId,
                        fldAnswerDate,
                        fldSourceAssId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAssignmentAsync(System.Nullable<long> fldLetterID, System.Nullable<int> fldMessageId, string fldAnswerDate, System.Nullable<int> fldSourceAssId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertAssignmentAsync(fldLetterID, fldMessageId, fldAnswerDate, fldSourceAssId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAssignmentAsync(System.Nullable<long> fldLetterID, System.Nullable<int> fldMessageId, string fldAnswerDate, System.Nullable<int> fldSourceAssId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAssignmentOperationCompleted == null)) {
                this.InsertAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAssignmentOperationCompleted);
            }
            this.InvokeAsync("InsertAssignment", new object[] {
                        fldLetterID,
                        fldMessageId,
                        fldAnswerDate,
                        fldSourceAssId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertAssignmentOperationCompleted, userState);
        }
        
        private void OnInsertAssignmentOperationCompleted(object arg) {
            if ((this.InsertAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAssignmentCompleted(this, new InsertAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAssignment(int Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, string fldAnswerDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldSourceAssId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAssignment", new object[] {
                        Id,
                        fldLetterID,
                        fldMessageId,
                        fldAnswerDate,
                        fldSourceAssId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAssignmentAsync(int Id, System.Nullable<long> fldLetterID, System.Nullable<int> fldMessageId, string fldAnswerDate, System.Nullable<int> fldSourceAssId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateAssignmentAsync(Id, fldLetterID, fldMessageId, fldAnswerDate, fldSourceAssId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAssignmentAsync(int Id, System.Nullable<long> fldLetterID, System.Nullable<int> fldMessageId, string fldAnswerDate, System.Nullable<int> fldSourceAssId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateAssignmentOperationCompleted == null)) {
                this.UpdateAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAssignmentOperationCompleted);
            }
            this.InvokeAsync("UpdateAssignment", new object[] {
                        Id,
                        fldLetterID,
                        fldMessageId,
                        fldAnswerDate,
                        fldSourceAssId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateAssignmentOperationCompleted, userState);
        }
        
        private void OnUpdateAssignmentOperationCompleted(object arg) {
            if ((this.UpdateAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAssignmentCompleted(this, new UpdateAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAssignment(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAssignment", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAssignmentAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAssignmentAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAssignmentAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAssignmentOperationCompleted == null)) {
                this.DeleteAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAssignmentOperationCompleted);
            }
            this.InvokeAsync("DeleteAssignment", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAssignmentOperationCompleted, userState);
        }
        
        private void OnDeleteAssignmentOperationCompleted(object arg) {
            if ((this.DeleteAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAssignmentCompleted(this, new DeleteAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteAssignmentLetterID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAssignmentLetterID(long id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAssignmentLetterID", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAssignmentLetterIDAsync(long id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAssignmentLetterIDAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAssignmentLetterIDAsync(long id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAssignmentLetterIDOperationCompleted == null)) {
                this.DeleteAssignmentLetterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAssignmentLetterIDOperationCompleted);
            }
            this.InvokeAsync("DeleteAssignmentLetterID", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAssignmentLetterIDOperationCompleted, userState);
        }
        
        private void OnDeleteAssignmentLetterIDOperationCompleted(object arg) {
            if ((this.DeleteAssignmentLetterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAssignmentLetterIDCompleted(this, new DeleteAssignmentLetterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetInternalAssignmentReceiverDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InternalAssignmentReceiver GetInternalAssignmentReceiverDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInternalAssignmentReceiverDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InternalAssignmentReceiver)(results[0]));
        }
        
        /// <remarks/>
        public void GetInternalAssignmentReceiverDetailAsync(int Id, int OrganId, string IP) {
            this.GetInternalAssignmentReceiverDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetInternalAssignmentReceiverDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetInternalAssignmentReceiverDetailOperationCompleted == null)) {
                this.GetInternalAssignmentReceiverDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInternalAssignmentReceiverDetailOperationCompleted);
            }
            this.InvokeAsync("GetInternalAssignmentReceiverDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetInternalAssignmentReceiverDetailOperationCompleted, userState);
        }
        
        private void OnGetInternalAssignmentReceiverDetailOperationCompleted(object arg) {
            if ((this.GetInternalAssignmentReceiverDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInternalAssignmentReceiverDetailCompleted(this, new GetInternalAssignmentReceiverDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetInternalAssignmentReceiverWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InternalAssignmentReceiver[] GetInternalAssignmentReceiverWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInternalAssignmentReceiverWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InternalAssignmentReceiver[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInternalAssignmentReceiverWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetInternalAssignmentReceiverWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetInternalAssignmentReceiverWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetInternalAssignmentReceiverWithFilterOperationCompleted == null)) {
                this.GetInternalAssignmentReceiverWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInternalAssignmentReceiverWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetInternalAssignmentReceiverWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetInternalAssignmentReceiverWithFilterOperationCompleted, userState);
        }
        
        private void OnGetInternalAssignmentReceiverWithFilterOperationCompleted(object arg) {
            if ((this.GetInternalAssignmentReceiverWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInternalAssignmentReceiverWithFilterCompleted(this, new GetInternalAssignmentReceiverWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertInternalAssignmentReceiver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertInternalAssignmentReceiver(int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertInternalAssignmentReceiver", new object[] {
                        fldAssignmentID,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        fldAssignmentTypeID,
                        fldBoxID,
                        fldLetterReadDate,
                        fldShowTypeT_F,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertInternalAssignmentReceiverAsync(int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertInternalAssignmentReceiverAsync(fldAssignmentID, fldReceiverComisionID, fldAssignmentStatusID, fldAssignmentTypeID, fldBoxID, fldLetterReadDate, fldShowTypeT_F, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertInternalAssignmentReceiverAsync(int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertInternalAssignmentReceiverOperationCompleted == null)) {
                this.InsertInternalAssignmentReceiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInternalAssignmentReceiverOperationCompleted);
            }
            this.InvokeAsync("InsertInternalAssignmentReceiver", new object[] {
                        fldAssignmentID,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        fldAssignmentTypeID,
                        fldBoxID,
                        fldLetterReadDate,
                        fldShowTypeT_F,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertInternalAssignmentReceiverOperationCompleted, userState);
        }
        
        private void OnInsertInternalAssignmentReceiverOperationCompleted(object arg) {
            if ((this.InsertInternalAssignmentReceiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInternalAssignmentReceiverCompleted(this, new InsertInternalAssignmentReceiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateInternalAssignmentReceiver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateInternalAssignmentReceiver(int Id, int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateInternalAssignmentReceiver", new object[] {
                        Id,
                        fldAssignmentID,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        fldAssignmentTypeID,
                        fldBoxID,
                        fldLetterReadDate,
                        fldShowTypeT_F,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInternalAssignmentReceiverAsync(int Id, int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateInternalAssignmentReceiverAsync(Id, fldAssignmentID, fldReceiverComisionID, fldAssignmentStatusID, fldAssignmentTypeID, fldBoxID, fldLetterReadDate, fldShowTypeT_F, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateInternalAssignmentReceiverAsync(int Id, int fldAssignmentID, int fldReceiverComisionID, int fldAssignmentStatusID, int fldAssignmentTypeID, int fldBoxID, string fldLetterReadDate, bool fldShowTypeT_F, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateInternalAssignmentReceiverOperationCompleted == null)) {
                this.UpdateInternalAssignmentReceiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInternalAssignmentReceiverOperationCompleted);
            }
            this.InvokeAsync("UpdateInternalAssignmentReceiver", new object[] {
                        Id,
                        fldAssignmentID,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        fldAssignmentTypeID,
                        fldBoxID,
                        fldLetterReadDate,
                        fldShowTypeT_F,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateInternalAssignmentReceiverOperationCompleted, userState);
        }
        
        private void OnUpdateInternalAssignmentReceiverOperationCompleted(object arg) {
            if ((this.UpdateInternalAssignmentReceiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInternalAssignmentReceiverCompleted(this, new UpdateInternalAssignmentReceiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteInternalAssignmentReceiver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteInternalAssignmentReceiver(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteInternalAssignmentReceiver", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInternalAssignmentReceiverAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteInternalAssignmentReceiverAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteInternalAssignmentReceiverAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteInternalAssignmentReceiverOperationCompleted == null)) {
                this.DeleteInternalAssignmentReceiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInternalAssignmentReceiverOperationCompleted);
            }
            this.InvokeAsync("DeleteInternalAssignmentReceiver", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteInternalAssignmentReceiverOperationCompleted, userState);
        }
        
        private void OnDeleteInternalAssignmentReceiverOperationCompleted(object arg) {
            if ((this.DeleteInternalAssignmentReceiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInternalAssignmentReceiverCompleted(this, new DeleteInternalAssignmentReceiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateInternalAssignmentReceiverBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateInternalAssignmentReceiverBox(int Id, int fldBoxID, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateInternalAssignmentReceiverBox", new object[] {
                        Id,
                        fldBoxID,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInternalAssignmentReceiverBoxAsync(int Id, int fldBoxID, string Username, string Password, int OrganId, string IP) {
            this.UpdateInternalAssignmentReceiverBoxAsync(Id, fldBoxID, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateInternalAssignmentReceiverBoxAsync(int Id, int fldBoxID, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateInternalAssignmentReceiverBoxOperationCompleted == null)) {
                this.UpdateInternalAssignmentReceiverBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInternalAssignmentReceiverBoxOperationCompleted);
            }
            this.InvokeAsync("UpdateInternalAssignmentReceiverBox", new object[] {
                        Id,
                        fldBoxID,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateInternalAssignmentReceiverBoxOperationCompleted, userState);
        }
        
        private void OnUpdateInternalAssignmentReceiverBoxOperationCompleted(object arg) {
            if ((this.UpdateInternalAssignmentReceiverBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInternalAssignmentReceiverBoxCompleted(this, new UpdateInternalAssignmentReceiverBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateInternalAssignmentReceiverStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateInternalAssignmentReceiverStatus(int Id, int fldStatusID, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateInternalAssignmentReceiverStatus", new object[] {
                        Id,
                        fldStatusID,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInternalAssignmentReceiverStatusAsync(int Id, int fldStatusID, string Username, string Password, int OrganId, string IP) {
            this.UpdateInternalAssignmentReceiverStatusAsync(Id, fldStatusID, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateInternalAssignmentReceiverStatusAsync(int Id, int fldStatusID, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateInternalAssignmentReceiverStatusOperationCompleted == null)) {
                this.UpdateInternalAssignmentReceiverStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInternalAssignmentReceiverStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateInternalAssignmentReceiverStatus", new object[] {
                        Id,
                        fldStatusID,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateInternalAssignmentReceiverStatusOperationCompleted, userState);
        }
        
        private void OnUpdateInternalAssignmentReceiverStatusOperationCompleted(object arg) {
            if ((this.UpdateInternalAssignmentReceiverStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInternalAssignmentReceiverStatusCompleted(this, new UpdateInternalAssignmentReceiverStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetInternalAssignmentSenderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InternalAssignmentSender GetInternalAssignmentSenderDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInternalAssignmentSenderDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InternalAssignmentSender)(results[0]));
        }
        
        /// <remarks/>
        public void GetInternalAssignmentSenderDetailAsync(int Id, int OrganId, string IP) {
            this.GetInternalAssignmentSenderDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetInternalAssignmentSenderDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetInternalAssignmentSenderDetailOperationCompleted == null)) {
                this.GetInternalAssignmentSenderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInternalAssignmentSenderDetailOperationCompleted);
            }
            this.InvokeAsync("GetInternalAssignmentSenderDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetInternalAssignmentSenderDetailOperationCompleted, userState);
        }
        
        private void OnGetInternalAssignmentSenderDetailOperationCompleted(object arg) {
            if ((this.GetInternalAssignmentSenderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInternalAssignmentSenderDetailCompleted(this, new GetInternalAssignmentSenderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetInternalAssignmentSenderWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InternalAssignmentSender[] GetInternalAssignmentSenderWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInternalAssignmentSenderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InternalAssignmentSender[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInternalAssignmentSenderWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetInternalAssignmentSenderWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetInternalAssignmentSenderWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetInternalAssignmentSenderWithFilterOperationCompleted == null)) {
                this.GetInternalAssignmentSenderWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInternalAssignmentSenderWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetInternalAssignmentSenderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetInternalAssignmentSenderWithFilterOperationCompleted, userState);
        }
        
        private void OnGetInternalAssignmentSenderWithFilterOperationCompleted(object arg) {
            if ((this.GetInternalAssignmentSenderWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInternalAssignmentSenderWithFilterCompleted(this, new GetInternalAssignmentSenderWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertInternalAssignmentSender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertInternalAssignmentSender(int fldAssignmentID, int fldSenderComisionID, int fldBoxID, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertInternalAssignmentSender", new object[] {
                        fldAssignmentID,
                        fldSenderComisionID,
                        fldBoxID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertInternalAssignmentSenderAsync(int fldAssignmentID, int fldSenderComisionID, int fldBoxID, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertInternalAssignmentSenderAsync(fldAssignmentID, fldSenderComisionID, fldBoxID, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertInternalAssignmentSenderAsync(int fldAssignmentID, int fldSenderComisionID, int fldBoxID, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertInternalAssignmentSenderOperationCompleted == null)) {
                this.InsertInternalAssignmentSenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInternalAssignmentSenderOperationCompleted);
            }
            this.InvokeAsync("InsertInternalAssignmentSender", new object[] {
                        fldAssignmentID,
                        fldSenderComisionID,
                        fldBoxID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertInternalAssignmentSenderOperationCompleted, userState);
        }
        
        private void OnInsertInternalAssignmentSenderOperationCompleted(object arg) {
            if ((this.InsertInternalAssignmentSenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInternalAssignmentSenderCompleted(this, new InsertInternalAssignmentSenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateInternalAssignmentSender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateInternalAssignmentSender(int Id, int fldAssignmentID, int fldSenderComisionID, int fldBoxID, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateInternalAssignmentSender", new object[] {
                        Id,
                        fldAssignmentID,
                        fldSenderComisionID,
                        fldBoxID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInternalAssignmentSenderAsync(int Id, int fldAssignmentID, int fldSenderComisionID, int fldBoxID, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateInternalAssignmentSenderAsync(Id, fldAssignmentID, fldSenderComisionID, fldBoxID, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateInternalAssignmentSenderAsync(int Id, int fldAssignmentID, int fldSenderComisionID, int fldBoxID, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateInternalAssignmentSenderOperationCompleted == null)) {
                this.UpdateInternalAssignmentSenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInternalAssignmentSenderOperationCompleted);
            }
            this.InvokeAsync("UpdateInternalAssignmentSender", new object[] {
                        Id,
                        fldAssignmentID,
                        fldSenderComisionID,
                        fldBoxID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateInternalAssignmentSenderOperationCompleted, userState);
        }
        
        private void OnUpdateInternalAssignmentSenderOperationCompleted(object arg) {
            if ((this.UpdateInternalAssignmentSenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInternalAssignmentSenderCompleted(this, new UpdateInternalAssignmentSenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteInternalAssignmentSender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteInternalAssignmentSender(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteInternalAssignmentSender", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInternalAssignmentSenderAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteInternalAssignmentSenderAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteInternalAssignmentSenderAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteInternalAssignmentSenderOperationCompleted == null)) {
                this.DeleteInternalAssignmentSenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInternalAssignmentSenderOperationCompleted);
            }
            this.InvokeAsync("DeleteInternalAssignmentSender", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteInternalAssignmentSenderOperationCompleted, userState);
        }
        
        private void OnDeleteInternalAssignmentSenderOperationCompleted(object arg) {
            if ((this.DeleteInternalAssignmentSenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInternalAssignmentSenderCompleted(this, new DeleteInternalAssignmentSenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateInternalAssignmentSenderBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateInternalAssignmentSenderBox(int Id, int fldBoxID, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateInternalAssignmentSenderBox", new object[] {
                        Id,
                        fldBoxID,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInternalAssignmentSenderBoxAsync(int Id, int fldBoxID, string Username, string Password, int OrganId, string IP) {
            this.UpdateInternalAssignmentSenderBoxAsync(Id, fldBoxID, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateInternalAssignmentSenderBoxAsync(int Id, int fldBoxID, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateInternalAssignmentSenderBoxOperationCompleted == null)) {
                this.UpdateInternalAssignmentSenderBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInternalAssignmentSenderBoxOperationCompleted);
            }
            this.InvokeAsync("UpdateInternalAssignmentSenderBox", new object[] {
                        Id,
                        fldBoxID,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateInternalAssignmentSenderBoxOperationCompleted, userState);
        }
        
        private void OnUpdateInternalAssignmentSenderBoxOperationCompleted(object arg) {
            if ((this.UpdateInternalAssignmentSenderBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInternalAssignmentSenderBoxCompleted(this, new UpdateInternalAssignmentSenderBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetArchiveDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Archive GetArchiveDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetArchiveDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Archive)(results[0]));
        }
        
        /// <remarks/>
        public void GetArchiveDetailAsync(int Id, int OrganId, string IP) {
            this.GetArchiveDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetArchiveDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetArchiveDetailOperationCompleted == null)) {
                this.GetArchiveDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArchiveDetailOperationCompleted);
            }
            this.InvokeAsync("GetArchiveDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetArchiveDetailOperationCompleted, userState);
        }
        
        private void OnGetArchiveDetailOperationCompleted(object arg) {
            if ((this.GetArchiveDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArchiveDetailCompleted(this, new GetArchiveDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetArchiveWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Archive[] GetArchiveWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetArchiveWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Archive[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArchiveWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetArchiveWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetArchiveWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetArchiveWithFilterOperationCompleted == null)) {
                this.GetArchiveWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArchiveWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetArchiveWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetArchiveWithFilterOperationCompleted, userState);
        }
        
        private void OnGetArchiveWithFilterOperationCompleted(object arg) {
            if ((this.GetArchiveWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArchiveWithFilterCompleted(this, new GetArchiveWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertArchive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertArchive(string fldName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertArchive", new object[] {
                        fldName,
                        fldPId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertArchiveAsync(string fldName, System.Nullable<int> fldPId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertArchiveAsync(fldName, fldPId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertArchiveAsync(string fldName, System.Nullable<int> fldPId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertArchiveOperationCompleted == null)) {
                this.InsertArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertArchiveOperationCompleted);
            }
            this.InvokeAsync("InsertArchive", new object[] {
                        fldName,
                        fldPId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertArchiveOperationCompleted, userState);
        }
        
        private void OnInsertArchiveOperationCompleted(object arg) {
            if ((this.InsertArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertArchiveCompleted(this, new InsertArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateArchive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateArchive(int Id, string fldName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateArchive", new object[] {
                        Id,
                        fldName,
                        fldPId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateArchiveAsync(int Id, string fldName, System.Nullable<int> fldPId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateArchiveAsync(Id, fldName, fldPId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateArchiveAsync(int Id, string fldName, System.Nullable<int> fldPId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateArchiveOperationCompleted == null)) {
                this.UpdateArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateArchiveOperationCompleted);
            }
            this.InvokeAsync("UpdateArchive", new object[] {
                        Id,
                        fldName,
                        fldPId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateArchiveOperationCompleted, userState);
        }
        
        private void OnUpdateArchiveOperationCompleted(object arg) {
            if ((this.UpdateArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateArchiveCompleted(this, new UpdateArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteArchive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteArchive(int Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteArchive", new object[] {
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteArchiveAsync(int Id, string Username, string Password, string IP) {
            this.DeleteArchiveAsync(Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteArchiveAsync(int Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteArchiveOperationCompleted == null)) {
                this.DeleteArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteArchiveOperationCompleted);
            }
            this.InvokeAsync("DeleteArchive", new object[] {
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteArchiveOperationCompleted, userState);
        }
        
        private void OnDeleteArchiveOperationCompleted(object arg) {
            if ((this.DeleteArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteArchiveCompleted(this, new DeleteArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterArchiveDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterArchive GetLetterArchiveDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterArchiveDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterArchive)(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterArchiveDetailAsync(int Id, int OrganId, string IP) {
            this.GetLetterArchiveDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterArchiveDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetLetterArchiveDetailOperationCompleted == null)) {
                this.GetLetterArchiveDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterArchiveDetailOperationCompleted);
            }
            this.InvokeAsync("GetLetterArchiveDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetLetterArchiveDetailOperationCompleted, userState);
        }
        
        private void OnGetLetterArchiveDetailOperationCompleted(object arg) {
            if ((this.GetLetterArchiveDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterArchiveDetailCompleted(this, new GetLetterArchiveDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterArchiveWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterArchive[] GetLetterArchiveWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterArchiveWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterArchive[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterArchiveWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetLetterArchiveWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterArchiveWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetLetterArchiveWithFilterOperationCompleted == null)) {
                this.GetLetterArchiveWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterArchiveWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetLetterArchiveWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetLetterArchiveWithFilterOperationCompleted, userState);
        }
        
        private void OnGetLetterArchiveWithFilterOperationCompleted(object arg) {
            if ((this.GetLetterArchiveWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterArchiveWithFilterCompleted(this, new GetLetterArchiveWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertLetterArchive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertLetterArchive([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, int fldMessageId, int fldArchiveId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertLetterArchive", new object[] {
                        fldLetterId,
                        fldMessageId,
                        fldArchiveId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLetterArchiveAsync(System.Nullable<long> fldLetterId, int fldMessageId, int fldArchiveId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertLetterArchiveAsync(fldLetterId, fldMessageId, fldArchiveId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertLetterArchiveAsync(System.Nullable<long> fldLetterId, int fldMessageId, int fldArchiveId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertLetterArchiveOperationCompleted == null)) {
                this.InsertLetterArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLetterArchiveOperationCompleted);
            }
            this.InvokeAsync("InsertLetterArchive", new object[] {
                        fldLetterId,
                        fldMessageId,
                        fldArchiveId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertLetterArchiveOperationCompleted, userState);
        }
        
        private void OnInsertLetterArchiveOperationCompleted(object arg) {
            if ((this.InsertLetterArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLetterArchiveCompleted(this, new InsertLetterArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetterArchive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetterArchive(int Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, int fldMessageId, int fldArchiveId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateLetterArchive", new object[] {
                        Id,
                        fldLetterId,
                        fldMessageId,
                        fldArchiveId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterArchiveAsync(int Id, System.Nullable<long> fldLetterId, int fldMessageId, int fldArchiveId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateLetterArchiveAsync(Id, fldLetterId, fldMessageId, fldArchiveId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterArchiveAsync(int Id, System.Nullable<long> fldLetterId, int fldMessageId, int fldArchiveId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateLetterArchiveOperationCompleted == null)) {
                this.UpdateLetterArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterArchiveOperationCompleted);
            }
            this.InvokeAsync("UpdateLetterArchive", new object[] {
                        Id,
                        fldLetterId,
                        fldMessageId,
                        fldArchiveId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLetterArchiveOperationCompleted, userState);
        }
        
        private void OnUpdateLetterArchiveOperationCompleted(object arg) {
            if ((this.UpdateLetterArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterArchiveCompleted(this, new UpdateLetterArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterArchive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterArchive(int Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterArchive", new object[] {
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterArchiveAsync(int Id, string Username, string Password, string IP) {
            this.DeleteLetterArchiveAsync(Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterArchiveAsync(int Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteLetterArchiveOperationCompleted == null)) {
                this.DeleteLetterArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterArchiveOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterArchive", new object[] {
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteLetterArchiveOperationCompleted, userState);
        }
        
        private void OnDeleteLetterArchiveOperationCompleted(object arg) {
            if ((this.DeleteLetterArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterArchiveCompleted(this, new DeleteLetterArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterArchiveLetterID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterArchiveLetterID(long Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterArchiveLetterID", new object[] {
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterArchiveLetterIDAsync(long Id, string Username, string Password, string IP) {
            this.DeleteLetterArchiveLetterIDAsync(Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterArchiveLetterIDAsync(long Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteLetterArchiveLetterIDOperationCompleted == null)) {
                this.DeleteLetterArchiveLetterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterArchiveLetterIDOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterArchiveLetterID", new object[] {
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteLetterArchiveLetterIDOperationCompleted, userState);
        }
        
        private void OnDeleteLetterArchiveLetterIDOperationCompleted(object arg) {
            if ((this.DeleteLetterArchiveLetterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterArchiveLetterIDCompleted(this, new DeleteLetterArchiveLetterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSignerDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Signer GetSignerDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSignerDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Signer)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignerDetailAsync(int Id, int OrganId, string IP) {
            this.GetSignerDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetSignerDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetSignerDetailOperationCompleted == null)) {
                this.GetSignerDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignerDetailOperationCompleted);
            }
            this.InvokeAsync("GetSignerDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetSignerDetailOperationCompleted, userState);
        }
        
        private void OnGetSignerDetailOperationCompleted(object arg) {
            if ((this.GetSignerDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignerDetailCompleted(this, new GetSignerDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSignerWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Signer[] GetSignerWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSignerWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Signer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSignerWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetSignerWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetSignerWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetSignerWithFilterOperationCompleted == null)) {
                this.GetSignerWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignerWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetSignerWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetSignerWithFilterOperationCompleted, userState);
        }
        
        private void OnGetSignerWithFilterOperationCompleted(object arg) {
            if ((this.GetSignerWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignerWithFilterCompleted(this, new GetSignerWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertSigner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSigner(long fldLetterId, int fldSignerComisionId, int fldIndexerId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldFirstSigner, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertSigner", new object[] {
                        fldLetterId,
                        fldSignerComisionId,
                        fldIndexerId,
                        fldFirstSigner,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSignerAsync(long fldLetterId, int fldSignerComisionId, int fldIndexerId, System.Nullable<int> fldFirstSigner, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertSignerAsync(fldLetterId, fldSignerComisionId, fldIndexerId, fldFirstSigner, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertSignerAsync(long fldLetterId, int fldSignerComisionId, int fldIndexerId, System.Nullable<int> fldFirstSigner, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertSignerOperationCompleted == null)) {
                this.InsertSignerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSignerOperationCompleted);
            }
            this.InvokeAsync("InsertSigner", new object[] {
                        fldLetterId,
                        fldSignerComisionId,
                        fldIndexerId,
                        fldFirstSigner,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertSignerOperationCompleted, userState);
        }
        
        private void OnInsertSignerOperationCompleted(object arg) {
            if ((this.InsertSignerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSignerCompleted(this, new InsertSignerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateSigner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSigner(int Id, long fldLetterId, int fldSignerComisionId, int fldIndexerId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldFirstSigner, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateSigner", new object[] {
                        Id,
                        fldLetterId,
                        fldSignerComisionId,
                        fldIndexerId,
                        fldFirstSigner,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSignerAsync(int Id, long fldLetterId, int fldSignerComisionId, int fldIndexerId, System.Nullable<int> fldFirstSigner, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateSignerAsync(Id, fldLetterId, fldSignerComisionId, fldIndexerId, fldFirstSigner, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateSignerAsync(int Id, long fldLetterId, int fldSignerComisionId, int fldIndexerId, System.Nullable<int> fldFirstSigner, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateSignerOperationCompleted == null)) {
                this.UpdateSignerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSignerOperationCompleted);
            }
            this.InvokeAsync("UpdateSigner", new object[] {
                        Id,
                        fldLetterId,
                        fldSignerComisionId,
                        fldIndexerId,
                        fldFirstSigner,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateSignerOperationCompleted, userState);
        }
        
        private void OnUpdateSignerOperationCompleted(object arg) {
            if ((this.UpdateSignerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSignerCompleted(this, new UpdateSignerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteSigner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSigner(long Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteSigner", new object[] {
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSignerAsync(long Id, string Username, string Password, string IP) {
            this.DeleteSignerAsync(Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteSignerAsync(long Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteSignerOperationCompleted == null)) {
                this.DeleteSignerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSignerOperationCompleted);
            }
            this.InvokeAsync("DeleteSigner", new object[] {
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteSignerOperationCompleted, userState);
        }
        
        private void OnDeleteSignerOperationCompleted(object arg) {
            if ((this.DeleteSignerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSignerCompleted(this, new DeleteSignerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetExternalLetterReceiverDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ExternalLetterReceiver GetExternalLetterReceiverDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetExternalLetterReceiverDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ExternalLetterReceiver)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalLetterReceiverDetailAsync(int Id, int OrganId, string IP) {
            this.GetExternalLetterReceiverDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetExternalLetterReceiverDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetExternalLetterReceiverDetailOperationCompleted == null)) {
                this.GetExternalLetterReceiverDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalLetterReceiverDetailOperationCompleted);
            }
            this.InvokeAsync("GetExternalLetterReceiverDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetExternalLetterReceiverDetailOperationCompleted, userState);
        }
        
        private void OnGetExternalLetterReceiverDetailOperationCompleted(object arg) {
            if ((this.GetExternalLetterReceiverDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalLetterReceiverDetailCompleted(this, new GetExternalLetterReceiverDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetExternalLetterReceiverWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ExternalLetterReceiver[] GetExternalLetterReceiverWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetExternalLetterReceiverWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ExternalLetterReceiver[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalLetterReceiverWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetExternalLetterReceiverWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetExternalLetterReceiverWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetExternalLetterReceiverWithFilterOperationCompleted == null)) {
                this.GetExternalLetterReceiverWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalLetterReceiverWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetExternalLetterReceiverWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetExternalLetterReceiverWithFilterOperationCompleted, userState);
        }
        
        private void OnGetExternalLetterReceiverWithFilterOperationCompleted(object arg) {
            if ((this.GetExternalLetterReceiverWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalLetterReceiverWithFilterCompleted(this, new GetExternalLetterReceiverWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertExternalLetterReceiver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalLetterReceiver([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, int fldAshkhasHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertExternalLetterReceiver", new object[] {
                        fldLetterId,
                        fldMessageId,
                        fldAshkhasHoghoghiTitlesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalLetterReceiverAsync(System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldAshkhasHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertExternalLetterReceiverAsync(fldLetterId, fldMessageId, fldAshkhasHoghoghiTitlesId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertExternalLetterReceiverAsync(System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldAshkhasHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertExternalLetterReceiverOperationCompleted == null)) {
                this.InsertExternalLetterReceiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalLetterReceiverOperationCompleted);
            }
            this.InvokeAsync("InsertExternalLetterReceiver", new object[] {
                        fldLetterId,
                        fldMessageId,
                        fldAshkhasHoghoghiTitlesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertExternalLetterReceiverOperationCompleted, userState);
        }
        
        private void OnInsertExternalLetterReceiverOperationCompleted(object arg) {
            if ((this.InsertExternalLetterReceiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalLetterReceiverCompleted(this, new InsertExternalLetterReceiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateExternalLetterReceiver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateExternalLetterReceiver(int Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, int fldAshkhasHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateExternalLetterReceiver", new object[] {
                        Id,
                        fldLetterId,
                        fldMessageId,
                        fldAshkhasHoghoghiTitlesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateExternalLetterReceiverAsync(int Id, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldAshkhasHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateExternalLetterReceiverAsync(Id, fldLetterId, fldMessageId, fldAshkhasHoghoghiTitlesId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateExternalLetterReceiverAsync(int Id, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldAshkhasHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateExternalLetterReceiverOperationCompleted == null)) {
                this.UpdateExternalLetterReceiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateExternalLetterReceiverOperationCompleted);
            }
            this.InvokeAsync("UpdateExternalLetterReceiver", new object[] {
                        Id,
                        fldLetterId,
                        fldMessageId,
                        fldAshkhasHoghoghiTitlesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateExternalLetterReceiverOperationCompleted, userState);
        }
        
        private void OnUpdateExternalLetterReceiverOperationCompleted(object arg) {
            if ((this.UpdateExternalLetterReceiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateExternalLetterReceiverCompleted(this, new UpdateExternalLetterReceiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteExternalLetterReceiver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteExternalLetterReceiver(long id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteExternalLetterReceiver", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExternalLetterReceiverAsync(long id, string Username, string Password, int OrganId, string IP) {
            this.DeleteExternalLetterReceiverAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteExternalLetterReceiverAsync(long id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteExternalLetterReceiverOperationCompleted == null)) {
                this.DeleteExternalLetterReceiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExternalLetterReceiverOperationCompleted);
            }
            this.InvokeAsync("DeleteExternalLetterReceiver", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteExternalLetterReceiverOperationCompleted, userState);
        }
        
        private void OnDeleteExternalLetterReceiverOperationCompleted(object arg) {
            if ((this.DeleteExternalLetterReceiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExternalLetterReceiverCompleted(this, new DeleteExternalLetterReceiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetExternalLetterSenderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ExternalLetterSender GetExternalLetterSenderDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetExternalLetterSenderDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ExternalLetterSender)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalLetterSenderDetailAsync(int Id, int OrganId, string IP) {
            this.GetExternalLetterSenderDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetExternalLetterSenderDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetExternalLetterSenderDetailOperationCompleted == null)) {
                this.GetExternalLetterSenderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalLetterSenderDetailOperationCompleted);
            }
            this.InvokeAsync("GetExternalLetterSenderDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetExternalLetterSenderDetailOperationCompleted, userState);
        }
        
        private void OnGetExternalLetterSenderDetailOperationCompleted(object arg) {
            if ((this.GetExternalLetterSenderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalLetterSenderDetailCompleted(this, new GetExternalLetterSenderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetExternalLetterSenderWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ExternalLetterSender[] GetExternalLetterSenderWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetExternalLetterSenderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ExternalLetterSender[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalLetterSenderWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetExternalLetterSenderWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetExternalLetterSenderWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetExternalLetterSenderWithFilterOperationCompleted == null)) {
                this.GetExternalLetterSenderWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalLetterSenderWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetExternalLetterSenderWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetExternalLetterSenderWithFilterOperationCompleted, userState);
        }
        
        private void OnGetExternalLetterSenderWithFilterOperationCompleted(object arg) {
            if ((this.GetExternalLetterSenderWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalLetterSenderWithFilterCompleted(this, new GetExternalLetterSenderWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertExternalLetterSender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalLetterSender([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, int fldShakhsHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertExternalLetterSender", new object[] {
                        fldLetterId,
                        fldMessageId,
                        fldShakhsHoghoghiTitlesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalLetterSenderAsync(System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldShakhsHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertExternalLetterSenderAsync(fldLetterId, fldMessageId, fldShakhsHoghoghiTitlesId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertExternalLetterSenderAsync(System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldShakhsHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertExternalLetterSenderOperationCompleted == null)) {
                this.InsertExternalLetterSenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalLetterSenderOperationCompleted);
            }
            this.InvokeAsync("InsertExternalLetterSender", new object[] {
                        fldLetterId,
                        fldMessageId,
                        fldShakhsHoghoghiTitlesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertExternalLetterSenderOperationCompleted, userState);
        }
        
        private void OnInsertExternalLetterSenderOperationCompleted(object arg) {
            if ((this.InsertExternalLetterSenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalLetterSenderCompleted(this, new InsertExternalLetterSenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateExternalLetterSender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateExternalLetterSender(int Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, int fldShakhsHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateExternalLetterSender", new object[] {
                        Id,
                        fldLetterId,
                        fldMessageId,
                        fldShakhsHoghoghiTitlesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateExternalLetterSenderAsync(int Id, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldShakhsHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateExternalLetterSenderAsync(Id, fldLetterId, fldMessageId, fldShakhsHoghoghiTitlesId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateExternalLetterSenderAsync(int Id, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldShakhsHoghoghiTitlesId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateExternalLetterSenderOperationCompleted == null)) {
                this.UpdateExternalLetterSenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateExternalLetterSenderOperationCompleted);
            }
            this.InvokeAsync("UpdateExternalLetterSender", new object[] {
                        Id,
                        fldLetterId,
                        fldMessageId,
                        fldShakhsHoghoghiTitlesId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateExternalLetterSenderOperationCompleted, userState);
        }
        
        private void OnUpdateExternalLetterSenderOperationCompleted(object arg) {
            if ((this.UpdateExternalLetterSenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateExternalLetterSenderCompleted(this, new UpdateExternalLetterSenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteExternalLetterSender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteExternalLetterSender(long id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteExternalLetterSender", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExternalLetterSenderAsync(long id, string Username, string Password, int OrganId, string IP) {
            this.DeleteExternalLetterSenderAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteExternalLetterSenderAsync(long id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteExternalLetterSenderOperationCompleted == null)) {
                this.DeleteExternalLetterSenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExternalLetterSenderOperationCompleted);
            }
            this.InvokeAsync("DeleteExternalLetterSender", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteExternalLetterSenderOperationCompleted, userState);
        }
        
        private void OnDeleteExternalLetterSenderOperationCompleted(object arg) {
            if ((this.DeleteExternalLetterSenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExternalLetterSenderCompleted(this, new DeleteExternalLetterSenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetInternalLetterReceiverDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InternalLetterReceiver GetInternalLetterReceiverDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInternalLetterReceiverDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InternalLetterReceiver)(results[0]));
        }
        
        /// <remarks/>
        public void GetInternalLetterReceiverDetailAsync(int Id, int OrganId, string IP) {
            this.GetInternalLetterReceiverDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetInternalLetterReceiverDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetInternalLetterReceiverDetailOperationCompleted == null)) {
                this.GetInternalLetterReceiverDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInternalLetterReceiverDetailOperationCompleted);
            }
            this.InvokeAsync("GetInternalLetterReceiverDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetInternalLetterReceiverDetailOperationCompleted, userState);
        }
        
        private void OnGetInternalLetterReceiverDetailOperationCompleted(object arg) {
            if ((this.GetInternalLetterReceiverDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInternalLetterReceiverDetailCompleted(this, new GetInternalLetterReceiverDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetInternalLetterReceiverWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InternalLetterReceiver[] GetInternalLetterReceiverWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInternalLetterReceiverWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InternalLetterReceiver[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInternalLetterReceiverWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetInternalLetterReceiverWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetInternalLetterReceiverWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetInternalLetterReceiverWithFilterOperationCompleted == null)) {
                this.GetInternalLetterReceiverWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInternalLetterReceiverWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetInternalLetterReceiverWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetInternalLetterReceiverWithFilterOperationCompleted, userState);
        }
        
        private void OnGetInternalLetterReceiverWithFilterOperationCompleted(object arg) {
            if ((this.GetInternalLetterReceiverWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInternalLetterReceiverWithFilterCompleted(this, new GetInternalLetterReceiverWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertInternalLetterReceiver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertInternalLetterReceiver([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, int fldReceiverComisionID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldAssignmentStatusID, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertInternalLetterReceiver", new object[] {
                        fldLetterId,
                        fldMessageId,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertInternalLetterReceiverAsync(System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldReceiverComisionID, System.Nullable<int> fldAssignmentStatusID, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertInternalLetterReceiverAsync(fldLetterId, fldMessageId, fldReceiverComisionID, fldAssignmentStatusID, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertInternalLetterReceiverAsync(System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldReceiverComisionID, System.Nullable<int> fldAssignmentStatusID, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertInternalLetterReceiverOperationCompleted == null)) {
                this.InsertInternalLetterReceiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInternalLetterReceiverOperationCompleted);
            }
            this.InvokeAsync("InsertInternalLetterReceiver", new object[] {
                        fldLetterId,
                        fldMessageId,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertInternalLetterReceiverOperationCompleted, userState);
        }
        
        private void OnInsertInternalLetterReceiverOperationCompleted(object arg) {
            if ((this.InsertInternalLetterReceiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInternalLetterReceiverCompleted(this, new InsertInternalLetterReceiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateInternalLetterReceiver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateInternalLetterReceiver(int Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> fldLetterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMessageId, int fldReceiverComisionID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldAssignmentStatusID, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateInternalLetterReceiver", new object[] {
                        Id,
                        fldLetterId,
                        fldMessageId,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInternalLetterReceiverAsync(int Id, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldReceiverComisionID, System.Nullable<int> fldAssignmentStatusID, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateInternalLetterReceiverAsync(Id, fldLetterId, fldMessageId, fldReceiverComisionID, fldAssignmentStatusID, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateInternalLetterReceiverAsync(int Id, System.Nullable<long> fldLetterId, System.Nullable<int> fldMessageId, int fldReceiverComisionID, System.Nullable<int> fldAssignmentStatusID, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateInternalLetterReceiverOperationCompleted == null)) {
                this.UpdateInternalLetterReceiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInternalLetterReceiverOperationCompleted);
            }
            this.InvokeAsync("UpdateInternalLetterReceiver", new object[] {
                        Id,
                        fldLetterId,
                        fldMessageId,
                        fldReceiverComisionID,
                        fldAssignmentStatusID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateInternalLetterReceiverOperationCompleted, userState);
        }
        
        private void OnUpdateInternalLetterReceiverOperationCompleted(object arg) {
            if ((this.UpdateInternalLetterReceiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInternalLetterReceiverCompleted(this, new UpdateInternalLetterReceiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteInternalLetterReceiver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteInternalLetterReceiver(long id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteInternalLetterReceiver", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInternalLetterReceiverAsync(long id, string Username, string Password, int OrganId, string IP) {
            this.DeleteInternalLetterReceiverAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteInternalLetterReceiverAsync(long id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteInternalLetterReceiverOperationCompleted == null)) {
                this.DeleteInternalLetterReceiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInternalLetterReceiverOperationCompleted);
            }
            this.InvokeAsync("DeleteInternalLetterReceiver", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteInternalLetterReceiverOperationCompleted, userState);
        }
        
        private void OnDeleteInternalLetterReceiverOperationCompleted(object arg) {
            if ((this.DeleteInternalLetterReceiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInternalLetterReceiverCompleted(this, new DeleteInternalLetterReceiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetContentFileDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ContentFile GetContentFileDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetContentFileDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ContentFile)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentFileDetailAsync(int Id, int OrganId, string IP) {
            this.GetContentFileDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetContentFileDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetContentFileDetailOperationCompleted == null)) {
                this.GetContentFileDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentFileDetailOperationCompleted);
            }
            this.InvokeAsync("GetContentFileDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetContentFileDetailOperationCompleted, userState);
        }
        
        private void OnGetContentFileDetailOperationCompleted(object arg) {
            if ((this.GetContentFileDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentFileDetailCompleted(this, new GetContentFileDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetContentFileWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ContentFile[] GetContentFileWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetContentFileWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ContentFile[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContentFileWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetContentFileWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetContentFileWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetContentFileWithFilterOperationCompleted == null)) {
                this.GetContentFileWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentFileWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetContentFileWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetContentFileWithFilterOperationCompleted, userState);
        }
        
        private void OnGetContentFileWithFilterOperationCompleted(object arg) {
            if ((this.GetContentFileWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentFileWithFilterCompleted(this, new GetContentFileWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertContentFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertContentFile(string fldName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldLetterText, long fldLetterId, string fldType, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertContentFile", new object[] {
                        fldName,
                        fldLetterText,
                        fldLetterId,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertContentFileAsync(string fldName, byte[] fldLetterText, long fldLetterId, string fldType, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertContentFileAsync(fldName, fldLetterText, fldLetterId, fldType, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertContentFileAsync(string fldName, byte[] fldLetterText, long fldLetterId, string fldType, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertContentFileOperationCompleted == null)) {
                this.InsertContentFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertContentFileOperationCompleted);
            }
            this.InvokeAsync("InsertContentFile", new object[] {
                        fldName,
                        fldLetterText,
                        fldLetterId,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertContentFileOperationCompleted, userState);
        }
        
        private void OnInsertContentFileOperationCompleted(object arg) {
            if ((this.InsertContentFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertContentFileCompleted(this, new InsertContentFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateContentFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContentFile(int Id, string fldName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldLetterText, long fldLetterId, string fldType, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateContentFile", new object[] {
                        Id,
                        fldName,
                        fldLetterText,
                        fldLetterId,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContentFileAsync(int Id, string fldName, byte[] fldLetterText, long fldLetterId, string fldType, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateContentFileAsync(Id, fldName, fldLetterText, fldLetterId, fldType, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateContentFileAsync(int Id, string fldName, byte[] fldLetterText, long fldLetterId, string fldType, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateContentFileOperationCompleted == null)) {
                this.UpdateContentFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContentFileOperationCompleted);
            }
            this.InvokeAsync("UpdateContentFile", new object[] {
                        Id,
                        fldName,
                        fldLetterText,
                        fldLetterId,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateContentFileOperationCompleted, userState);
        }
        
        private void OnUpdateContentFileOperationCompleted(object arg) {
            if ((this.UpdateContentFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContentFileCompleted(this, new UpdateContentFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteContentFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteContentFile(long id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteContentFile", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContentFileAsync(long id, string Username, string Password, int OrganId, string IP) {
            this.DeleteContentFileAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteContentFileAsync(long id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteContentFileOperationCompleted == null)) {
                this.DeleteContentFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContentFileOperationCompleted);
            }
            this.InvokeAsync("DeleteContentFile", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteContentFileOperationCompleted, userState);
        }
        
        private void OnDeleteContentFileOperationCompleted(object arg) {
            if ((this.DeleteContentFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContentFileCompleted(this, new DeleteContentFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterAttachmentDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterAttachment GetLetterAttachmentDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterAttachmentDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterAttachment)(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterAttachmentDetailAsync(int Id, int OrganId, string IP) {
            this.GetLetterAttachmentDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterAttachmentDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetLetterAttachmentDetailOperationCompleted == null)) {
                this.GetLetterAttachmentDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterAttachmentDetailOperationCompleted);
            }
            this.InvokeAsync("GetLetterAttachmentDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetLetterAttachmentDetailOperationCompleted, userState);
        }
        
        private void OnGetLetterAttachmentDetailOperationCompleted(object arg) {
            if ((this.GetLetterAttachmentDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterAttachmentDetailCompleted(this, new GetLetterAttachmentDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterAttachmentWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterAttachment[] GetLetterAttachmentWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterAttachmentWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterAttachment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterAttachmentWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetLetterAttachmentWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterAttachmentWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetLetterAttachmentWithFilterOperationCompleted == null)) {
                this.GetLetterAttachmentWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterAttachmentWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetLetterAttachmentWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetLetterAttachmentWithFilterOperationCompleted, userState);
        }
        
        private void OnGetLetterAttachmentWithFilterOperationCompleted(object arg) {
            if ((this.GetLetterAttachmentWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterAttachmentWithFilterCompleted(this, new GetLetterAttachmentWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertLetterAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertLetterAttachment(long fldLetterId, string fldName, string fldNameFile, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] file, string fldType, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertLetterAttachment", new object[] {
                        fldLetterId,
                        fldName,
                        fldNameFile,
                        file,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLetterAttachmentAsync(long fldLetterId, string fldName, string fldNameFile, byte[] file, string fldType, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertLetterAttachmentAsync(fldLetterId, fldName, fldNameFile, file, fldType, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertLetterAttachmentAsync(long fldLetterId, string fldName, string fldNameFile, byte[] file, string fldType, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertLetterAttachmentOperationCompleted == null)) {
                this.InsertLetterAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLetterAttachmentOperationCompleted);
            }
            this.InvokeAsync("InsertLetterAttachment", new object[] {
                        fldLetterId,
                        fldName,
                        fldNameFile,
                        file,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertLetterAttachmentOperationCompleted, userState);
        }
        
        private void OnInsertLetterAttachmentOperationCompleted(object arg) {
            if ((this.InsertLetterAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLetterAttachmentCompleted(this, new InsertLetterAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetterAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetterAttachment(int Id, long fldLetterId, string fldName, int fldContentFileId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateLetterAttachment", new object[] {
                        Id,
                        fldLetterId,
                        fldName,
                        fldContentFileId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterAttachmentAsync(int Id, long fldLetterId, string fldName, int fldContentFileId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateLetterAttachmentAsync(Id, fldLetterId, fldName, fldContentFileId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterAttachmentAsync(int Id, long fldLetterId, string fldName, int fldContentFileId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateLetterAttachmentOperationCompleted == null)) {
                this.UpdateLetterAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterAttachmentOperationCompleted);
            }
            this.InvokeAsync("UpdateLetterAttachment", new object[] {
                        Id,
                        fldLetterId,
                        fldName,
                        fldContentFileId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLetterAttachmentOperationCompleted, userState);
        }
        
        private void OnUpdateLetterAttachmentOperationCompleted(object arg) {
            if ((this.UpdateLetterAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterAttachmentCompleted(this, new UpdateLetterAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterAttachment(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterAttachment", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterAttachmentAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteLetterAttachmentAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterAttachmentAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteLetterAttachmentOperationCompleted == null)) {
                this.DeleteLetterAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterAttachment", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteLetterAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteLetterAttachmentOperationCompleted(object arg) {
            if ((this.DeleteLetterAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterAttachmentCompleted(this, new DeleteLetterAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetCommisionDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Commision GetCommisionDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCommisionDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Commision)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommisionDetailAsync(int Id, int OrganId, string IP) {
            this.GetCommisionDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetCommisionDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetCommisionDetailOperationCompleted == null)) {
                this.GetCommisionDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommisionDetailOperationCompleted);
            }
            this.InvokeAsync("GetCommisionDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetCommisionDetailOperationCompleted, userState);
        }
        
        private void OnGetCommisionDetailOperationCompleted(object arg) {
            if ((this.GetCommisionDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommisionDetailCompleted(this, new GetCommisionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetCommisionWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Commision[] GetCommisionWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCommisionWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Commision[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCommisionWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetCommisionWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCommisionWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetCommisionWithFilterOperationCompleted == null)) {
                this.GetCommisionWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommisionWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCommisionWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetCommisionWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCommisionWithFilterOperationCompleted(object arg) {
            if ((this.GetCommisionWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommisionWithFilterCompleted(this, new GetCommisionWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertCommision", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCommision(int AshkhasID, int OrganizPostEjraeeID, string StartDate, string EndDate, string OraganicNumber, bool fldSign, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCommision", new object[] {
                        AshkhasID,
                        OrganizPostEjraeeID,
                        StartDate,
                        EndDate,
                        OraganicNumber,
                        fldSign,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCommisionAsync(int AshkhasID, int OrganizPostEjraeeID, string StartDate, string EndDate, string OraganicNumber, bool fldSign, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertCommisionAsync(AshkhasID, OrganizPostEjraeeID, StartDate, EndDate, OraganicNumber, fldSign, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCommisionAsync(int AshkhasID, int OrganizPostEjraeeID, string StartDate, string EndDate, string OraganicNumber, bool fldSign, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCommisionOperationCompleted == null)) {
                this.InsertCommisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCommisionOperationCompleted);
            }
            this.InvokeAsync("InsertCommision", new object[] {
                        AshkhasID,
                        OrganizPostEjraeeID,
                        StartDate,
                        EndDate,
                        OraganicNumber,
                        fldSign,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCommisionOperationCompleted, userState);
        }
        
        private void OnInsertCommisionOperationCompleted(object arg) {
            if ((this.InsertCommisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCommisionCompleted(this, new InsertCommisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateCommision", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCommision(int Id, int AshkhasID, int OrganizPostEjraeeID, string StartDate, string EndDate, string OraganicNumber, bool fldSign, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCommision", new object[] {
                        Id,
                        AshkhasID,
                        OrganizPostEjraeeID,
                        StartDate,
                        EndDate,
                        OraganicNumber,
                        fldSign,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCommisionAsync(int Id, int AshkhasID, int OrganizPostEjraeeID, string StartDate, string EndDate, string OraganicNumber, bool fldSign, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCommisionAsync(Id, AshkhasID, OrganizPostEjraeeID, StartDate, EndDate, OraganicNumber, fldSign, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCommisionAsync(int Id, int AshkhasID, int OrganizPostEjraeeID, string StartDate, string EndDate, string OraganicNumber, bool fldSign, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCommisionOperationCompleted == null)) {
                this.UpdateCommisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCommisionOperationCompleted);
            }
            this.InvokeAsync("UpdateCommision", new object[] {
                        Id,
                        AshkhasID,
                        OrganizPostEjraeeID,
                        StartDate,
                        EndDate,
                        OraganicNumber,
                        fldSign,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCommisionOperationCompleted, userState);
        }
        
        private void OnUpdateCommisionOperationCompleted(object arg) {
            if ((this.UpdateCommisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCommisionCompleted(this, new UpdateCommisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteCommision", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCommision(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCommision", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCommisionAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCommisionAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCommisionAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCommisionOperationCompleted == null)) {
                this.DeleteCommisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCommisionOperationCompleted);
            }
            this.InvokeAsync("DeleteCommision", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCommisionOperationCompleted, userState);
        }
        
        private void OnDeleteCommisionOperationCompleted(object arg) {
            if ((this.DeleteCommisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCommisionCompleted(this, new DeleteCommisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetCommision_Post", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Commision[] GetCommision_Post(int fldId, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCommision_Post", new object[] {
                        fldId,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Commision[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCommision_PostAsync(int fldId, int OrganId, string IP) {
            this.GetCommision_PostAsync(fldId, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetCommision_PostAsync(int fldId, int OrganId, string IP, object userState) {
            if ((this.GetCommision_PostOperationCompleted == null)) {
                this.GetCommision_PostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommision_PostOperationCompleted);
            }
            this.InvokeAsync("GetCommision_Post", new object[] {
                        fldId,
                        OrganId,
                        IP}, this.GetCommision_PostOperationCompleted, userState);
        }
        
        private void OnGetCommision_PostOperationCompleted(object arg) {
            if ((this.GetCommision_PostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommision_PostCompleted(this, new GetCommision_PostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetAssignmentTypeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AssignmentType GetAssignmentTypeDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAssignmentTypeDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AssignmentType)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssignmentTypeDetailAsync(int Id, int OrganId, string IP) {
            this.GetAssignmentTypeDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetAssignmentTypeDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetAssignmentTypeDetailOperationCompleted == null)) {
                this.GetAssignmentTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssignmentTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetAssignmentTypeDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetAssignmentTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetAssignmentTypeDetailOperationCompleted(object arg) {
            if ((this.GetAssignmentTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssignmentTypeDetailCompleted(this, new GetAssignmentTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetAssignmentTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AssignmentType[] GetAssignmentTypeWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAssignmentTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AssignmentType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssignmentTypeWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetAssignmentTypeWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAssignmentTypeWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetAssignmentTypeWithFilterOperationCompleted == null)) {
                this.GetAssignmentTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssignmentTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAssignmentTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetAssignmentTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAssignmentTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetAssignmentTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssignmentTypeWithFilterCompleted(this, new GetAssignmentTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertAssignmentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAssignmentType(string fldType, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAssignmentType", new object[] {
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAssignmentTypeAsync(string fldType, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertAssignmentTypeAsync(fldType, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAssignmentTypeAsync(string fldType, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAssignmentTypeOperationCompleted == null)) {
                this.InsertAssignmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAssignmentTypeOperationCompleted);
            }
            this.InvokeAsync("InsertAssignmentType", new object[] {
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertAssignmentTypeOperationCompleted, userState);
        }
        
        private void OnInsertAssignmentTypeOperationCompleted(object arg) {
            if ((this.InsertAssignmentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAssignmentTypeCompleted(this, new InsertAssignmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateAssignmentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAssignmentType(int Id, string fldType, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAssignmentType", new object[] {
                        Id,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAssignmentTypeAsync(int Id, string fldType, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateAssignmentTypeAsync(Id, fldType, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAssignmentTypeAsync(int Id, string fldType, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateAssignmentTypeOperationCompleted == null)) {
                this.UpdateAssignmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAssignmentTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateAssignmentType", new object[] {
                        Id,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateAssignmentTypeOperationCompleted, userState);
        }
        
        private void OnUpdateAssignmentTypeOperationCompleted(object arg) {
            if ((this.UpdateAssignmentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAssignmentTypeCompleted(this, new UpdateAssignmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteAssignmentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAssignmentType(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAssignmentType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAssignmentTypeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAssignmentTypeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAssignmentTypeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAssignmentTypeOperationCompleted == null)) {
                this.DeleteAssignmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAssignmentTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteAssignmentType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAssignmentTypeOperationCompleted, userState);
        }
        
        private void OnDeleteAssignmentTypeOperationCompleted(object arg) {
            if ((this.DeleteAssignmentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAssignmentTypeCompleted(this, new DeleteAssignmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetImmediacyDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Immediacy GetImmediacyDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetImmediacyDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Immediacy)(results[0]));
        }
        
        /// <remarks/>
        public void GetImmediacyDetailAsync(int Id, int OrganId, string IP) {
            this.GetImmediacyDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetImmediacyDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetImmediacyDetailOperationCompleted == null)) {
                this.GetImmediacyDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImmediacyDetailOperationCompleted);
            }
            this.InvokeAsync("GetImmediacyDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetImmediacyDetailOperationCompleted, userState);
        }
        
        private void OnGetImmediacyDetailOperationCompleted(object arg) {
            if ((this.GetImmediacyDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImmediacyDetailCompleted(this, new GetImmediacyDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetImmediacyWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Immediacy[] GetImmediacyWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetImmediacyWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Immediacy[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImmediacyWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetImmediacyWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetImmediacyWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetImmediacyWithFilterOperationCompleted == null)) {
                this.GetImmediacyWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImmediacyWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetImmediacyWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetImmediacyWithFilterOperationCompleted, userState);
        }
        
        private void OnGetImmediacyWithFilterOperationCompleted(object arg) {
            if ((this.GetImmediacyWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImmediacyWithFilterCompleted(this, new GetImmediacyWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertImmediacy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertImmediacy(string Name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Image, string Passvand, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertImmediacy", new object[] {
                        Name,
                        Image,
                        Passvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertImmediacyAsync(string Name, byte[] Image, string Passvand, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertImmediacyAsync(Name, Image, Passvand, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertImmediacyAsync(string Name, byte[] Image, string Passvand, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertImmediacyOperationCompleted == null)) {
                this.InsertImmediacyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertImmediacyOperationCompleted);
            }
            this.InvokeAsync("InsertImmediacy", new object[] {
                        Name,
                        Image,
                        Passvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertImmediacyOperationCompleted, userState);
        }
        
        private void OnInsertImmediacyOperationCompleted(object arg) {
            if ((this.InsertImmediacyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertImmediacyCompleted(this, new InsertImmediacyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateImmediacy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateImmediacy(int Id, string Name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> FileId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Image, string Passvand, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateImmediacy", new object[] {
                        Id,
                        Name,
                        FileId,
                        Image,
                        Passvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateImmediacyAsync(int Id, string Name, System.Nullable<int> FileId, byte[] Image, string Passvand, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateImmediacyAsync(Id, Name, FileId, Image, Passvand, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateImmediacyAsync(int Id, string Name, System.Nullable<int> FileId, byte[] Image, string Passvand, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateImmediacyOperationCompleted == null)) {
                this.UpdateImmediacyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateImmediacyOperationCompleted);
            }
            this.InvokeAsync("UpdateImmediacy", new object[] {
                        Id,
                        Name,
                        FileId,
                        Image,
                        Passvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateImmediacyOperationCompleted, userState);
        }
        
        private void OnUpdateImmediacyOperationCompleted(object arg) {
            if ((this.UpdateImmediacyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateImmediacyCompleted(this, new UpdateImmediacyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteImmediacy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteImmediacy(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteImmediacy", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteImmediacyAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteImmediacyAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteImmediacyAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteImmediacyOperationCompleted == null)) {
                this.DeleteImmediacyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImmediacyOperationCompleted);
            }
            this.InvokeAsync("DeleteImmediacy", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteImmediacyOperationCompleted, userState);
        }
        
        private void OnDeleteImmediacyOperationCompleted(object arg) {
            if ((this.DeleteImmediacyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImmediacyCompleted(this, new DeleteImmediacyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetNumberingFormatDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_NumberingFormat GetNumberingFormatDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetNumberingFormatDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_NumberingFormat)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumberingFormatDetailAsync(int Id, int OrganId, string IP) {
            this.GetNumberingFormatDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetNumberingFormatDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetNumberingFormatDetailOperationCompleted == null)) {
                this.GetNumberingFormatDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumberingFormatDetailOperationCompleted);
            }
            this.InvokeAsync("GetNumberingFormatDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetNumberingFormatDetailOperationCompleted, userState);
        }
        
        private void OnGetNumberingFormatDetailOperationCompleted(object arg) {
            if ((this.GetNumberingFormatDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumberingFormatDetailCompleted(this, new GetNumberingFormatDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetNumberingFormatWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_NumberingFormat[] GetNumberingFormatWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetNumberingFormatWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_NumberingFormat[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNumberingFormatWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetNumberingFormatWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetNumberingFormatWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetNumberingFormatWithFilterOperationCompleted == null)) {
                this.GetNumberingFormatWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumberingFormatWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetNumberingFormatWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetNumberingFormatWithFilterOperationCompleted, userState);
        }
        
        private void OnGetNumberingFormatWithFilterOperationCompleted(object arg) {
            if ((this.GetNumberingFormatWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumberingFormatWithFilterCompleted(this, new GetNumberingFormatWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertNumberingFormat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertNumberingFormat(int Year, int SecretariatID, string NumberFormat, int StartNumber, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertNumberingFormat", new object[] {
                        Year,
                        SecretariatID,
                        NumberFormat,
                        StartNumber,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNumberingFormatAsync(int Year, int SecretariatID, string NumberFormat, int StartNumber, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertNumberingFormatAsync(Year, SecretariatID, NumberFormat, StartNumber, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertNumberingFormatAsync(int Year, int SecretariatID, string NumberFormat, int StartNumber, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertNumberingFormatOperationCompleted == null)) {
                this.InsertNumberingFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNumberingFormatOperationCompleted);
            }
            this.InvokeAsync("InsertNumberingFormat", new object[] {
                        Year,
                        SecretariatID,
                        NumberFormat,
                        StartNumber,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertNumberingFormatOperationCompleted, userState);
        }
        
        private void OnInsertNumberingFormatOperationCompleted(object arg) {
            if ((this.InsertNumberingFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNumberingFormatCompleted(this, new InsertNumberingFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateNumberingFormat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateNumberingFormat(int Id, int Year, int SecretariatID, string NumberFormat, int StartNumber, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateNumberingFormat", new object[] {
                        Id,
                        Year,
                        SecretariatID,
                        NumberFormat,
                        StartNumber,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNumberingFormatAsync(int Id, int Year, int SecretariatID, string NumberFormat, int StartNumber, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateNumberingFormatAsync(Id, Year, SecretariatID, NumberFormat, StartNumber, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateNumberingFormatAsync(int Id, int Year, int SecretariatID, string NumberFormat, int StartNumber, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateNumberingFormatOperationCompleted == null)) {
                this.UpdateNumberingFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNumberingFormatOperationCompleted);
            }
            this.InvokeAsync("UpdateNumberingFormat", new object[] {
                        Id,
                        Year,
                        SecretariatID,
                        NumberFormat,
                        StartNumber,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateNumberingFormatOperationCompleted, userState);
        }
        
        private void OnUpdateNumberingFormatOperationCompleted(object arg) {
            if ((this.UpdateNumberingFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNumberingFormatCompleted(this, new UpdateNumberingFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteNumberingFormat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteNumberingFormat(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteNumberingFormat", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNumberingFormatAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteNumberingFormatAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteNumberingFormatAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteNumberingFormatOperationCompleted == null)) {
                this.DeleteNumberingFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNumberingFormatOperationCompleted);
            }
            this.InvokeAsync("DeleteNumberingFormat", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteNumberingFormatOperationCompleted, userState);
        }
        
        private void OnDeleteNumberingFormatOperationCompleted(object arg) {
            if ((this.DeleteNumberingFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNumberingFormatCompleted(this, new DeleteNumberingFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSecurityTypeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_SecurityType GetSecurityTypeDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSecurityTypeDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_SecurityType)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityTypeDetailAsync(int Id, int OrganId, string IP) {
            this.GetSecurityTypeDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetSecurityTypeDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetSecurityTypeDetailOperationCompleted == null)) {
                this.GetSecurityTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetSecurityTypeDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetSecurityTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetSecurityTypeDetailOperationCompleted(object arg) {
            if ((this.GetSecurityTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityTypeDetailCompleted(this, new GetSecurityTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSecurityTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_SecurityType[] GetSecurityTypeWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSecurityTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_SecurityType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityTypeWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetSecurityTypeWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetSecurityTypeWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetSecurityTypeWithFilterOperationCompleted == null)) {
                this.GetSecurityTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetSecurityTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetSecurityTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetSecurityTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetSecurityTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityTypeWithFilterCompleted(this, new GetSecurityTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertSecurityType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSecurityType(string SecurityType, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertSecurityType", new object[] {
                        SecurityType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSecurityTypeAsync(string SecurityType, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertSecurityTypeAsync(SecurityType, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertSecurityTypeAsync(string SecurityType, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertSecurityTypeOperationCompleted == null)) {
                this.InsertSecurityTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSecurityTypeOperationCompleted);
            }
            this.InvokeAsync("InsertSecurityType", new object[] {
                        SecurityType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertSecurityTypeOperationCompleted, userState);
        }
        
        private void OnInsertSecurityTypeOperationCompleted(object arg) {
            if ((this.InsertSecurityTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSecurityTypeCompleted(this, new InsertSecurityTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateSecurityType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSecurityType(int Id, string SecurityType, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateSecurityType", new object[] {
                        Id,
                        SecurityType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSecurityTypeAsync(int Id, string SecurityType, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateSecurityTypeAsync(Id, SecurityType, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateSecurityTypeAsync(int Id, string SecurityType, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateSecurityTypeOperationCompleted == null)) {
                this.UpdateSecurityTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSecurityTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateSecurityType", new object[] {
                        Id,
                        SecurityType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateSecurityTypeOperationCompleted, userState);
        }
        
        private void OnUpdateSecurityTypeOperationCompleted(object arg) {
            if ((this.UpdateSecurityTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSecurityTypeCompleted(this, new UpdateSecurityTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteSecurityType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSecurityType(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteSecurityType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSecurityTypeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteSecurityTypeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteSecurityTypeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteSecurityTypeOperationCompleted == null)) {
                this.DeleteSecurityTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSecurityTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteSecurityType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteSecurityTypeOperationCompleted, userState);
        }
        
        private void OnDeleteSecurityTypeOperationCompleted(object arg) {
            if ((this.DeleteSecurityTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSecurityTypeCompleted(this, new DeleteSecurityTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSettingDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Setting GetSettingDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSettingDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Setting)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettingDetailAsync(int Id, int OrganId, string IP) {
            this.GetSettingDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetSettingDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetSettingDetailOperationCompleted == null)) {
                this.GetSettingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettingDetailOperationCompleted);
            }
            this.InvokeAsync("GetSettingDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetSettingDetailOperationCompleted, userState);
        }
        
        private void OnGetSettingDetailOperationCompleted(object arg) {
            if ((this.GetSettingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettingDetailCompleted(this, new GetSettingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSettingWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Setting[] GetSettingWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSettingWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Setting[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSettingWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetSettingWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetSettingWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetSettingWithFilterOperationCompleted == null)) {
                this.GetSettingWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettingWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetSettingWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetSettingWithFilterOperationCompleted, userState);
        }
        
        private void OnGetSettingWithFilterOperationCompleted(object arg) {
            if ((this.GetSettingWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettingWithFilterCompleted(this, new GetSettingWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSetting(
                    string EmailAddress, 
                    string EmailPassword, 
                    string RecieveServer, 
                    string SendServer, 
                    int SendPort, 
                    bool SSL, 
                    bool DelFax, 
                    bool IsSigner, 
                    string FaxPath, 
                    int RecievePort, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("InsertSetting", new object[] {
                        EmailAddress,
                        EmailPassword,
                        RecieveServer,
                        SendServer,
                        SendPort,
                        SSL,
                        DelFax,
                        IsSigner,
                        FaxPath,
                        RecievePort,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSettingAsync(string EmailAddress, string EmailPassword, string RecieveServer, string SendServer, int SendPort, bool SSL, bool DelFax, bool IsSigner, string FaxPath, int RecievePort, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertSettingAsync(EmailAddress, EmailPassword, RecieveServer, SendServer, SendPort, SSL, DelFax, IsSigner, FaxPath, RecievePort, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertSettingAsync(
                    string EmailAddress, 
                    string EmailPassword, 
                    string RecieveServer, 
                    string SendServer, 
                    int SendPort, 
                    bool SSL, 
                    bool DelFax, 
                    bool IsSigner, 
                    string FaxPath, 
                    int RecievePort, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.InsertSettingOperationCompleted == null)) {
                this.InsertSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSettingOperationCompleted);
            }
            this.InvokeAsync("InsertSetting", new object[] {
                        EmailAddress,
                        EmailPassword,
                        RecieveServer,
                        SendServer,
                        SendPort,
                        SSL,
                        DelFax,
                        IsSigner,
                        FaxPath,
                        RecievePort,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertSettingOperationCompleted, userState);
        }
        
        private void OnInsertSettingOperationCompleted(object arg) {
            if ((this.InsertSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSettingCompleted(this, new InsertSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSetting(
                    int Id, 
                    string EmailAddress, 
                    string EmailPassword, 
                    string RecieveServer, 
                    string SendServer, 
                    int SendPort, 
                    bool SSL, 
                    bool DelFax, 
                    bool IsSigner, 
                    string FaxPath, 
                    int RecievePort, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateSetting", new object[] {
                        Id,
                        EmailAddress,
                        EmailPassword,
                        RecieveServer,
                        SendServer,
                        SendPort,
                        SSL,
                        DelFax,
                        IsSigner,
                        FaxPath,
                        RecievePort,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSettingAsync(
                    int Id, 
                    string EmailAddress, 
                    string EmailPassword, 
                    string RecieveServer, 
                    string SendServer, 
                    int SendPort, 
                    bool SSL, 
                    bool DelFax, 
                    bool IsSigner, 
                    string FaxPath, 
                    int RecievePort, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.UpdateSettingAsync(Id, EmailAddress, EmailPassword, RecieveServer, SendServer, SendPort, SSL, DelFax, IsSigner, FaxPath, RecievePort, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateSettingAsync(
                    int Id, 
                    string EmailAddress, 
                    string EmailPassword, 
                    string RecieveServer, 
                    string SendServer, 
                    int SendPort, 
                    bool SSL, 
                    bool DelFax, 
                    bool IsSigner, 
                    string FaxPath, 
                    int RecievePort, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.UpdateSettingOperationCompleted == null)) {
                this.UpdateSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSettingOperationCompleted);
            }
            this.InvokeAsync("UpdateSetting", new object[] {
                        Id,
                        EmailAddress,
                        EmailPassword,
                        RecieveServer,
                        SendServer,
                        SendPort,
                        SSL,
                        DelFax,
                        IsSigner,
                        FaxPath,
                        RecievePort,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateSettingOperationCompleted, userState);
        }
        
        private void OnUpdateSettingOperationCompleted(object arg) {
            if ((this.UpdateSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSettingCompleted(this, new UpdateSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSetting(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteSetting", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSettingAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteSettingAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteSettingAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteSettingOperationCompleted == null)) {
                this.DeleteSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSettingOperationCompleted);
            }
            this.InvokeAsync("DeleteSetting", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteSettingOperationCompleted, userState);
        }
        
        private void OnDeleteSettingOperationCompleted(object arg) {
            if ((this.DeleteSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSettingCompleted(this, new DeleteSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSecretariat_OrganizationUnitDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Secretariat_OrganizationUnit GetSecretariat_OrganizationUnitDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSecretariat_OrganizationUnitDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Secretariat_OrganizationUnit)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecretariat_OrganizationUnitDetailAsync(int Id, int OrganId, string IP) {
            this.GetSecretariat_OrganizationUnitDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetSecretariat_OrganizationUnitDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetSecretariat_OrganizationUnitDetailOperationCompleted == null)) {
                this.GetSecretariat_OrganizationUnitDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecretariat_OrganizationUnitDetailOperationCompleted);
            }
            this.InvokeAsync("GetSecretariat_OrganizationUnitDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetSecretariat_OrganizationUnitDetailOperationCompleted, userState);
        }
        
        private void OnGetSecretariat_OrganizationUnitDetailOperationCompleted(object arg) {
            if ((this.GetSecretariat_OrganizationUnitDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecretariat_OrganizationUnitDetailCompleted(this, new GetSecretariat_OrganizationUnitDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSecretariat_OrganizationUnitWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Secretariat_OrganizationUnit[] GetSecretariat_OrganizationUnitWithFilter(string fieldname, string Value, int OrganId, int h, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSecretariat_OrganizationUnitWithFilter", new object[] {
                        fieldname,
                        Value,
                        OrganId,
                        h,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Secretariat_OrganizationUnit[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSecretariat_OrganizationUnitWithFilterAsync(string fieldname, string Value, int OrganId, int h, string IP) {
            this.GetSecretariat_OrganizationUnitWithFilterAsync(fieldname, Value, OrganId, h, IP, null);
        }
        
        /// <remarks/>
        public void GetSecretariat_OrganizationUnitWithFilterAsync(string fieldname, string Value, int OrganId, int h, string IP, object userState) {
            if ((this.GetSecretariat_OrganizationUnitWithFilterOperationCompleted == null)) {
                this.GetSecretariat_OrganizationUnitWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecretariat_OrganizationUnitWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetSecretariat_OrganizationUnitWithFilter", new object[] {
                        fieldname,
                        Value,
                        OrganId,
                        h,
                        IP}, this.GetSecretariat_OrganizationUnitWithFilterOperationCompleted, userState);
        }
        
        private void OnGetSecretariat_OrganizationUnitWithFilterOperationCompleted(object arg) {
            if ((this.GetSecretariat_OrganizationUnitWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecretariat_OrganizationUnitWithFilterCompleted(this, new GetSecretariat_OrganizationUnitWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertSecretariat_OrganizationUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSecretariat_OrganizationUnit(int fldSecretariatID, int fldOrganizationUnitID, string fldDesc, int fldOrganId, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertSecretariat_OrganizationUnit", new object[] {
                        fldSecretariatID,
                        fldOrganizationUnitID,
                        fldDesc,
                        fldOrganId,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSecretariat_OrganizationUnitAsync(int fldSecretariatID, int fldOrganizationUnitID, string fldDesc, int fldOrganId, string Username, string Password, string IP) {
            this.InsertSecretariat_OrganizationUnitAsync(fldSecretariatID, fldOrganizationUnitID, fldDesc, fldOrganId, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void InsertSecretariat_OrganizationUnitAsync(int fldSecretariatID, int fldOrganizationUnitID, string fldDesc, int fldOrganId, string Username, string Password, string IP, object userState) {
            if ((this.InsertSecretariat_OrganizationUnitOperationCompleted == null)) {
                this.InsertSecretariat_OrganizationUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSecretariat_OrganizationUnitOperationCompleted);
            }
            this.InvokeAsync("InsertSecretariat_OrganizationUnit", new object[] {
                        fldSecretariatID,
                        fldOrganizationUnitID,
                        fldDesc,
                        fldOrganId,
                        Username,
                        Password,
                        IP}, this.InsertSecretariat_OrganizationUnitOperationCompleted, userState);
        }
        
        private void OnInsertSecretariat_OrganizationUnitOperationCompleted(object arg) {
            if ((this.InsertSecretariat_OrganizationUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSecretariat_OrganizationUnitCompleted(this, new InsertSecretariat_OrganizationUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateSecretariat_OrganizationUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSecretariat_OrganizationUnit(int fldID, int fldSecretariatID, int fldOrganizationUnitID, string fldDesc, int OrganId, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateSecretariat_OrganizationUnit", new object[] {
                        fldID,
                        fldSecretariatID,
                        fldOrganizationUnitID,
                        fldDesc,
                        OrganId,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSecretariat_OrganizationUnitAsync(int fldID, int fldSecretariatID, int fldOrganizationUnitID, string fldDesc, int OrganId, string Username, string Password, string IP) {
            this.UpdateSecretariat_OrganizationUnitAsync(fldID, fldSecretariatID, fldOrganizationUnitID, fldDesc, OrganId, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void UpdateSecretariat_OrganizationUnitAsync(int fldID, int fldSecretariatID, int fldOrganizationUnitID, string fldDesc, int OrganId, string Username, string Password, string IP, object userState) {
            if ((this.UpdateSecretariat_OrganizationUnitOperationCompleted == null)) {
                this.UpdateSecretariat_OrganizationUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSecretariat_OrganizationUnitOperationCompleted);
            }
            this.InvokeAsync("UpdateSecretariat_OrganizationUnit", new object[] {
                        fldID,
                        fldSecretariatID,
                        fldOrganizationUnitID,
                        fldDesc,
                        OrganId,
                        Username,
                        Password,
                        IP}, this.UpdateSecretariat_OrganizationUnitOperationCompleted, userState);
        }
        
        private void OnUpdateSecretariat_OrganizationUnitOperationCompleted(object arg) {
            if ((this.UpdateSecretariat_OrganizationUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSecretariat_OrganizationUnitCompleted(this, new UpdateSecretariat_OrganizationUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteSecretariat_OrganizationUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSecretariat_OrganizationUnit(string FieldName, int fldID, int OrganId, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteSecretariat_OrganizationUnit", new object[] {
                        FieldName,
                        fldID,
                        OrganId,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSecretariat_OrganizationUnitAsync(string FieldName, int fldID, int OrganId, string Username, string Password, string IP) {
            this.DeleteSecretariat_OrganizationUnitAsync(FieldName, fldID, OrganId, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteSecretariat_OrganizationUnitAsync(string FieldName, int fldID, int OrganId, string Username, string Password, string IP, object userState) {
            if ((this.DeleteSecretariat_OrganizationUnitOperationCompleted == null)) {
                this.DeleteSecretariat_OrganizationUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSecretariat_OrganizationUnitOperationCompleted);
            }
            this.InvokeAsync("DeleteSecretariat_OrganizationUnit", new object[] {
                        FieldName,
                        fldID,
                        OrganId,
                        Username,
                        Password,
                        IP}, this.DeleteSecretariat_OrganizationUnitOperationCompleted, userState);
        }
        
        private void OnDeleteSecretariat_OrganizationUnitOperationCompleted(object arg) {
            if ((this.DeleteSecretariat_OrganizationUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSecretariat_OrganizationUnitCompleted(this, new DeleteSecretariat_OrganizationUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSubstituteDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Substitute GetSubstituteDetail(int Id, int OrganId, string fldIP, out ClsError Error) {
            object[] results = this.Invoke("GetSubstituteDetail", new object[] {
                        Id,
                        OrganId,
                        fldIP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Substitute)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubstituteDetailAsync(int Id, int OrganId, string fldIP) {
            this.GetSubstituteDetailAsync(Id, OrganId, fldIP, null);
        }
        
        /// <remarks/>
        public void GetSubstituteDetailAsync(int Id, int OrganId, string fldIP, object userState) {
            if ((this.GetSubstituteDetailOperationCompleted == null)) {
                this.GetSubstituteDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubstituteDetailOperationCompleted);
            }
            this.InvokeAsync("GetSubstituteDetail", new object[] {
                        Id,
                        OrganId,
                        fldIP}, this.GetSubstituteDetailOperationCompleted, userState);
        }
        
        private void OnGetSubstituteDetailOperationCompleted(object arg) {
            if ((this.GetSubstituteDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubstituteDetailCompleted(this, new GetSubstituteDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSubstituteWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Substitute[] GetSubstituteWithFilter(string fieldname, string Value, int fldOrganId, int h, string fldIP, out ClsError Error) {
            object[] results = this.Invoke("GetSubstituteWithFilter", new object[] {
                        fieldname,
                        Value,
                        fldOrganId,
                        h,
                        fldIP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Substitute[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSubstituteWithFilterAsync(string fieldname, string Value, int fldOrganId, int h, string fldIP) {
            this.GetSubstituteWithFilterAsync(fieldname, Value, fldOrganId, h, fldIP, null);
        }
        
        /// <remarks/>
        public void GetSubstituteWithFilterAsync(string fieldname, string Value, int fldOrganId, int h, string fldIP, object userState) {
            if ((this.GetSubstituteWithFilterOperationCompleted == null)) {
                this.GetSubstituteWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubstituteWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetSubstituteWithFilter", new object[] {
                        fieldname,
                        Value,
                        fldOrganId,
                        h,
                        fldIP}, this.GetSubstituteWithFilterOperationCompleted, userState);
        }
        
        private void OnGetSubstituteWithFilterOperationCompleted(object arg) {
            if ((this.GetSubstituteWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubstituteWithFilterCompleted(this, new GetSubstituteWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertSubstitute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSubstitute(int fldSenderComisionID, int fldReceiverComisionID, string fldStartDate, string fldEndDate, string fldStartTime, string fldEndTime, bool fldIsSigner, bool fldShowReceiverName, string fldDesc, string fldIP, int fldOrganId, string Username, string Password, out ClsError Error) {
            object[] results = this.Invoke("InsertSubstitute", new object[] {
                        fldSenderComisionID,
                        fldReceiverComisionID,
                        fldStartDate,
                        fldEndDate,
                        fldStartTime,
                        fldEndTime,
                        fldIsSigner,
                        fldShowReceiverName,
                        fldDesc,
                        fldIP,
                        fldOrganId,
                        Username,
                        Password});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSubstituteAsync(int fldSenderComisionID, int fldReceiverComisionID, string fldStartDate, string fldEndDate, string fldStartTime, string fldEndTime, bool fldIsSigner, bool fldShowReceiverName, string fldDesc, string fldIP, int fldOrganId, string Username, string Password) {
            this.InsertSubstituteAsync(fldSenderComisionID, fldReceiverComisionID, fldStartDate, fldEndDate, fldStartTime, fldEndTime, fldIsSigner, fldShowReceiverName, fldDesc, fldIP, fldOrganId, Username, Password, null);
        }
        
        /// <remarks/>
        public void InsertSubstituteAsync(int fldSenderComisionID, int fldReceiverComisionID, string fldStartDate, string fldEndDate, string fldStartTime, string fldEndTime, bool fldIsSigner, bool fldShowReceiverName, string fldDesc, string fldIP, int fldOrganId, string Username, string Password, object userState) {
            if ((this.InsertSubstituteOperationCompleted == null)) {
                this.InsertSubstituteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSubstituteOperationCompleted);
            }
            this.InvokeAsync("InsertSubstitute", new object[] {
                        fldSenderComisionID,
                        fldReceiverComisionID,
                        fldStartDate,
                        fldEndDate,
                        fldStartTime,
                        fldEndTime,
                        fldIsSigner,
                        fldShowReceiverName,
                        fldDesc,
                        fldIP,
                        fldOrganId,
                        Username,
                        Password}, this.InsertSubstituteOperationCompleted, userState);
        }
        
        private void OnInsertSubstituteOperationCompleted(object arg) {
            if ((this.InsertSubstituteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSubstituteCompleted(this, new InsertSubstituteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateSubstitute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSubstitute(int fldID, int fldSenderComisionID, int fldReceiverComisionID, string fldStartDate, string fldEndDate, string fldStartTime, string fldEndTime, bool fldIsSigner, bool fldShowReceiverName, string fldDesc, string fldIP, int fldOrganId, string Username, string Password, out ClsError Error) {
            object[] results = this.Invoke("UpdateSubstitute", new object[] {
                        fldID,
                        fldSenderComisionID,
                        fldReceiverComisionID,
                        fldStartDate,
                        fldEndDate,
                        fldStartTime,
                        fldEndTime,
                        fldIsSigner,
                        fldShowReceiverName,
                        fldDesc,
                        fldIP,
                        fldOrganId,
                        Username,
                        Password});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSubstituteAsync(int fldID, int fldSenderComisionID, int fldReceiverComisionID, string fldStartDate, string fldEndDate, string fldStartTime, string fldEndTime, bool fldIsSigner, bool fldShowReceiverName, string fldDesc, string fldIP, int fldOrganId, string Username, string Password) {
            this.UpdateSubstituteAsync(fldID, fldSenderComisionID, fldReceiverComisionID, fldStartDate, fldEndDate, fldStartTime, fldEndTime, fldIsSigner, fldShowReceiverName, fldDesc, fldIP, fldOrganId, Username, Password, null);
        }
        
        /// <remarks/>
        public void UpdateSubstituteAsync(int fldID, int fldSenderComisionID, int fldReceiverComisionID, string fldStartDate, string fldEndDate, string fldStartTime, string fldEndTime, bool fldIsSigner, bool fldShowReceiverName, string fldDesc, string fldIP, int fldOrganId, string Username, string Password, object userState) {
            if ((this.UpdateSubstituteOperationCompleted == null)) {
                this.UpdateSubstituteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSubstituteOperationCompleted);
            }
            this.InvokeAsync("UpdateSubstitute", new object[] {
                        fldID,
                        fldSenderComisionID,
                        fldReceiverComisionID,
                        fldStartDate,
                        fldEndDate,
                        fldStartTime,
                        fldEndTime,
                        fldIsSigner,
                        fldShowReceiverName,
                        fldDesc,
                        fldIP,
                        fldOrganId,
                        Username,
                        Password}, this.UpdateSubstituteOperationCompleted, userState);
        }
        
        private void OnUpdateSubstituteOperationCompleted(object arg) {
            if ((this.UpdateSubstituteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSubstituteCompleted(this, new UpdateSubstituteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteSubstitute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSubstitute(int fldID, string Username, string Password, int OrganId, string fldIP, out ClsError Error) {
            object[] results = this.Invoke("DeleteSubstitute", new object[] {
                        fldID,
                        Username,
                        Password,
                        OrganId,
                        fldIP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSubstituteAsync(int fldID, string Username, string Password, int OrganId, string fldIP) {
            this.DeleteSubstituteAsync(fldID, Username, Password, OrganId, fldIP, null);
        }
        
        /// <remarks/>
        public void DeleteSubstituteAsync(int fldID, string Username, string Password, int OrganId, string fldIP, object userState) {
            if ((this.DeleteSubstituteOperationCompleted == null)) {
                this.DeleteSubstituteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSubstituteOperationCompleted);
            }
            this.InvokeAsync("DeleteSubstitute", new object[] {
                        fldID,
                        Username,
                        Password,
                        OrganId,
                        fldIP}, this.DeleteSubstituteOperationCompleted, userState);
        }
        
        private void OnDeleteSubstituteOperationCompleted(object arg) {
            if ((this.DeleteSubstituteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSubstituteCompleted(this, new DeleteSubstituteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetMergeFieldTypesWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MergeFieldTypes[] GetMergeFieldTypesWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMergeFieldTypesWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MergeFieldTypes[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMergeFieldTypesWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetMergeFieldTypesWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetMergeFieldTypesWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetMergeFieldTypesWithFilterOperationCompleted == null)) {
                this.GetMergeFieldTypesWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMergeFieldTypesWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetMergeFieldTypesWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetMergeFieldTypesWithFilterOperationCompleted, userState);
        }
        
        private void OnGetMergeFieldTypesWithFilterOperationCompleted(object arg) {
            if ((this.GetMergeFieldTypesWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMergeFieldTypesWithFilterCompleted(this, new GetMergeFieldTypesWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterTemplateDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterTemplate GetLetterTemplateDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterTemplateDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterTemplate)(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterTemplateDetailAsync(int Id, int OrganId, string IP) {
            this.GetLetterTemplateDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterTemplateDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetLetterTemplateDetailOperationCompleted == null)) {
                this.GetLetterTemplateDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterTemplateDetailOperationCompleted);
            }
            this.InvokeAsync("GetLetterTemplateDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetLetterTemplateDetailOperationCompleted, userState);
        }
        
        private void OnGetLetterTemplateDetailOperationCompleted(object arg) {
            if ((this.GetLetterTemplateDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterTemplateDetailCompleted(this, new GetLetterTemplateDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterTemplateWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterTemplate[] GetLetterTemplateWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterTemplateWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterTemplateWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetLetterTemplateWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterTemplateWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetLetterTemplateWithFilterOperationCompleted == null)) {
                this.GetLetterTemplateWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterTemplateWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetLetterTemplateWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetLetterTemplateWithFilterOperationCompleted, userState);
        }
        
        private void OnGetLetterTemplateWithFilterOperationCompleted(object arg) {
            if ((this.GetLetterTemplateWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterTemplateWithFilterCompleted(this, new GetLetterTemplateWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertLetterTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertLetterTemplate(string fldName, bool fldIsBackGround, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldImage, string fldPasvand, string fldMergeFieldId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] LetterFile, string LetterPasvand, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertLetterTemplate", new object[] {
                        fldName,
                        fldIsBackGround,
                        fldImage,
                        fldPasvand,
                        fldMergeFieldId,
                        LetterFile,
                        LetterPasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLetterTemplateAsync(string fldName, bool fldIsBackGround, byte[] fldImage, string fldPasvand, string fldMergeFieldId, byte[] LetterFile, string LetterPasvand, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertLetterTemplateAsync(fldName, fldIsBackGround, fldImage, fldPasvand, fldMergeFieldId, LetterFile, LetterPasvand, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertLetterTemplateAsync(string fldName, bool fldIsBackGround, byte[] fldImage, string fldPasvand, string fldMergeFieldId, byte[] LetterFile, string LetterPasvand, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertLetterTemplateOperationCompleted == null)) {
                this.InsertLetterTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLetterTemplateOperationCompleted);
            }
            this.InvokeAsync("InsertLetterTemplate", new object[] {
                        fldName,
                        fldIsBackGround,
                        fldImage,
                        fldPasvand,
                        fldMergeFieldId,
                        LetterFile,
                        LetterPasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertLetterTemplateOperationCompleted, userState);
        }
        
        private void OnInsertLetterTemplateOperationCompleted(object arg) {
            if ((this.InsertLetterTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLetterTemplateCompleted(this, new InsertLetterTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetterTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetterTemplate(
                    int Id, 
                    string fldName, 
                    bool fldIsBackGround, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldFileId, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldImage, 
                    string fldPasvand, 
                    string fldMergeFieldId, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] LetterFile, 
                    string LetterPasvand, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> LetterFileId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateLetterTemplate", new object[] {
                        Id,
                        fldName,
                        fldIsBackGround,
                        fldFileId,
                        fldImage,
                        fldPasvand,
                        fldMergeFieldId,
                        LetterFile,
                        LetterPasvand,
                        LetterFileId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterTemplateAsync(int Id, string fldName, bool fldIsBackGround, System.Nullable<int> fldFileId, byte[] fldImage, string fldPasvand, string fldMergeFieldId, byte[] LetterFile, string LetterPasvand, System.Nullable<int> LetterFileId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateLetterTemplateAsync(Id, fldName, fldIsBackGround, fldFileId, fldImage, fldPasvand, fldMergeFieldId, LetterFile, LetterPasvand, LetterFileId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterTemplateAsync(
                    int Id, 
                    string fldName, 
                    bool fldIsBackGround, 
                    System.Nullable<int> fldFileId, 
                    byte[] fldImage, 
                    string fldPasvand, 
                    string fldMergeFieldId, 
                    byte[] LetterFile, 
                    string LetterPasvand, 
                    System.Nullable<int> LetterFileId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.UpdateLetterTemplateOperationCompleted == null)) {
                this.UpdateLetterTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterTemplateOperationCompleted);
            }
            this.InvokeAsync("UpdateLetterTemplate", new object[] {
                        Id,
                        fldName,
                        fldIsBackGround,
                        fldFileId,
                        fldImage,
                        fldPasvand,
                        fldMergeFieldId,
                        LetterFile,
                        LetterPasvand,
                        LetterFileId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLetterTemplateOperationCompleted, userState);
        }
        
        private void OnUpdateLetterTemplateOperationCompleted(object arg) {
            if ((this.UpdateLetterTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterTemplateCompleted(this, new UpdateLetterTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterTemplate(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterTemplate", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterTemplateAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteLetterTemplateAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterTemplateAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteLetterTemplateOperationCompleted == null)) {
                this.DeleteLetterTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterTemplateOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterTemplate", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteLetterTemplateOperationCompleted, userState);
        }
        
        private void OnDeleteLetterTemplateOperationCompleted(object arg) {
            if ((this.DeleteLetterTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterTemplateCompleted(this, new DeleteLetterTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetterTemplate_Format", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetterTemplate_Format(int Id, string fldFormat, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateLetterTemplate_Format", new object[] {
                        Id,
                        fldFormat,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterTemplate_FormatAsync(int Id, string fldFormat, string Username, string Password, int OrganId, string IP) {
            this.UpdateLetterTemplate_FormatAsync(Id, fldFormat, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterTemplate_FormatAsync(int Id, string fldFormat, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateLetterTemplate_FormatOperationCompleted == null)) {
                this.UpdateLetterTemplate_FormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterTemplate_FormatOperationCompleted);
            }
            this.InvokeAsync("UpdateLetterTemplate_Format", new object[] {
                        Id,
                        fldFormat,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLetterTemplate_FormatOperationCompleted, userState);
        }
        
        private void OnUpdateLetterTemplate_FormatOperationCompleted(object arg) {
            if ((this.UpdateLetterTemplate_FormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterTemplate_FormatCompleted(this, new UpdateLetterTemplate_FormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetMergeField_LetterTemplateDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MergeField_LetterTemplate GetMergeField_LetterTemplateDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMergeField_LetterTemplateDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MergeField_LetterTemplate)(results[0]));
        }
        
        /// <remarks/>
        public void GetMergeField_LetterTemplateDetailAsync(int Id, int OrganId, string IP) {
            this.GetMergeField_LetterTemplateDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetMergeField_LetterTemplateDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetMergeField_LetterTemplateDetailOperationCompleted == null)) {
                this.GetMergeField_LetterTemplateDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMergeField_LetterTemplateDetailOperationCompleted);
            }
            this.InvokeAsync("GetMergeField_LetterTemplateDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetMergeField_LetterTemplateDetailOperationCompleted, userState);
        }
        
        private void OnGetMergeField_LetterTemplateDetailOperationCompleted(object arg) {
            if ((this.GetMergeField_LetterTemplateDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMergeField_LetterTemplateDetailCompleted(this, new GetMergeField_LetterTemplateDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetMergeField_LetterTemplateWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MergeField_LetterTemplate[] GetMergeField_LetterTemplateWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMergeField_LetterTemplateWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MergeField_LetterTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMergeField_LetterTemplateWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetMergeField_LetterTemplateWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetMergeField_LetterTemplateWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetMergeField_LetterTemplateWithFilterOperationCompleted == null)) {
                this.GetMergeField_LetterTemplateWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMergeField_LetterTemplateWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetMergeField_LetterTemplateWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetMergeField_LetterTemplateWithFilterOperationCompleted, userState);
        }
        
        private void OnGetMergeField_LetterTemplateWithFilterOperationCompleted(object arg) {
            if ((this.GetMergeField_LetterTemplateWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMergeField_LetterTemplateWithFilterCompleted(this, new GetMergeField_LetterTemplateWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertMergeField_LetterTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertMergeField_LetterTemplate(int fldLetterTamplateId, int fldMergeFieldId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertMergeField_LetterTemplate", new object[] {
                        fldLetterTamplateId,
                        fldMergeFieldId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMergeField_LetterTemplateAsync(int fldLetterTamplateId, int fldMergeFieldId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertMergeField_LetterTemplateAsync(fldLetterTamplateId, fldMergeFieldId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertMergeField_LetterTemplateAsync(int fldLetterTamplateId, int fldMergeFieldId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertMergeField_LetterTemplateOperationCompleted == null)) {
                this.InsertMergeField_LetterTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMergeField_LetterTemplateOperationCompleted);
            }
            this.InvokeAsync("InsertMergeField_LetterTemplate", new object[] {
                        fldLetterTamplateId,
                        fldMergeFieldId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertMergeField_LetterTemplateOperationCompleted, userState);
        }
        
        private void OnInsertMergeField_LetterTemplateOperationCompleted(object arg) {
            if ((this.InsertMergeField_LetterTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMergeField_LetterTemplateCompleted(this, new InsertMergeField_LetterTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateMergeField_LetterTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMergeField_LetterTemplate(int Id, int fldLetterTamplateId, int fldMergeFieldId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateMergeField_LetterTemplate", new object[] {
                        Id,
                        fldLetterTamplateId,
                        fldMergeFieldId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMergeField_LetterTemplateAsync(int Id, int fldLetterTamplateId, int fldMergeFieldId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateMergeField_LetterTemplateAsync(Id, fldLetterTamplateId, fldMergeFieldId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateMergeField_LetterTemplateAsync(int Id, int fldLetterTamplateId, int fldMergeFieldId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateMergeField_LetterTemplateOperationCompleted == null)) {
                this.UpdateMergeField_LetterTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMergeField_LetterTemplateOperationCompleted);
            }
            this.InvokeAsync("UpdateMergeField_LetterTemplate", new object[] {
                        Id,
                        fldLetterTamplateId,
                        fldMergeFieldId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateMergeField_LetterTemplateOperationCompleted, userState);
        }
        
        private void OnUpdateMergeField_LetterTemplateOperationCompleted(object arg) {
            if ((this.UpdateMergeField_LetterTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMergeField_LetterTemplateCompleted(this, new UpdateMergeField_LetterTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteMergeField_LetterTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteMergeField_LetterTemplate(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteMergeField_LetterTemplate", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMergeField_LetterTemplateAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteMergeField_LetterTemplateAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteMergeField_LetterTemplateAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteMergeField_LetterTemplateOperationCompleted == null)) {
                this.DeleteMergeField_LetterTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMergeField_LetterTemplateOperationCompleted);
            }
            this.InvokeAsync("DeleteMergeField_LetterTemplate", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteMergeField_LetterTemplateOperationCompleted, userState);
        }
        
        private void OnDeleteMergeField_LetterTemplateOperationCompleted(object arg) {
            if ((this.DeleteMergeField_LetterTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMergeField_LetterTemplateCompleted(this, new DeleteMergeField_LetterTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetReferralRulesDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ReferralRules GetReferralRulesDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetReferralRulesDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ReferralRules)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferralRulesDetailAsync(int Id, int OrganId, string IP) {
            this.GetReferralRulesDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetReferralRulesDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetReferralRulesDetailOperationCompleted == null)) {
                this.GetReferralRulesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferralRulesDetailOperationCompleted);
            }
            this.InvokeAsync("GetReferralRulesDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetReferralRulesDetailOperationCompleted, userState);
        }
        
        private void OnGetReferralRulesDetailOperationCompleted(object arg) {
            if ((this.GetReferralRulesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferralRulesDetailCompleted(this, new GetReferralRulesDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetReferralRulesWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ReferralRules[] GetReferralRulesWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetReferralRulesWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ReferralRules[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferralRulesWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetReferralRulesWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetReferralRulesWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetReferralRulesWithFilterOperationCompleted == null)) {
                this.GetReferralRulesWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferralRulesWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetReferralRulesWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetReferralRulesWithFilterOperationCompleted, userState);
        }
        
        private void OnGetReferralRulesWithFilterOperationCompleted(object arg) {
            if ((this.GetReferralRulesWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferralRulesWithFilterCompleted(this, new GetReferralRulesWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertReferralRules", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertReferralRules(int fldPostErjaDahandeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPostErjaGirandeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldChartEjraeeGirandeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertReferralRules", new object[] {
                        fldPostErjaDahandeId,
                        fldPostErjaGirandeId,
                        fldChartEjraeeGirandeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertReferralRulesAsync(int fldPostErjaDahandeId, System.Nullable<int> fldPostErjaGirandeId, System.Nullable<int> fldChartEjraeeGirandeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertReferralRulesAsync(fldPostErjaDahandeId, fldPostErjaGirandeId, fldChartEjraeeGirandeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertReferralRulesAsync(int fldPostErjaDahandeId, System.Nullable<int> fldPostErjaGirandeId, System.Nullable<int> fldChartEjraeeGirandeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertReferralRulesOperationCompleted == null)) {
                this.InsertReferralRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReferralRulesOperationCompleted);
            }
            this.InvokeAsync("InsertReferralRules", new object[] {
                        fldPostErjaDahandeId,
                        fldPostErjaGirandeId,
                        fldChartEjraeeGirandeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertReferralRulesOperationCompleted, userState);
        }
        
        private void OnInsertReferralRulesOperationCompleted(object arg) {
            if ((this.InsertReferralRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReferralRulesCompleted(this, new InsertReferralRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateReferralRules", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateReferralRules(int Id, int fldPostErjaDahandeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPostErjaGirandeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldChartEjraeeGirandeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateReferralRules", new object[] {
                        Id,
                        fldPostErjaDahandeId,
                        fldPostErjaGirandeId,
                        fldChartEjraeeGirandeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReferralRulesAsync(int Id, int fldPostErjaDahandeId, System.Nullable<int> fldPostErjaGirandeId, System.Nullable<int> fldChartEjraeeGirandeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateReferralRulesAsync(Id, fldPostErjaDahandeId, fldPostErjaGirandeId, fldChartEjraeeGirandeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateReferralRulesAsync(int Id, int fldPostErjaDahandeId, System.Nullable<int> fldPostErjaGirandeId, System.Nullable<int> fldChartEjraeeGirandeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateReferralRulesOperationCompleted == null)) {
                this.UpdateReferralRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReferralRulesOperationCompleted);
            }
            this.InvokeAsync("UpdateReferralRules", new object[] {
                        Id,
                        fldPostErjaDahandeId,
                        fldPostErjaGirandeId,
                        fldChartEjraeeGirandeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateReferralRulesOperationCompleted, userState);
        }
        
        private void OnUpdateReferralRulesOperationCompleted(object arg) {
            if ((this.UpdateReferralRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReferralRulesCompleted(this, new UpdateReferralRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteReferralRules", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteReferralRules(int fldPostErjaDahandeId, int OrganErjaGirande, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteReferralRules", new object[] {
                        fldPostErjaDahandeId,
                        OrganErjaGirande,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReferralRulesAsync(int fldPostErjaDahandeId, int OrganErjaGirande, string Username, string Password, int OrganId, string IP) {
            this.DeleteReferralRulesAsync(fldPostErjaDahandeId, OrganErjaGirande, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteReferralRulesAsync(int fldPostErjaDahandeId, int OrganErjaGirande, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteReferralRulesOperationCompleted == null)) {
                this.DeleteReferralRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReferralRulesOperationCompleted);
            }
            this.InvokeAsync("DeleteReferralRules", new object[] {
                        fldPostErjaDahandeId,
                        OrganErjaGirande,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteReferralRulesOperationCompleted, userState);
        }
        
        private void OnDeleteReferralRulesOperationCompleted(object arg) {
            if ((this.DeleteReferralRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReferralRulesCompleted(this, new DeleteReferralRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetMessageDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Message GetMessageDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMessageDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Message)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageDetailAsync(int Id, int OrganId, string IP) {
            this.GetMessageDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetMessageDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetMessageDetailOperationCompleted == null)) {
                this.GetMessageDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageDetailOperationCompleted);
            }
            this.InvokeAsync("GetMessageDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetMessageDetailOperationCompleted, userState);
        }
        
        private void OnGetMessageDetailOperationCompleted(object arg) {
            if ((this.GetMessageDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageDetailCompleted(this, new GetMessageDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetMessageWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Message[] GetMessageWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMessageWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Message[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetMessageWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetMessageWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetMessageWithFilterOperationCompleted == null)) {
                this.GetMessageWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetMessageWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetMessageWithFilterOperationCompleted, userState);
        }
        
        private void OnGetMessageWithFilterOperationCompleted(object arg) {
            if ((this.GetMessageWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageWithFilterCompleted(this, new GetMessageWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertMessage(int fldCommisionId, string fldTitle, string fldMatn, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertMessage", new object[] {
                        fldCommisionId,
                        fldTitle,
                        fldMatn,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMessageAsync(int fldCommisionId, string fldTitle, string fldMatn, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertMessageAsync(fldCommisionId, fldTitle, fldMatn, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertMessageAsync(int fldCommisionId, string fldTitle, string fldMatn, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertMessageOperationCompleted == null)) {
                this.InsertMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMessageOperationCompleted);
            }
            this.InvokeAsync("InsertMessage", new object[] {
                        fldCommisionId,
                        fldTitle,
                        fldMatn,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertMessageOperationCompleted, userState);
        }
        
        private void OnInsertMessageOperationCompleted(object arg) {
            if ((this.InsertMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMessageCompleted(this, new InsertMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMessage(int Id, int fldCommisionId, string fldTitle, string fldMatn, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateMessage", new object[] {
                        Id,
                        fldCommisionId,
                        fldTitle,
                        fldMatn,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMessageAsync(int Id, int fldCommisionId, string fldTitle, string fldMatn, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateMessageAsync(Id, fldCommisionId, fldTitle, fldMatn, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateMessageAsync(int Id, int fldCommisionId, string fldTitle, string fldMatn, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateMessageOperationCompleted == null)) {
                this.UpdateMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMessageOperationCompleted);
            }
            this.InvokeAsync("UpdateMessage", new object[] {
                        Id,
                        fldCommisionId,
                        fldTitle,
                        fldMatn,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateMessageOperationCompleted, userState);
        }
        
        private void OnUpdateMessageOperationCompleted(object arg) {
            if ((this.UpdateMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMessageCompleted(this, new UpdateMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteMessage(int Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteMessage", new object[] {
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(int Id, string Username, string Password, string IP) {
            this.DeleteMessageAsync(Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(int Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteMessageOperationCompleted == null)) {
                this.DeleteMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessageOperationCompleted);
            }
            this.InvokeAsync("DeleteMessage", new object[] {
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteMessageOperationCompleted, userState);
        }
        
        private void OnDeleteMessageOperationCompleted(object arg) {
            if ((this.DeleteMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessageCompleted(this, new DeleteMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetSavedMessageWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_SavedMessage[] GetSavedMessageWithFilter(string FieldName, string Start, string End, string BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSavedMessageWithFilter", new object[] {
                        FieldName,
                        Start,
                        End,
                        BoxId,
                        TabaghebandiId,
                        Value,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_SavedMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSavedMessageWithFilterAsync(string FieldName, string Start, string End, string BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP) {
            this.GetSavedMessageWithFilterAsync(FieldName, Start, End, BoxId, TabaghebandiId, Value, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetSavedMessageWithFilterAsync(string FieldName, string Start, string End, string BoxId, int TabaghebandiId, string Value, int OrganId, int Top, string IP, object userState) {
            if ((this.GetSavedMessageWithFilterOperationCompleted == null)) {
                this.GetSavedMessageWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSavedMessageWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetSavedMessageWithFilter", new object[] {
                        FieldName,
                        Start,
                        End,
                        BoxId,
                        TabaghebandiId,
                        Value,
                        OrganId,
                        Top,
                        IP}, this.GetSavedMessageWithFilterOperationCompleted, userState);
        }
        
        private void OnGetSavedMessageWithFilterOperationCompleted(object arg) {
            if ((this.GetSavedMessageWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSavedMessageWithFilterCompleted(this, new GetSavedMessageWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetMessageAttachmentDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MessageAttachment GetMessageAttachmentDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMessageAttachmentDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MessageAttachment)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageAttachmentDetailAsync(int Id, int OrganId, string IP) {
            this.GetMessageAttachmentDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetMessageAttachmentDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetMessageAttachmentDetailOperationCompleted == null)) {
                this.GetMessageAttachmentDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageAttachmentDetailOperationCompleted);
            }
            this.InvokeAsync("GetMessageAttachmentDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetMessageAttachmentDetailOperationCompleted, userState);
        }
        
        private void OnGetMessageAttachmentDetailOperationCompleted(object arg) {
            if ((this.GetMessageAttachmentDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageAttachmentDetailCompleted(this, new GetMessageAttachmentDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetMessageAttachmentWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MessageAttachment[] GetMessageAttachmentWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMessageAttachmentWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MessageAttachment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageAttachmentWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetMessageAttachmentWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetMessageAttachmentWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetMessageAttachmentWithFilterOperationCompleted == null)) {
                this.GetMessageAttachmentWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageAttachmentWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetMessageAttachmentWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetMessageAttachmentWithFilterOperationCompleted, userState);
        }
        
        private void OnGetMessageAttachmentWithFilterOperationCompleted(object arg) {
            if ((this.GetMessageAttachmentWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageAttachmentWithFilterCompleted(this, new GetMessageAttachmentWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertMessageAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertMessageAttachment(string fldTitle, int fldMessageId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldImage, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertMessageAttachment", new object[] {
                        fldTitle,
                        fldMessageId,
                        fldImage,
                        Pasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMessageAttachmentAsync(string fldTitle, int fldMessageId, byte[] fldImage, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertMessageAttachmentAsync(fldTitle, fldMessageId, fldImage, Pasvand, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertMessageAttachmentAsync(string fldTitle, int fldMessageId, byte[] fldImage, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertMessageAttachmentOperationCompleted == null)) {
                this.InsertMessageAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMessageAttachmentOperationCompleted);
            }
            this.InvokeAsync("InsertMessageAttachment", new object[] {
                        fldTitle,
                        fldMessageId,
                        fldImage,
                        Pasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertMessageAttachmentOperationCompleted, userState);
        }
        
        private void OnInsertMessageAttachmentOperationCompleted(object arg) {
            if ((this.InsertMessageAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMessageAttachmentCompleted(this, new InsertMessageAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateMessageAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMessageAttachment(int Id, string fldTitle, int fldMessageId, int fldFileId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldImage, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateMessageAttachment", new object[] {
                        Id,
                        fldTitle,
                        fldMessageId,
                        fldFileId,
                        fldImage,
                        Pasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMessageAttachmentAsync(int Id, string fldTitle, int fldMessageId, int fldFileId, byte[] fldImage, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateMessageAttachmentAsync(Id, fldTitle, fldMessageId, fldFileId, fldImage, Pasvand, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateMessageAttachmentAsync(int Id, string fldTitle, int fldMessageId, int fldFileId, byte[] fldImage, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateMessageAttachmentOperationCompleted == null)) {
                this.UpdateMessageAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMessageAttachmentOperationCompleted);
            }
            this.InvokeAsync("UpdateMessageAttachment", new object[] {
                        Id,
                        fldTitle,
                        fldMessageId,
                        fldFileId,
                        fldImage,
                        Pasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateMessageAttachmentOperationCompleted, userState);
        }
        
        private void OnUpdateMessageAttachmentOperationCompleted(object arg) {
            if ((this.UpdateMessageAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMessageAttachmentCompleted(this, new UpdateMessageAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteMessageAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteMessageAttachment(int Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteMessageAttachment", new object[] {
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMessageAttachmentAsync(int Id, string Username, string Password, string IP) {
            this.DeleteMessageAttachmentAsync(Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteMessageAttachmentAsync(int Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteMessageAttachmentOperationCompleted == null)) {
                this.DeleteMessageAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessageAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteMessageAttachment", new object[] {
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteMessageAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteMessageAttachmentOperationCompleted(object arg) {
            if ((this.DeleteMessageAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessageAttachmentCompleted(this, new DeleteMessageAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterFileMojazDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterFileMojaz GetLetterFileMojazDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterFileMojazDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterFileMojaz)(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterFileMojazDetailAsync(int Id, int OrganId, string IP) {
            this.GetLetterFileMojazDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterFileMojazDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetLetterFileMojazDetailOperationCompleted == null)) {
                this.GetLetterFileMojazDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterFileMojazDetailOperationCompleted);
            }
            this.InvokeAsync("GetLetterFileMojazDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetLetterFileMojazDetailOperationCompleted, userState);
        }
        
        private void OnGetLetterFileMojazDetailOperationCompleted(object arg) {
            if ((this.GetLetterFileMojazDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterFileMojazDetailCompleted(this, new GetLetterFileMojazDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetLetterFileMojazWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_LetterFileMojaz[] GetLetterFileMojazWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetLetterFileMojazWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_LetterFileMojaz[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLetterFileMojazWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetLetterFileMojazWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetLetterFileMojazWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetLetterFileMojazWithFilterOperationCompleted == null)) {
                this.GetLetterFileMojazWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLetterFileMojazWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetLetterFileMojazWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetLetterFileMojazWithFilterOperationCompleted, userState);
        }
        
        private void OnGetLetterFileMojazWithFilterOperationCompleted(object arg) {
            if ((this.GetLetterFileMojazWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLetterFileMojazWithFilterCompleted(this, new GetLetterFileMojazWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertLetterFileMojaz", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertLetterFileMojaz(byte fldFormatFileId, byte fldType, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertLetterFileMojaz", new object[] {
                        fldFormatFileId,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLetterFileMojazAsync(byte fldFormatFileId, byte fldType, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertLetterFileMojazAsync(fldFormatFileId, fldType, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertLetterFileMojazAsync(byte fldFormatFileId, byte fldType, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertLetterFileMojazOperationCompleted == null)) {
                this.InsertLetterFileMojazOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLetterFileMojazOperationCompleted);
            }
            this.InvokeAsync("InsertLetterFileMojaz", new object[] {
                        fldFormatFileId,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertLetterFileMojazOperationCompleted, userState);
        }
        
        private void OnInsertLetterFileMojazOperationCompleted(object arg) {
            if ((this.InsertLetterFileMojazCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLetterFileMojazCompleted(this, new InsertLetterFileMojazCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateLetterFileMojaz", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLetterFileMojaz(int Id, byte fldFormatFileId, byte fldType, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateLetterFileMojaz", new object[] {
                        Id,
                        fldFormatFileId,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLetterFileMojazAsync(int Id, byte fldFormatFileId, byte fldType, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateLetterFileMojazAsync(Id, fldFormatFileId, fldType, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateLetterFileMojazAsync(int Id, byte fldFormatFileId, byte fldType, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateLetterFileMojazOperationCompleted == null)) {
                this.UpdateLetterFileMojazOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLetterFileMojazOperationCompleted);
            }
            this.InvokeAsync("UpdateLetterFileMojaz", new object[] {
                        Id,
                        fldFormatFileId,
                        fldType,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateLetterFileMojazOperationCompleted, userState);
        }
        
        private void OnUpdateLetterFileMojazOperationCompleted(object arg) {
            if ((this.UpdateLetterFileMojazCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLetterFileMojazCompleted(this, new UpdateLetterFileMojazCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteLetterFileMojaz", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLetterFileMojaz(int Id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteLetterFileMojaz", new object[] {
                        Id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLetterFileMojazAsync(int Id, string Username, string Password, int OrganId, string IP) {
            this.DeleteLetterFileMojazAsync(Id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteLetterFileMojazAsync(int Id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteLetterFileMojazOperationCompleted == null)) {
                this.DeleteLetterFileMojazOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLetterFileMojazOperationCompleted);
            }
            this.InvokeAsync("DeleteLetterFileMojaz", new object[] {
                        Id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteLetterFileMojazOperationCompleted, userState);
        }
        
        private void OnDeleteLetterFileMojazOperationCompleted(object arg) {
            if ((this.DeleteLetterFileMojazCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLetterFileMojazCompleted(this, new DeleteLetterFileMojazCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetBoxDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Box GetBoxDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBoxDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Box)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxDetailAsync(int Id, int OrganId, string IP) {
            this.GetBoxDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetBoxDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetBoxDetailOperationCompleted == null)) {
                this.GetBoxDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxDetailOperationCompleted);
            }
            this.InvokeAsync("GetBoxDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetBoxDetailOperationCompleted, userState);
        }
        
        private void OnGetBoxDetailOperationCompleted(object arg) {
            if ((this.GetBoxDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxDetailCompleted(this, new GetBoxDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetBoxWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Box[] GetBoxWithFilter(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBoxWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Box[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP) {
            this.GetBoxWithFilterAsync(FieldName, FilterValue, FilterValue2, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetBoxWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP, object userState) {
            if ((this.GetBoxWithFilterOperationCompleted == null)) {
                this.GetBoxWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetBoxWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        OrganId,
                        Top,
                        IP}, this.GetBoxWithFilterOperationCompleted, userState);
        }
        
        private void OnGetBoxWithFilterOperationCompleted(object arg) {
            if ((this.GetBoxWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxWithFilterCompleted(this, new GetBoxWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertBox(string fldName, int fldComisionID, int fldBoxTypeID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertBox", new object[] {
                        fldName,
                        fldComisionID,
                        fldBoxTypeID,
                        fldPID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBoxAsync(string fldName, int fldComisionID, int fldBoxTypeID, System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertBoxAsync(fldName, fldComisionID, fldBoxTypeID, fldPID, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertBoxAsync(string fldName, int fldComisionID, int fldBoxTypeID, System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertBoxOperationCompleted == null)) {
                this.InsertBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBoxOperationCompleted);
            }
            this.InvokeAsync("InsertBox", new object[] {
                        fldName,
                        fldComisionID,
                        fldBoxTypeID,
                        fldPID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertBoxOperationCompleted, userState);
        }
        
        private void OnInsertBoxOperationCompleted(object arg) {
            if ((this.InsertBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBoxCompleted(this, new InsertBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateBox(int Id, string fldName, int fldComisionID, int fldBoxTypeID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateBox", new object[] {
                        Id,
                        fldName,
                        fldComisionID,
                        fldBoxTypeID,
                        fldPID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBoxAsync(int Id, string fldName, int fldComisionID, int fldBoxTypeID, System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateBoxAsync(Id, fldName, fldComisionID, fldBoxTypeID, fldPID, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateBoxAsync(int Id, string fldName, int fldComisionID, int fldBoxTypeID, System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateBoxOperationCompleted == null)) {
                this.UpdateBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBoxOperationCompleted);
            }
            this.InvokeAsync("UpdateBox", new object[] {
                        Id,
                        fldName,
                        fldComisionID,
                        fldBoxTypeID,
                        fldPID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateBoxOperationCompleted, userState);
        }
        
        private void OnUpdateBoxOperationCompleted(object arg) {
            if ((this.UpdateBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBoxCompleted(this, new UpdateBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/DeleteBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteBox(int Id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteBox", new object[] {
                        Id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBoxAsync(int Id, string Username, string Password, string IP) {
            this.DeleteBoxAsync(Id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteBoxAsync(int Id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteBoxOperationCompleted == null)) {
                this.DeleteBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBoxOperationCompleted);
            }
            this.InvokeAsync("DeleteBox", new object[] {
                        Id,
                        Username,
                        Password,
                        IP}, this.DeleteBoxOperationCompleted, userState);
        }
        
        private void OnDeleteBoxOperationCompleted(object arg) {
            if ((this.DeleteBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBoxCompleted(this, new DeleteBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetBoxTypeId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BoxType[] GetBoxTypeId(int NodeId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBoxTypeId", new object[] {
                        NodeId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BoxType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxTypeIdAsync(int NodeId, string IP) {
            this.GetBoxTypeIdAsync(NodeId, IP, null);
        }
        
        /// <remarks/>
        public void GetBoxTypeIdAsync(int NodeId, string IP, object userState) {
            if ((this.GetBoxTypeIdOperationCompleted == null)) {
                this.GetBoxTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxTypeIdOperationCompleted);
            }
            this.InvokeAsync("GetBoxTypeId", new object[] {
                        NodeId,
                        IP}, this.GetBoxTypeIdOperationCompleted, userState);
        }
        
        private void OnGetBoxTypeIdOperationCompleted(object arg) {
            if ((this.GetBoxTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxTypeIdCompleted(this, new GetBoxTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetBoxTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BoxType[] GetBoxTypeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBoxTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BoxType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetBoxTypeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetBoxTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetBoxTypeWithFilterOperationCompleted == null)) {
                this.GetBoxTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetBoxTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetBoxTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetBoxTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetBoxTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxTypeWithFilterCompleted(this, new GetBoxTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetTabagheBandiDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TabagheBandi GetTabagheBandiDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTabagheBandiDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TabagheBandi)(results[0]));
        }
        
        /// <remarks/>
        public void GetTabagheBandiDetailAsync(int Id, int OrganId, string IP) {
            this.GetTabagheBandiDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetTabagheBandiDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetTabagheBandiDetailOperationCompleted == null)) {
                this.GetTabagheBandiDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTabagheBandiDetailOperationCompleted);
            }
            this.InvokeAsync("GetTabagheBandiDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetTabagheBandiDetailOperationCompleted, userState);
        }
        
        private void OnGetTabagheBandiDetailOperationCompleted(object arg) {
            if ((this.GetTabagheBandiDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTabagheBandiDetailCompleted(this, new GetTabagheBandiDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/GetTabagheBandiWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TabagheBandi[] GetTabagheBandiWithFilter(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTabagheBandiWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TabagheBandi[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTabagheBandiWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP) {
            this.GetTabagheBandiWithFilterAsync(FieldName, FilterValue, FilterValue2, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetTabagheBandiWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int OrganId, int Top, string IP, object userState) {
            if ((this.GetTabagheBandiWithFilterOperationCompleted == null)) {
                this.GetTabagheBandiWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTabagheBandiWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetTabagheBandiWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        OrganId,
                        Top,
                        IP}, this.GetTabagheBandiWithFilterOperationCompleted, userState);
        }
        
        private void OnGetTabagheBandiWithFilterOperationCompleted(object arg) {
            if ((this.GetTabagheBandiWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTabagheBandiWithFilterCompleted(this, new GetTabagheBandiWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/InsertTabagheBandi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertTabagheBandi(string fldName, int fldComisionID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertTabagheBandi", new object[] {
                        fldName,
                        fldComisionID,
                        fldPID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTabagheBandiAsync(string fldName, int fldComisionID, System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertTabagheBandiAsync(fldName, fldComisionID, fldPID, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertTabagheBandiAsync(string fldName, int fldComisionID, System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertTabagheBandiOperationCompleted == null)) {
                this.InsertTabagheBandiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTabagheBandiOperationCompleted);
            }
            this.InvokeAsync("InsertTabagheBandi", new object[] {
                        fldName,
                        fldComisionID,
                        fldPID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertTabagheBandiOperationCompleted, userState);
        }
        
        private void OnInsertTabagheBandiOperationCompleted(object arg) {
            if ((this.InsertTabagheBandiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTabagheBandiCompleted(this, new InsertTabagheBandiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAutomationService/UpdateTabagheBandi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateTabagheBandi(int Id, string fldName, int fldComisionID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateTabagheBandi", new object[] {
                        Id,
                        fldName,
                        fldComisionID,
                        fldPID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTabagheBandiAsync(int Id, string fldName, int fldComisionID, System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateTabagheBandiAsync(Id, fldName, fldComisionID, fldPID, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateTabagheBandiAsync(int Id, string fldName, int fldComisionID, System.Nullable<int> fldPID, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateTabagheBandiOperationCompleted == null)) {
                this.UpdateTabagheBandiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTabagheBandiOperationCompleted);
            }
            this.InvokeAsync("UpdateTabagheBandi", new object[] {
                        Id,
                        fldName,
                        fldComisionID,
                        fldPID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateTabagheBandiOperationCompleted, userState);
        }
        
        private void OnUpdateTabagheBandiOperationCompleted(object arg) {
            if ((this.UpdateTabagheBandiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTabagheBandiCompleted(this, new UpdateTabagheBandiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ClsError {
        
        private string errorMsgField;
        
        private string msgField;
        
        private bool errorTypeField;
        
        private int outputIdField;
        
        private int outputId2Field;
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
            }
        }
        
        /// <remarks/>
        public bool ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId {
            get {
                return this.outputIdField;
            }
            set {
                this.outputIdField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId2 {
            get {
                return this.outputId2Field;
            }
            set {
                this.outputId2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_TabagheBandi {
        
        private int fldIDField;
        
        private string fldNameField;
        
        private int fldComisionIDField;
        
        private System.Nullable<int> fldPIDField;
        
        private int fldOrganIDField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        private string chidIdField;
        
        private string childNameField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldComisionID {
            get {
                return this.fldComisionIDField;
            }
            set {
                this.fldComisionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganID {
            get {
                return this.fldOrganIDField;
            }
            set {
                this.fldOrganIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string chidId {
            get {
                return this.chidIdField;
            }
            set {
                this.chidIdField = value;
            }
        }
        
        /// <remarks/>
        public string childName {
            get {
                return this.childNameField;
            }
            set {
                this.childNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_BoxType {
        
        private System.Nullable<int> fldIdField;
        
        private string fldNameField;
        
        private System.Nullable<int> fldPIDField;
        
        private System.Nullable<int> fldBoxTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldBoxType {
            get {
                return this.fldBoxTypeField;
            }
            set {
                this.fldBoxTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Box {
        
        private int fldIDField;
        
        private string fldNameField;
        
        private int fldComisionIDField;
        
        private int fldBoxTypeIDField;
        
        private System.Nullable<int> fldPIDField;
        
        private int fldOrganIDField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        private string chidIdField;
        
        private string childNameField;
        
        private string tedadField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldComisionID {
            get {
                return this.fldComisionIDField;
            }
            set {
                this.fldComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldBoxTypeID {
            get {
                return this.fldBoxTypeIDField;
            }
            set {
                this.fldBoxTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganID {
            get {
                return this.fldOrganIDField;
            }
            set {
                this.fldOrganIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string chidId {
            get {
                return this.chidIdField;
            }
            set {
                this.chidIdField = value;
            }
        }
        
        /// <remarks/>
        public string childName {
            get {
                return this.childNameField;
            }
            set {
                this.childNameField = value;
            }
        }
        
        /// <remarks/>
        public string tedad {
            get {
                return this.tedadField;
            }
            set {
                this.tedadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_LetterFileMojaz {
        
        private int fldIdField;
        
        private int fldFormatFileIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        private byte fldTypeField;
        
        private string fldTypeNameField;
        
        private int fldSizeField;
        
        private string fldPassvandField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldFormatFileId {
            get {
                return this.fldFormatFileIdField;
            }
            set {
                this.fldFormatFileIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public byte fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeName {
            get {
                return this.fldTypeNameField;
            }
            set {
                this.fldTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldSize {
            get {
                return this.fldSizeField;
            }
            set {
                this.fldSizeField = value;
            }
        }
        
        /// <remarks/>
        public string fldPassvand {
            get {
                return this.fldPassvandField;
            }
            set {
                this.fldPassvandField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_MessageAttachment {
        
        private int fldIdField;
        
        private int fldMessageIdField;
        
        private int fldFileIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        private string fldTitleField;
        
        private System.Nullable<decimal> fldSizeField;
        
        private string fldPasvandField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldFileId {
            get {
                return this.fldFileIdField;
            }
            set {
                this.fldFileIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> fldSize {
            get {
                return this.fldSizeField;
            }
            set {
                this.fldSizeField = value;
            }
        }
        
        /// <remarks/>
        public string fldPasvand {
            get {
                return this.fldPasvandField;
            }
            set {
                this.fldPasvandField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_SavedMessage {
        
        private string fldTitleMessgeField;
        
        private string fldMatnField;
        
        private string fldtarikhField;
        
        private int fldMessageIdField;
        
        private System.Nullable<int> fldLetterIdField;
        
        private int haveAttachField;
        
        private string fldCommisionField;
        
        private string letterRecieversField;
        
        private string fldDescField;
        
        /// <remarks/>
        public string fldTitleMessge {
            get {
                return this.fldTitleMessgeField;
            }
            set {
                this.fldTitleMessgeField = value;
            }
        }
        
        /// <remarks/>
        public string fldMatn {
            get {
                return this.fldMatnField;
            }
            set {
                this.fldMatnField = value;
            }
        }
        
        /// <remarks/>
        public string fldtarikh {
            get {
                return this.fldtarikhField;
            }
            set {
                this.fldtarikhField = value;
            }
        }
        
        /// <remarks/>
        public int fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        public int HaveAttach {
            get {
                return this.haveAttachField;
            }
            set {
                this.haveAttachField = value;
            }
        }
        
        /// <remarks/>
        public string fldCommision {
            get {
                return this.fldCommisionField;
            }
            set {
                this.fldCommisionField = value;
            }
        }
        
        /// <remarks/>
        public string LetterRecievers {
            get {
                return this.letterRecieversField;
            }
            set {
                this.letterRecieversField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Message {
        
        private int fldIdField;
        
        private int fldCommisionIdField;
        
        private string fldTitleField;
        
        private string fldMatnField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        private string fldTarikhShamsiField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldCommisionId {
            get {
                return this.fldCommisionIdField;
            }
            set {
                this.fldCommisionIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldMatn {
            get {
                return this.fldMatnField;
            }
            set {
                this.fldMatnField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhShamsi {
            get {
                return this.fldTarikhShamsiField;
            }
            set {
                this.fldTarikhShamsiField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ReferralRules {
        
        private int fldIdField;
        
        private int fldPostErjaDahandeIdField;
        
        private System.Nullable<int> fldPostErjaGirandeIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        private System.DateTime fldDateField;
        
        private string fldDescField;
        
        private string fldTitleErjaDahandeField;
        
        private string fldTitleErjaGirandeField;
        
        private System.Nullable<int> fldChartEjraeeGirandeIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldPostErjaDahandeId {
            get {
                return this.fldPostErjaDahandeIdField;
            }
            set {
                this.fldPostErjaDahandeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPostErjaGirandeId {
            get {
                return this.fldPostErjaGirandeIdField;
            }
            set {
                this.fldPostErjaGirandeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleErjaDahande {
            get {
                return this.fldTitleErjaDahandeField;
            }
            set {
                this.fldTitleErjaDahandeField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleErjaGirande {
            get {
                return this.fldTitleErjaGirandeField;
            }
            set {
                this.fldTitleErjaGirandeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldChartEjraeeGirandeId {
            get {
                return this.fldChartEjraeeGirandeIdField;
            }
            set {
                this.fldChartEjraeeGirandeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_MergeField_LetterTemplate {
        
        private int fldIdField;
        
        private int fldLetterTamplateIdField;
        
        private int fldMergeFieldIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        private System.DateTime fldDateField;
        
        private string fldEnNameField;
        
        private string fldFaNameField;
        
        private string fldTitleLetterField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldLetterTamplateId {
            get {
                return this.fldLetterTamplateIdField;
            }
            set {
                this.fldLetterTamplateIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldMergeFieldId {
            get {
                return this.fldMergeFieldIdField;
            }
            set {
                this.fldMergeFieldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldEnName {
            get {
                return this.fldEnNameField;
            }
            set {
                this.fldEnNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldFaName {
            get {
                return this.fldFaNameField;
            }
            set {
                this.fldFaNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleLetter {
            get {
                return this.fldTitleLetterField;
            }
            set {
                this.fldTitleLetterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_LetterTemplate {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private bool fldIsBackGroundField;
        
        private System.Nullable<int> fldFileIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldBackGroundNameField;
        
        private string fldNameMergeFieldField;
        
        private string fldIdMergeFieldField;
        
        private string fldFormatField;
        
        private string fldEnNameMergeFieldField;
        
        private System.Nullable<int> fldLetterFileIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public bool fldIsBackGround {
            get {
                return this.fldIsBackGroundField;
            }
            set {
                this.fldIsBackGroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldFileId {
            get {
                return this.fldFileIdField;
            }
            set {
                this.fldFileIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldBackGroundName {
            get {
                return this.fldBackGroundNameField;
            }
            set {
                this.fldBackGroundNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameMergeField {
            get {
                return this.fldNameMergeFieldField;
            }
            set {
                this.fldNameMergeFieldField = value;
            }
        }
        
        /// <remarks/>
        public string fldIdMergeField {
            get {
                return this.fldIdMergeFieldField;
            }
            set {
                this.fldIdMergeFieldField = value;
            }
        }
        
        /// <remarks/>
        public string fldFormat {
            get {
                return this.fldFormatField;
            }
            set {
                this.fldFormatField = value;
            }
        }
        
        /// <remarks/>
        public string fldEnNameMergeField {
            get {
                return this.fldEnNameMergeFieldField;
            }
            set {
                this.fldEnNameMergeFieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldLetterFileId {
            get {
                return this.fldLetterFileIdField;
            }
            set {
                this.fldLetterFileIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_MergeFieldTypes {
        
        private int fldIdField;
        
        private string fldFaNameField;
        
        private string fldEnNameField;
        
        private int fldOrganIdField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldFaName {
            get {
                return this.fldFaNameField;
            }
            set {
                this.fldFaNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldEnName {
            get {
                return this.fldEnNameField;
            }
            set {
                this.fldEnNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Substitute {
        
        private int fldIDField;
        
        private int fldSenderComisionIDField;
        
        private int fldReceiverComisionIDField;
        
        private string fldStartDateField;
        
        private string fldEndDateField;
        
        private TimeSpan fldStartTimeField;
        
        private TimeSpan fldEndTimeField;
        
        private bool fldIsSignerField;
        
        private bool fldShowReceiverNameField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        private int fldOrganIdField;
        
        private string fldReciverComisionNameField;
        
        private string fldSenderComisionNameField;
        
        private string fldStartTime_SField;
        
        private string fldEndTime_SField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldSenderComisionID {
            get {
                return this.fldSenderComisionIDField;
            }
            set {
                this.fldSenderComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldReceiverComisionID {
            get {
                return this.fldReceiverComisionIDField;
            }
            set {
                this.fldReceiverComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldStartDate {
            get {
                return this.fldStartDateField;
            }
            set {
                this.fldStartDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldEndDate {
            get {
                return this.fldEndDateField;
            }
            set {
                this.fldEndDateField = value;
            }
        }
        
        /// <remarks/>
        public TimeSpan fldStartTime {
            get {
                return this.fldStartTimeField;
            }
            set {
                this.fldStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public TimeSpan fldEndTime {
            get {
                return this.fldEndTimeField;
            }
            set {
                this.fldEndTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool fldIsSigner {
            get {
                return this.fldIsSignerField;
            }
            set {
                this.fldIsSignerField = value;
            }
        }
        
        /// <remarks/>
        public bool fldShowReceiverName {
            get {
                return this.fldShowReceiverNameField;
            }
            set {
                this.fldShowReceiverNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldReciverComisionName {
            get {
                return this.fldReciverComisionNameField;
            }
            set {
                this.fldReciverComisionNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldSenderComisionName {
            get {
                return this.fldSenderComisionNameField;
            }
            set {
                this.fldSenderComisionNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldStartTime_S {
            get {
                return this.fldStartTime_SField;
            }
            set {
                this.fldStartTime_SField = value;
            }
        }
        
        /// <remarks/>
        public string fldEndTime_S {
            get {
                return this.fldEndTime_SField;
            }
            set {
                this.fldEndTime_SField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TimeSpan {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Secretariat_OrganizationUnit {
        
        private int fldIDField;
        
        private int fldSecretariatIDField;
        
        private int fldOrganizationUnitIDField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        private int fldOrganIdField;
        
        private string fldTitleField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldSecretariatID {
            get {
                return this.fldSecretariatIDField;
            }
            set {
                this.fldSecretariatIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganizationUnitID {
            get {
                return this.fldOrganizationUnitIDField;
            }
            set {
                this.fldOrganizationUnitIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Setting {
        
        private int fldIDField;
        
        private string fldEmailAddressField;
        
        private string fldEmailPasswordField;
        
        private string fldRecieveServerField;
        
        private string fldSendServerField;
        
        private int fldSendPortField;
        
        private bool fldSSLField;
        
        private bool fldDelFaxField;
        
        private bool fldIsSignerField;
        
        private string fldFaxPathField;
        
        private int fldOrganIDField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        private int fldRecievePortField;
        
        private string nameOrganField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldEmailAddress {
            get {
                return this.fldEmailAddressField;
            }
            set {
                this.fldEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string fldEmailPassword {
            get {
                return this.fldEmailPasswordField;
            }
            set {
                this.fldEmailPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string fldRecieveServer {
            get {
                return this.fldRecieveServerField;
            }
            set {
                this.fldRecieveServerField = value;
            }
        }
        
        /// <remarks/>
        public string fldSendServer {
            get {
                return this.fldSendServerField;
            }
            set {
                this.fldSendServerField = value;
            }
        }
        
        /// <remarks/>
        public int fldSendPort {
            get {
                return this.fldSendPortField;
            }
            set {
                this.fldSendPortField = value;
            }
        }
        
        /// <remarks/>
        public bool fldSSL {
            get {
                return this.fldSSLField;
            }
            set {
                this.fldSSLField = value;
            }
        }
        
        /// <remarks/>
        public bool fldDelFax {
            get {
                return this.fldDelFaxField;
            }
            set {
                this.fldDelFaxField = value;
            }
        }
        
        /// <remarks/>
        public bool fldIsSigner {
            get {
                return this.fldIsSignerField;
            }
            set {
                this.fldIsSignerField = value;
            }
        }
        
        /// <remarks/>
        public string fldFaxPath {
            get {
                return this.fldFaxPathField;
            }
            set {
                this.fldFaxPathField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganID {
            get {
                return this.fldOrganIDField;
            }
            set {
                this.fldOrganIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldRecievePort {
            get {
                return this.fldRecievePortField;
            }
            set {
                this.fldRecievePortField = value;
            }
        }
        
        /// <remarks/>
        public string NameOrgan {
            get {
                return this.nameOrganField;
            }
            set {
                this.nameOrganField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_SecurityType {
        
        private int fldIDField;
        
        private string fldSecurityTypeField;
        
        private int fldOrganIDField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldSecurityType {
            get {
                return this.fldSecurityTypeField;
            }
            set {
                this.fldSecurityTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganID {
            get {
                return this.fldOrganIDField;
            }
            set {
                this.fldOrganIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_NumberingFormat {
        
        private int fldIDField;
        
        private int fldYearField;
        
        private int fldSecretariatIDField;
        
        private string fldNumberFormatField;
        
        private int fldStartNumberField;
        
        private int fldOrganIDField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldYear {
            get {
                return this.fldYearField;
            }
            set {
                this.fldYearField = value;
            }
        }
        
        /// <remarks/>
        public int fldSecretariatID {
            get {
                return this.fldSecretariatIDField;
            }
            set {
                this.fldSecretariatIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldNumberFormat {
            get {
                return this.fldNumberFormatField;
            }
            set {
                this.fldNumberFormatField = value;
            }
        }
        
        /// <remarks/>
        public int fldStartNumber {
            get {
                return this.fldStartNumberField;
            }
            set {
                this.fldStartNumberField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganID {
            get {
                return this.fldOrganIDField;
            }
            set {
                this.fldOrganIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Immediacy {
        
        private int fldIDField;
        
        private string fldNameField;
        
        private int fldOrganIDField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        private System.Nullable<int> fldFileIdField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganID {
            get {
                return this.fldOrganIDField;
            }
            set {
                this.fldOrganIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldFileId {
            get {
                return this.fldFileIdField;
            }
            set {
                this.fldFileIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_AssignmentType {
        
        private int fldIDField;
        
        private string fldTypeField;
        
        private int fldOrganIDField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganID {
            get {
                return this.fldOrganIDField;
            }
            set {
                this.fldOrganIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Commision {
        
        private int fldIDField;
        
        private int fldAshkhasIDField;
        
        private int fldOrganizPostEjraeeIDField;
        
        private string fldStartDateField;
        
        private string fldEndDateField;
        
        private string fldOrganicNumberField;
        
        private int fldOrganIDField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        private string fldO_postEjraee_TitleField;
        
        private string fldCodeMelliField;
        
        private string fldNameField;
        
        private string fldTypeShakhsField;
        
        private string fldActiveField;
        
        private string fldFatherNameField;
        
        private bool fldSignField;
        
        private string fldSignNameField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldAshkhasID {
            get {
                return this.fldAshkhasIDField;
            }
            set {
                this.fldAshkhasIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganizPostEjraeeID {
            get {
                return this.fldOrganizPostEjraeeIDField;
            }
            set {
                this.fldOrganizPostEjraeeIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldStartDate {
            get {
                return this.fldStartDateField;
            }
            set {
                this.fldStartDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldEndDate {
            get {
                return this.fldEndDateField;
            }
            set {
                this.fldEndDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldOrganicNumber {
            get {
                return this.fldOrganicNumberField;
            }
            set {
                this.fldOrganicNumberField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganID {
            get {
                return this.fldOrganIDField;
            }
            set {
                this.fldOrganIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldO_postEjraee_Title {
            get {
                return this.fldO_postEjraee_TitleField;
            }
            set {
                this.fldO_postEjraee_TitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodeMelli {
            get {
                return this.fldCodeMelliField;
            }
            set {
                this.fldCodeMelliField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeShakhs {
            get {
                return this.fldTypeShakhsField;
            }
            set {
                this.fldTypeShakhsField = value;
            }
        }
        
        /// <remarks/>
        public string fldActive {
            get {
                return this.fldActiveField;
            }
            set {
                this.fldActiveField = value;
            }
        }
        
        /// <remarks/>
        public string fldFatherName {
            get {
                return this.fldFatherNameField;
            }
            set {
                this.fldFatherNameField = value;
            }
        }
        
        /// <remarks/>
        public bool fldSign {
            get {
                return this.fldSignField;
            }
            set {
                this.fldSignField = value;
            }
        }
        
        /// <remarks/>
        public string fldSignName {
            get {
                return this.fldSignNameField;
            }
            set {
                this.fldSignNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_LetterAttachment {
        
        private int fldIdField;
        
        private long fldLetterIdField;
        
        private string fldNameField;
        
        private int fldContentFileIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldNameFileField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public long fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldContentFileId {
            get {
                return this.fldContentFileIdField;
            }
            set {
                this.fldContentFileIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameFile {
            get {
                return this.fldNameFileField;
            }
            set {
                this.fldNameFileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ContentFile {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private byte[] fldLetterTextField;
        
        private long fldLetterIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldTypeField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fldLetterText {
            get {
                return this.fldLetterTextField;
            }
            set {
                this.fldLetterTextField = value;
            }
        }
        
        /// <remarks/>
        public long fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_InternalLetterReceiver {
        
        private int fldIdField;
        
        private System.Nullable<long> fldLetterIdField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private int fldReceiverComisionIDField;
        
        private int fldAssignmentStatusIDField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldNameAssignmentStatusField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldReceiverComisionID {
            get {
                return this.fldReceiverComisionIDField;
            }
            set {
                this.fldReceiverComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentStatusID {
            get {
                return this.fldAssignmentStatusIDField;
            }
            set {
                this.fldAssignmentStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameAssignmentStatus {
            get {
                return this.fldNameAssignmentStatusField;
            }
            set {
                this.fldNameAssignmentStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ExternalLetterSender {
        
        private int fldIdField;
        
        private System.Nullable<long> fldLetterIdField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private System.Nullable<int> fldShakhsHoghoghiTitlesIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldShakhsHoghoghiTitlesId {
            get {
                return this.fldShakhsHoghoghiTitlesIdField;
            }
            set {
                this.fldShakhsHoghoghiTitlesIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ExternalLetterReceiver {
        
        private int fldIdField;
        
        private System.Nullable<long> fldLetterIdField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldNameHoghoghititlesField;
        
        private System.Nullable<int> fldHoghoghiTitlesIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameHoghoghititles {
            get {
                return this.fldNameHoghoghititlesField;
            }
            set {
                this.fldNameHoghoghititlesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldHoghoghiTitlesId {
            get {
                return this.fldHoghoghiTitlesIdField;
            }
            set {
                this.fldHoghoghiTitlesIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Signer {
        
        private int fldIdField;
        
        private long fldLetterIdField;
        
        private int fldSignerComisionIdField;
        
        private int fldIndexerIdField;
        
        private System.Nullable<int> fldFirstSignerField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldTitlePostField;
        
        private System.Nullable<int> fldFileSignIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public long fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldSignerComisionId {
            get {
                return this.fldSignerComisionIdField;
            }
            set {
                this.fldSignerComisionIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldIndexerId {
            get {
                return this.fldIndexerIdField;
            }
            set {
                this.fldIndexerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldFirstSigner {
            get {
                return this.fldFirstSignerField;
            }
            set {
                this.fldFirstSignerField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitlePost {
            get {
                return this.fldTitlePostField;
            }
            set {
                this.fldTitlePostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldFileSignId {
            get {
                return this.fldFileSignIdField;
            }
            set {
                this.fldFileSignIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_LetterArchive {
        
        private int fldIdField;
        
        private System.Nullable<long> fldLetterIdField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private int fldArchiveIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldArchiveId {
            get {
                return this.fldArchiveIdField;
            }
            set {
                this.fldArchiveIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Archive {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private System.Nullable<int> fldPIdField;
        
        private int fldOrganIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPId {
            get {
                return this.fldPIdField;
            }
            set {
                this.fldPIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_InternalAssignmentSender {
        
        private int fldIdField;
        
        private int fldAssignmentIDField;
        
        private int fldSenderComisionIDField;
        
        private int fldBoxIDField;
        
        private int fldOrganIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldName_FamilyField;
        
        private string fldNameBoxField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentID {
            get {
                return this.fldAssignmentIDField;
            }
            set {
                this.fldAssignmentIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldSenderComisionID {
            get {
                return this.fldSenderComisionIDField;
            }
            set {
                this.fldSenderComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldBoxID {
            get {
                return this.fldBoxIDField;
            }
            set {
                this.fldBoxIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_Family {
            get {
                return this.fldName_FamilyField;
            }
            set {
                this.fldName_FamilyField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameBox {
            get {
                return this.fldNameBoxField;
            }
            set {
                this.fldNameBoxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_InternalAssignmentReceiver {
        
        private int fldIDField;
        
        private int fldAssignmentIDField;
        
        private int fldReceiverComisionIDField;
        
        private int fldAssignmentStatusIDField;
        
        private int fldAssignmentTypeIDField;
        
        private int fldBoxIDField;
        
        private string fldLetterReadDateField;
        
        private bool fldShowTypeT_FField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        private string fldBoxNameField;
        
        private string fldStatusNameField;
        
        private string fldTypeAssignmentField;
        
        private string fldName_FamilyField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentID {
            get {
                return this.fldAssignmentIDField;
            }
            set {
                this.fldAssignmentIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldReceiverComisionID {
            get {
                return this.fldReceiverComisionIDField;
            }
            set {
                this.fldReceiverComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentStatusID {
            get {
                return this.fldAssignmentStatusIDField;
            }
            set {
                this.fldAssignmentStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentTypeID {
            get {
                return this.fldAssignmentTypeIDField;
            }
            set {
                this.fldAssignmentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldBoxID {
            get {
                return this.fldBoxIDField;
            }
            set {
                this.fldBoxIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterReadDate {
            get {
                return this.fldLetterReadDateField;
            }
            set {
                this.fldLetterReadDateField = value;
            }
        }
        
        /// <remarks/>
        public bool fldShowTypeT_F {
            get {
                return this.fldShowTypeT_FField;
            }
            set {
                this.fldShowTypeT_FField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldBoxName {
            get {
                return this.fldBoxNameField;
            }
            set {
                this.fldBoxNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldStatusName {
            get {
                return this.fldStatusNameField;
            }
            set {
                this.fldStatusNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeAssignment {
            get {
                return this.fldTypeAssignmentField;
            }
            set {
                this.fldTypeAssignmentField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_Family {
            get {
                return this.fldName_FamilyField;
            }
            set {
                this.fldName_FamilyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Assignment {
        
        private int fldIDField;
        
        private System.Nullable<long> fldLetterIDField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private string fldAssignmentDateField;
        
        private string fldAnswerDateField;
        
        private System.Nullable<int> fldSourceAssIdField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        private string fldTitleMessageField;
        
        private string fldSubjectField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLetterID {
            get {
                return this.fldLetterIDField;
            }
            set {
                this.fldLetterIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldAssignmentDate {
            get {
                return this.fldAssignmentDateField;
            }
            set {
                this.fldAssignmentDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldAnswerDate {
            get {
                return this.fldAnswerDateField;
            }
            set {
                this.fldAnswerDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldSourceAssId {
            get {
                return this.fldSourceAssIdField;
            }
            set {
                this.fldSourceAssIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleMessage {
            get {
                return this.fldTitleMessageField;
            }
            set {
                this.fldTitleMessageField = value;
            }
        }
        
        /// <remarks/>
        public string fldSubject {
            get {
                return this.fldSubjectField;
            }
            set {
                this.fldSubjectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_AssignmentStatus {
        
        private int fldIDField;
        
        private string fldNameField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_LetterTabagheBandi {
        
        private int fldIdField;
        
        private int fldTabagheBandiIdField;
        
        private System.Nullable<long> fldLetterIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldNameTabagheBandiField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private string fldTitleMessageField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldTabagheBandiId {
            get {
                return this.fldTabagheBandiIdField;
            }
            set {
                this.fldTabagheBandiIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameTabagheBandi {
            get {
                return this.fldNameTabagheBandiField;
            }
            set {
                this.fldNameTabagheBandiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleMessage {
            get {
                return this.fldTitleMessageField;
            }
            set {
                this.fldTitleMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_LetterBox {
        
        private int fldIdField;
        
        private int fldBoxIdField;
        
        private System.Nullable<long> fldLetterIdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldBoxNameField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private string fldTitleMessageField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldBoxId {
            get {
                return this.fldBoxIdField;
            }
            set {
                this.fldBoxIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldBoxName {
            get {
                return this.fldBoxNameField;
            }
            set {
                this.fldBoxNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleMessage {
            get {
                return this.fldTitleMessageField;
            }
            set {
                this.fldTitleMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Trash {
        
        private System.Nullable<long> codeField;
        
        private System.Nullable<long> fldLetterIdField;
        
        private string fldOrderIdField;
        
        private int fldComisionIDField;
        
        private string fldSubjectField;
        
        private string fldLetterstatusField;
        
        private int fldLetterTypeIDField;
        
        private string fldAssigmentDateField;
        
        private int assigmentidField;
        
        private string fldAnswerDateField;
        
        private int fldSenderComisionIDField;
        
        private System.Nullable<int> fldImmediacyIDField;
        
        private string fldLetterDateField;
        
        private string fldLetterNumberField;
        
        private string fldImmediacyNameField;
        
        private int fldTrashTypeField;
        
        private System.Nullable<System.DateTime> fldDelDateField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private string fldCommisionField;
        
        private int haveAttachField;
        
        private string letterRecieversField;
        
        private int haveArchivField;
        
        private string fldLetterTypeField;
        
        private string fldCreatedDateField;
        
        private string fldSecurityTypeField;
        
        private string fldDescField;
        
        private string fldKeywordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldOrderId {
            get {
                return this.fldOrderIdField;
            }
            set {
                this.fldOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldComisionID {
            get {
                return this.fldComisionIDField;
            }
            set {
                this.fldComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldSubject {
            get {
                return this.fldSubjectField;
            }
            set {
                this.fldSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterstatus {
            get {
                return this.fldLetterstatusField;
            }
            set {
                this.fldLetterstatusField = value;
            }
        }
        
        /// <remarks/>
        public int fldLetterTypeID {
            get {
                return this.fldLetterTypeIDField;
            }
            set {
                this.fldLetterTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldAssigmentDate {
            get {
                return this.fldAssigmentDateField;
            }
            set {
                this.fldAssigmentDateField = value;
            }
        }
        
        /// <remarks/>
        public int assigmentid {
            get {
                return this.assigmentidField;
            }
            set {
                this.assigmentidField = value;
            }
        }
        
        /// <remarks/>
        public string fldAnswerDate {
            get {
                return this.fldAnswerDateField;
            }
            set {
                this.fldAnswerDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldSenderComisionID {
            get {
                return this.fldSenderComisionIDField;
            }
            set {
                this.fldSenderComisionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldImmediacyID {
            get {
                return this.fldImmediacyIDField;
            }
            set {
                this.fldImmediacyIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterDate {
            get {
                return this.fldLetterDateField;
            }
            set {
                this.fldLetterDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterNumber {
            get {
                return this.fldLetterNumberField;
            }
            set {
                this.fldLetterNumberField = value;
            }
        }
        
        /// <remarks/>
        public string fldImmediacyName {
            get {
                return this.fldImmediacyNameField;
            }
            set {
                this.fldImmediacyNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldTrashType {
            get {
                return this.fldTrashTypeField;
            }
            set {
                this.fldTrashTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> fldDelDate {
            get {
                return this.fldDelDateField;
            }
            set {
                this.fldDelDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldCommision {
            get {
                return this.fldCommisionField;
            }
            set {
                this.fldCommisionField = value;
            }
        }
        
        /// <remarks/>
        public int HaveAttach {
            get {
                return this.haveAttachField;
            }
            set {
                this.haveAttachField = value;
            }
        }
        
        /// <remarks/>
        public string LetterRecievers {
            get {
                return this.letterRecieversField;
            }
            set {
                this.letterRecieversField = value;
            }
        }
        
        /// <remarks/>
        public int HaveArchiv {
            get {
                return this.haveArchivField;
            }
            set {
                this.haveArchivField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterType {
            get {
                return this.fldLetterTypeField;
            }
            set {
                this.fldLetterTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldCreatedDate {
            get {
                return this.fldCreatedDateField;
            }
            set {
                this.fldCreatedDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldSecurityType {
            get {
                return this.fldSecurityTypeField;
            }
            set {
                this.fldSecurityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldKeywords {
            get {
                return this.fldKeywordsField;
            }
            set {
                this.fldKeywordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Sent {
        
        private System.Nullable<long> codeField;
        
        private System.Nullable<long> fldLetterIdField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private string fldOrderIdField;
        
        private string fldCommisionField;
        
        private int fldComisionIDField;
        
        private string fldSubjectField;
        
        private string fldLetterstatusField;
        
        private string fldLetterTypeField;
        
        private int fldLetterTypeIDField;
        
        private int haveAttachField;
        
        private string letterRecieversField;
        
        private string fldAssignmentDateField;
        
        private int assigmentidField;
        
        private string fldAnswerDateField;
        
        private int fldSenderComisionIDField;
        
        private System.Nullable<int> fldImmediacyIDField;
        
        private string fldLetterDateField;
        
        private string fldLetterNumberField;
        
        private int haveArchivField;
        
        private string fldImmediacyNameField;
        
        private int fldAssignmentTypeIDField;
        
        private int internalAssignmentReceiverIDField;
        
        private System.Nullable<int> fldLetterStatusIDField;
        
        private int fldAssignmentStatusIDField;
        
        private string fldCreatedDateField;
        
        private string fldSecurityTypeField;
        
        private string fldDescField;
        
        private string fldKeywordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldOrderId {
            get {
                return this.fldOrderIdField;
            }
            set {
                this.fldOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldCommision {
            get {
                return this.fldCommisionField;
            }
            set {
                this.fldCommisionField = value;
            }
        }
        
        /// <remarks/>
        public int fldComisionID {
            get {
                return this.fldComisionIDField;
            }
            set {
                this.fldComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldSubject {
            get {
                return this.fldSubjectField;
            }
            set {
                this.fldSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterstatus {
            get {
                return this.fldLetterstatusField;
            }
            set {
                this.fldLetterstatusField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterType {
            get {
                return this.fldLetterTypeField;
            }
            set {
                this.fldLetterTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fldLetterTypeID {
            get {
                return this.fldLetterTypeIDField;
            }
            set {
                this.fldLetterTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int HaveAttach {
            get {
                return this.haveAttachField;
            }
            set {
                this.haveAttachField = value;
            }
        }
        
        /// <remarks/>
        public string LetterRecievers {
            get {
                return this.letterRecieversField;
            }
            set {
                this.letterRecieversField = value;
            }
        }
        
        /// <remarks/>
        public string fldAssignmentDate {
            get {
                return this.fldAssignmentDateField;
            }
            set {
                this.fldAssignmentDateField = value;
            }
        }
        
        /// <remarks/>
        public int assigmentid {
            get {
                return this.assigmentidField;
            }
            set {
                this.assigmentidField = value;
            }
        }
        
        /// <remarks/>
        public string fldAnswerDate {
            get {
                return this.fldAnswerDateField;
            }
            set {
                this.fldAnswerDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldSenderComisionID {
            get {
                return this.fldSenderComisionIDField;
            }
            set {
                this.fldSenderComisionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldImmediacyID {
            get {
                return this.fldImmediacyIDField;
            }
            set {
                this.fldImmediacyIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterDate {
            get {
                return this.fldLetterDateField;
            }
            set {
                this.fldLetterDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterNumber {
            get {
                return this.fldLetterNumberField;
            }
            set {
                this.fldLetterNumberField = value;
            }
        }
        
        /// <remarks/>
        public int HaveArchiv {
            get {
                return this.haveArchivField;
            }
            set {
                this.haveArchivField = value;
            }
        }
        
        /// <remarks/>
        public string fldImmediacyName {
            get {
                return this.fldImmediacyNameField;
            }
            set {
                this.fldImmediacyNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentTypeID {
            get {
                return this.fldAssignmentTypeIDField;
            }
            set {
                this.fldAssignmentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int InternalAssignmentReceiverID {
            get {
                return this.internalAssignmentReceiverIDField;
            }
            set {
                this.internalAssignmentReceiverIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldLetterStatusID {
            get {
                return this.fldLetterStatusIDField;
            }
            set {
                this.fldLetterStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentStatusID {
            get {
                return this.fldAssignmentStatusIDField;
            }
            set {
                this.fldAssignmentStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldCreatedDate {
            get {
                return this.fldCreatedDateField;
            }
            set {
                this.fldCreatedDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldSecurityType {
            get {
                return this.fldSecurityTypeField;
            }
            set {
                this.fldSecurityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldKeywords {
            get {
                return this.fldKeywordsField;
            }
            set {
                this.fldKeywordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_SavedLetter {
        
        private long fldLetterIdField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private string fldOrderIdField;
        
        private string fldSubjectField;
        
        private string fldLetterNumberField;
        
        private string fldLetterDateField;
        
        private string fldCreatedDateField;
        
        private string fldLetterStatusField;
        
        private string fldImmediacyNameField;
        
        private string fldLetterTypeField;
        
        private int fldLetterTypeIDField;
        
        private System.Nullable<int> fldImmediacyIDField;
        
        private int haveArchivField;
        
        private int haveAttachField;
        
        private string fldSecurityTypeField;
        
        private string fldCommisionField;
        
        private string letterRecieversField;
        
        private string fldKeywordsField;
        
        private string fldDescField;
        
        /// <remarks/>
        public long fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldOrderId {
            get {
                return this.fldOrderIdField;
            }
            set {
                this.fldOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldSubject {
            get {
                return this.fldSubjectField;
            }
            set {
                this.fldSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterNumber {
            get {
                return this.fldLetterNumberField;
            }
            set {
                this.fldLetterNumberField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterDate {
            get {
                return this.fldLetterDateField;
            }
            set {
                this.fldLetterDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldCreatedDate {
            get {
                return this.fldCreatedDateField;
            }
            set {
                this.fldCreatedDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterStatus {
            get {
                return this.fldLetterStatusField;
            }
            set {
                this.fldLetterStatusField = value;
            }
        }
        
        /// <remarks/>
        public string fldImmediacyName {
            get {
                return this.fldImmediacyNameField;
            }
            set {
                this.fldImmediacyNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterType {
            get {
                return this.fldLetterTypeField;
            }
            set {
                this.fldLetterTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fldLetterTypeID {
            get {
                return this.fldLetterTypeIDField;
            }
            set {
                this.fldLetterTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldImmediacyID {
            get {
                return this.fldImmediacyIDField;
            }
            set {
                this.fldImmediacyIDField = value;
            }
        }
        
        /// <remarks/>
        public int HaveArchiv {
            get {
                return this.haveArchivField;
            }
            set {
                this.haveArchivField = value;
            }
        }
        
        /// <remarks/>
        public int HaveAttach {
            get {
                return this.haveAttachField;
            }
            set {
                this.haveAttachField = value;
            }
        }
        
        /// <remarks/>
        public string fldSecurityType {
            get {
                return this.fldSecurityTypeField;
            }
            set {
                this.fldSecurityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldCommision {
            get {
                return this.fldCommisionField;
            }
            set {
                this.fldCommisionField = value;
            }
        }
        
        /// <remarks/>
        public string LetterRecievers {
            get {
                return this.letterRecieversField;
            }
            set {
                this.letterRecieversField = value;
            }
        }
        
        /// <remarks/>
        public string fldKeywords {
            get {
                return this.fldKeywordsField;
            }
            set {
                this.fldKeywordsField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Inbox {
        
        private System.Nullable<long> fldLetterIdField;
        
        private System.Nullable<int> fldMessageIdField;
        
        private string fldOrderIdField;
        
        private string fldCommisionField;
        
        private int fldComisionIDField;
        
        private string fldSubjectField;
        
        private string fldLetterstatusField;
        
        private string fldLetterTypeField;
        
        private int fldLetterTypeIDField;
        
        private int haveAttachField;
        
        private string letterRecieversField;
        
        private string fldAssignmentDateField;
        
        private int assigmentidField;
        
        private string fldAnswerDateField;
        
        private int fldReceiverComisionIDField;
        
        private int fldAssignmentStatusIDField;
        
        private System.Nullable<int> fldImmediacyIDField;
        
        private string fldLetterDateField;
        
        private string fldLetterNumberField;
        
        private int haveArchivField;
        
        private string assimentLetterStatusField;
        
        private int assimentLetterStatusIdField;
        
        private string fldImmediacyNameField;
        
        private int internalAssignmentReceiverIDField;
        
        private System.Nullable<long> codeField;
        
        private string fldCreatedDateField;
        
        private string fldSecurityTypeField;
        
        private string fldDescField;
        
        private string fldKeywordsField;
        
        private int fldSenderComisionIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMessageId {
            get {
                return this.fldMessageIdField;
            }
            set {
                this.fldMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldOrderId {
            get {
                return this.fldOrderIdField;
            }
            set {
                this.fldOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldCommision {
            get {
                return this.fldCommisionField;
            }
            set {
                this.fldCommisionField = value;
            }
        }
        
        /// <remarks/>
        public int fldComisionID {
            get {
                return this.fldComisionIDField;
            }
            set {
                this.fldComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldSubject {
            get {
                return this.fldSubjectField;
            }
            set {
                this.fldSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterstatus {
            get {
                return this.fldLetterstatusField;
            }
            set {
                this.fldLetterstatusField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterType {
            get {
                return this.fldLetterTypeField;
            }
            set {
                this.fldLetterTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fldLetterTypeID {
            get {
                return this.fldLetterTypeIDField;
            }
            set {
                this.fldLetterTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int HaveAttach {
            get {
                return this.haveAttachField;
            }
            set {
                this.haveAttachField = value;
            }
        }
        
        /// <remarks/>
        public string LetterRecievers {
            get {
                return this.letterRecieversField;
            }
            set {
                this.letterRecieversField = value;
            }
        }
        
        /// <remarks/>
        public string fldAssignmentDate {
            get {
                return this.fldAssignmentDateField;
            }
            set {
                this.fldAssignmentDateField = value;
            }
        }
        
        /// <remarks/>
        public int assigmentid {
            get {
                return this.assigmentidField;
            }
            set {
                this.assigmentidField = value;
            }
        }
        
        /// <remarks/>
        public string fldAnswerDate {
            get {
                return this.fldAnswerDateField;
            }
            set {
                this.fldAnswerDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldReceiverComisionID {
            get {
                return this.fldReceiverComisionIDField;
            }
            set {
                this.fldReceiverComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentStatusID {
            get {
                return this.fldAssignmentStatusIDField;
            }
            set {
                this.fldAssignmentStatusIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldImmediacyID {
            get {
                return this.fldImmediacyIDField;
            }
            set {
                this.fldImmediacyIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterDate {
            get {
                return this.fldLetterDateField;
            }
            set {
                this.fldLetterDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterNumber {
            get {
                return this.fldLetterNumberField;
            }
            set {
                this.fldLetterNumberField = value;
            }
        }
        
        /// <remarks/>
        public int HaveArchiv {
            get {
                return this.haveArchivField;
            }
            set {
                this.haveArchivField = value;
            }
        }
        
        /// <remarks/>
        public string AssimentLetterStatus {
            get {
                return this.assimentLetterStatusField;
            }
            set {
                this.assimentLetterStatusField = value;
            }
        }
        
        /// <remarks/>
        public int AssimentLetterStatusId {
            get {
                return this.assimentLetterStatusIdField;
            }
            set {
                this.assimentLetterStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldImmediacyName {
            get {
                return this.fldImmediacyNameField;
            }
            set {
                this.fldImmediacyNameField = value;
            }
        }
        
        /// <remarks/>
        public int InternalAssignmentReceiverID {
            get {
                return this.internalAssignmentReceiverIDField;
            }
            set {
                this.internalAssignmentReceiverIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string fldCreatedDate {
            get {
                return this.fldCreatedDateField;
            }
            set {
                this.fldCreatedDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldSecurityType {
            get {
                return this.fldSecurityTypeField;
            }
            set {
                this.fldSecurityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldKeywords {
            get {
                return this.fldKeywordsField;
            }
            set {
                this.fldKeywordsField = value;
            }
        }
        
        /// <remarks/>
        public int fldSenderComisionID {
            get {
                return this.fldSenderComisionIDField;
            }
            set {
                this.fldSenderComisionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Letter {
        
        private long fldIDField;
        
        private int fldYearField;
        
        private long fldOrderIdField;
        
        private string fldSubjectField;
        
        private string fldLetterNumberField;
        
        private string fldLetterDateField;
        
        private string fldCreatedDateField;
        
        private string fldKeywordsField;
        
        private System.Nullable<int> fldLetterStatusIDField;
        
        private int fldComisionIDField;
        
        private int fldImmediacyIDField;
        
        private string fldMatnLetterField;
        
        private int fldSecurityTypeIDField;
        
        private int fldLetterTypeIDField;
        
        private byte fldSignTypeField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        private System.DateTime fldCreatedDateEnField;
        
        private string fldLetterStatusNameField;
        
        private string fldImmediacyNameField;
        
        private string fldLetterTypeNameField;
        
        private string fldSecurityTypeNameField;
        
        private string fldSenderNameField;
        
        private string fldRecieverNameField;
        
        private string fldRooneveshtField;
        
        private string fldSignerField;
        
        private string fldReceiverField;
        
        private string fldSignerNameField;
        
        private string fldExternalSenderField;
        
        private string fldExternalSenderNameField;
        
        private System.Nullable<int> fldLetterTemplateIdField;
        
        private System.Nullable<int> fldContentFileIDField;
        
        private string fldFontField;
        
        /// <remarks/>
        public long fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldYear {
            get {
                return this.fldYearField;
            }
            set {
                this.fldYearField = value;
            }
        }
        
        /// <remarks/>
        public long fldOrderId {
            get {
                return this.fldOrderIdField;
            }
            set {
                this.fldOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldSubject {
            get {
                return this.fldSubjectField;
            }
            set {
                this.fldSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterNumber {
            get {
                return this.fldLetterNumberField;
            }
            set {
                this.fldLetterNumberField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterDate {
            get {
                return this.fldLetterDateField;
            }
            set {
                this.fldLetterDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldCreatedDate {
            get {
                return this.fldCreatedDateField;
            }
            set {
                this.fldCreatedDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldKeywords {
            get {
                return this.fldKeywordsField;
            }
            set {
                this.fldKeywordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldLetterStatusID {
            get {
                return this.fldLetterStatusIDField;
            }
            set {
                this.fldLetterStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldComisionID {
            get {
                return this.fldComisionIDField;
            }
            set {
                this.fldComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldImmediacyID {
            get {
                return this.fldImmediacyIDField;
            }
            set {
                this.fldImmediacyIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldMatnLetter {
            get {
                return this.fldMatnLetterField;
            }
            set {
                this.fldMatnLetterField = value;
            }
        }
        
        /// <remarks/>
        public int fldSecurityTypeID {
            get {
                return this.fldSecurityTypeIDField;
            }
            set {
                this.fldSecurityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldLetterTypeID {
            get {
                return this.fldLetterTypeIDField;
            }
            set {
                this.fldLetterTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public byte fldSignType {
            get {
                return this.fldSignTypeField;
            }
            set {
                this.fldSignTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldCreatedDateEn {
            get {
                return this.fldCreatedDateEnField;
            }
            set {
                this.fldCreatedDateEnField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterStatusName {
            get {
                return this.fldLetterStatusNameField;
            }
            set {
                this.fldLetterStatusNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldImmediacyName {
            get {
                return this.fldImmediacyNameField;
            }
            set {
                this.fldImmediacyNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterTypeName {
            get {
                return this.fldLetterTypeNameField;
            }
            set {
                this.fldLetterTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldSecurityTypeName {
            get {
                return this.fldSecurityTypeNameField;
            }
            set {
                this.fldSecurityTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldSenderName {
            get {
                return this.fldSenderNameField;
            }
            set {
                this.fldSenderNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldRecieverName {
            get {
                return this.fldRecieverNameField;
            }
            set {
                this.fldRecieverNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldRoonevesht {
            get {
                return this.fldRooneveshtField;
            }
            set {
                this.fldRooneveshtField = value;
            }
        }
        
        /// <remarks/>
        public string fldSigner {
            get {
                return this.fldSignerField;
            }
            set {
                this.fldSignerField = value;
            }
        }
        
        /// <remarks/>
        public string fldReceiver {
            get {
                return this.fldReceiverField;
            }
            set {
                this.fldReceiverField = value;
            }
        }
        
        /// <remarks/>
        public string fldSignerName {
            get {
                return this.fldSignerNameField;
            }
            set {
                this.fldSignerNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldExternalSender {
            get {
                return this.fldExternalSenderField;
            }
            set {
                this.fldExternalSenderField = value;
            }
        }
        
        /// <remarks/>
        public string fldExternalSenderName {
            get {
                return this.fldExternalSenderNameField;
            }
            set {
                this.fldExternalSenderNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldLetterTemplateId {
            get {
                return this.fldLetterTemplateIdField;
            }
            set {
                this.fldLetterTemplateIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldContentFileID {
            get {
                return this.fldContentFileIDField;
            }
            set {
                this.fldContentFileIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldFont {
            get {
                return this.fldFontField;
            }
            set {
                this.fldFontField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_LetterStatus {
        
        private int fldIDField;
        
        private string fldNameField;
        
        private string fldDateField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private int fldOrganIdField;
        
        private string fldIPField;
        
        private TimeSpan fldDateTimeField;
        
        private string fldUserNameField;
        
        /// <remarks/>
        public int fldID {
            get {
                return this.fldIDField;
            }
            set {
                this.fldIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public TimeSpan fldDateTime {
            get {
                return this.fldDateTimeField;
            }
            set {
                this.fldDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string fldUserName {
            get {
                return this.fldUserNameField;
            }
            set {
                this.fldUserNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_HistoryLetter {
        
        private int fldIdField;
        
        private long fldCurrentLetter_IdField;
        
        private int fldHistoryType_IdField;
        
        private long fldHistoryLetter_IdField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldSubjectField;
        
        private string fldLetterNumberField;
        
        private long fldCreatedLetterIdField;
        
        private string fldLetterDateField;
        
        private int fldComisionIDField;
        
        private string fldHistoryTypeNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public long fldCurrentLetter_Id {
            get {
                return this.fldCurrentLetter_IdField;
            }
            set {
                this.fldCurrentLetter_IdField = value;
            }
        }
        
        /// <remarks/>
        public int fldHistoryType_Id {
            get {
                return this.fldHistoryType_IdField;
            }
            set {
                this.fldHistoryType_IdField = value;
            }
        }
        
        /// <remarks/>
        public long fldHistoryLetter_Id {
            get {
                return this.fldHistoryLetter_IdField;
            }
            set {
                this.fldHistoryLetter_IdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldSubject {
            get {
                return this.fldSubjectField;
            }
            set {
                this.fldSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterNumber {
            get {
                return this.fldLetterNumberField;
            }
            set {
                this.fldLetterNumberField = value;
            }
        }
        
        /// <remarks/>
        public long fldCreatedLetterId {
            get {
                return this.fldCreatedLetterIdField;
            }
            set {
                this.fldCreatedLetterIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterDate {
            get {
                return this.fldLetterDateField;
            }
            set {
                this.fldLetterDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldComisionID {
            get {
                return this.fldComisionIDField;
            }
            set {
                this.fldComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldHistoryTypeName {
            get {
                return this.fldHistoryTypeNameField;
            }
            set {
                this.fldHistoryTypeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ReceiverAssignmentType {
        
        private int fldIdField;
        
        private int fldAssignmentIDField;
        
        private int fldReceiverComisionIDField;
        
        private int fldAssignmentStatusIDField;
        
        private int fldAssignmentTypeIDField;
        
        private int fldBoxIDField;
        
        private string fldLetterReadDateField;
        
        private bool fldShowTypeT_FField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private System.DateTime fldDateField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentID {
            get {
                return this.fldAssignmentIDField;
            }
            set {
                this.fldAssignmentIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldReceiverComisionID {
            get {
                return this.fldReceiverComisionIDField;
            }
            set {
                this.fldReceiverComisionIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentStatusID {
            get {
                return this.fldAssignmentStatusIDField;
            }
            set {
                this.fldAssignmentStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldAssignmentTypeID {
            get {
                return this.fldAssignmentTypeIDField;
            }
            set {
                this.fldAssignmentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldBoxID {
            get {
                return this.fldBoxIDField;
            }
            set {
                this.fldBoxIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterReadDate {
            get {
                return this.fldLetterReadDateField;
            }
            set {
                this.fldLetterReadDateField = value;
            }
        }
        
        /// <remarks/>
        public bool fldShowTypeT_F {
            get {
                return this.fldShowTypeT_FField;
            }
            set {
                this.fldShowTypeT_FField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_LetterFollow {
        
        private int fldIdField;
        
        private long fldLetterIdField;
        
        private string fldLetterTextField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public long fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldLetterText {
            get {
                return this.fldLetterTextField;
            }
            set {
                this.fldLetterTextField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Ronevesht {
        
        private int fldidField;
        
        private long fldLetterIdField;
        
        private System.Nullable<int> fldAshkhasHoghoghiTitlesIdField;
        
        private System.Nullable<int> fldCommisionIdField;
        
        private string fldAssignmentTypeIdField;
        
        private string fldTextField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldNameField;
        
        private string fldId_TypeField;
        
        /// <remarks/>
        public int fldid {
            get {
                return this.fldidField;
            }
            set {
                this.fldidField = value;
            }
        }
        
        /// <remarks/>
        public long fldLetterId {
            get {
                return this.fldLetterIdField;
            }
            set {
                this.fldLetterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldAshkhasHoghoghiTitlesId {
            get {
                return this.fldAshkhasHoghoghiTitlesIdField;
            }
            set {
                this.fldAshkhasHoghoghiTitlesIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldCommisionId {
            get {
                return this.fldCommisionIdField;
            }
            set {
                this.fldCommisionIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldAssignmentTypeId {
            get {
                return this.fldAssignmentTypeIdField;
            }
            set {
                this.fldAssignmentTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldText {
            get {
                return this.fldTextField;
            }
            set {
                this.fldTextField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldId_Type {
            get {
                return this.fldId_TypeField;
            }
            set {
                this.fldId_TypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterAttachmentLetterIDCompletedEventHandler(object sender, DeleteLetterAttachmentLetterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterAttachmentLetterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterAttachmentLetterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRoneveshtDetailCompletedEventHandler(object sender, GetRoneveshtDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoneveshtDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoneveshtDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Ronevesht Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Ronevesht)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRoneveshtWithFilterCompletedEventHandler(object sender, GetRoneveshtWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoneveshtWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoneveshtWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Ronevesht[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Ronevesht[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertRoneveshtCompletedEventHandler(object sender, InsertRoneveshtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRoneveshtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRoneveshtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateRoneveshtCompletedEventHandler(object sender, UpdateRoneveshtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRoneveshtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRoneveshtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteRoneveshtCompletedEventHandler(object sender, DeleteRoneveshtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRoneveshtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRoneveshtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterFollowDetailCompletedEventHandler(object sender, GetLetterFollowDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterFollowDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterFollowDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterFollow Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterFollow)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterFollowWithFilterCompletedEventHandler(object sender, GetLetterFollowWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterFollowWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterFollowWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterFollow[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterFollow[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLetterFollowCompletedEventHandler(object sender, InsertLetterFollowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLetterFollowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLetterFollowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterFollowCompletedEventHandler(object sender, UpdateLetterFollowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterFollowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterFollowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterFollowCompletedEventHandler(object sender, DeleteLetterFollowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterFollowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterFollowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterFollowLetterIDCompletedEventHandler(object sender, DeleteLetterFollowLetterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterFollowLetterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterFollowLetterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetReceiverAssignmentTypeDetailCompletedEventHandler(object sender, GetReceiverAssignmentTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiverAssignmentTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiverAssignmentTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ReceiverAssignmentType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ReceiverAssignmentType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetReceiverAssignmentTypeWithFilterCompletedEventHandler(object sender, GetReceiverAssignmentTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiverAssignmentTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiverAssignmentTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ReceiverAssignmentType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ReceiverAssignmentType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertReceiverAssignmentTypeCompletedEventHandler(object sender, InsertReceiverAssignmentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertReceiverAssignmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertReceiverAssignmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateReceiverAssignmentTypeCompletedEventHandler(object sender, UpdateReceiverAssignmentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReceiverAssignmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReceiverAssignmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteReceiverAssignmentTypeCompletedEventHandler(object sender, DeleteReceiverAssignmentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReceiverAssignmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReceiverAssignmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLetterNumberCompletedEventHandler(object sender, InsertLetterNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLetterNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLetterNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetHistoryLetterDetailCompletedEventHandler(object sender, GetHistoryLetterDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryLetterDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryLetterDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_HistoryLetter Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_HistoryLetter)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetHistoryLetterWithFilterCompletedEventHandler(object sender, GetHistoryLetterWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryLetterWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryLetterWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_HistoryLetter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_HistoryLetter[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertHistoryLetterCompletedEventHandler(object sender, InsertHistoryLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertHistoryLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertHistoryLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateHistoryLetterCompletedEventHandler(object sender, UpdateHistoryLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHistoryLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHistoryLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteHistoryLetterCompletedEventHandler(object sender, DeleteHistoryLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteHistoryLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteHistoryLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteTabagheBandiCompletedEventHandler(object sender, DeleteTabagheBandiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTabagheBandiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTabagheBandiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterStatusWithFilterCompletedEventHandler(object sender, GetLetterStatusWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterStatusWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterStatusWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterStatus[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterDetailCompletedEventHandler(object sender, GetLetterDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Letter Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Letter)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterWithFilterCompletedEventHandler(object sender, GetLetterWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Letter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Letter[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLetterCompletedEventHandler(object sender, InsertLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClsError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterCompletedEventHandler(object sender, UpdateLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterCompletedEventHandler(object sender, DeleteLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterNumDateCompletedEventHandler(object sender, UpdateLetterNumDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterNumDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterNumDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterStatusIdCompletedEventHandler(object sender, UpdateLetterStatusIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterStatusIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterStatusIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectInboxCompletedEventHandler(object sender, SelectInboxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectInboxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectInboxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Inbox[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Inbox[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectSavedLetterCompletedEventHandler(object sender, SelectSavedLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectSavedLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectSavedLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_SavedLetter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_SavedLetter[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectSentCompletedEventHandler(object sender, SelectSentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectSentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectSentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Sent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Sent[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectTrashCompletedEventHandler(object sender, SelectTrashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectTrashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectTrashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Trash[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Trash[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterBoxDetailCompletedEventHandler(object sender, GetLetterBoxDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterBoxDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterBoxDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterBox Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterBox)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterBoxWithFilterCompletedEventHandler(object sender, GetLetterBoxWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterBoxWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterBoxWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterBox[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterBox[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLetterBoxCompletedEventHandler(object sender, InsertLetterBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLetterBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLetterBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterBoxCompletedEventHandler(object sender, UpdateLetterBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterBoxCompletedEventHandler(object sender, DeleteLetterBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterBoxLetterIDCompletedEventHandler(object sender, DeleteLetterBoxLetterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterBoxLetterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterBoxLetterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterTabagheBandiDetailCompletedEventHandler(object sender, GetLetterTabagheBandiDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterTabagheBandiDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterTabagheBandiDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterTabagheBandi Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterTabagheBandi)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterTabagheBandiWithFilterCompletedEventHandler(object sender, GetLetterTabagheBandiWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterTabagheBandiWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterTabagheBandiWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterTabagheBandi[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterTabagheBandi[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLetterTabagheBandiCompletedEventHandler(object sender, InsertLetterTabagheBandiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLetterTabagheBandiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLetterTabagheBandiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterTabagheBandiCompletedEventHandler(object sender, UpdateLetterTabagheBandiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterTabagheBandiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterTabagheBandiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterTabagheBandiCompletedEventHandler(object sender, DeleteLetterTabagheBandiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterTabagheBandiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterTabagheBandiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAssignmentStatusWithFilterCompletedEventHandler(object sender, GetAssignmentStatusWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssignmentStatusWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssignmentStatusWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AssignmentStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AssignmentStatus[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAssignmentDetailCompletedEventHandler(object sender, GetAssignmentDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssignmentDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssignmentDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Assignment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Assignment)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAssignmentWithFilterCompletedEventHandler(object sender, GetAssignmentWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssignmentWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssignmentWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Assignment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Assignment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAssignmentCompletedEventHandler(object sender, InsertAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAssignmentCompletedEventHandler(object sender, UpdateAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAssignmentCompletedEventHandler(object sender, DeleteAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAssignmentLetterIDCompletedEventHandler(object sender, DeleteAssignmentLetterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAssignmentLetterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAssignmentLetterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInternalAssignmentReceiverDetailCompletedEventHandler(object sender, GetInternalAssignmentReceiverDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInternalAssignmentReceiverDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInternalAssignmentReceiverDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InternalAssignmentReceiver Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InternalAssignmentReceiver)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInternalAssignmentReceiverWithFilterCompletedEventHandler(object sender, GetInternalAssignmentReceiverWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInternalAssignmentReceiverWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInternalAssignmentReceiverWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InternalAssignmentReceiver[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InternalAssignmentReceiver[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertInternalAssignmentReceiverCompletedEventHandler(object sender, InsertInternalAssignmentReceiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInternalAssignmentReceiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInternalAssignmentReceiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateInternalAssignmentReceiverCompletedEventHandler(object sender, UpdateInternalAssignmentReceiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInternalAssignmentReceiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInternalAssignmentReceiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteInternalAssignmentReceiverCompletedEventHandler(object sender, DeleteInternalAssignmentReceiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInternalAssignmentReceiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInternalAssignmentReceiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateInternalAssignmentReceiverBoxCompletedEventHandler(object sender, UpdateInternalAssignmentReceiverBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInternalAssignmentReceiverBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInternalAssignmentReceiverBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateInternalAssignmentReceiverStatusCompletedEventHandler(object sender, UpdateInternalAssignmentReceiverStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInternalAssignmentReceiverStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInternalAssignmentReceiverStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInternalAssignmentSenderDetailCompletedEventHandler(object sender, GetInternalAssignmentSenderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInternalAssignmentSenderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInternalAssignmentSenderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InternalAssignmentSender Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InternalAssignmentSender)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInternalAssignmentSenderWithFilterCompletedEventHandler(object sender, GetInternalAssignmentSenderWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInternalAssignmentSenderWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInternalAssignmentSenderWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InternalAssignmentSender[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InternalAssignmentSender[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertInternalAssignmentSenderCompletedEventHandler(object sender, InsertInternalAssignmentSenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInternalAssignmentSenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInternalAssignmentSenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateInternalAssignmentSenderCompletedEventHandler(object sender, UpdateInternalAssignmentSenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInternalAssignmentSenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInternalAssignmentSenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteInternalAssignmentSenderCompletedEventHandler(object sender, DeleteInternalAssignmentSenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInternalAssignmentSenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInternalAssignmentSenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateInternalAssignmentSenderBoxCompletedEventHandler(object sender, UpdateInternalAssignmentSenderBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInternalAssignmentSenderBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInternalAssignmentSenderBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetArchiveDetailCompletedEventHandler(object sender, GetArchiveDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArchiveDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArchiveDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Archive Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Archive)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetArchiveWithFilterCompletedEventHandler(object sender, GetArchiveWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArchiveWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArchiveWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Archive[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Archive[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertArchiveCompletedEventHandler(object sender, InsertArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateArchiveCompletedEventHandler(object sender, UpdateArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteArchiveCompletedEventHandler(object sender, DeleteArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterArchiveDetailCompletedEventHandler(object sender, GetLetterArchiveDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterArchiveDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterArchiveDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterArchive Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterArchive)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterArchiveWithFilterCompletedEventHandler(object sender, GetLetterArchiveWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterArchiveWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterArchiveWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterArchive[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterArchive[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLetterArchiveCompletedEventHandler(object sender, InsertLetterArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLetterArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLetterArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterArchiveCompletedEventHandler(object sender, UpdateLetterArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterArchiveCompletedEventHandler(object sender, DeleteLetterArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterArchiveLetterIDCompletedEventHandler(object sender, DeleteLetterArchiveLetterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterArchiveLetterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterArchiveLetterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSignerDetailCompletedEventHandler(object sender, GetSignerDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignerDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignerDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Signer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Signer)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSignerWithFilterCompletedEventHandler(object sender, GetSignerWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignerWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignerWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Signer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Signer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertSignerCompletedEventHandler(object sender, InsertSignerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSignerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSignerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSignerCompletedEventHandler(object sender, UpdateSignerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSignerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSignerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSignerCompletedEventHandler(object sender, DeleteSignerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSignerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSignerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetExternalLetterReceiverDetailCompletedEventHandler(object sender, GetExternalLetterReceiverDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalLetterReceiverDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalLetterReceiverDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ExternalLetterReceiver Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ExternalLetterReceiver)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetExternalLetterReceiverWithFilterCompletedEventHandler(object sender, GetExternalLetterReceiverWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalLetterReceiverWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalLetterReceiverWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ExternalLetterReceiver[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ExternalLetterReceiver[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertExternalLetterReceiverCompletedEventHandler(object sender, InsertExternalLetterReceiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalLetterReceiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalLetterReceiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateExternalLetterReceiverCompletedEventHandler(object sender, UpdateExternalLetterReceiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateExternalLetterReceiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateExternalLetterReceiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteExternalLetterReceiverCompletedEventHandler(object sender, DeleteExternalLetterReceiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExternalLetterReceiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExternalLetterReceiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetExternalLetterSenderDetailCompletedEventHandler(object sender, GetExternalLetterSenderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalLetterSenderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalLetterSenderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ExternalLetterSender Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ExternalLetterSender)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetExternalLetterSenderWithFilterCompletedEventHandler(object sender, GetExternalLetterSenderWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalLetterSenderWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalLetterSenderWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ExternalLetterSender[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ExternalLetterSender[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertExternalLetterSenderCompletedEventHandler(object sender, InsertExternalLetterSenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalLetterSenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalLetterSenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateExternalLetterSenderCompletedEventHandler(object sender, UpdateExternalLetterSenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateExternalLetterSenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateExternalLetterSenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteExternalLetterSenderCompletedEventHandler(object sender, DeleteExternalLetterSenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExternalLetterSenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExternalLetterSenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInternalLetterReceiverDetailCompletedEventHandler(object sender, GetInternalLetterReceiverDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInternalLetterReceiverDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInternalLetterReceiverDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InternalLetterReceiver Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InternalLetterReceiver)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInternalLetterReceiverWithFilterCompletedEventHandler(object sender, GetInternalLetterReceiverWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInternalLetterReceiverWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInternalLetterReceiverWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InternalLetterReceiver[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InternalLetterReceiver[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertInternalLetterReceiverCompletedEventHandler(object sender, InsertInternalLetterReceiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInternalLetterReceiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInternalLetterReceiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateInternalLetterReceiverCompletedEventHandler(object sender, UpdateInternalLetterReceiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInternalLetterReceiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInternalLetterReceiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteInternalLetterReceiverCompletedEventHandler(object sender, DeleteInternalLetterReceiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInternalLetterReceiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInternalLetterReceiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetContentFileDetailCompletedEventHandler(object sender, GetContentFileDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentFileDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentFileDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ContentFile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ContentFile)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetContentFileWithFilterCompletedEventHandler(object sender, GetContentFileWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentFileWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentFileWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ContentFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ContentFile[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertContentFileCompletedEventHandler(object sender, InsertContentFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertContentFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertContentFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateContentFileCompletedEventHandler(object sender, UpdateContentFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContentFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContentFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteContentFileCompletedEventHandler(object sender, DeleteContentFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContentFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContentFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterAttachmentDetailCompletedEventHandler(object sender, GetLetterAttachmentDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterAttachmentDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterAttachmentDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterAttachment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterAttachment)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterAttachmentWithFilterCompletedEventHandler(object sender, GetLetterAttachmentWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterAttachmentWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterAttachmentWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterAttachment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterAttachment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLetterAttachmentCompletedEventHandler(object sender, InsertLetterAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLetterAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLetterAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterAttachmentCompletedEventHandler(object sender, UpdateLetterAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterAttachmentCompletedEventHandler(object sender, DeleteLetterAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCommisionDetailCompletedEventHandler(object sender, GetCommisionDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommisionDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommisionDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Commision Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Commision)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCommisionWithFilterCompletedEventHandler(object sender, GetCommisionWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommisionWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommisionWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Commision[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Commision[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCommisionCompletedEventHandler(object sender, InsertCommisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCommisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCommisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCommisionCompletedEventHandler(object sender, UpdateCommisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCommisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCommisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCommisionCompletedEventHandler(object sender, DeleteCommisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCommisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCommisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCommision_PostCompletedEventHandler(object sender, GetCommision_PostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommision_PostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommision_PostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Commision[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Commision[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAssignmentTypeDetailCompletedEventHandler(object sender, GetAssignmentTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssignmentTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssignmentTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AssignmentType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AssignmentType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAssignmentTypeWithFilterCompletedEventHandler(object sender, GetAssignmentTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssignmentTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssignmentTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AssignmentType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AssignmentType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAssignmentTypeCompletedEventHandler(object sender, InsertAssignmentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAssignmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAssignmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAssignmentTypeCompletedEventHandler(object sender, UpdateAssignmentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAssignmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAssignmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAssignmentTypeCompletedEventHandler(object sender, DeleteAssignmentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAssignmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAssignmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetImmediacyDetailCompletedEventHandler(object sender, GetImmediacyDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImmediacyDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImmediacyDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Immediacy Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Immediacy)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetImmediacyWithFilterCompletedEventHandler(object sender, GetImmediacyWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImmediacyWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImmediacyWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Immediacy[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Immediacy[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertImmediacyCompletedEventHandler(object sender, InsertImmediacyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertImmediacyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertImmediacyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateImmediacyCompletedEventHandler(object sender, UpdateImmediacyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateImmediacyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateImmediacyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteImmediacyCompletedEventHandler(object sender, DeleteImmediacyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteImmediacyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteImmediacyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetNumberingFormatDetailCompletedEventHandler(object sender, GetNumberingFormatDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumberingFormatDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumberingFormatDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_NumberingFormat Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_NumberingFormat)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetNumberingFormatWithFilterCompletedEventHandler(object sender, GetNumberingFormatWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumberingFormatWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumberingFormatWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_NumberingFormat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_NumberingFormat[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertNumberingFormatCompletedEventHandler(object sender, InsertNumberingFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNumberingFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNumberingFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateNumberingFormatCompletedEventHandler(object sender, UpdateNumberingFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNumberingFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNumberingFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteNumberingFormatCompletedEventHandler(object sender, DeleteNumberingFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNumberingFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNumberingFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSecurityTypeDetailCompletedEventHandler(object sender, GetSecurityTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_SecurityType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_SecurityType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSecurityTypeWithFilterCompletedEventHandler(object sender, GetSecurityTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_SecurityType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_SecurityType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertSecurityTypeCompletedEventHandler(object sender, InsertSecurityTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSecurityTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSecurityTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSecurityTypeCompletedEventHandler(object sender, UpdateSecurityTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSecurityTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSecurityTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSecurityTypeCompletedEventHandler(object sender, DeleteSecurityTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSecurityTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSecurityTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSettingDetailCompletedEventHandler(object sender, GetSettingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Setting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Setting)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSettingWithFilterCompletedEventHandler(object sender, GetSettingWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettingWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettingWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Setting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Setting[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertSettingCompletedEventHandler(object sender, InsertSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSettingCompletedEventHandler(object sender, UpdateSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSettingCompletedEventHandler(object sender, DeleteSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSecretariat_OrganizationUnitDetailCompletedEventHandler(object sender, GetSecretariat_OrganizationUnitDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecretariat_OrganizationUnitDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecretariat_OrganizationUnitDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Secretariat_OrganizationUnit Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Secretariat_OrganizationUnit)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSecretariat_OrganizationUnitWithFilterCompletedEventHandler(object sender, GetSecretariat_OrganizationUnitWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecretariat_OrganizationUnitWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecretariat_OrganizationUnitWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Secretariat_OrganizationUnit[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Secretariat_OrganizationUnit[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertSecretariat_OrganizationUnitCompletedEventHandler(object sender, InsertSecretariat_OrganizationUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSecretariat_OrganizationUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSecretariat_OrganizationUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSecretariat_OrganizationUnitCompletedEventHandler(object sender, UpdateSecretariat_OrganizationUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSecretariat_OrganizationUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSecretariat_OrganizationUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSecretariat_OrganizationUnitCompletedEventHandler(object sender, DeleteSecretariat_OrganizationUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSecretariat_OrganizationUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSecretariat_OrganizationUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSubstituteDetailCompletedEventHandler(object sender, GetSubstituteDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubstituteDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubstituteDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Substitute Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Substitute)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSubstituteWithFilterCompletedEventHandler(object sender, GetSubstituteWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubstituteWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubstituteWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Substitute[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Substitute[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertSubstituteCompletedEventHandler(object sender, InsertSubstituteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSubstituteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSubstituteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSubstituteCompletedEventHandler(object sender, UpdateSubstituteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSubstituteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSubstituteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSubstituteCompletedEventHandler(object sender, DeleteSubstituteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSubstituteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSubstituteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMergeFieldTypesWithFilterCompletedEventHandler(object sender, GetMergeFieldTypesWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMergeFieldTypesWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMergeFieldTypesWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MergeFieldTypes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MergeFieldTypes[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterTemplateDetailCompletedEventHandler(object sender, GetLetterTemplateDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterTemplateDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterTemplateDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterTemplate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterTemplate)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterTemplateWithFilterCompletedEventHandler(object sender, GetLetterTemplateWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterTemplateWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterTemplateWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterTemplate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLetterTemplateCompletedEventHandler(object sender, InsertLetterTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLetterTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLetterTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterTemplateCompletedEventHandler(object sender, UpdateLetterTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterTemplateCompletedEventHandler(object sender, DeleteLetterTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterTemplate_FormatCompletedEventHandler(object sender, UpdateLetterTemplate_FormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterTemplate_FormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterTemplate_FormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMergeField_LetterTemplateDetailCompletedEventHandler(object sender, GetMergeField_LetterTemplateDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMergeField_LetterTemplateDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMergeField_LetterTemplateDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MergeField_LetterTemplate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MergeField_LetterTemplate)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMergeField_LetterTemplateWithFilterCompletedEventHandler(object sender, GetMergeField_LetterTemplateWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMergeField_LetterTemplateWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMergeField_LetterTemplateWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MergeField_LetterTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MergeField_LetterTemplate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertMergeField_LetterTemplateCompletedEventHandler(object sender, InsertMergeField_LetterTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMergeField_LetterTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMergeField_LetterTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateMergeField_LetterTemplateCompletedEventHandler(object sender, UpdateMergeField_LetterTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMergeField_LetterTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMergeField_LetterTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteMergeField_LetterTemplateCompletedEventHandler(object sender, DeleteMergeField_LetterTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMergeField_LetterTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMergeField_LetterTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetReferralRulesDetailCompletedEventHandler(object sender, GetReferralRulesDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferralRulesDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferralRulesDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ReferralRules Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ReferralRules)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetReferralRulesWithFilterCompletedEventHandler(object sender, GetReferralRulesWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferralRulesWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferralRulesWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ReferralRules[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ReferralRules[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertReferralRulesCompletedEventHandler(object sender, InsertReferralRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertReferralRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertReferralRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateReferralRulesCompletedEventHandler(object sender, UpdateReferralRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReferralRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReferralRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteReferralRulesCompletedEventHandler(object sender, DeleteReferralRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReferralRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReferralRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMessageDetailCompletedEventHandler(object sender, GetMessageDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Message Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Message)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMessageWithFilterCompletedEventHandler(object sender, GetMessageWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Message[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Message[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertMessageCompletedEventHandler(object sender, InsertMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateMessageCompletedEventHandler(object sender, UpdateMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteMessageCompletedEventHandler(object sender, DeleteMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSavedMessageWithFilterCompletedEventHandler(object sender, GetSavedMessageWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSavedMessageWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSavedMessageWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_SavedMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_SavedMessage[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMessageAttachmentDetailCompletedEventHandler(object sender, GetMessageAttachmentDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageAttachmentDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageAttachmentDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MessageAttachment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MessageAttachment)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMessageAttachmentWithFilterCompletedEventHandler(object sender, GetMessageAttachmentWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageAttachmentWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageAttachmentWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MessageAttachment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MessageAttachment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertMessageAttachmentCompletedEventHandler(object sender, InsertMessageAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMessageAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMessageAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateMessageAttachmentCompletedEventHandler(object sender, UpdateMessageAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMessageAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMessageAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteMessageAttachmentCompletedEventHandler(object sender, DeleteMessageAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMessageAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMessageAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterFileMojazDetailCompletedEventHandler(object sender, GetLetterFileMojazDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterFileMojazDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterFileMojazDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterFileMojaz Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterFileMojaz)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLetterFileMojazWithFilterCompletedEventHandler(object sender, GetLetterFileMojazWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLetterFileMojazWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLetterFileMojazWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_LetterFileMojaz[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_LetterFileMojaz[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLetterFileMojazCompletedEventHandler(object sender, InsertLetterFileMojazCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLetterFileMojazCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLetterFileMojazCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateLetterFileMojazCompletedEventHandler(object sender, UpdateLetterFileMojazCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLetterFileMojazCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLetterFileMojazCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLetterFileMojazCompletedEventHandler(object sender, DeleteLetterFileMojazCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLetterFileMojazCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLetterFileMojazCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBoxDetailCompletedEventHandler(object sender, GetBoxDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Box Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Box)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBoxWithFilterCompletedEventHandler(object sender, GetBoxWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Box[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Box[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBoxCompletedEventHandler(object sender, InsertBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBoxCompletedEventHandler(object sender, UpdateBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteBoxCompletedEventHandler(object sender, DeleteBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBoxTypeIdCompletedEventHandler(object sender, GetBoxTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BoxType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BoxType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBoxTypeWithFilterCompletedEventHandler(object sender, GetBoxTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BoxType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BoxType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTabagheBandiDetailCompletedEventHandler(object sender, GetTabagheBandiDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTabagheBandiDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTabagheBandiDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TabagheBandi Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TabagheBandi)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTabagheBandiWithFilterCompletedEventHandler(object sender, GetTabagheBandiWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTabagheBandiWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTabagheBandiWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TabagheBandi[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TabagheBandi[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertTabagheBandiCompletedEventHandler(object sender, InsertTabagheBandiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTabagheBandiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTabagheBandiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateTabagheBandiCompletedEventHandler(object sender, UpdateTabagheBandiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTabagheBandiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTabagheBandiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591