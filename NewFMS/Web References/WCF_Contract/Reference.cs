//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NewFMS.WCF_Contract {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IContractService", Namespace="http://tempuri.org/")]
    public partial class ContractService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetRegistrationContractDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistrationContractWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRegistrationContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRegistrationContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRegistrationContractOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ContractService() {
            this.Url = global::NewFMS.Properties.Settings.Default.NewFMS_WCF_Contract_ContractService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetRegistrationContractDetailCompletedEventHandler GetRegistrationContractDetailCompleted;
        
        /// <remarks/>
        public event GetRegistrationContractWithFilterCompletedEventHandler GetRegistrationContractWithFilterCompleted;
        
        /// <remarks/>
        public event InsertRegistrationContractCompletedEventHandler InsertRegistrationContractCompleted;
        
        /// <remarks/>
        public event UpdateRegistrationContractCompletedEventHandler UpdateRegistrationContractCompleted;
        
        /// <remarks/>
        public event DeleteRegistrationContractCompletedEventHandler DeleteRegistrationContractCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IContractService/GetRegistrationContractDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_RegistrationContract GetRegistrationContractDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetRegistrationContractDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_RegistrationContract)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistrationContractDetailAsync(int Id, string IP) {
            this.GetRegistrationContractDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetRegistrationContractDetailAsync(int Id, string IP, object userState) {
            if ((this.GetRegistrationContractDetailOperationCompleted == null)) {
                this.GetRegistrationContractDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistrationContractDetailOperationCompleted);
            }
            this.InvokeAsync("GetRegistrationContractDetail", new object[] {
                        Id,
                        IP}, this.GetRegistrationContractDetailOperationCompleted, userState);
        }
        
        private void OnGetRegistrationContractDetailOperationCompleted(object arg) {
            if ((this.GetRegistrationContractDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistrationContractDetailCompleted(this, new GetRegistrationContractDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IContractService/GetRegistrationContractWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_RegistrationContract[] GetRegistrationContractWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetRegistrationContractWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_RegistrationContract[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistrationContractWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetRegistrationContractWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetRegistrationContractWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetRegistrationContractWithFilterOperationCompleted == null)) {
                this.GetRegistrationContractWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistrationContractWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetRegistrationContractWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetRegistrationContractWithFilterOperationCompleted, userState);
        }
        
        private void OnGetRegistrationContractWithFilterOperationCompleted(object arg) {
            if ((this.GetRegistrationContractWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistrationContractWithFilterCompleted(this, new GetRegistrationContractWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IContractService/InsertRegistrationContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertRegistrationContract(
                    int WarrantyId, 
                    byte RoleOrgan, 
                    string TitleContract, 
                    int AshkhasId, 
                    byte SuplyMaterialsType, 
                    long AmountContract, 
                    string Number, 
                    string Tarikh, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ShobeId, 
                    string SepamNum, 
                    string TarikhEtmam, 
                    string StartContract, 
                    string EndContract, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("InsertRegistrationContract", new object[] {
                        WarrantyId,
                        RoleOrgan,
                        TitleContract,
                        AshkhasId,
                        SuplyMaterialsType,
                        AmountContract,
                        Number,
                        Tarikh,
                        ShobeId,
                        SepamNum,
                        TarikhEtmam,
                        StartContract,
                        EndContract,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRegistrationContractAsync(
                    int WarrantyId, 
                    byte RoleOrgan, 
                    string TitleContract, 
                    int AshkhasId, 
                    byte SuplyMaterialsType, 
                    long AmountContract, 
                    string Number, 
                    string Tarikh, 
                    System.Nullable<int> ShobeId, 
                    string SepamNum, 
                    string TarikhEtmam, 
                    string StartContract, 
                    string EndContract, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.InsertRegistrationContractAsync(WarrantyId, RoleOrgan, TitleContract, AshkhasId, SuplyMaterialsType, AmountContract, Number, Tarikh, ShobeId, SepamNum, TarikhEtmam, StartContract, EndContract, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertRegistrationContractAsync(
                    int WarrantyId, 
                    byte RoleOrgan, 
                    string TitleContract, 
                    int AshkhasId, 
                    byte SuplyMaterialsType, 
                    long AmountContract, 
                    string Number, 
                    string Tarikh, 
                    System.Nullable<int> ShobeId, 
                    string SepamNum, 
                    string TarikhEtmam, 
                    string StartContract, 
                    string EndContract, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.InsertRegistrationContractOperationCompleted == null)) {
                this.InsertRegistrationContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRegistrationContractOperationCompleted);
            }
            this.InvokeAsync("InsertRegistrationContract", new object[] {
                        WarrantyId,
                        RoleOrgan,
                        TitleContract,
                        AshkhasId,
                        SuplyMaterialsType,
                        AmountContract,
                        Number,
                        Tarikh,
                        ShobeId,
                        SepamNum,
                        TarikhEtmam,
                        StartContract,
                        EndContract,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertRegistrationContractOperationCompleted, userState);
        }
        
        private void OnInsertRegistrationContractOperationCompleted(object arg) {
            if ((this.InsertRegistrationContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRegistrationContractCompleted(this, new InsertRegistrationContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IContractService/UpdateRegistrationContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateRegistrationContract(
                    int Id, 
                    int WarrantyId, 
                    byte RoleOrgan, 
                    string TitleContract, 
                    int AshkhasId, 
                    byte SuplyMaterialsType, 
                    long AmountContract, 
                    string Number, 
                    string Tarikh, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ShobeId, 
                    string SepamNum, 
                    string TarikhEtmam, 
                    string StartContract, 
                    string EndContract, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateRegistrationContract", new object[] {
                        Id,
                        WarrantyId,
                        RoleOrgan,
                        TitleContract,
                        AshkhasId,
                        SuplyMaterialsType,
                        AmountContract,
                        Number,
                        Tarikh,
                        ShobeId,
                        SepamNum,
                        TarikhEtmam,
                        StartContract,
                        EndContract,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRegistrationContractAsync(
                    int Id, 
                    int WarrantyId, 
                    byte RoleOrgan, 
                    string TitleContract, 
                    int AshkhasId, 
                    byte SuplyMaterialsType, 
                    long AmountContract, 
                    string Number, 
                    string Tarikh, 
                    System.Nullable<int> ShobeId, 
                    string SepamNum, 
                    string TarikhEtmam, 
                    string StartContract, 
                    string EndContract, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.UpdateRegistrationContractAsync(Id, WarrantyId, RoleOrgan, TitleContract, AshkhasId, SuplyMaterialsType, AmountContract, Number, Tarikh, ShobeId, SepamNum, TarikhEtmam, StartContract, EndContract, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateRegistrationContractAsync(
                    int Id, 
                    int WarrantyId, 
                    byte RoleOrgan, 
                    string TitleContract, 
                    int AshkhasId, 
                    byte SuplyMaterialsType, 
                    long AmountContract, 
                    string Number, 
                    string Tarikh, 
                    System.Nullable<int> ShobeId, 
                    string SepamNum, 
                    string TarikhEtmam, 
                    string StartContract, 
                    string EndContract, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.UpdateRegistrationContractOperationCompleted == null)) {
                this.UpdateRegistrationContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRegistrationContractOperationCompleted);
            }
            this.InvokeAsync("UpdateRegistrationContract", new object[] {
                        Id,
                        WarrantyId,
                        RoleOrgan,
                        TitleContract,
                        AshkhasId,
                        SuplyMaterialsType,
                        AmountContract,
                        Number,
                        Tarikh,
                        ShobeId,
                        SepamNum,
                        TarikhEtmam,
                        StartContract,
                        EndContract,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateRegistrationContractOperationCompleted, userState);
        }
        
        private void OnUpdateRegistrationContractOperationCompleted(object arg) {
            if ((this.UpdateRegistrationContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRegistrationContractCompleted(this, new UpdateRegistrationContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IContractService/DeleteRegistrationContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteRegistrationContract(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteRegistrationContract", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRegistrationContractAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteRegistrationContractAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteRegistrationContractAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteRegistrationContractOperationCompleted == null)) {
                this.DeleteRegistrationContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRegistrationContractOperationCompleted);
            }
            this.InvokeAsync("DeleteRegistrationContract", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteRegistrationContractOperationCompleted, userState);
        }
        
        private void OnDeleteRegistrationContractOperationCompleted(object arg) {
            if ((this.DeleteRegistrationContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRegistrationContractCompleted(this, new DeleteRegistrationContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_RegistrationContract {
        
        private int fldIdField;
        
        private int fldWarrantyIdField;
        
        private byte fldRoleOrganField;
        
        private string fldRoleOrgan_NameField;
        
        private string fldTitleContractField;
        
        private int fldAshkhasIdField;
        
        private byte fldSuplyMaterialsTypeField;
        
        private string fldSuplyMaterialsType_NameField;
        
        private long fldAmountContractField;
        
        private string fldNumberField;
        
        private string fldTarikhField;
        
        private System.Nullable<int> fldShobeIdField;
        
        private string fldSepamNumField;
        
        private string fldTarikhEtmamField;
        
        private string fldStartContractField;
        
        private string fldEndContractField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIpField;
        
        private int fldUserIdField;
        
        private int fldOrganIdField;
        
        private string fldWarentytype_NameField;
        
        private string fldCodeMelliField;
        
        private string fldName_ShakhsField;
        
        private string fldName_ShobeField;
        
        private int fldCodeSHobeField;
        
        private System.Nullable<int> fldBankIdField;
        
        private string fldBankNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldWarrantyId {
            get {
                return this.fldWarrantyIdField;
            }
            set {
                this.fldWarrantyIdField = value;
            }
        }
        
        /// <remarks/>
        public byte fldRoleOrgan {
            get {
                return this.fldRoleOrganField;
            }
            set {
                this.fldRoleOrganField = value;
            }
        }
        
        /// <remarks/>
        public string fldRoleOrgan_Name {
            get {
                return this.fldRoleOrgan_NameField;
            }
            set {
                this.fldRoleOrgan_NameField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleContract {
            get {
                return this.fldTitleContractField;
            }
            set {
                this.fldTitleContractField = value;
            }
        }
        
        /// <remarks/>
        public int fldAshkhasId {
            get {
                return this.fldAshkhasIdField;
            }
            set {
                this.fldAshkhasIdField = value;
            }
        }
        
        /// <remarks/>
        public byte fldSuplyMaterialsType {
            get {
                return this.fldSuplyMaterialsTypeField;
            }
            set {
                this.fldSuplyMaterialsTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldSuplyMaterialsType_Name {
            get {
                return this.fldSuplyMaterialsType_NameField;
            }
            set {
                this.fldSuplyMaterialsType_NameField = value;
            }
        }
        
        /// <remarks/>
        public long fldAmountContract {
            get {
                return this.fldAmountContractField;
            }
            set {
                this.fldAmountContractField = value;
            }
        }
        
        /// <remarks/>
        public string fldNumber {
            get {
                return this.fldNumberField;
            }
            set {
                this.fldNumberField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikh {
            get {
                return this.fldTarikhField;
            }
            set {
                this.fldTarikhField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldShobeId {
            get {
                return this.fldShobeIdField;
            }
            set {
                this.fldShobeIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldSepamNum {
            get {
                return this.fldSepamNumField;
            }
            set {
                this.fldSepamNumField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhEtmam {
            get {
                return this.fldTarikhEtmamField;
            }
            set {
                this.fldTarikhEtmamField = value;
            }
        }
        
        /// <remarks/>
        public string fldStartContract {
            get {
                return this.fldStartContractField;
            }
            set {
                this.fldStartContractField = value;
            }
        }
        
        /// <remarks/>
        public string fldEndContract {
            get {
                return this.fldEndContractField;
            }
            set {
                this.fldEndContractField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIp {
            get {
                return this.fldIpField;
            }
            set {
                this.fldIpField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldWarentytype_Name {
            get {
                return this.fldWarentytype_NameField;
            }
            set {
                this.fldWarentytype_NameField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodeMelli {
            get {
                return this.fldCodeMelliField;
            }
            set {
                this.fldCodeMelliField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_Shakhs {
            get {
                return this.fldName_ShakhsField;
            }
            set {
                this.fldName_ShakhsField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_Shobe {
            get {
                return this.fldName_ShobeField;
            }
            set {
                this.fldName_ShobeField = value;
            }
        }
        
        /// <remarks/>
        public int fldCodeSHobe {
            get {
                return this.fldCodeSHobeField;
            }
            set {
                this.fldCodeSHobeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldBankId {
            get {
                return this.fldBankIdField;
            }
            set {
                this.fldBankIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankName {
            get {
                return this.fldBankNameField;
            }
            set {
                this.fldBankNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ClsError {
        
        private string errorMsgField;
        
        private bool errorTypeField;
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        public bool ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRegistrationContractDetailCompletedEventHandler(object sender, GetRegistrationContractDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistrationContractDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistrationContractDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_RegistrationContract Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_RegistrationContract)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRegistrationContractWithFilterCompletedEventHandler(object sender, GetRegistrationContractWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistrationContractWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistrationContractWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_RegistrationContract[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_RegistrationContract[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertRegistrationContractCompletedEventHandler(object sender, InsertRegistrationContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRegistrationContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRegistrationContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateRegistrationContractCompletedEventHandler(object sender, UpdateRegistrationContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRegistrationContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRegistrationContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteRegistrationContractCompletedEventHandler(object sender, DeleteRegistrationContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRegistrationContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRegistrationContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591