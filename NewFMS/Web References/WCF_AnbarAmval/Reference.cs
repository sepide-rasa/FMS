//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NewFMS.WCF_AnbarAmval {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IAnbarAmvalService", Namespace="http://tempuri.org/")]
    public partial class AnbarAmvalService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetInsuranceTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInsuranceTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInsuranceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInsuranceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInsuranceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInsuranceCompanyDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInsuranceCompanyWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInsuranceCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInsuranceCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInsuranceCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnbarDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnbarWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAnbarOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAnbarOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAnbarOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePID_AnbarOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePID_Anbar_TreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePID_kalaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnbarTreeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnbarTreeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAnbarTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAnbarTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAnbarTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKalaTreeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKalaTreeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertKalaTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateKalaTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteKalaTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnbarGroupDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnbarGroupWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAnbarGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAnbarGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAnbarGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKalaGroupDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKalaGroupWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertKalaGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateKalaGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteKalaGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAnbar_TreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAnbar_TreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertKala_TreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Getkala_TarifNashodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnbar_TarifNashodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AnbarAmvalService() {
            this.Url = global::NewFMS.Properties.Settings.Default.NewFMS_WCF_AnbarAmval_AnbarAmvalService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetInsuranceTypeDetailCompletedEventHandler GetInsuranceTypeDetailCompleted;
        
        /// <remarks/>
        public event GetInsuranceTypeWithFilterCompletedEventHandler GetInsuranceTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertInsuranceTypeCompletedEventHandler InsertInsuranceTypeCompleted;
        
        /// <remarks/>
        public event UpdateInsuranceTypeCompletedEventHandler UpdateInsuranceTypeCompleted;
        
        /// <remarks/>
        public event DeleteInsuranceTypeCompletedEventHandler DeleteInsuranceTypeCompleted;
        
        /// <remarks/>
        public event GetInsuranceCompanyDetailCompletedEventHandler GetInsuranceCompanyDetailCompleted;
        
        /// <remarks/>
        public event GetInsuranceCompanyWithFilterCompletedEventHandler GetInsuranceCompanyWithFilterCompleted;
        
        /// <remarks/>
        public event InsertInsuranceCompanyCompletedEventHandler InsertInsuranceCompanyCompleted;
        
        /// <remarks/>
        public event UpdateInsuranceCompanyCompletedEventHandler UpdateInsuranceCompanyCompleted;
        
        /// <remarks/>
        public event DeleteInsuranceCompanyCompletedEventHandler DeleteInsuranceCompanyCompleted;
        
        /// <remarks/>
        public event GetAnbarDetailCompletedEventHandler GetAnbarDetailCompleted;
        
        /// <remarks/>
        public event GetAnbarWithFilterCompletedEventHandler GetAnbarWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAnbarCompletedEventHandler InsertAnbarCompleted;
        
        /// <remarks/>
        public event UpdateAnbarCompletedEventHandler UpdateAnbarCompleted;
        
        /// <remarks/>
        public event DeleteAnbarCompletedEventHandler DeleteAnbarCompleted;
        
        /// <remarks/>
        public event UpdatePID_AnbarCompletedEventHandler UpdatePID_AnbarCompleted;
        
        /// <remarks/>
        public event UpdatePID_Anbar_TreeCompletedEventHandler UpdatePID_Anbar_TreeCompleted;
        
        /// <remarks/>
        public event UpdatePID_kalaCompletedEventHandler UpdatePID_kalaCompleted;
        
        /// <remarks/>
        public event GetAnbarTreeDetailCompletedEventHandler GetAnbarTreeDetailCompleted;
        
        /// <remarks/>
        public event GetAnbarTreeWithFilterCompletedEventHandler GetAnbarTreeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAnbarTreeCompletedEventHandler InsertAnbarTreeCompleted;
        
        /// <remarks/>
        public event UpdateAnbarTreeCompletedEventHandler UpdateAnbarTreeCompleted;
        
        /// <remarks/>
        public event DeleteAnbarTreeCompletedEventHandler DeleteAnbarTreeCompleted;
        
        /// <remarks/>
        public event GetKalaTreeDetailCompletedEventHandler GetKalaTreeDetailCompleted;
        
        /// <remarks/>
        public event GetKalaTreeWithFilterCompletedEventHandler GetKalaTreeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertKalaTreeCompletedEventHandler InsertKalaTreeCompleted;
        
        /// <remarks/>
        public event UpdateKalaTreeCompletedEventHandler UpdateKalaTreeCompleted;
        
        /// <remarks/>
        public event DeleteKalaTreeCompletedEventHandler DeleteKalaTreeCompleted;
        
        /// <remarks/>
        public event GetAnbarGroupDetailCompletedEventHandler GetAnbarGroupDetailCompleted;
        
        /// <remarks/>
        public event GetAnbarGroupWithFilterCompletedEventHandler GetAnbarGroupWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAnbarGroupCompletedEventHandler InsertAnbarGroupCompleted;
        
        /// <remarks/>
        public event UpdateAnbarGroupCompletedEventHandler UpdateAnbarGroupCompleted;
        
        /// <remarks/>
        public event DeleteAnbarGroupCompletedEventHandler DeleteAnbarGroupCompleted;
        
        /// <remarks/>
        public event GetKalaGroupDetailCompletedEventHandler GetKalaGroupDetailCompleted;
        
        /// <remarks/>
        public event GetKalaGroupWithFilterCompletedEventHandler GetKalaGroupWithFilterCompleted;
        
        /// <remarks/>
        public event InsertKalaGroupCompletedEventHandler InsertKalaGroupCompleted;
        
        /// <remarks/>
        public event UpdateKalaGroupCompletedEventHandler UpdateKalaGroupCompleted;
        
        /// <remarks/>
        public event DeleteKalaGroupCompletedEventHandler DeleteKalaGroupCompleted;
        
        /// <remarks/>
        public event InsertAnbar_TreeCompletedEventHandler InsertAnbar_TreeCompleted;
        
        /// <remarks/>
        public event DeleteAnbar_TreeCompletedEventHandler DeleteAnbar_TreeCompleted;
        
        /// <remarks/>
        public event InsertKala_TreeCompletedEventHandler InsertKala_TreeCompleted;
        
        /// <remarks/>
        public event Getkala_TarifNashodeCompletedEventHandler Getkala_TarifNashodeCompleted;
        
        /// <remarks/>
        public event GetAnbar_TarifNashodeCompletedEventHandler GetAnbar_TarifNashodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetInsuranceTypeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InsuranceType GetInsuranceTypeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInsuranceTypeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InsuranceType)(results[0]));
        }
        
        /// <remarks/>
        public void GetInsuranceTypeDetailAsync(int Id, string IP) {
            this.GetInsuranceTypeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetInsuranceTypeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetInsuranceTypeDetailOperationCompleted == null)) {
                this.GetInsuranceTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInsuranceTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetInsuranceTypeDetail", new object[] {
                        Id,
                        IP}, this.GetInsuranceTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetInsuranceTypeDetailOperationCompleted(object arg) {
            if ((this.GetInsuranceTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInsuranceTypeDetailCompleted(this, new GetInsuranceTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetInsuranceTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InsuranceType[] GetInsuranceTypeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInsuranceTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InsuranceType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInsuranceTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetInsuranceTypeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetInsuranceTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetInsuranceTypeWithFilterOperationCompleted == null)) {
                this.GetInsuranceTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInsuranceTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetInsuranceTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetInsuranceTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetInsuranceTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetInsuranceTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInsuranceTypeWithFilterCompleted(this, new GetInsuranceTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/InsertInsuranceType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertInsuranceType(string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertInsuranceType", new object[] {
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertInsuranceTypeAsync(string fldTitle, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertInsuranceTypeAsync(fldTitle, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertInsuranceTypeAsync(string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertInsuranceTypeOperationCompleted == null)) {
                this.InsertInsuranceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInsuranceTypeOperationCompleted);
            }
            this.InvokeAsync("InsertInsuranceType", new object[] {
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertInsuranceTypeOperationCompleted, userState);
        }
        
        private void OnInsertInsuranceTypeOperationCompleted(object arg) {
            if ((this.InsertInsuranceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInsuranceTypeCompleted(this, new InsertInsuranceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/UpdateInsuranceType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateInsuranceType(int fldId, string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateInsuranceType", new object[] {
                        fldId,
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInsuranceTypeAsync(int fldId, string fldTitle, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateInsuranceTypeAsync(fldId, fldTitle, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateInsuranceTypeAsync(int fldId, string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateInsuranceTypeOperationCompleted == null)) {
                this.UpdateInsuranceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInsuranceTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateInsuranceType", new object[] {
                        fldId,
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateInsuranceTypeOperationCompleted, userState);
        }
        
        private void OnUpdateInsuranceTypeOperationCompleted(object arg) {
            if ((this.UpdateInsuranceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInsuranceTypeCompleted(this, new UpdateInsuranceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/DeleteInsuranceType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteInsuranceType(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteInsuranceType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInsuranceTypeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteInsuranceTypeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteInsuranceTypeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteInsuranceTypeOperationCompleted == null)) {
                this.DeleteInsuranceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInsuranceTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteInsuranceType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteInsuranceTypeOperationCompleted, userState);
        }
        
        private void OnDeleteInsuranceTypeOperationCompleted(object arg) {
            if ((this.DeleteInsuranceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInsuranceTypeCompleted(this, new DeleteInsuranceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetInsuranceCompanyDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InsuranceCompany GetInsuranceCompanyDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInsuranceCompanyDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InsuranceCompany)(results[0]));
        }
        
        /// <remarks/>
        public void GetInsuranceCompanyDetailAsync(int Id, string IP) {
            this.GetInsuranceCompanyDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetInsuranceCompanyDetailAsync(int Id, string IP, object userState) {
            if ((this.GetInsuranceCompanyDetailOperationCompleted == null)) {
                this.GetInsuranceCompanyDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInsuranceCompanyDetailOperationCompleted);
            }
            this.InvokeAsync("GetInsuranceCompanyDetail", new object[] {
                        Id,
                        IP}, this.GetInsuranceCompanyDetailOperationCompleted, userState);
        }
        
        private void OnGetInsuranceCompanyDetailOperationCompleted(object arg) {
            if ((this.GetInsuranceCompanyDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInsuranceCompanyDetailCompleted(this, new GetInsuranceCompanyDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetInsuranceCompanyWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InsuranceCompany[] GetInsuranceCompanyWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInsuranceCompanyWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InsuranceCompany[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInsuranceCompanyWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetInsuranceCompanyWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetInsuranceCompanyWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetInsuranceCompanyWithFilterOperationCompleted == null)) {
                this.GetInsuranceCompanyWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInsuranceCompanyWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetInsuranceCompanyWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetInsuranceCompanyWithFilterOperationCompleted, userState);
        }
        
        private void OnGetInsuranceCompanyWithFilterOperationCompleted(object arg) {
            if ((this.GetInsuranceCompanyWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInsuranceCompanyWithFilterCompleted(this, new GetInsuranceCompanyWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/InsertInsuranceCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertInsuranceCompany(string Name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertInsuranceCompany", new object[] {
                        Name,
                        File,
                        Pasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertInsuranceCompanyAsync(string Name, byte[] File, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertInsuranceCompanyAsync(Name, File, Pasvand, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertInsuranceCompanyAsync(string Name, byte[] File, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertInsuranceCompanyOperationCompleted == null)) {
                this.InsertInsuranceCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInsuranceCompanyOperationCompleted);
            }
            this.InvokeAsync("InsertInsuranceCompany", new object[] {
                        Name,
                        File,
                        Pasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertInsuranceCompanyOperationCompleted, userState);
        }
        
        private void OnInsertInsuranceCompanyOperationCompleted(object arg) {
            if ((this.InsertInsuranceCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInsuranceCompanyCompleted(this, new InsertInsuranceCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/UpdateInsuranceCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateInsuranceCompany(int Id, string Name, int FileId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateInsuranceCompany", new object[] {
                        Id,
                        Name,
                        FileId,
                        File,
                        Pasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInsuranceCompanyAsync(int Id, string Name, int FileId, byte[] File, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateInsuranceCompanyAsync(Id, Name, FileId, File, Pasvand, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateInsuranceCompanyAsync(int Id, string Name, int FileId, byte[] File, string Pasvand, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateInsuranceCompanyOperationCompleted == null)) {
                this.UpdateInsuranceCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInsuranceCompanyOperationCompleted);
            }
            this.InvokeAsync("UpdateInsuranceCompany", new object[] {
                        Id,
                        Name,
                        FileId,
                        File,
                        Pasvand,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateInsuranceCompanyOperationCompleted, userState);
        }
        
        private void OnUpdateInsuranceCompanyOperationCompleted(object arg) {
            if ((this.UpdateInsuranceCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInsuranceCompanyCompleted(this, new UpdateInsuranceCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/DeleteInsuranceCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteInsuranceCompany(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteInsuranceCompany", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInsuranceCompanyAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteInsuranceCompanyAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteInsuranceCompanyAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteInsuranceCompanyOperationCompleted == null)) {
                this.DeleteInsuranceCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInsuranceCompanyOperationCompleted);
            }
            this.InvokeAsync("DeleteInsuranceCompany", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteInsuranceCompanyOperationCompleted, userState);
        }
        
        private void OnDeleteInsuranceCompanyOperationCompleted(object arg) {
            if ((this.DeleteInsuranceCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInsuranceCompanyCompleted(this, new DeleteInsuranceCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetAnbarDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Anbar GetAnbarDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAnbarDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Anbar)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnbarDetailAsync(int Id, string IP) {
            this.GetAnbarDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetAnbarDetailAsync(int Id, string IP, object userState) {
            if ((this.GetAnbarDetailOperationCompleted == null)) {
                this.GetAnbarDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnbarDetailOperationCompleted);
            }
            this.InvokeAsync("GetAnbarDetail", new object[] {
                        Id,
                        IP}, this.GetAnbarDetailOperationCompleted, userState);
        }
        
        private void OnGetAnbarDetailOperationCompleted(object arg) {
            if ((this.GetAnbarDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnbarDetailCompleted(this, new GetAnbarDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetAnbarWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Anbar[] GetAnbarWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAnbarWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Anbar[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAnbarWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetAnbarWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAnbarWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetAnbarWithFilterOperationCompleted == null)) {
                this.GetAnbarWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnbarWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAnbarWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetAnbarWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAnbarWithFilterOperationCompleted(object arg) {
            if ((this.GetAnbarWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnbarWithFilterCompleted(this, new GetAnbarWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/InsertAnbar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAnbar(string Name, string Address, string Phone, string AnbarTreeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAnbar", new object[] {
                        Name,
                        Address,
                        Phone,
                        AnbarTreeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAnbarAsync(string Name, string Address, string Phone, string AnbarTreeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertAnbarAsync(Name, Address, Phone, AnbarTreeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAnbarAsync(string Name, string Address, string Phone, string AnbarTreeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAnbarOperationCompleted == null)) {
                this.InsertAnbarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAnbarOperationCompleted);
            }
            this.InvokeAsync("InsertAnbar", new object[] {
                        Name,
                        Address,
                        Phone,
                        AnbarTreeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertAnbarOperationCompleted, userState);
        }
        
        private void OnInsertAnbarOperationCompleted(object arg) {
            if ((this.InsertAnbarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAnbarCompleted(this, new InsertAnbarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/UpdateAnbar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAnbar(int Id, string Name, string Address, string Phone, string AnbarTreeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAnbar", new object[] {
                        Id,
                        Name,
                        Address,
                        Phone,
                        AnbarTreeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAnbarAsync(int Id, string Name, string Address, string Phone, string AnbarTreeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateAnbarAsync(Id, Name, Address, Phone, AnbarTreeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAnbarAsync(int Id, string Name, string Address, string Phone, string AnbarTreeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateAnbarOperationCompleted == null)) {
                this.UpdateAnbarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAnbarOperationCompleted);
            }
            this.InvokeAsync("UpdateAnbar", new object[] {
                        Id,
                        Name,
                        Address,
                        Phone,
                        AnbarTreeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateAnbarOperationCompleted, userState);
        }
        
        private void OnUpdateAnbarOperationCompleted(object arg) {
            if ((this.UpdateAnbarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAnbarCompleted(this, new UpdateAnbarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/DeleteAnbar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAnbar(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAnbar", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAnbarAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAnbarAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAnbarAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAnbarOperationCompleted == null)) {
                this.DeleteAnbarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAnbarOperationCompleted);
            }
            this.InvokeAsync("DeleteAnbar", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAnbarOperationCompleted, userState);
        }
        
        private void OnDeleteAnbarOperationCompleted(object arg) {
            if ((this.DeleteAnbarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAnbarCompleted(this, new DeleteAnbarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/UpdatePID_Anbar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePID_Anbar(int Child, int Parent, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdatePID_Anbar", new object[] {
                        Child,
                        Parent,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePID_AnbarAsync(int Child, int Parent, string Username, string Password, int OrganId, string IP) {
            this.UpdatePID_AnbarAsync(Child, Parent, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdatePID_AnbarAsync(int Child, int Parent, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdatePID_AnbarOperationCompleted == null)) {
                this.UpdatePID_AnbarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePID_AnbarOperationCompleted);
            }
            this.InvokeAsync("UpdatePID_Anbar", new object[] {
                        Child,
                        Parent,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdatePID_AnbarOperationCompleted, userState);
        }
        
        private void OnUpdatePID_AnbarOperationCompleted(object arg) {
            if ((this.UpdatePID_AnbarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePID_AnbarCompleted(this, new UpdatePID_AnbarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/UpdatePID_Anbar_Tree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePID_Anbar_Tree(int Anbar_TreeId, int Parent, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdatePID_Anbar_Tree", new object[] {
                        Anbar_TreeId,
                        Parent,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePID_Anbar_TreeAsync(int Anbar_TreeId, int Parent, string Username, string Password, int OrganId, string IP) {
            this.UpdatePID_Anbar_TreeAsync(Anbar_TreeId, Parent, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdatePID_Anbar_TreeAsync(int Anbar_TreeId, int Parent, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdatePID_Anbar_TreeOperationCompleted == null)) {
                this.UpdatePID_Anbar_TreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePID_Anbar_TreeOperationCompleted);
            }
            this.InvokeAsync("UpdatePID_Anbar_Tree", new object[] {
                        Anbar_TreeId,
                        Parent,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdatePID_Anbar_TreeOperationCompleted, userState);
        }
        
        private void OnUpdatePID_Anbar_TreeOperationCompleted(object arg) {
            if ((this.UpdatePID_Anbar_TreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePID_Anbar_TreeCompleted(this, new UpdatePID_Anbar_TreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/UpdatePID_kala", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePID_kala(int Child, int Parent, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdatePID_kala", new object[] {
                        Child,
                        Parent,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePID_kalaAsync(int Child, int Parent, string Username, string Password, int OrganId, string IP) {
            this.UpdatePID_kalaAsync(Child, Parent, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdatePID_kalaAsync(int Child, int Parent, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdatePID_kalaOperationCompleted == null)) {
                this.UpdatePID_kalaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePID_kalaOperationCompleted);
            }
            this.InvokeAsync("UpdatePID_kala", new object[] {
                        Child,
                        Parent,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdatePID_kalaOperationCompleted, userState);
        }
        
        private void OnUpdatePID_kalaOperationCompleted(object arg) {
            if ((this.UpdatePID_kalaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePID_kalaCompleted(this, new UpdatePID_kalaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetAnbarTreeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AnbarTree GetAnbarTreeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAnbarTreeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AnbarTree)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnbarTreeDetailAsync(int Id, string IP) {
            this.GetAnbarTreeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetAnbarTreeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetAnbarTreeDetailOperationCompleted == null)) {
                this.GetAnbarTreeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnbarTreeDetailOperationCompleted);
            }
            this.InvokeAsync("GetAnbarTreeDetail", new object[] {
                        Id,
                        IP}, this.GetAnbarTreeDetailOperationCompleted, userState);
        }
        
        private void OnGetAnbarTreeDetailOperationCompleted(object arg) {
            if ((this.GetAnbarTreeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnbarTreeDetailCompleted(this, new GetAnbarTreeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetAnbarTreeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AnbarTree[] GetAnbarTreeWithFilter(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAnbarTreeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AnbarTree[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAnbarTreeWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP) {
            this.GetAnbarTreeWithFilterAsync(FieldName, FilterValue, FilterValue2, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAnbarTreeWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, object userState) {
            if ((this.GetAnbarTreeWithFilterOperationCompleted == null)) {
                this.GetAnbarTreeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnbarTreeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAnbarTreeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP}, this.GetAnbarTreeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAnbarTreeWithFilterOperationCompleted(object arg) {
            if ((this.GetAnbarTreeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnbarTreeWithFilterCompleted(this, new GetAnbarTreeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/InsertAnbarTree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAnbarTree([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAnbarTree", new object[] {
                        PID,
                        Name,
                        GroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAnbarTreeAsync(System.Nullable<int> PID, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertAnbarTreeAsync(PID, Name, GroupId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAnbarTreeAsync(System.Nullable<int> PID, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAnbarTreeOperationCompleted == null)) {
                this.InsertAnbarTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAnbarTreeOperationCompleted);
            }
            this.InvokeAsync("InsertAnbarTree", new object[] {
                        PID,
                        Name,
                        GroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertAnbarTreeOperationCompleted, userState);
        }
        
        private void OnInsertAnbarTreeOperationCompleted(object arg) {
            if ((this.InsertAnbarTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAnbarTreeCompleted(this, new InsertAnbarTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/UpdateAnbarTree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAnbarTree(int Id, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAnbarTree", new object[] {
                        Id,
                        Name,
                        GroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAnbarTreeAsync(int Id, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateAnbarTreeAsync(Id, Name, GroupId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAnbarTreeAsync(int Id, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateAnbarTreeOperationCompleted == null)) {
                this.UpdateAnbarTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAnbarTreeOperationCompleted);
            }
            this.InvokeAsync("UpdateAnbarTree", new object[] {
                        Id,
                        Name,
                        GroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateAnbarTreeOperationCompleted, userState);
        }
        
        private void OnUpdateAnbarTreeOperationCompleted(object arg) {
            if ((this.UpdateAnbarTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAnbarTreeCompleted(this, new UpdateAnbarTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/DeleteAnbarTree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAnbarTree(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAnbarTree", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAnbarTreeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAnbarTreeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAnbarTreeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAnbarTreeOperationCompleted == null)) {
                this.DeleteAnbarTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAnbarTreeOperationCompleted);
            }
            this.InvokeAsync("DeleteAnbarTree", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAnbarTreeOperationCompleted, userState);
        }
        
        private void OnDeleteAnbarTreeOperationCompleted(object arg) {
            if ((this.DeleteAnbarTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAnbarTreeCompleted(this, new DeleteAnbarTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetKalaTreeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_KalaTree GetKalaTreeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetKalaTreeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_KalaTree)(results[0]));
        }
        
        /// <remarks/>
        public void GetKalaTreeDetailAsync(int Id, string IP) {
            this.GetKalaTreeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetKalaTreeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetKalaTreeDetailOperationCompleted == null)) {
                this.GetKalaTreeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKalaTreeDetailOperationCompleted);
            }
            this.InvokeAsync("GetKalaTreeDetail", new object[] {
                        Id,
                        IP}, this.GetKalaTreeDetailOperationCompleted, userState);
        }
        
        private void OnGetKalaTreeDetailOperationCompleted(object arg) {
            if ((this.GetKalaTreeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKalaTreeDetailCompleted(this, new GetKalaTreeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetKalaTreeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_KalaTree[] GetKalaTreeWithFilter(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetKalaTreeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_KalaTree[])(results[0]));
        }
        
        /// <remarks/>
        public void GetKalaTreeWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP) {
            this.GetKalaTreeWithFilterAsync(FieldName, FilterValue, FilterValue2, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetKalaTreeWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, object userState) {
            if ((this.GetKalaTreeWithFilterOperationCompleted == null)) {
                this.GetKalaTreeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKalaTreeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetKalaTreeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP}, this.GetKalaTreeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetKalaTreeWithFilterOperationCompleted(object arg) {
            if ((this.GetKalaTreeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKalaTreeWithFilterCompleted(this, new GetKalaTreeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/InsertKalaTree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertKalaTree([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertKalaTree", new object[] {
                        PID,
                        Name,
                        GroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertKalaTreeAsync(System.Nullable<int> PID, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertKalaTreeAsync(PID, Name, GroupId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertKalaTreeAsync(System.Nullable<int> PID, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertKalaTreeOperationCompleted == null)) {
                this.InsertKalaTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertKalaTreeOperationCompleted);
            }
            this.InvokeAsync("InsertKalaTree", new object[] {
                        PID,
                        Name,
                        GroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertKalaTreeOperationCompleted, userState);
        }
        
        private void OnInsertKalaTreeOperationCompleted(object arg) {
            if ((this.InsertKalaTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertKalaTreeCompleted(this, new InsertKalaTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/UpdateKalaTree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateKalaTree(int Id, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateKalaTree", new object[] {
                        Id,
                        Name,
                        GroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateKalaTreeAsync(int Id, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateKalaTreeAsync(Id, Name, GroupId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateKalaTreeAsync(int Id, string Name, int GroupId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateKalaTreeOperationCompleted == null)) {
                this.UpdateKalaTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateKalaTreeOperationCompleted);
            }
            this.InvokeAsync("UpdateKalaTree", new object[] {
                        Id,
                        Name,
                        GroupId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateKalaTreeOperationCompleted, userState);
        }
        
        private void OnUpdateKalaTreeOperationCompleted(object arg) {
            if ((this.UpdateKalaTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateKalaTreeCompleted(this, new UpdateKalaTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/DeleteKalaTree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteKalaTree(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteKalaTree", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteKalaTreeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteKalaTreeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteKalaTreeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteKalaTreeOperationCompleted == null)) {
                this.DeleteKalaTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteKalaTreeOperationCompleted);
            }
            this.InvokeAsync("DeleteKalaTree", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteKalaTreeOperationCompleted, userState);
        }
        
        private void OnDeleteKalaTreeOperationCompleted(object arg) {
            if ((this.DeleteKalaTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteKalaTreeCompleted(this, new DeleteKalaTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetAnbarGroupDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AnbarGroup GetAnbarGroupDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAnbarGroupDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AnbarGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnbarGroupDetailAsync(int Id, string IP) {
            this.GetAnbarGroupDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetAnbarGroupDetailAsync(int Id, string IP, object userState) {
            if ((this.GetAnbarGroupDetailOperationCompleted == null)) {
                this.GetAnbarGroupDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnbarGroupDetailOperationCompleted);
            }
            this.InvokeAsync("GetAnbarGroupDetail", new object[] {
                        Id,
                        IP}, this.GetAnbarGroupDetailOperationCompleted, userState);
        }
        
        private void OnGetAnbarGroupDetailOperationCompleted(object arg) {
            if ((this.GetAnbarGroupDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnbarGroupDetailCompleted(this, new GetAnbarGroupDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetAnbarGroupWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AnbarGroup[] GetAnbarGroupWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAnbarGroupWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AnbarGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAnbarGroupWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetAnbarGroupWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAnbarGroupWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetAnbarGroupWithFilterOperationCompleted == null)) {
                this.GetAnbarGroupWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnbarGroupWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAnbarGroupWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetAnbarGroupWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAnbarGroupWithFilterOperationCompleted(object arg) {
            if ((this.GetAnbarGroupWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnbarGroupWithFilterCompleted(this, new GetAnbarGroupWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/InsertAnbarGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAnbarGroup(string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAnbarGroup", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAnbarGroupAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertAnbarGroupAsync(Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAnbarGroupAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAnbarGroupOperationCompleted == null)) {
                this.InsertAnbarGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAnbarGroupOperationCompleted);
            }
            this.InvokeAsync("InsertAnbarGroup", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertAnbarGroupOperationCompleted, userState);
        }
        
        private void OnInsertAnbarGroupOperationCompleted(object arg) {
            if ((this.InsertAnbarGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAnbarGroupCompleted(this, new InsertAnbarGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/UpdateAnbarGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAnbarGroup(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAnbarGroup", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAnbarGroupAsync(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateAnbarGroupAsync(Id, Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAnbarGroupAsync(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateAnbarGroupOperationCompleted == null)) {
                this.UpdateAnbarGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAnbarGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateAnbarGroup", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateAnbarGroupOperationCompleted, userState);
        }
        
        private void OnUpdateAnbarGroupOperationCompleted(object arg) {
            if ((this.UpdateAnbarGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAnbarGroupCompleted(this, new UpdateAnbarGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/DeleteAnbarGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAnbarGroup(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAnbarGroup", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAnbarGroupAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAnbarGroupAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAnbarGroupAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAnbarGroupOperationCompleted == null)) {
                this.DeleteAnbarGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAnbarGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteAnbarGroup", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAnbarGroupOperationCompleted, userState);
        }
        
        private void OnDeleteAnbarGroupOperationCompleted(object arg) {
            if ((this.DeleteAnbarGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAnbarGroupCompleted(this, new DeleteAnbarGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetKalaGroupDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_KalaGroup GetKalaGroupDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetKalaGroupDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_KalaGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetKalaGroupDetailAsync(int Id, string IP) {
            this.GetKalaGroupDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetKalaGroupDetailAsync(int Id, string IP, object userState) {
            if ((this.GetKalaGroupDetailOperationCompleted == null)) {
                this.GetKalaGroupDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKalaGroupDetailOperationCompleted);
            }
            this.InvokeAsync("GetKalaGroupDetail", new object[] {
                        Id,
                        IP}, this.GetKalaGroupDetailOperationCompleted, userState);
        }
        
        private void OnGetKalaGroupDetailOperationCompleted(object arg) {
            if ((this.GetKalaGroupDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKalaGroupDetailCompleted(this, new GetKalaGroupDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetKalaGroupWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_KalaGroup[] GetKalaGroupWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetKalaGroupWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_KalaGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetKalaGroupWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetKalaGroupWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetKalaGroupWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetKalaGroupWithFilterOperationCompleted == null)) {
                this.GetKalaGroupWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKalaGroupWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetKalaGroupWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetKalaGroupWithFilterOperationCompleted, userState);
        }
        
        private void OnGetKalaGroupWithFilterOperationCompleted(object arg) {
            if ((this.GetKalaGroupWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKalaGroupWithFilterCompleted(this, new GetKalaGroupWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/InsertKalaGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertKalaGroup(string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertKalaGroup", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertKalaGroupAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertKalaGroupAsync(Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertKalaGroupAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertKalaGroupOperationCompleted == null)) {
                this.InsertKalaGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertKalaGroupOperationCompleted);
            }
            this.InvokeAsync("InsertKalaGroup", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertKalaGroupOperationCompleted, userState);
        }
        
        private void OnInsertKalaGroupOperationCompleted(object arg) {
            if ((this.InsertKalaGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertKalaGroupCompleted(this, new InsertKalaGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/UpdateKalaGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateKalaGroup(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateKalaGroup", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateKalaGroupAsync(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateKalaGroupAsync(Id, Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateKalaGroupAsync(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateKalaGroupOperationCompleted == null)) {
                this.UpdateKalaGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateKalaGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateKalaGroup", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateKalaGroupOperationCompleted, userState);
        }
        
        private void OnUpdateKalaGroupOperationCompleted(object arg) {
            if ((this.UpdateKalaGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateKalaGroupCompleted(this, new UpdateKalaGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/DeleteKalaGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteKalaGroup(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteKalaGroup", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteKalaGroupAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteKalaGroupAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteKalaGroupAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteKalaGroupOperationCompleted == null)) {
                this.DeleteKalaGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteKalaGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteKalaGroup", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteKalaGroupOperationCompleted, userState);
        }
        
        private void OnDeleteKalaGroupOperationCompleted(object arg) {
            if ((this.DeleteKalaGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteKalaGroupCompleted(this, new DeleteKalaGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/InsertAnbar_Tree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAnbar_Tree(int AnbarId, int AnbarTreeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAnbar_Tree", new object[] {
                        AnbarId,
                        AnbarTreeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAnbar_TreeAsync(int AnbarId, int AnbarTreeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertAnbar_TreeAsync(AnbarId, AnbarTreeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAnbar_TreeAsync(int AnbarId, int AnbarTreeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAnbar_TreeOperationCompleted == null)) {
                this.InsertAnbar_TreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAnbar_TreeOperationCompleted);
            }
            this.InvokeAsync("InsertAnbar_Tree", new object[] {
                        AnbarId,
                        AnbarTreeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertAnbar_TreeOperationCompleted, userState);
        }
        
        private void OnInsertAnbar_TreeOperationCompleted(object arg) {
            if ((this.InsertAnbar_TreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAnbar_TreeCompleted(this, new InsertAnbar_TreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/DeleteAnbar_Tree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAnbar_Tree(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAnbar_Tree", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAnbar_TreeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAnbar_TreeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAnbar_TreeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAnbar_TreeOperationCompleted == null)) {
                this.DeleteAnbar_TreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAnbar_TreeOperationCompleted);
            }
            this.InvokeAsync("DeleteAnbar_Tree", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAnbar_TreeOperationCompleted, userState);
        }
        
        private void OnDeleteAnbar_TreeOperationCompleted(object arg) {
            if ((this.DeleteAnbar_TreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAnbar_TreeCompleted(this, new DeleteAnbar_TreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/InsertKala_Tree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertKala_Tree(int KalaId, int KalaTreeId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertKala_Tree", new object[] {
                        KalaId,
                        KalaTreeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertKala_TreeAsync(int KalaId, int KalaTreeId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertKala_TreeAsync(KalaId, KalaTreeId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertKala_TreeAsync(int KalaId, int KalaTreeId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertKala_TreeOperationCompleted == null)) {
                this.InsertKala_TreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertKala_TreeOperationCompleted);
            }
            this.InvokeAsync("InsertKala_Tree", new object[] {
                        KalaId,
                        KalaTreeId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertKala_TreeOperationCompleted, userState);
        }
        
        private void OnInsertKala_TreeOperationCompleted(object arg) {
            if ((this.InsertKala_TreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertKala_TreeCompleted(this, new InsertKala_TreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/Getkala_TarifNashode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_kala_TarifNashode[] Getkala_TarifNashode(int GorupId, string IP, out ClsError Error) {
            object[] results = this.Invoke("Getkala_TarifNashode", new object[] {
                        GorupId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_kala_TarifNashode[])(results[0]));
        }
        
        /// <remarks/>
        public void Getkala_TarifNashodeAsync(int GorupId, string IP) {
            this.Getkala_TarifNashodeAsync(GorupId, IP, null);
        }
        
        /// <remarks/>
        public void Getkala_TarifNashodeAsync(int GorupId, string IP, object userState) {
            if ((this.Getkala_TarifNashodeOperationCompleted == null)) {
                this.Getkala_TarifNashodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetkala_TarifNashodeOperationCompleted);
            }
            this.InvokeAsync("Getkala_TarifNashode", new object[] {
                        GorupId,
                        IP}, this.Getkala_TarifNashodeOperationCompleted, userState);
        }
        
        private void OnGetkala_TarifNashodeOperationCompleted(object arg) {
            if ((this.Getkala_TarifNashodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Getkala_TarifNashodeCompleted(this, new Getkala_TarifNashodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAnbarAmvalService/GetAnbar_TarifNashode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Anbar_TarifNashode[] GetAnbar_TarifNashode(int GorupId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAnbar_TarifNashode", new object[] {
                        GorupId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Anbar_TarifNashode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAnbar_TarifNashodeAsync(int GorupId, string IP) {
            this.GetAnbar_TarifNashodeAsync(GorupId, IP, null);
        }
        
        /// <remarks/>
        public void GetAnbar_TarifNashodeAsync(int GorupId, string IP, object userState) {
            if ((this.GetAnbar_TarifNashodeOperationCompleted == null)) {
                this.GetAnbar_TarifNashodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnbar_TarifNashodeOperationCompleted);
            }
            this.InvokeAsync("GetAnbar_TarifNashode", new object[] {
                        GorupId,
                        IP}, this.GetAnbar_TarifNashodeOperationCompleted, userState);
        }
        
        private void OnGetAnbar_TarifNashodeOperationCompleted(object arg) {
            if ((this.GetAnbar_TarifNashodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnbar_TarifNashodeCompleted(this, new GetAnbar_TarifNashodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_InsuranceType {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldOrganIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Anbar_TarifNashode {
        
        private int anbarIdField;
        
        private string fldNameField;
        
        /// <remarks/>
        public int AnbarId {
            get {
                return this.anbarIdField;
            }
            set {
                this.anbarIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_kala_TarifNashode {
        
        private string fldNameField;
        
        private int kalaIdField;
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int kalaId {
            get {
                return this.kalaIdField;
            }
            set {
                this.kalaIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_KalaGroup {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_AnbarGroup {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_KalaTree {
        
        private int fldIdField;
        
        private System.Nullable<int> fldPIDField;
        
        private string fldNameField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        private int fldNodeTypeField;
        
        private int fldGroupIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldNodeType {
            get {
                return this.fldNodeTypeField;
            }
            set {
                this.fldNodeTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fldGroupId {
            get {
                return this.fldGroupIdField;
            }
            set {
                this.fldGroupIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_AnbarTree {
        
        private int fldIdField;
        
        private System.Nullable<int> fldPIDField;
        
        private string fldNameField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        private int fldNodeTypeField;
        
        private int fldGroupIdField;
        
        private int fldAnbar_treeIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldNodeType {
            get {
                return this.fldNodeTypeField;
            }
            set {
                this.fldNodeTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fldGroupId {
            get {
                return this.fldGroupIdField;
            }
            set {
                this.fldGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldAnbar_treeId {
            get {
                return this.fldAnbar_treeIdField;
            }
            set {
                this.fldAnbar_treeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Anbar {
        
        private int fldIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private int fldUserIdField;
        
        private string fldNameField;
        
        private string fldAddressField;
        
        private string fldPhoneField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldAddress {
            get {
                return this.fldAddressField;
            }
            set {
                this.fldAddressField = value;
            }
        }
        
        /// <remarks/>
        public string fldPhone {
            get {
                return this.fldPhoneField;
            }
            set {
                this.fldPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_InsuranceCompany {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private int fldFileIdField;
        
        private int fldUserIdField;
        
        private System.DateTime fldDateField;
        
        private string fldDescField;
        
        private string fldIPField;
        
        private int fldOrganIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldFileId {
            get {
                return this.fldFileIdField;
            }
            set {
                this.fldFileIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ClsError {
        
        private string errorMsgField;
        
        private string msgField;
        
        private bool errorTypeField;
        
        private int outputIdField;
        
        private int outputId2Field;
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
            }
        }
        
        /// <remarks/>
        public bool ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId {
            get {
                return this.outputIdField;
            }
            set {
                this.outputIdField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId2 {
            get {
                return this.outputId2Field;
            }
            set {
                this.outputId2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInsuranceTypeDetailCompletedEventHandler(object sender, GetInsuranceTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInsuranceTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInsuranceTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InsuranceType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InsuranceType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInsuranceTypeWithFilterCompletedEventHandler(object sender, GetInsuranceTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInsuranceTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInsuranceTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InsuranceType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InsuranceType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertInsuranceTypeCompletedEventHandler(object sender, InsertInsuranceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInsuranceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInsuranceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateInsuranceTypeCompletedEventHandler(object sender, UpdateInsuranceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInsuranceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInsuranceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteInsuranceTypeCompletedEventHandler(object sender, DeleteInsuranceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInsuranceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInsuranceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInsuranceCompanyDetailCompletedEventHandler(object sender, GetInsuranceCompanyDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInsuranceCompanyDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInsuranceCompanyDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InsuranceCompany Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InsuranceCompany)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInsuranceCompanyWithFilterCompletedEventHandler(object sender, GetInsuranceCompanyWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInsuranceCompanyWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInsuranceCompanyWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InsuranceCompany[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InsuranceCompany[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertInsuranceCompanyCompletedEventHandler(object sender, InsertInsuranceCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInsuranceCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInsuranceCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateInsuranceCompanyCompletedEventHandler(object sender, UpdateInsuranceCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInsuranceCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInsuranceCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteInsuranceCompanyCompletedEventHandler(object sender, DeleteInsuranceCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInsuranceCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInsuranceCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAnbarDetailCompletedEventHandler(object sender, GetAnbarDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnbarDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnbarDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Anbar Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Anbar)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAnbarWithFilterCompletedEventHandler(object sender, GetAnbarWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnbarWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnbarWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Anbar[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Anbar[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAnbarCompletedEventHandler(object sender, InsertAnbarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAnbarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAnbarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAnbarCompletedEventHandler(object sender, UpdateAnbarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAnbarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAnbarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAnbarCompletedEventHandler(object sender, DeleteAnbarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAnbarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAnbarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePID_AnbarCompletedEventHandler(object sender, UpdatePID_AnbarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePID_AnbarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePID_AnbarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePID_Anbar_TreeCompletedEventHandler(object sender, UpdatePID_Anbar_TreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePID_Anbar_TreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePID_Anbar_TreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePID_kalaCompletedEventHandler(object sender, UpdatePID_kalaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePID_kalaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePID_kalaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAnbarTreeDetailCompletedEventHandler(object sender, GetAnbarTreeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnbarTreeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnbarTreeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AnbarTree Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AnbarTree)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAnbarTreeWithFilterCompletedEventHandler(object sender, GetAnbarTreeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnbarTreeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnbarTreeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AnbarTree[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AnbarTree[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAnbarTreeCompletedEventHandler(object sender, InsertAnbarTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAnbarTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAnbarTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAnbarTreeCompletedEventHandler(object sender, UpdateAnbarTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAnbarTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAnbarTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAnbarTreeCompletedEventHandler(object sender, DeleteAnbarTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAnbarTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAnbarTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetKalaTreeDetailCompletedEventHandler(object sender, GetKalaTreeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKalaTreeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKalaTreeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_KalaTree Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_KalaTree)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetKalaTreeWithFilterCompletedEventHandler(object sender, GetKalaTreeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKalaTreeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKalaTreeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_KalaTree[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_KalaTree[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertKalaTreeCompletedEventHandler(object sender, InsertKalaTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertKalaTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertKalaTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateKalaTreeCompletedEventHandler(object sender, UpdateKalaTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateKalaTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateKalaTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteKalaTreeCompletedEventHandler(object sender, DeleteKalaTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteKalaTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteKalaTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAnbarGroupDetailCompletedEventHandler(object sender, GetAnbarGroupDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnbarGroupDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnbarGroupDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AnbarGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AnbarGroup)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAnbarGroupWithFilterCompletedEventHandler(object sender, GetAnbarGroupWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnbarGroupWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnbarGroupWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AnbarGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AnbarGroup[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAnbarGroupCompletedEventHandler(object sender, InsertAnbarGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAnbarGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAnbarGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAnbarGroupCompletedEventHandler(object sender, UpdateAnbarGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAnbarGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAnbarGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAnbarGroupCompletedEventHandler(object sender, DeleteAnbarGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAnbarGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAnbarGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetKalaGroupDetailCompletedEventHandler(object sender, GetKalaGroupDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKalaGroupDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKalaGroupDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_KalaGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_KalaGroup)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetKalaGroupWithFilterCompletedEventHandler(object sender, GetKalaGroupWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKalaGroupWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKalaGroupWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_KalaGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_KalaGroup[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertKalaGroupCompletedEventHandler(object sender, InsertKalaGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertKalaGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertKalaGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateKalaGroupCompletedEventHandler(object sender, UpdateKalaGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateKalaGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateKalaGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteKalaGroupCompletedEventHandler(object sender, DeleteKalaGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteKalaGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteKalaGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAnbar_TreeCompletedEventHandler(object sender, InsertAnbar_TreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAnbar_TreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAnbar_TreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAnbar_TreeCompletedEventHandler(object sender, DeleteAnbar_TreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAnbar_TreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAnbar_TreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertKala_TreeCompletedEventHandler(object sender, InsertKala_TreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertKala_TreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertKala_TreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Getkala_TarifNashodeCompletedEventHandler(object sender, Getkala_TarifNashodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Getkala_TarifNashodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Getkala_TarifNashodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_kala_TarifNashode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_kala_TarifNashode[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAnbar_TarifNashodeCompletedEventHandler(object sender, GetAnbar_TarifNashodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnbar_TarifNashodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnbar_TarifNashodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Anbar_TarifNashode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Anbar_TarifNashode[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591