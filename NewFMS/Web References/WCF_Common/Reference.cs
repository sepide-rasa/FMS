//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NewFMS.WCF_Common {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ICommonService", Namespace="http://tempuri.org/")]
    public partial class CommonService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetHistoryTahsilatDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertHistoryTahsilatOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHistoryTahsilatOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteHistoryTahsilatOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertChartOrganEjraeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateChartOrganEjraeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChartOrganEjraeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChartEjraee_LastNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationalPostsEjraeeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationalPostsEjraeeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOrganizationalPostsEjraeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrganizationalPostsEjraeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationalPostsEjraeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeOrganPostEjraOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebServiceLogDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebServiceLogWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertWebServiceLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWebServiceLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWebServiceLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarrantyTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarrantyTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertWarrantyTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWarrantyTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWarrantyTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillsTypeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillsTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBillsTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBillsTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBillsTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseBillsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaseBillsWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCaseBillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCaseBillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCaseBillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormatFileDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormatFileWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFormatFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFormatFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFormatFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralSettingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralSettingWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGeneralSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGeneralSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGeneralSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_GeneralSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_GeneralSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_GeneralSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKalaDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKalaWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertKalaOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateKalaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteKalaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCharacterPersianPlaqueDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCharacterPersianPlaqueWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCharacterPersianPlaqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCharacterPersianPlaqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCharacterPersianPlaqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTypeKhodroDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTypeKhodroWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTypeKhodroOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTypeKhodroOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTypeKhodroOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaqueDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaqueWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPlaqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePlaqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlaqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPlaque_WebServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralSetting_ComboBoxDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralSetting_ComboBoxWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGeneralSetting_ComboBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGeneralSetting_ComboBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGeneralSetting_ComboBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralSetting_ValueDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralSetting_ValueWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGeneralSetting_ValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGeneralSetting_ValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGeneralSetting_ValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyPostDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyPostWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCompanyPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCompanyPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCompanyPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHesabTypeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLoginFailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryTahsilatWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDigitalArchiveTreeStructureOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDigitalArchiveTreeStructureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNameOrganForFormulOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationalPostsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationalPostsWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOrganizationalPostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrganizationalPostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationalPostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetrptDastresiKarbaranWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSHobeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSHobeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSHobeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSHobeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSHobeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErrorWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignersWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeOrganPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNezamVazifeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNezamVazifeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNezamVazifeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNezamVazifeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNezamVazifeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMadrakTahsiliWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMadrakTahsiliDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMadrakTahsiliOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMadrakTahsiliOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMadrakTahsiliOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusTaaholWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReshteTahsiliDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReshteTahsiliWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReshteTahsiliOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReshteTahsiliOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReshteTahsiliOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployee_DetailWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployee_DetailDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmployee_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployee_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmployee_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAshkhasDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAshkhasWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAshkhasOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAshkhasOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAshkhasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaliyatArzesheAfzoodeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaliyatArzesheAfzoodeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMaliyatArzesheAfzoodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMaliyatArzesheAfzoodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMaliyatArzesheAfzoodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAshkhaseHoghoghiDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAshkhaseHoghoghiWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAshkhaseHoghoghiOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAshkhaseHoghoghiOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAshkhaseHoghoghiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShomareHesabeOmoomiDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShomareHesabeOmoomiWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertShomareHesabeOmoomiOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateShomareHesabeOmoomiOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteShomareHesabeOmoomiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroupTreeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasureUnitDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasureUnitWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMeasureUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMeasureUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMeasureUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAshkhaseHoghoghi_DetailDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAshkhaseHoghoghi_DetailWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAshkhaseHoghoghi_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAshkhaseHoghoghi_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAshkhaseHoghoghi_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroup_ModuleOrganDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroup_ModuleOrganWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUserGroup_ModuleOrganOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserGroup_ModuleOrganOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserGroup_ModuleOrganOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInputInfoWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInputInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChartOrganEjraeeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChartOrganEjraeeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback HashPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRasteWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStateWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStateDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCityWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCityDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChartOrganWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChartOrganDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertChartOrganOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateChartOrganOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChartOrganOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModuleWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModuleDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModule_OrganWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModule_OrganDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertModule_OrganOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateModule_OrganOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteModule_OrganOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasoulinWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasoulinDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMasoulinOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMasoulinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasuolin_ZirListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasoulin_DetailWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasoulin_DetailDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMasoulin_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMasoulin_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMasoulin_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasoulin_DetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserPassUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePassOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectUserByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateActiveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermissionWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChildUserGroupPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroupWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroupDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUser_GroupWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUser_GroupDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUser_GroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUser_GroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUser_GroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplictionPartWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZirListHaWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZirListHaDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertZirListHaOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateZirListHaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteZirListHaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDigitalArchiveTreeStructureDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDigitalArchiveTreeStructureWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDigitalArchiveTreeStructureOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CommonService() {
            this.Url = global::NewFMS.Properties.Settings.Default.NewFMS_WCF_Common_CommonService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetHistoryTahsilatDetailCompletedEventHandler GetHistoryTahsilatDetailCompleted;
        
        /// <remarks/>
        public event InsertHistoryTahsilatCompletedEventHandler InsertHistoryTahsilatCompleted;
        
        /// <remarks/>
        public event UpdateHistoryTahsilatCompletedEventHandler UpdateHistoryTahsilatCompleted;
        
        /// <remarks/>
        public event DeleteHistoryTahsilatCompletedEventHandler DeleteHistoryTahsilatCompleted;
        
        /// <remarks/>
        public event InsertChartOrganEjraeeCompletedEventHandler InsertChartOrganEjraeeCompleted;
        
        /// <remarks/>
        public event UpdateChartOrganEjraeeCompletedEventHandler UpdateChartOrganEjraeeCompleted;
        
        /// <remarks/>
        public event DeleteChartOrganEjraeeCompletedEventHandler DeleteChartOrganEjraeeCompleted;
        
        /// <remarks/>
        public event GetChartEjraee_LastNodeCompletedEventHandler GetChartEjraee_LastNodeCompleted;
        
        /// <remarks/>
        public event GetOrganizationalPostsEjraeeDetailCompletedEventHandler GetOrganizationalPostsEjraeeDetailCompleted;
        
        /// <remarks/>
        public event GetOrganizationalPostsEjraeeWithFilterCompletedEventHandler GetOrganizationalPostsEjraeeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertOrganizationalPostsEjraeeCompletedEventHandler InsertOrganizationalPostsEjraeeCompleted;
        
        /// <remarks/>
        public event UpdateOrganizationalPostsEjraeeCompletedEventHandler UpdateOrganizationalPostsEjraeeCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationalPostsEjraeeCompletedEventHandler DeleteOrganizationalPostsEjraeeCompleted;
        
        /// <remarks/>
        public event GetTreeOrganPostEjraCompletedEventHandler GetTreeOrganPostEjraCompleted;
        
        /// <remarks/>
        public event ChangeLetterCompletedEventHandler ChangeLetterCompleted;
        
        /// <remarks/>
        public event GetWebServiceLogDetailCompletedEventHandler GetWebServiceLogDetailCompleted;
        
        /// <remarks/>
        public event GetWebServiceLogWithFilterCompletedEventHandler GetWebServiceLogWithFilterCompleted;
        
        /// <remarks/>
        public event InsertWebServiceLogCompletedEventHandler InsertWebServiceLogCompleted;
        
        /// <remarks/>
        public event UpdateWebServiceLogCompletedEventHandler UpdateWebServiceLogCompleted;
        
        /// <remarks/>
        public event DeleteWebServiceLogCompletedEventHandler DeleteWebServiceLogCompleted;
        
        /// <remarks/>
        public event GetWarrantyTypeDetailCompletedEventHandler GetWarrantyTypeDetailCompleted;
        
        /// <remarks/>
        public event GetWarrantyTypeWithFilterCompletedEventHandler GetWarrantyTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertWarrantyTypeCompletedEventHandler InsertWarrantyTypeCompleted;
        
        /// <remarks/>
        public event UpdateWarrantyTypeCompletedEventHandler UpdateWarrantyTypeCompleted;
        
        /// <remarks/>
        public event DeleteWarrantyTypeCompletedEventHandler DeleteWarrantyTypeCompleted;
        
        /// <remarks/>
        public event GetBillsTypeDetailCompletedEventHandler GetBillsTypeDetailCompleted;
        
        /// <remarks/>
        public event GetBillsTypeWithFilterCompletedEventHandler GetBillsTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertBillsTypeCompletedEventHandler InsertBillsTypeCompleted;
        
        /// <remarks/>
        public event UpdateBillsTypeCompletedEventHandler UpdateBillsTypeCompleted;
        
        /// <remarks/>
        public event DeleteBillsTypeCompletedEventHandler DeleteBillsTypeCompleted;
        
        /// <remarks/>
        public event GetCaseBillsDetailCompletedEventHandler GetCaseBillsDetailCompleted;
        
        /// <remarks/>
        public event GetCaseBillsWithFilterCompletedEventHandler GetCaseBillsWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCaseBillsCompletedEventHandler InsertCaseBillsCompleted;
        
        /// <remarks/>
        public event UpdateCaseBillsCompletedEventHandler UpdateCaseBillsCompleted;
        
        /// <remarks/>
        public event DeleteCaseBillsCompletedEventHandler DeleteCaseBillsCompleted;
        
        /// <remarks/>
        public event GetFormatFileDetailCompletedEventHandler GetFormatFileDetailCompleted;
        
        /// <remarks/>
        public event GetFormatFileWithFilterCompletedEventHandler GetFormatFileWithFilterCompleted;
        
        /// <remarks/>
        public event InsertFormatFileCompletedEventHandler InsertFormatFileCompleted;
        
        /// <remarks/>
        public event UpdateFormatFileCompletedEventHandler UpdateFormatFileCompleted;
        
        /// <remarks/>
        public event DeleteFormatFileCompletedEventHandler DeleteFormatFileCompleted;
        
        /// <remarks/>
        public event GetGeneralSettingDetailCompletedEventHandler GetGeneralSettingDetailCompleted;
        
        /// <remarks/>
        public event GetGeneralSettingWithFilterCompletedEventHandler GetGeneralSettingWithFilterCompleted;
        
        /// <remarks/>
        public event InsertGeneralSettingCompletedEventHandler InsertGeneralSettingCompleted;
        
        /// <remarks/>
        public event UpdateGeneralSettingCompletedEventHandler UpdateGeneralSettingCompleted;
        
        /// <remarks/>
        public event DeleteGeneralSettingCompletedEventHandler DeleteGeneralSettingCompleted;
        
        /// <remarks/>
        public event Insert_GeneralSettingCompletedEventHandler Insert_GeneralSettingCompleted;
        
        /// <remarks/>
        public event Update_GeneralSettingCompletedEventHandler Update_GeneralSettingCompleted;
        
        /// <remarks/>
        public event Delete_GeneralSettingCompletedEventHandler Delete_GeneralSettingCompleted;
        
        /// <remarks/>
        public event GetKalaDetailCompletedEventHandler GetKalaDetailCompleted;
        
        /// <remarks/>
        public event GetKalaWithFilterCompletedEventHandler GetKalaWithFilterCompleted;
        
        /// <remarks/>
        public event InsertKalaCompletedEventHandler InsertKalaCompleted;
        
        /// <remarks/>
        public event UpdateKalaCompletedEventHandler UpdateKalaCompleted;
        
        /// <remarks/>
        public event DeleteKalaCompletedEventHandler DeleteKalaCompleted;
        
        /// <remarks/>
        public event GetCharacterPersianPlaqueDetailCompletedEventHandler GetCharacterPersianPlaqueDetailCompleted;
        
        /// <remarks/>
        public event GetCharacterPersianPlaqueWithFilterCompletedEventHandler GetCharacterPersianPlaqueWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCharacterPersianPlaqueCompletedEventHandler InsertCharacterPersianPlaqueCompleted;
        
        /// <remarks/>
        public event UpdateCharacterPersianPlaqueCompletedEventHandler UpdateCharacterPersianPlaqueCompleted;
        
        /// <remarks/>
        public event DeleteCharacterPersianPlaqueCompletedEventHandler DeleteCharacterPersianPlaqueCompleted;
        
        /// <remarks/>
        public event GetTypeKhodroDetailCompletedEventHandler GetTypeKhodroDetailCompleted;
        
        /// <remarks/>
        public event GetTypeKhodroWithFilterCompletedEventHandler GetTypeKhodroWithFilterCompleted;
        
        /// <remarks/>
        public event InsertTypeKhodroCompletedEventHandler InsertTypeKhodroCompleted;
        
        /// <remarks/>
        public event UpdateTypeKhodroCompletedEventHandler UpdateTypeKhodroCompleted;
        
        /// <remarks/>
        public event DeleteTypeKhodroCompletedEventHandler DeleteTypeKhodroCompleted;
        
        /// <remarks/>
        public event GetPlaqueDetailCompletedEventHandler GetPlaqueDetailCompleted;
        
        /// <remarks/>
        public event GetPlaqueWithFilterCompletedEventHandler GetPlaqueWithFilterCompleted;
        
        /// <remarks/>
        public event InsertPlaqueCompletedEventHandler InsertPlaqueCompleted;
        
        /// <remarks/>
        public event UpdatePlaqueCompletedEventHandler UpdatePlaqueCompleted;
        
        /// <remarks/>
        public event DeletePlaqueCompletedEventHandler DeletePlaqueCompleted;
        
        /// <remarks/>
        public event InsertPlaque_WebServiceCompletedEventHandler InsertPlaque_WebServiceCompleted;
        
        /// <remarks/>
        public event GetGeneralSetting_ComboBoxDetailCompletedEventHandler GetGeneralSetting_ComboBoxDetailCompleted;
        
        /// <remarks/>
        public event GetGeneralSetting_ComboBoxWithFilterCompletedEventHandler GetGeneralSetting_ComboBoxWithFilterCompleted;
        
        /// <remarks/>
        public event InsertGeneralSetting_ComboBoxCompletedEventHandler InsertGeneralSetting_ComboBoxCompleted;
        
        /// <remarks/>
        public event UpdateGeneralSetting_ComboBoxCompletedEventHandler UpdateGeneralSetting_ComboBoxCompleted;
        
        /// <remarks/>
        public event DeleteGeneralSetting_ComboBoxCompletedEventHandler DeleteGeneralSetting_ComboBoxCompleted;
        
        /// <remarks/>
        public event GetGeneralSetting_ValueDetailCompletedEventHandler GetGeneralSetting_ValueDetailCompleted;
        
        /// <remarks/>
        public event GetGeneralSetting_ValueWithFilterCompletedEventHandler GetGeneralSetting_ValueWithFilterCompleted;
        
        /// <remarks/>
        public event InsertGeneralSetting_ValueCompletedEventHandler InsertGeneralSetting_ValueCompleted;
        
        /// <remarks/>
        public event UpdateGeneralSetting_ValueCompletedEventHandler UpdateGeneralSetting_ValueCompleted;
        
        /// <remarks/>
        public event DeleteGeneralSetting_ValueCompletedEventHandler DeleteGeneralSetting_ValueCompleted;
        
        /// <remarks/>
        public event UpdateOrderCompletedEventHandler UpdateOrderCompleted;
        
        /// <remarks/>
        public event GetCompanyPostDetailCompletedEventHandler GetCompanyPostDetailCompleted;
        
        /// <remarks/>
        public event GetCompanyPostWithFilterCompletedEventHandler GetCompanyPostWithFilterCompleted;
        
        /// <remarks/>
        public event InsertCompanyPostCompletedEventHandler InsertCompanyPostCompleted;
        
        /// <remarks/>
        public event UpdateCompanyPostCompletedEventHandler UpdateCompanyPostCompleted;
        
        /// <remarks/>
        public event DeleteCompanyPostCompletedEventHandler DeleteCompanyPostCompleted;
        
        /// <remarks/>
        public event SelectMonthCompletedEventHandler SelectMonthCompleted;
        
        /// <remarks/>
        public event GetHesabTypeWithFilterCompletedEventHandler GetHesabTypeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertLoginFailedCompletedEventHandler InsertLoginFailedCompleted;
        
        /// <remarks/>
        public event GetHistoryTahsilatWithFilterCompletedEventHandler GetHistoryTahsilatWithFilterCompleted;
        
        /// <remarks/>
        public event UpdateDigitalArchiveTreeStructureCompletedEventHandler UpdateDigitalArchiveTreeStructureCompleted;
        
        /// <remarks/>
        public event DeleteDigitalArchiveTreeStructureCompletedEventHandler DeleteDigitalArchiveTreeStructureCompleted;
        
        /// <remarks/>
        public event GetNameOrganForFormulCompletedEventHandler GetNameOrganForFormulCompleted;
        
        /// <remarks/>
        public event GetOrganizationalPostsDetailCompletedEventHandler GetOrganizationalPostsDetailCompleted;
        
        /// <remarks/>
        public event GetOrganizationalPostsWithFilterCompletedEventHandler GetOrganizationalPostsWithFilterCompleted;
        
        /// <remarks/>
        public event InsertOrganizationalPostsCompletedEventHandler InsertOrganizationalPostsCompleted;
        
        /// <remarks/>
        public event UpdateOrganizationalPostsCompletedEventHandler UpdateOrganizationalPostsCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationalPostsCompletedEventHandler DeleteOrganizationalPostsCompleted;
        
        /// <remarks/>
        public event GetBankDetailCompletedEventHandler GetBankDetailCompleted;
        
        /// <remarks/>
        public event GetBankWithFilterCompletedEventHandler GetBankWithFilterCompleted;
        
        /// <remarks/>
        public event InsertBankCompletedEventHandler InsertBankCompleted;
        
        /// <remarks/>
        public event UpdateBankCompletedEventHandler UpdateBankCompleted;
        
        /// <remarks/>
        public event DeleteBankCompletedEventHandler DeleteBankCompleted;
        
        /// <remarks/>
        public event GetrptDastresiKarbaranWithFilterCompletedEventHandler GetrptDastresiKarbaranWithFilterCompleted;
        
        /// <remarks/>
        public event GetSHobeDetailCompletedEventHandler GetSHobeDetailCompleted;
        
        /// <remarks/>
        public event GetSHobeWithFilterCompletedEventHandler GetSHobeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertSHobeCompletedEventHandler InsertSHobeCompleted;
        
        /// <remarks/>
        public event UpdateSHobeCompletedEventHandler UpdateSHobeCompleted;
        
        /// <remarks/>
        public event DeleteSHobeCompletedEventHandler DeleteSHobeCompleted;
        
        /// <remarks/>
        public event GetErrorWithFilterCompletedEventHandler GetErrorWithFilterCompleted;
        
        /// <remarks/>
        public event InsertErrorCompletedEventHandler InsertErrorCompleted;
        
        /// <remarks/>
        public event GetSignersWithFilterCompletedEventHandler GetSignersWithFilterCompleted;
        
        /// <remarks/>
        public event GetTreeOrganPostCompletedEventHandler GetTreeOrganPostCompleted;
        
        /// <remarks/>
        public event GetNezamVazifeWithFilterCompletedEventHandler GetNezamVazifeWithFilterCompleted;
        
        /// <remarks/>
        public event GetNezamVazifeDetailCompletedEventHandler GetNezamVazifeDetailCompleted;
        
        /// <remarks/>
        public event InsertNezamVazifeCompletedEventHandler InsertNezamVazifeCompleted;
        
        /// <remarks/>
        public event UpdateNezamVazifeCompletedEventHandler UpdateNezamVazifeCompleted;
        
        /// <remarks/>
        public event DeleteNezamVazifeCompletedEventHandler DeleteNezamVazifeCompleted;
        
        /// <remarks/>
        public event GetMadrakTahsiliWithFilterCompletedEventHandler GetMadrakTahsiliWithFilterCompleted;
        
        /// <remarks/>
        public event GetMadrakTahsiliDetailCompletedEventHandler GetMadrakTahsiliDetailCompleted;
        
        /// <remarks/>
        public event InsertMadrakTahsiliCompletedEventHandler InsertMadrakTahsiliCompleted;
        
        /// <remarks/>
        public event UpdateMadrakTahsiliCompletedEventHandler UpdateMadrakTahsiliCompleted;
        
        /// <remarks/>
        public event DeleteMadrakTahsiliCompletedEventHandler DeleteMadrakTahsiliCompleted;
        
        /// <remarks/>
        public event GetStatusTaaholWithFilterCompletedEventHandler GetStatusTaaholWithFilterCompleted;
        
        /// <remarks/>
        public event GetReshteTahsiliDetailCompletedEventHandler GetReshteTahsiliDetailCompleted;
        
        /// <remarks/>
        public event GetReshteTahsiliWithFilterCompletedEventHandler GetReshteTahsiliWithFilterCompleted;
        
        /// <remarks/>
        public event InsertReshteTahsiliCompletedEventHandler InsertReshteTahsiliCompleted;
        
        /// <remarks/>
        public event UpdateReshteTahsiliCompletedEventHandler UpdateReshteTahsiliCompleted;
        
        /// <remarks/>
        public event DeleteReshteTahsiliCompletedEventHandler DeleteReshteTahsiliCompleted;
        
        /// <remarks/>
        public event GetEmployee_DetailWithFilterCompletedEventHandler GetEmployee_DetailWithFilterCompleted;
        
        /// <remarks/>
        public event GetEmployee_DetailDetailCompletedEventHandler GetEmployee_DetailDetailCompleted;
        
        /// <remarks/>
        public event InsertEmployee_DetailCompletedEventHandler InsertEmployee_DetailCompleted;
        
        /// <remarks/>
        public event UpdateEmployee_DetailCompletedEventHandler UpdateEmployee_DetailCompleted;
        
        /// <remarks/>
        public event DeleteEmployee_DetailCompletedEventHandler DeleteEmployee_DetailCompleted;
        
        /// <remarks/>
        public event GetAshkhasDetailCompletedEventHandler GetAshkhasDetailCompleted;
        
        /// <remarks/>
        public event GetAshkhasWithFilterCompletedEventHandler GetAshkhasWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAshkhasCompletedEventHandler InsertAshkhasCompleted;
        
        /// <remarks/>
        public event UpdateAshkhasCompletedEventHandler UpdateAshkhasCompleted;
        
        /// <remarks/>
        public event DeleteAshkhasCompletedEventHandler DeleteAshkhasCompleted;
        
        /// <remarks/>
        public event GetMaliyatArzesheAfzoodeDetailCompletedEventHandler GetMaliyatArzesheAfzoodeDetailCompleted;
        
        /// <remarks/>
        public event GetMaliyatArzesheAfzoodeWithFilterCompletedEventHandler GetMaliyatArzesheAfzoodeWithFilterCompleted;
        
        /// <remarks/>
        public event InsertMaliyatArzesheAfzoodeCompletedEventHandler InsertMaliyatArzesheAfzoodeCompleted;
        
        /// <remarks/>
        public event UpdateMaliyatArzesheAfzoodeCompletedEventHandler UpdateMaliyatArzesheAfzoodeCompleted;
        
        /// <remarks/>
        public event DeleteMaliyatArzesheAfzoodeCompletedEventHandler DeleteMaliyatArzesheAfzoodeCompleted;
        
        /// <remarks/>
        public event GetAshkhaseHoghoghiDetailCompletedEventHandler GetAshkhaseHoghoghiDetailCompleted;
        
        /// <remarks/>
        public event GetAshkhaseHoghoghiWithFilterCompletedEventHandler GetAshkhaseHoghoghiWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAshkhaseHoghoghiCompletedEventHandler InsertAshkhaseHoghoghiCompleted;
        
        /// <remarks/>
        public event UpdateAshkhaseHoghoghiCompletedEventHandler UpdateAshkhaseHoghoghiCompleted;
        
        /// <remarks/>
        public event DeleteAshkhaseHoghoghiCompletedEventHandler DeleteAshkhaseHoghoghiCompleted;
        
        /// <remarks/>
        public event GetShomareHesabeOmoomiDetailCompletedEventHandler GetShomareHesabeOmoomiDetailCompleted;
        
        /// <remarks/>
        public event GetShomareHesabeOmoomiWithFilterCompletedEventHandler GetShomareHesabeOmoomiWithFilterCompleted;
        
        /// <remarks/>
        public event InsertShomareHesabeOmoomiCompletedEventHandler InsertShomareHesabeOmoomiCompleted;
        
        /// <remarks/>
        public event UpdateShomareHesabeOmoomiCompletedEventHandler UpdateShomareHesabeOmoomiCompleted;
        
        /// <remarks/>
        public event DeleteShomareHesabeOmoomiCompletedEventHandler DeleteShomareHesabeOmoomiCompleted;
        
        /// <remarks/>
        public event GetUserGroupTreeWithFilterCompletedEventHandler GetUserGroupTreeWithFilterCompleted;
        
        /// <remarks/>
        public event CheckEmailCompletedEventHandler CheckEmailCompleted;
        
        /// <remarks/>
        public event GetMeasureUnitDetailCompletedEventHandler GetMeasureUnitDetailCompleted;
        
        /// <remarks/>
        public event GetMeasureUnitWithFilterCompletedEventHandler GetMeasureUnitWithFilterCompleted;
        
        /// <remarks/>
        public event InsertMeasureUnitCompletedEventHandler InsertMeasureUnitCompleted;
        
        /// <remarks/>
        public event UpdateMeasureUnitCompletedEventHandler UpdateMeasureUnitCompleted;
        
        /// <remarks/>
        public event DeleteMeasureUnitCompletedEventHandler DeleteMeasureUnitCompleted;
        
        /// <remarks/>
        public event GetAshkhaseHoghoghi_DetailDetailCompletedEventHandler GetAshkhaseHoghoghi_DetailDetailCompleted;
        
        /// <remarks/>
        public event GetAshkhaseHoghoghi_DetailWithFilterCompletedEventHandler GetAshkhaseHoghoghi_DetailWithFilterCompleted;
        
        /// <remarks/>
        public event InsertAshkhaseHoghoghi_DetailCompletedEventHandler InsertAshkhaseHoghoghi_DetailCompleted;
        
        /// <remarks/>
        public event UpdateAshkhaseHoghoghi_DetailCompletedEventHandler UpdateAshkhaseHoghoghi_DetailCompleted;
        
        /// <remarks/>
        public event DeleteAshkhaseHoghoghi_DetailCompletedEventHandler DeleteAshkhaseHoghoghi_DetailCompleted;
        
        /// <remarks/>
        public event GetUserGroup_ModuleOrganDetailCompletedEventHandler GetUserGroup_ModuleOrganDetailCompleted;
        
        /// <remarks/>
        public event GetUserGroup_ModuleOrganWithFilterCompletedEventHandler GetUserGroup_ModuleOrganWithFilterCompleted;
        
        /// <remarks/>
        public event InsertUserGroup_ModuleOrganCompletedEventHandler InsertUserGroup_ModuleOrganCompleted;
        
        /// <remarks/>
        public event UpdateUserGroup_ModuleOrganCompletedEventHandler UpdateUserGroup_ModuleOrganCompleted;
        
        /// <remarks/>
        public event DeleteUserGroup_ModuleOrganCompletedEventHandler DeleteUserGroup_ModuleOrganCompleted;
        
        /// <remarks/>
        public event GetInputInfoWithFilterCompletedEventHandler GetInputInfoWithFilterCompleted;
        
        /// <remarks/>
        public event InsertInputInfoCompletedEventHandler InsertInputInfoCompleted;
        
        /// <remarks/>
        public event GetChartOrganEjraeeDetailCompletedEventHandler GetChartOrganEjraeeDetailCompleted;
        
        /// <remarks/>
        public event GetChartOrganEjraeeWithFilterCompletedEventHandler GetChartOrganEjraeeWithFilterCompleted;
        
        /// <remarks/>
        public event PermissionCompletedEventHandler PermissionCompleted;
        
        /// <remarks/>
        public event HashPassCompletedEventHandler HashPassCompleted;
        
        /// <remarks/>
        public event GetEmployeeWithFilterCompletedEventHandler GetEmployeeWithFilterCompleted;
        
        /// <remarks/>
        public event GetEmployeeDetailCompletedEventHandler GetEmployeeDetailCompleted;
        
        /// <remarks/>
        public event InsertEmployeeCompletedEventHandler InsertEmployeeCompleted;
        
        /// <remarks/>
        public event UpdateEmployeeCompletedEventHandler UpdateEmployeeCompleted;
        
        /// <remarks/>
        public event DeleteEmployeeCompletedEventHandler DeleteEmployeeCompleted;
        
        /// <remarks/>
        public event GetRasteWithFilterCompletedEventHandler GetRasteWithFilterCompleted;
        
        /// <remarks/>
        public event GetStateWithFilterCompletedEventHandler GetStateWithFilterCompleted;
        
        /// <remarks/>
        public event GetStateDetailCompletedEventHandler GetStateDetailCompleted;
        
        /// <remarks/>
        public event InsertStateCompletedEventHandler InsertStateCompleted;
        
        /// <remarks/>
        public event UpdateStateCompletedEventHandler UpdateStateCompleted;
        
        /// <remarks/>
        public event DeleteStateCompletedEventHandler DeleteStateCompleted;
        
        /// <remarks/>
        public event GetCityWithFilterCompletedEventHandler GetCityWithFilterCompleted;
        
        /// <remarks/>
        public event GetCityDetailCompletedEventHandler GetCityDetailCompleted;
        
        /// <remarks/>
        public event InsertCityCompletedEventHandler InsertCityCompleted;
        
        /// <remarks/>
        public event UpdateCityCompletedEventHandler UpdateCityCompleted;
        
        /// <remarks/>
        public event DeleteCityCompletedEventHandler DeleteCityCompleted;
        
        /// <remarks/>
        public event GetOrganizationWithFilterCompletedEventHandler GetOrganizationWithFilterCompleted;
        
        /// <remarks/>
        public event GetOrganizationDetailCompletedEventHandler GetOrganizationDetailCompleted;
        
        /// <remarks/>
        public event InsertOrganizationCompletedEventHandler InsertOrganizationCompleted;
        
        /// <remarks/>
        public event UpdateOrganizationCompletedEventHandler UpdateOrganizationCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationCompletedEventHandler DeleteOrganizationCompleted;
        
        /// <remarks/>
        public event GetChartOrganWithFilterCompletedEventHandler GetChartOrganWithFilterCompleted;
        
        /// <remarks/>
        public event GetChartOrganDetailCompletedEventHandler GetChartOrganDetailCompleted;
        
        /// <remarks/>
        public event InsertChartOrganCompletedEventHandler InsertChartOrganCompleted;
        
        /// <remarks/>
        public event UpdateChartOrganCompletedEventHandler UpdateChartOrganCompleted;
        
        /// <remarks/>
        public event DeleteChartOrganCompletedEventHandler DeleteChartOrganCompleted;
        
        /// <remarks/>
        public event GetModuleWithFilterCompletedEventHandler GetModuleWithFilterCompleted;
        
        /// <remarks/>
        public event GetModuleDetailCompletedEventHandler GetModuleDetailCompleted;
        
        /// <remarks/>
        public event InsertModuleCompletedEventHandler InsertModuleCompleted;
        
        /// <remarks/>
        public event UpdateModuleCompletedEventHandler UpdateModuleCompleted;
        
        /// <remarks/>
        public event DeleteModuleCompletedEventHandler DeleteModuleCompleted;
        
        /// <remarks/>
        public event GetModule_OrganWithFilterCompletedEventHandler GetModule_OrganWithFilterCompleted;
        
        /// <remarks/>
        public event GetModule_OrganDetailCompletedEventHandler GetModule_OrganDetailCompleted;
        
        /// <remarks/>
        public event InsertModule_OrganCompletedEventHandler InsertModule_OrganCompleted;
        
        /// <remarks/>
        public event UpdateModule_OrganCompletedEventHandler UpdateModule_OrganCompleted;
        
        /// <remarks/>
        public event DeleteModule_OrganCompletedEventHandler DeleteModule_OrganCompleted;
        
        /// <remarks/>
        public event GetMasoulinWithFilterCompletedEventHandler GetMasoulinWithFilterCompleted;
        
        /// <remarks/>
        public event GetMasoulinDetailCompletedEventHandler GetMasoulinDetailCompleted;
        
        /// <remarks/>
        public event InsertMasoulinCompletedEventHandler InsertMasoulinCompleted;
        
        /// <remarks/>
        public event UpdateMasoulinCompletedEventHandler UpdateMasoulinCompleted;
        
        /// <remarks/>
        public event GetMasuolin_ZirListCompletedEventHandler GetMasuolin_ZirListCompleted;
        
        /// <remarks/>
        public event GetMasoulin_DetailWithFilterCompletedEventHandler GetMasoulin_DetailWithFilterCompleted;
        
        /// <remarks/>
        public event GetMasoulin_DetailDetailCompletedEventHandler GetMasoulin_DetailDetailCompleted;
        
        /// <remarks/>
        public event InsertMasoulin_DetailCompletedEventHandler InsertMasoulin_DetailCompleted;
        
        /// <remarks/>
        public event UpdateMasoulin_DetailCompletedEventHandler UpdateMasoulin_DetailCompleted;
        
        /// <remarks/>
        public event DeleteMasoulin_DetailCompletedEventHandler DeleteMasoulin_DetailCompleted;
        
        /// <remarks/>
        public event GetMasoulin_DetailListCompletedEventHandler GetMasoulin_DetailListCompleted;
        
        /// <remarks/>
        public event GetUserWithFilterCompletedEventHandler GetUserWithFilterCompleted;
        
        /// <remarks/>
        public event GetUserDetailCompletedEventHandler GetUserDetailCompleted;
        
        /// <remarks/>
        public event InsertUserCompletedEventHandler InsertUserCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event UserPassUpdateCompletedEventHandler UserPassUpdateCompleted;
        
        /// <remarks/>
        public event ChangePassCompletedEventHandler ChangePassCompleted;
        
        /// <remarks/>
        public event ExistUserCompletedEventHandler ExistUserCompleted;
        
        /// <remarks/>
        public event SelectUserByUserIdCompletedEventHandler SelectUserByUserIdCompleted;
        
        /// <remarks/>
        public event UpdateActiveUserCompletedEventHandler UpdateActiveUserCompleted;
        
        /// <remarks/>
        public event GetPermissionWithFilterCompletedEventHandler GetPermissionWithFilterCompleted;
        
        /// <remarks/>
        public event InsertPermissionCompletedEventHandler InsertPermissionCompleted;
        
        /// <remarks/>
        public event DeletePermissionCompletedEventHandler DeletePermissionCompleted;
        
        /// <remarks/>
        public event CopyPermissionCompletedEventHandler CopyPermissionCompleted;
        
        /// <remarks/>
        public event DeleteChildUserGroupPermissionCompletedEventHandler DeleteChildUserGroupPermissionCompleted;
        
        /// <remarks/>
        public event GetUserGroupWithFilterCompletedEventHandler GetUserGroupWithFilterCompleted;
        
        /// <remarks/>
        public event GetUserGroupDetailCompletedEventHandler GetUserGroupDetailCompleted;
        
        /// <remarks/>
        public event InsertUserGroupCompletedEventHandler InsertUserGroupCompleted;
        
        /// <remarks/>
        public event UpdateUserGroupCompletedEventHandler UpdateUserGroupCompleted;
        
        /// <remarks/>
        public event DeleteUserGroupCompletedEventHandler DeleteUserGroupCompleted;
        
        /// <remarks/>
        public event GetUser_GroupWithFilterCompletedEventHandler GetUser_GroupWithFilterCompleted;
        
        /// <remarks/>
        public event GetUser_GroupDetailCompletedEventHandler GetUser_GroupDetailCompleted;
        
        /// <remarks/>
        public event InsertUser_GroupCompletedEventHandler InsertUser_GroupCompleted;
        
        /// <remarks/>
        public event UpdateUser_GroupCompletedEventHandler UpdateUser_GroupCompleted;
        
        /// <remarks/>
        public event DeleteUser_GroupCompletedEventHandler DeleteUser_GroupCompleted;
        
        /// <remarks/>
        public event GetApplictionPartWithFilterCompletedEventHandler GetApplictionPartWithFilterCompleted;
        
        /// <remarks/>
        public event GetZirListHaWithFilterCompletedEventHandler GetZirListHaWithFilterCompleted;
        
        /// <remarks/>
        public event GetZirListHaDetailCompletedEventHandler GetZirListHaDetailCompleted;
        
        /// <remarks/>
        public event InsertZirListHaCompletedEventHandler InsertZirListHaCompleted;
        
        /// <remarks/>
        public event UpdateZirListHaCompletedEventHandler UpdateZirListHaCompleted;
        
        /// <remarks/>
        public event DeleteZirListHaCompletedEventHandler DeleteZirListHaCompleted;
        
        /// <remarks/>
        public event GetFileWithFilterCompletedEventHandler GetFileWithFilterCompleted;
        
        /// <remarks/>
        public event GetDateCompletedEventHandler GetDateCompleted;
        
        /// <remarks/>
        public event GetDigitalArchiveTreeStructureDetailCompletedEventHandler GetDigitalArchiveTreeStructureDetailCompleted;
        
        /// <remarks/>
        public event GetDigitalArchiveTreeStructureWithFilterCompletedEventHandler GetDigitalArchiveTreeStructureWithFilterCompleted;
        
        /// <remarks/>
        public event InsertDigitalArchiveTreeStructureCompletedEventHandler InsertDigitalArchiveTreeStructureCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetHistoryTahsilatDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_HistoryTahsilat GetHistoryTahsilatDetail(int HistoryTahsilatId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetHistoryTahsilatDetail", new object[] {
                        HistoryTahsilatId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_HistoryTahsilat)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryTahsilatDetailAsync(int HistoryTahsilatId, string IP) {
            this.GetHistoryTahsilatDetailAsync(HistoryTahsilatId, IP, null);
        }
        
        /// <remarks/>
        public void GetHistoryTahsilatDetailAsync(int HistoryTahsilatId, string IP, object userState) {
            if ((this.GetHistoryTahsilatDetailOperationCompleted == null)) {
                this.GetHistoryTahsilatDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryTahsilatDetailOperationCompleted);
            }
            this.InvokeAsync("GetHistoryTahsilatDetail", new object[] {
                        HistoryTahsilatId,
                        IP}, this.GetHistoryTahsilatDetailOperationCompleted, userState);
        }
        
        private void OnGetHistoryTahsilatDetailOperationCompleted(object arg) {
            if ((this.GetHistoryTahsilatDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryTahsilatDetailCompleted(this, new GetHistoryTahsilatDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertHistoryTahsilat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertHistoryTahsilat(int fldEmployeeId, int fldMadrakId, int fldReshteId, string fldTarikh, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertHistoryTahsilat", new object[] {
                        fldEmployeeId,
                        fldMadrakId,
                        fldReshteId,
                        fldTarikh,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertHistoryTahsilatAsync(int fldEmployeeId, int fldMadrakId, int fldReshteId, string fldTarikh, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertHistoryTahsilatAsync(fldEmployeeId, fldMadrakId, fldReshteId, fldTarikh, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertHistoryTahsilatAsync(int fldEmployeeId, int fldMadrakId, int fldReshteId, string fldTarikh, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertHistoryTahsilatOperationCompleted == null)) {
                this.InsertHistoryTahsilatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHistoryTahsilatOperationCompleted);
            }
            this.InvokeAsync("InsertHistoryTahsilat", new object[] {
                        fldEmployeeId,
                        fldMadrakId,
                        fldReshteId,
                        fldTarikh,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertHistoryTahsilatOperationCompleted, userState);
        }
        
        private void OnInsertHistoryTahsilatOperationCompleted(object arg) {
            if ((this.InsertHistoryTahsilatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHistoryTahsilatCompleted(this, new InsertHistoryTahsilatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateHistoryTahsilat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateHistoryTahsilat(int HistoryTahsilatId, int fldEmployeeId, int fldMadrakId, int fldReshteId, string fldTarikh, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateHistoryTahsilat", new object[] {
                        HistoryTahsilatId,
                        fldEmployeeId,
                        fldMadrakId,
                        fldReshteId,
                        fldTarikh,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateHistoryTahsilatAsync(int HistoryTahsilatId, int fldEmployeeId, int fldMadrakId, int fldReshteId, string fldTarikh, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateHistoryTahsilatAsync(HistoryTahsilatId, fldEmployeeId, fldMadrakId, fldReshteId, fldTarikh, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateHistoryTahsilatAsync(int HistoryTahsilatId, int fldEmployeeId, int fldMadrakId, int fldReshteId, string fldTarikh, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateHistoryTahsilatOperationCompleted == null)) {
                this.UpdateHistoryTahsilatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHistoryTahsilatOperationCompleted);
            }
            this.InvokeAsync("UpdateHistoryTahsilat", new object[] {
                        HistoryTahsilatId,
                        fldEmployeeId,
                        fldMadrakId,
                        fldReshteId,
                        fldTarikh,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateHistoryTahsilatOperationCompleted, userState);
        }
        
        private void OnUpdateHistoryTahsilatOperationCompleted(object arg) {
            if ((this.UpdateHistoryTahsilatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHistoryTahsilatCompleted(this, new UpdateHistoryTahsilatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteHistoryTahsilat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteHistoryTahsilat(int HistoryTahsilatId, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteHistoryTahsilat", new object[] {
                        HistoryTahsilatId,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteHistoryTahsilatAsync(int HistoryTahsilatId, string UserName, string Password, int OrganId, string IP) {
            this.DeleteHistoryTahsilatAsync(HistoryTahsilatId, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteHistoryTahsilatAsync(int HistoryTahsilatId, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteHistoryTahsilatOperationCompleted == null)) {
                this.DeleteHistoryTahsilatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteHistoryTahsilatOperationCompleted);
            }
            this.InvokeAsync("DeleteHistoryTahsilat", new object[] {
                        HistoryTahsilatId,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.DeleteHistoryTahsilatOperationCompleted, userState);
        }
        
        private void OnDeleteHistoryTahsilatOperationCompleted(object arg) {
            if ((this.DeleteHistoryTahsilatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteHistoryTahsilatCompleted(this, new DeleteHistoryTahsilatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertChartOrganEjraee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertChartOrganEjraee(string Title, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldOrganId, byte NoeVahed, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertChartOrganEjraee", new object[] {
                        Title,
                        PId,
                        fldOrganId,
                        NoeVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertChartOrganEjraeeAsync(string Title, System.Nullable<int> PId, System.Nullable<int> fldOrganId, byte NoeVahed, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertChartOrganEjraeeAsync(Title, PId, fldOrganId, NoeVahed, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertChartOrganEjraeeAsync(string Title, System.Nullable<int> PId, System.Nullable<int> fldOrganId, byte NoeVahed, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertChartOrganEjraeeOperationCompleted == null)) {
                this.InsertChartOrganEjraeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertChartOrganEjraeeOperationCompleted);
            }
            this.InvokeAsync("InsertChartOrganEjraee", new object[] {
                        Title,
                        PId,
                        fldOrganId,
                        NoeVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertChartOrganEjraeeOperationCompleted, userState);
        }
        
        private void OnInsertChartOrganEjraeeOperationCompleted(object arg) {
            if ((this.InsertChartOrganEjraeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertChartOrganEjraeeCompleted(this, new InsertChartOrganEjraeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateChartOrganEjraee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateChartOrganEjraee(int fldId, string Title, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldOrganId, byte NoeVahed, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateChartOrganEjraee", new object[] {
                        fldId,
                        Title,
                        PId,
                        fldOrganId,
                        NoeVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateChartOrganEjraeeAsync(int fldId, string Title, System.Nullable<int> PId, System.Nullable<int> fldOrganId, byte NoeVahed, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateChartOrganEjraeeAsync(fldId, Title, PId, fldOrganId, NoeVahed, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateChartOrganEjraeeAsync(int fldId, string Title, System.Nullable<int> PId, System.Nullable<int> fldOrganId, byte NoeVahed, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateChartOrganEjraeeOperationCompleted == null)) {
                this.UpdateChartOrganEjraeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateChartOrganEjraeeOperationCompleted);
            }
            this.InvokeAsync("UpdateChartOrganEjraee", new object[] {
                        fldId,
                        Title,
                        PId,
                        fldOrganId,
                        NoeVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateChartOrganEjraeeOperationCompleted, userState);
        }
        
        private void OnUpdateChartOrganEjraeeOperationCompleted(object arg) {
            if ((this.UpdateChartOrganEjraeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateChartOrganEjraeeCompleted(this, new UpdateChartOrganEjraeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteChartOrganEjraee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteChartOrganEjraee(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteChartOrganEjraee", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteChartOrganEjraeeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteChartOrganEjraeeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteChartOrganEjraeeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteChartOrganEjraeeOperationCompleted == null)) {
                this.DeleteChartOrganEjraeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChartOrganEjraeeOperationCompleted);
            }
            this.InvokeAsync("DeleteChartOrganEjraee", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteChartOrganEjraeeOperationCompleted, userState);
        }
        
        private void OnDeleteChartOrganEjraeeOperationCompleted(object arg) {
            if ((this.DeleteChartOrganEjraeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChartOrganEjraeeCompleted(this, new DeleteChartOrganEjraeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetChartEjraee_LastNode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ChartOrganEjraee[] GetChartEjraee_LastNode(int OrganId, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetChartEjraee_LastNode", new object[] {
                        OrganId,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ChartOrganEjraee[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChartEjraee_LastNodeAsync(int OrganId, string Username, string Password, string IP) {
            this.GetChartEjraee_LastNodeAsync(OrganId, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetChartEjraee_LastNodeAsync(int OrganId, string Username, string Password, string IP, object userState) {
            if ((this.GetChartEjraee_LastNodeOperationCompleted == null)) {
                this.GetChartEjraee_LastNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChartEjraee_LastNodeOperationCompleted);
            }
            this.InvokeAsync("GetChartEjraee_LastNode", new object[] {
                        OrganId,
                        Username,
                        Password,
                        IP}, this.GetChartEjraee_LastNodeOperationCompleted, userState);
        }
        
        private void OnGetChartEjraee_LastNodeOperationCompleted(object arg) {
            if ((this.GetChartEjraee_LastNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChartEjraee_LastNodeCompleted(this, new GetChartEjraee_LastNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetOrganizationalPostsEjraeeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_OrganizationalPostsEjraee GetOrganizationalPostsEjraeeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetOrganizationalPostsEjraeeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_OrganizationalPostsEjraee)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationalPostsEjraeeDetailAsync(int Id, string IP) {
            this.GetOrganizationalPostsEjraeeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetOrganizationalPostsEjraeeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetOrganizationalPostsEjraeeDetailOperationCompleted == null)) {
                this.GetOrganizationalPostsEjraeeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationalPostsEjraeeDetailOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationalPostsEjraeeDetail", new object[] {
                        Id,
                        IP}, this.GetOrganizationalPostsEjraeeDetailOperationCompleted, userState);
        }
        
        private void OnGetOrganizationalPostsEjraeeDetailOperationCompleted(object arg) {
            if ((this.GetOrganizationalPostsEjraeeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationalPostsEjraeeDetailCompleted(this, new GetOrganizationalPostsEjraeeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetOrganizationalPostsEjraeeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_OrganizationalPostsEjraee[] GetOrganizationalPostsEjraeeWithFilter(string FieldName, string FilterValue, int Top, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetOrganizationalPostsEjraeeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_OrganizationalPostsEjraee[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationalPostsEjraeeWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, string IP) {
            this.GetOrganizationalPostsEjraeeWithFilterAsync(FieldName, FilterValue, Top, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetOrganizationalPostsEjraeeWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, string IP, object userState) {
            if ((this.GetOrganizationalPostsEjraeeWithFilterOperationCompleted == null)) {
                this.GetOrganizationalPostsEjraeeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationalPostsEjraeeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationalPostsEjraeeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        IP}, this.GetOrganizationalPostsEjraeeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetOrganizationalPostsEjraeeWithFilterOperationCompleted(object arg) {
            if ((this.GetOrganizationalPostsEjraeeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationalPostsEjraeeWithFilterCompleted(this, new GetOrganizationalPostsEjraeeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertOrganizationalPostsEjraee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertOrganizationalPostsEjraee(string Title, string OrgPostCode, int ChartOrganId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertOrganizationalPostsEjraee", new object[] {
                        Title,
                        OrgPostCode,
                        ChartOrganId,
                        PID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOrganizationalPostsEjraeeAsync(string Title, string OrgPostCode, int ChartOrganId, System.Nullable<int> PID, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertOrganizationalPostsEjraeeAsync(Title, OrgPostCode, ChartOrganId, PID, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertOrganizationalPostsEjraeeAsync(string Title, string OrgPostCode, int ChartOrganId, System.Nullable<int> PID, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertOrganizationalPostsEjraeeOperationCompleted == null)) {
                this.InsertOrganizationalPostsEjraeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOrganizationalPostsEjraeeOperationCompleted);
            }
            this.InvokeAsync("InsertOrganizationalPostsEjraee", new object[] {
                        Title,
                        OrgPostCode,
                        ChartOrganId,
                        PID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertOrganizationalPostsEjraeeOperationCompleted, userState);
        }
        
        private void OnInsertOrganizationalPostsEjraeeOperationCompleted(object arg) {
            if ((this.InsertOrganizationalPostsEjraeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOrganizationalPostsEjraeeCompleted(this, new InsertOrganizationalPostsEjraeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateOrganizationalPostsEjraee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOrganizationalPostsEjraee(int fldId, string Title, string OrgPostCode, int ChartOrganId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateOrganizationalPostsEjraee", new object[] {
                        fldId,
                        Title,
                        OrgPostCode,
                        ChartOrganId,
                        PID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrganizationalPostsEjraeeAsync(int fldId, string Title, string OrgPostCode, int ChartOrganId, System.Nullable<int> PID, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateOrganizationalPostsEjraeeAsync(fldId, Title, OrgPostCode, ChartOrganId, PID, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateOrganizationalPostsEjraeeAsync(int fldId, string Title, string OrgPostCode, int ChartOrganId, System.Nullable<int> PID, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateOrganizationalPostsEjraeeOperationCompleted == null)) {
                this.UpdateOrganizationalPostsEjraeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrganizationalPostsEjraeeOperationCompleted);
            }
            this.InvokeAsync("UpdateOrganizationalPostsEjraee", new object[] {
                        fldId,
                        Title,
                        OrgPostCode,
                        ChartOrganId,
                        PID,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateOrganizationalPostsEjraeeOperationCompleted, userState);
        }
        
        private void OnUpdateOrganizationalPostsEjraeeOperationCompleted(object arg) {
            if ((this.UpdateOrganizationalPostsEjraeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrganizationalPostsEjraeeCompleted(this, new UpdateOrganizationalPostsEjraeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteOrganizationalPostsEjraee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteOrganizationalPostsEjraee(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteOrganizationalPostsEjraee", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationalPostsEjraeeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteOrganizationalPostsEjraeeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationalPostsEjraeeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteOrganizationalPostsEjraeeOperationCompleted == null)) {
                this.DeleteOrganizationalPostsEjraeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationalPostsEjraeeOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationalPostsEjraee", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteOrganizationalPostsEjraeeOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationalPostsEjraeeOperationCompleted(object arg) {
            if ((this.DeleteOrganizationalPostsEjraeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationalPostsEjraeeCompleted(this, new DeleteOrganizationalPostsEjraeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetTreeOrganPostEjra", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TreeOrganPost[] GetTreeOrganPostEjra(string FieldName, string Value, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTreeOrganPostEjra", new object[] {
                        FieldName,
                        Value,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TreeOrganPost[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeOrganPostEjraAsync(string FieldName, string Value, string UserName, string Password, string IP) {
            this.GetTreeOrganPostEjraAsync(FieldName, Value, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetTreeOrganPostEjraAsync(string FieldName, string Value, string UserName, string Password, string IP, object userState) {
            if ((this.GetTreeOrganPostEjraOperationCompleted == null)) {
                this.GetTreeOrganPostEjraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeOrganPostEjraOperationCompleted);
            }
            this.InvokeAsync("GetTreeOrganPostEjra", new object[] {
                        FieldName,
                        Value,
                        UserName,
                        Password,
                        IP}, this.GetTreeOrganPostEjraOperationCompleted, userState);
        }
        
        private void OnGetTreeOrganPostEjraOperationCompleted(object arg) {
            if ((this.GetTreeOrganPostEjraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeOrganPostEjraCompleted(this, new GetTreeOrganPostEjraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/ChangeLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeLetter(string IP, out ClsError Error) {
            object[] results = this.Invoke("ChangeLetter", new object[] {
                        IP});
            Error = ((ClsError)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeLetterAsync(string IP) {
            this.ChangeLetterAsync(IP, null);
        }
        
        /// <remarks/>
        public void ChangeLetterAsync(string IP, object userState) {
            if ((this.ChangeLetterOperationCompleted == null)) {
                this.ChangeLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeLetterOperationCompleted);
            }
            this.InvokeAsync("ChangeLetter", new object[] {
                        IP}, this.ChangeLetterOperationCompleted, userState);
        }
        
        private void OnChangeLetterOperationCompleted(object arg) {
            if ((this.ChangeLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeLetterCompleted(this, new ChangeLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetWebServiceLogDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_WebServiceLog GetWebServiceLogDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetWebServiceLogDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_WebServiceLog)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebServiceLogDetailAsync(int Id, string IP) {
            this.GetWebServiceLogDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetWebServiceLogDetailAsync(int Id, string IP, object userState) {
            if ((this.GetWebServiceLogDetailOperationCompleted == null)) {
                this.GetWebServiceLogDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebServiceLogDetailOperationCompleted);
            }
            this.InvokeAsync("GetWebServiceLogDetail", new object[] {
                        Id,
                        IP}, this.GetWebServiceLogDetailOperationCompleted, userState);
        }
        
        private void OnGetWebServiceLogDetailOperationCompleted(object arg) {
            if ((this.GetWebServiceLogDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebServiceLogDetailCompleted(this, new GetWebServiceLogDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetWebServiceLogWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_WebServiceLog[] GetWebServiceLogWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetWebServiceLogWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_WebServiceLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWebServiceLogWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetWebServiceLogWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetWebServiceLogWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetWebServiceLogWithFilterOperationCompleted == null)) {
                this.GetWebServiceLogWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebServiceLogWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetWebServiceLogWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetWebServiceLogWithFilterOperationCompleted, userState);
        }
        
        private void OnGetWebServiceLogWithFilterOperationCompleted(object arg) {
            if ((this.GetWebServiceLogWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebServiceLogWithFilterCompleted(this, new GetWebServiceLogWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertWebServiceLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertWebServiceLog(string Matn, string user, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertWebServiceLog", new object[] {
                        Matn,
                        user,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertWebServiceLogAsync(string Matn, string user, string Username, string Password, string IP) {
            this.InsertWebServiceLogAsync(Matn, user, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void InsertWebServiceLogAsync(string Matn, string user, string Username, string Password, string IP, object userState) {
            if ((this.InsertWebServiceLogOperationCompleted == null)) {
                this.InsertWebServiceLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertWebServiceLogOperationCompleted);
            }
            this.InvokeAsync("InsertWebServiceLog", new object[] {
                        Matn,
                        user,
                        Username,
                        Password,
                        IP}, this.InsertWebServiceLogOperationCompleted, userState);
        }
        
        private void OnInsertWebServiceLogOperationCompleted(object arg) {
            if ((this.InsertWebServiceLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertWebServiceLogCompleted(this, new InsertWebServiceLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateWebServiceLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateWebServiceLog(int Id, string Matn, string user, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateWebServiceLog", new object[] {
                        Id,
                        Matn,
                        user,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWebServiceLogAsync(int Id, string Matn, string user, string Username, string Password, string IP) {
            this.UpdateWebServiceLogAsync(Id, Matn, user, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void UpdateWebServiceLogAsync(int Id, string Matn, string user, string Username, string Password, string IP, object userState) {
            if ((this.UpdateWebServiceLogOperationCompleted == null)) {
                this.UpdateWebServiceLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWebServiceLogOperationCompleted);
            }
            this.InvokeAsync("UpdateWebServiceLog", new object[] {
                        Id,
                        Matn,
                        user,
                        Username,
                        Password,
                        IP}, this.UpdateWebServiceLogOperationCompleted, userState);
        }
        
        private void OnUpdateWebServiceLogOperationCompleted(object arg) {
            if ((this.UpdateWebServiceLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWebServiceLogCompleted(this, new UpdateWebServiceLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteWebServiceLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteWebServiceLog(int id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteWebServiceLog", new object[] {
                        id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWebServiceLogAsync(int id, string Username, string Password, string IP) {
            this.DeleteWebServiceLogAsync(id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteWebServiceLogAsync(int id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteWebServiceLogOperationCompleted == null)) {
                this.DeleteWebServiceLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWebServiceLogOperationCompleted);
            }
            this.InvokeAsync("DeleteWebServiceLog", new object[] {
                        id,
                        Username,
                        Password,
                        IP}, this.DeleteWebServiceLogOperationCompleted, userState);
        }
        
        private void OnDeleteWebServiceLogOperationCompleted(object arg) {
            if ((this.DeleteWebServiceLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWebServiceLogCompleted(this, new DeleteWebServiceLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetWarrantyTypeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_WarrantyType GetWarrantyTypeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetWarrantyTypeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_WarrantyType)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarrantyTypeDetailAsync(int Id, string IP) {
            this.GetWarrantyTypeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetWarrantyTypeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetWarrantyTypeDetailOperationCompleted == null)) {
                this.GetWarrantyTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarrantyTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetWarrantyTypeDetail", new object[] {
                        Id,
                        IP}, this.GetWarrantyTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetWarrantyTypeDetailOperationCompleted(object arg) {
            if ((this.GetWarrantyTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarrantyTypeDetailCompleted(this, new GetWarrantyTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetWarrantyTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_WarrantyType[] GetWarrantyTypeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetWarrantyTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_WarrantyType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWarrantyTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetWarrantyTypeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetWarrantyTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetWarrantyTypeWithFilterOperationCompleted == null)) {
                this.GetWarrantyTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarrantyTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetWarrantyTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetWarrantyTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetWarrantyTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetWarrantyTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarrantyTypeWithFilterCompleted(this, new GetWarrantyTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertWarrantyType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertWarrantyType(string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertWarrantyType", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertWarrantyTypeAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertWarrantyTypeAsync(Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertWarrantyTypeAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertWarrantyTypeOperationCompleted == null)) {
                this.InsertWarrantyTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertWarrantyTypeOperationCompleted);
            }
            this.InvokeAsync("InsertWarrantyType", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertWarrantyTypeOperationCompleted, userState);
        }
        
        private void OnInsertWarrantyTypeOperationCompleted(object arg) {
            if ((this.InsertWarrantyTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertWarrantyTypeCompleted(this, new InsertWarrantyTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateWarrantyType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateWarrantyType(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateWarrantyType", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWarrantyTypeAsync(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateWarrantyTypeAsync(Id, Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateWarrantyTypeAsync(int Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateWarrantyTypeOperationCompleted == null)) {
                this.UpdateWarrantyTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWarrantyTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateWarrantyType", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateWarrantyTypeOperationCompleted, userState);
        }
        
        private void OnUpdateWarrantyTypeOperationCompleted(object arg) {
            if ((this.UpdateWarrantyTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWarrantyTypeCompleted(this, new UpdateWarrantyTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteWarrantyType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteWarrantyType(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteWarrantyType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWarrantyTypeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteWarrantyTypeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteWarrantyTypeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteWarrantyTypeOperationCompleted == null)) {
                this.DeleteWarrantyTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWarrantyTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteWarrantyType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteWarrantyTypeOperationCompleted, userState);
        }
        
        private void OnDeleteWarrantyTypeOperationCompleted(object arg) {
            if ((this.DeleteWarrantyTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWarrantyTypeCompleted(this, new DeleteWarrantyTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetBillsTypeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BillsType GetBillsTypeDetail(int StateId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBillsTypeDetail", new object[] {
                        StateId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BillsType)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillsTypeDetailAsync(int StateId, string IP) {
            this.GetBillsTypeDetailAsync(StateId, IP, null);
        }
        
        /// <remarks/>
        public void GetBillsTypeDetailAsync(int StateId, string IP, object userState) {
            if ((this.GetBillsTypeDetailOperationCompleted == null)) {
                this.GetBillsTypeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillsTypeDetailOperationCompleted);
            }
            this.InvokeAsync("GetBillsTypeDetail", new object[] {
                        StateId,
                        IP}, this.GetBillsTypeDetailOperationCompleted, userState);
        }
        
        private void OnGetBillsTypeDetailOperationCompleted(object arg) {
            if ((this.GetBillsTypeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillsTypeDetailCompleted(this, new GetBillsTypeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetBillsTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_BillsType[] GetBillsTypeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBillsTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_BillsType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBillsTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetBillsTypeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetBillsTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetBillsTypeWithFilterOperationCompleted == null)) {
                this.GetBillsTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillsTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetBillsTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetBillsTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetBillsTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetBillsTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillsTypeWithFilterCompleted(this, new GetBillsTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertBillsType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertBillsType(string fldName, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertBillsType", new object[] {
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBillsTypeAsync(string fldName, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertBillsTypeAsync(fldName, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertBillsTypeAsync(string fldName, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertBillsTypeOperationCompleted == null)) {
                this.InsertBillsTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBillsTypeOperationCompleted);
            }
            this.InvokeAsync("InsertBillsType", new object[] {
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertBillsTypeOperationCompleted, userState);
        }
        
        private void OnInsertBillsTypeOperationCompleted(object arg) {
            if ((this.InsertBillsTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBillsTypeCompleted(this, new InsertBillsTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateBillsType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateBillsType(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateBillsType", new object[] {
                        fldId,
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBillsTypeAsync(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateBillsTypeAsync(fldId, fldName, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateBillsTypeAsync(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateBillsTypeOperationCompleted == null)) {
                this.UpdateBillsTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBillsTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateBillsType", new object[] {
                        fldId,
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateBillsTypeOperationCompleted, userState);
        }
        
        private void OnUpdateBillsTypeOperationCompleted(object arg) {
            if ((this.UpdateBillsTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBillsTypeCompleted(this, new UpdateBillsTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteBillsType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteBillsType(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteBillsType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBillsTypeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteBillsTypeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteBillsTypeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteBillsTypeOperationCompleted == null)) {
                this.DeleteBillsTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBillsTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteBillsType", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteBillsTypeOperationCompleted, userState);
        }
        
        private void OnDeleteBillsTypeOperationCompleted(object arg) {
            if ((this.DeleteBillsTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBillsTypeCompleted(this, new DeleteBillsTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetCaseBillsDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CaseBills GetCaseBillsDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCaseBillsDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CaseBills)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseBillsDetailAsync(int Id, int OrganId, string IP) {
            this.GetCaseBillsDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetCaseBillsDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetCaseBillsDetailOperationCompleted == null)) {
                this.GetCaseBillsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseBillsDetailOperationCompleted);
            }
            this.InvokeAsync("GetCaseBillsDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetCaseBillsDetailOperationCompleted, userState);
        }
        
        private void OnGetCaseBillsDetailOperationCompleted(object arg) {
            if ((this.GetCaseBillsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseBillsDetailCompleted(this, new GetCaseBillsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetCaseBillsWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CaseBills[] GetCaseBillsWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCaseBillsWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CaseBills[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCaseBillsWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetCaseBillsWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCaseBillsWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetCaseBillsWithFilterOperationCompleted == null)) {
                this.GetCaseBillsWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaseBillsWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCaseBillsWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetCaseBillsWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCaseBillsWithFilterOperationCompleted(object arg) {
            if ((this.GetCaseBillsWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaseBillsWithFilterCompleted(this, new GetCaseBillsWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertCaseBills", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCaseBills(int BillsTypeId, int FileNum, int CentercoId, int OrganChartId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> AshkhasId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCaseBills", new object[] {
                        BillsTypeId,
                        FileNum,
                        CentercoId,
                        OrganChartId,
                        AshkhasId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCaseBillsAsync(int BillsTypeId, int FileNum, int CentercoId, int OrganChartId, System.Nullable<int> AshkhasId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertCaseBillsAsync(BillsTypeId, FileNum, CentercoId, OrganChartId, AshkhasId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCaseBillsAsync(int BillsTypeId, int FileNum, int CentercoId, int OrganChartId, System.Nullable<int> AshkhasId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCaseBillsOperationCompleted == null)) {
                this.InsertCaseBillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCaseBillsOperationCompleted);
            }
            this.InvokeAsync("InsertCaseBills", new object[] {
                        BillsTypeId,
                        FileNum,
                        CentercoId,
                        OrganChartId,
                        AshkhasId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCaseBillsOperationCompleted, userState);
        }
        
        private void OnInsertCaseBillsOperationCompleted(object arg) {
            if ((this.InsertCaseBillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCaseBillsCompleted(this, new InsertCaseBillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateCaseBills", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCaseBills(int Id, int BillsTypeId, int FileNum, int CentercoId, int OrganChartId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> AshkhasId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCaseBills", new object[] {
                        Id,
                        BillsTypeId,
                        FileNum,
                        CentercoId,
                        OrganChartId,
                        AshkhasId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCaseBillsAsync(int Id, int BillsTypeId, int FileNum, int CentercoId, int OrganChartId, System.Nullable<int> AshkhasId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCaseBillsAsync(Id, BillsTypeId, FileNum, CentercoId, OrganChartId, AshkhasId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCaseBillsAsync(int Id, int BillsTypeId, int FileNum, int CentercoId, int OrganChartId, System.Nullable<int> AshkhasId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCaseBillsOperationCompleted == null)) {
                this.UpdateCaseBillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCaseBillsOperationCompleted);
            }
            this.InvokeAsync("UpdateCaseBills", new object[] {
                        Id,
                        BillsTypeId,
                        FileNum,
                        CentercoId,
                        OrganChartId,
                        AshkhasId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCaseBillsOperationCompleted, userState);
        }
        
        private void OnUpdateCaseBillsOperationCompleted(object arg) {
            if ((this.UpdateCaseBillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCaseBillsCompleted(this, new UpdateCaseBillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteCaseBills", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCaseBills(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCaseBills", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCaseBillsAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCaseBillsAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCaseBillsAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCaseBillsOperationCompleted == null)) {
                this.DeleteCaseBillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCaseBillsOperationCompleted);
            }
            this.InvokeAsync("DeleteCaseBills", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCaseBillsOperationCompleted, userState);
        }
        
        private void OnDeleteCaseBillsOperationCompleted(object arg) {
            if ((this.DeleteCaseBillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCaseBillsCompleted(this, new DeleteCaseBillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetFormatFileDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_FormatFile GetFormatFileDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetFormatFileDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_FormatFile)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormatFileDetailAsync(int Id, int OrganId, string IP) {
            this.GetFormatFileDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetFormatFileDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetFormatFileDetailOperationCompleted == null)) {
                this.GetFormatFileDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormatFileDetailOperationCompleted);
            }
            this.InvokeAsync("GetFormatFileDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetFormatFileDetailOperationCompleted, userState);
        }
        
        private void OnGetFormatFileDetailOperationCompleted(object arg) {
            if ((this.GetFormatFileDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormatFileDetailCompleted(this, new GetFormatFileDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetFormatFileWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_FormatFile[] GetFormatFileWithFilter(string FieldName, string FilterValue, int Top, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetFormatFileWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_FormatFile[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFormatFileWithFilterAsync(string FieldName, string FilterValue, int Top, int OrganId, string IP) {
            this.GetFormatFileWithFilterAsync(FieldName, FilterValue, Top, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetFormatFileWithFilterAsync(string FieldName, string FilterValue, int Top, int OrganId, string IP, object userState) {
            if ((this.GetFormatFileWithFilterOperationCompleted == null)) {
                this.GetFormatFileWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormatFileWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetFormatFileWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        OrganId,
                        IP}, this.GetFormatFileWithFilterOperationCompleted, userState);
        }
        
        private void OnGetFormatFileWithFilterOperationCompleted(object arg) {
            if ((this.GetFormatFileWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormatFileWithFilterCompleted(this, new GetFormatFileWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertFormatFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertFormatFile(string FormatName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Icon, string Passvand, int fldSize, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertFormatFile", new object[] {
                        FormatName,
                        Icon,
                        Passvand,
                        fldSize,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFormatFileAsync(string FormatName, byte[] Icon, string Passvand, int fldSize, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertFormatFileAsync(FormatName, Icon, Passvand, fldSize, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertFormatFileAsync(string FormatName, byte[] Icon, string Passvand, int fldSize, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertFormatFileOperationCompleted == null)) {
                this.InsertFormatFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFormatFileOperationCompleted);
            }
            this.InvokeAsync("InsertFormatFile", new object[] {
                        FormatName,
                        Icon,
                        Passvand,
                        fldSize,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertFormatFileOperationCompleted, userState);
        }
        
        private void OnInsertFormatFileOperationCompleted(object arg) {
            if ((this.InsertFormatFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFormatFileCompleted(this, new InsertFormatFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateFormatFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateFormatFile(byte Id, string FormatName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Icon, string Passvand, int fldSize, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateFormatFile", new object[] {
                        Id,
                        FormatName,
                        Icon,
                        Passvand,
                        fldSize,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFormatFileAsync(byte Id, string FormatName, byte[] Icon, string Passvand, int fldSize, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateFormatFileAsync(Id, FormatName, Icon, Passvand, fldSize, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateFormatFileAsync(byte Id, string FormatName, byte[] Icon, string Passvand, int fldSize, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateFormatFileOperationCompleted == null)) {
                this.UpdateFormatFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFormatFileOperationCompleted);
            }
            this.InvokeAsync("UpdateFormatFile", new object[] {
                        Id,
                        FormatName,
                        Icon,
                        Passvand,
                        fldSize,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateFormatFileOperationCompleted, userState);
        }
        
        private void OnUpdateFormatFileOperationCompleted(object arg) {
            if ((this.UpdateFormatFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFormatFileCompleted(this, new UpdateFormatFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteFormatFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteFormatFile(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteFormatFile", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFormatFileAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteFormatFileAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteFormatFileAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteFormatFileOperationCompleted == null)) {
                this.DeleteFormatFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFormatFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFormatFile", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteFormatFileOperationCompleted, userState);
        }
        
        private void OnDeleteFormatFileOperationCompleted(object arg) {
            if ((this.DeleteFormatFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFormatFileCompleted(this, new DeleteFormatFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetGeneralSettingDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GeneralSetting GetGeneralSettingDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetGeneralSettingDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GeneralSetting)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralSettingDetailAsync(int Id, int OrganId, string IP) {
            this.GetGeneralSettingDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetGeneralSettingDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetGeneralSettingDetailOperationCompleted == null)) {
                this.GetGeneralSettingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralSettingDetailOperationCompleted);
            }
            this.InvokeAsync("GetGeneralSettingDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetGeneralSettingDetailOperationCompleted, userState);
        }
        
        private void OnGetGeneralSettingDetailOperationCompleted(object arg) {
            if ((this.GetGeneralSettingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralSettingDetailCompleted(this, new GetGeneralSettingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetGeneralSettingWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GeneralSetting[] GetGeneralSettingWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetGeneralSettingWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GeneralSetting[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralSettingWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetGeneralSettingWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetGeneralSettingWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetGeneralSettingWithFilterOperationCompleted == null)) {
                this.GetGeneralSettingWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralSettingWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetGeneralSettingWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetGeneralSettingWithFilterOperationCompleted, userState);
        }
        
        private void OnGetGeneralSettingWithFilterOperationCompleted(object arg) {
            if ((this.GetGeneralSettingWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralSettingWithFilterCompleted(this, new GetGeneralSettingWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertGeneralSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertGeneralSetting(string fldName, string fldValue, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertGeneralSetting", new object[] {
                        fldName,
                        fldValue,
                        fldModuleId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGeneralSettingAsync(string fldName, string fldValue, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertGeneralSettingAsync(fldName, fldValue, fldModuleId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertGeneralSettingAsync(string fldName, string fldValue, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertGeneralSettingOperationCompleted == null)) {
                this.InsertGeneralSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGeneralSettingOperationCompleted);
            }
            this.InvokeAsync("InsertGeneralSetting", new object[] {
                        fldName,
                        fldValue,
                        fldModuleId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertGeneralSettingOperationCompleted, userState);
        }
        
        private void OnInsertGeneralSettingOperationCompleted(object arg) {
            if ((this.InsertGeneralSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGeneralSettingCompleted(this, new InsertGeneralSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateGeneralSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateGeneralSetting(byte fldId, string fldName, string fldValue, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateGeneralSetting", new object[] {
                        fldId,
                        fldName,
                        fldValue,
                        fldModuleId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGeneralSettingAsync(byte fldId, string fldName, string fldValue, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateGeneralSettingAsync(fldId, fldName, fldValue, fldModuleId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateGeneralSettingAsync(byte fldId, string fldName, string fldValue, int fldModuleId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateGeneralSettingOperationCompleted == null)) {
                this.UpdateGeneralSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGeneralSettingOperationCompleted);
            }
            this.InvokeAsync("UpdateGeneralSetting", new object[] {
                        fldId,
                        fldName,
                        fldValue,
                        fldModuleId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateGeneralSettingOperationCompleted, userState);
        }
        
        private void OnUpdateGeneralSettingOperationCompleted(object arg) {
            if ((this.UpdateGeneralSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGeneralSettingCompleted(this, new UpdateGeneralSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteGeneralSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteGeneralSetting(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteGeneralSetting", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGeneralSettingAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteGeneralSettingAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteGeneralSettingAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteGeneralSettingOperationCompleted == null)) {
                this.DeleteGeneralSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGeneralSettingOperationCompleted);
            }
            this.InvokeAsync("DeleteGeneralSetting", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteGeneralSettingOperationCompleted, userState);
        }
        
        private void OnDeleteGeneralSettingOperationCompleted(object arg) {
            if ((this.DeleteGeneralSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGeneralSettingCompleted(this, new DeleteGeneralSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/Insert_GeneralSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insert_GeneralSetting(string fldName, string fldValue, int fldModuleId, System.Data.DataTable ComboBox, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("Insert_GeneralSetting", new object[] {
                        fldName,
                        fldValue,
                        fldModuleId,
                        ComboBox,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_GeneralSettingAsync(string fldName, string fldValue, int fldModuleId, System.Data.DataTable ComboBox, string Desc, string Username, string Password, int OrganId, string IP) {
            this.Insert_GeneralSettingAsync(fldName, fldValue, fldModuleId, ComboBox, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void Insert_GeneralSettingAsync(string fldName, string fldValue, int fldModuleId, System.Data.DataTable ComboBox, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.Insert_GeneralSettingOperationCompleted == null)) {
                this.Insert_GeneralSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_GeneralSettingOperationCompleted);
            }
            this.InvokeAsync("Insert_GeneralSetting", new object[] {
                        fldName,
                        fldValue,
                        fldModuleId,
                        ComboBox,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.Insert_GeneralSettingOperationCompleted, userState);
        }
        
        private void OnInsert_GeneralSettingOperationCompleted(object arg) {
            if ((this.Insert_GeneralSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_GeneralSettingCompleted(this, new Insert_GeneralSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/Update_GeneralSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Update_GeneralSetting(int fldHeaderId, string fldName, string fldValue, int fldModuleId, System.Data.DataTable ComboBox, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("Update_GeneralSetting", new object[] {
                        fldHeaderId,
                        fldName,
                        fldValue,
                        fldModuleId,
                        ComboBox,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Update_GeneralSettingAsync(int fldHeaderId, string fldName, string fldValue, int fldModuleId, System.Data.DataTable ComboBox, string Desc, string Username, string Password, int OrganId, string IP) {
            this.Update_GeneralSettingAsync(fldHeaderId, fldName, fldValue, fldModuleId, ComboBox, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void Update_GeneralSettingAsync(int fldHeaderId, string fldName, string fldValue, int fldModuleId, System.Data.DataTable ComboBox, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.Update_GeneralSettingOperationCompleted == null)) {
                this.Update_GeneralSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_GeneralSettingOperationCompleted);
            }
            this.InvokeAsync("Update_GeneralSetting", new object[] {
                        fldHeaderId,
                        fldName,
                        fldValue,
                        fldModuleId,
                        ComboBox,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.Update_GeneralSettingOperationCompleted, userState);
        }
        
        private void OnUpdate_GeneralSettingOperationCompleted(object arg) {
            if ((this.Update_GeneralSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_GeneralSettingCompleted(this, new Update_GeneralSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/Delete_GeneralSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Delete_GeneralSetting(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("Delete_GeneralSetting", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_GeneralSettingAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.Delete_GeneralSettingAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void Delete_GeneralSettingAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.Delete_GeneralSettingOperationCompleted == null)) {
                this.Delete_GeneralSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_GeneralSettingOperationCompleted);
            }
            this.InvokeAsync("Delete_GeneralSetting", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.Delete_GeneralSettingOperationCompleted, userState);
        }
        
        private void OnDelete_GeneralSettingOperationCompleted(object arg) {
            if ((this.Delete_GeneralSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_GeneralSettingCompleted(this, new Delete_GeneralSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetKalaDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Kala GetKalaDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetKalaDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Kala)(results[0]));
        }
        
        /// <remarks/>
        public void GetKalaDetailAsync(int Id, int OrganId, string IP) {
            this.GetKalaDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetKalaDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetKalaDetailOperationCompleted == null)) {
                this.GetKalaDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKalaDetailOperationCompleted);
            }
            this.InvokeAsync("GetKalaDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetKalaDetailOperationCompleted, userState);
        }
        
        private void OnGetKalaDetailOperationCompleted(object arg) {
            if ((this.GetKalaDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKalaDetailCompleted(this, new GetKalaDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetKalaWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Kala[] GetKalaWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetKalaWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Kala[])(results[0]));
        }
        
        /// <remarks/>
        public void GetKalaWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetKalaWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetKalaWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetKalaWithFilterOperationCompleted == null)) {
                this.GetKalaWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKalaWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetKalaWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetKalaWithFilterOperationCompleted, userState);
        }
        
        private void OnGetKalaWithFilterOperationCompleted(object arg) {
            if ((this.GetKalaWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKalaWithFilterCompleted(this, new GetKalaWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertKala", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertKala(
                    string Name, 
                    byte KalaType, 
                    string KalaCode, 
                    byte Status, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> Sell, 
                    bool ArzeshAfzodeh, 
                    string IranCode, 
                    byte MoshakhaseType, 
                    string Moshakhase, 
                    int VahedAsli, 
                    int VahedFaree, 
                    byte NesbatType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> VahedMoadel, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("InsertKala", new object[] {
                        Name,
                        KalaType,
                        KalaCode,
                        Status,
                        Sell,
                        ArzeshAfzodeh,
                        IranCode,
                        MoshakhaseType,
                        Moshakhase,
                        VahedAsli,
                        VahedFaree,
                        NesbatType,
                        VahedMoadel,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertKalaAsync(
                    string Name, 
                    byte KalaType, 
                    string KalaCode, 
                    byte Status, 
                    System.Nullable<bool> Sell, 
                    bool ArzeshAfzodeh, 
                    string IranCode, 
                    byte MoshakhaseType, 
                    string Moshakhase, 
                    int VahedAsli, 
                    int VahedFaree, 
                    byte NesbatType, 
                    System.Nullable<int> VahedMoadel, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.InsertKalaAsync(Name, KalaType, KalaCode, Status, Sell, ArzeshAfzodeh, IranCode, MoshakhaseType, Moshakhase, VahedAsli, VahedFaree, NesbatType, VahedMoadel, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertKalaAsync(
                    string Name, 
                    byte KalaType, 
                    string KalaCode, 
                    byte Status, 
                    System.Nullable<bool> Sell, 
                    bool ArzeshAfzodeh, 
                    string IranCode, 
                    byte MoshakhaseType, 
                    string Moshakhase, 
                    int VahedAsli, 
                    int VahedFaree, 
                    byte NesbatType, 
                    System.Nullable<int> VahedMoadel, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.InsertKalaOperationCompleted == null)) {
                this.InsertKalaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertKalaOperationCompleted);
            }
            this.InvokeAsync("InsertKala", new object[] {
                        Name,
                        KalaType,
                        KalaCode,
                        Status,
                        Sell,
                        ArzeshAfzodeh,
                        IranCode,
                        MoshakhaseType,
                        Moshakhase,
                        VahedAsli,
                        VahedFaree,
                        NesbatType,
                        VahedMoadel,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertKalaOperationCompleted, userState);
        }
        
        private void OnInsertKalaOperationCompleted(object arg) {
            if ((this.InsertKalaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertKalaCompleted(this, new InsertKalaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateKala", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateKala(
                    int Id, 
                    string Name, 
                    byte KalaType, 
                    string KalaCode, 
                    byte Status, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> Sell, 
                    bool ArzeshAfzodeh, 
                    string IranCode, 
                    byte MoshakhaseType, 
                    string Moshakhase, 
                    int VahedAsli, 
                    int VahedFaree, 
                    byte NesbatType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> VahedMoadel, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateKala", new object[] {
                        Id,
                        Name,
                        KalaType,
                        KalaCode,
                        Status,
                        Sell,
                        ArzeshAfzodeh,
                        IranCode,
                        MoshakhaseType,
                        Moshakhase,
                        VahedAsli,
                        VahedFaree,
                        NesbatType,
                        VahedMoadel,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateKalaAsync(
                    int Id, 
                    string Name, 
                    byte KalaType, 
                    string KalaCode, 
                    byte Status, 
                    System.Nullable<bool> Sell, 
                    bool ArzeshAfzodeh, 
                    string IranCode, 
                    byte MoshakhaseType, 
                    string Moshakhase, 
                    int VahedAsli, 
                    int VahedFaree, 
                    byte NesbatType, 
                    System.Nullable<int> VahedMoadel, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP) {
            this.UpdateKalaAsync(Id, Name, KalaType, KalaCode, Status, Sell, ArzeshAfzodeh, IranCode, MoshakhaseType, Moshakhase, VahedAsli, VahedFaree, NesbatType, VahedMoadel, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateKalaAsync(
                    int Id, 
                    string Name, 
                    byte KalaType, 
                    string KalaCode, 
                    byte Status, 
                    System.Nullable<bool> Sell, 
                    bool ArzeshAfzodeh, 
                    string IranCode, 
                    byte MoshakhaseType, 
                    string Moshakhase, 
                    int VahedAsli, 
                    int VahedFaree, 
                    byte NesbatType, 
                    System.Nullable<int> VahedMoadel, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.UpdateKalaOperationCompleted == null)) {
                this.UpdateKalaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateKalaOperationCompleted);
            }
            this.InvokeAsync("UpdateKala", new object[] {
                        Id,
                        Name,
                        KalaType,
                        KalaCode,
                        Status,
                        Sell,
                        ArzeshAfzodeh,
                        IranCode,
                        MoshakhaseType,
                        Moshakhase,
                        VahedAsli,
                        VahedFaree,
                        NesbatType,
                        VahedMoadel,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateKalaOperationCompleted, userState);
        }
        
        private void OnUpdateKalaOperationCompleted(object arg) {
            if ((this.UpdateKalaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateKalaCompleted(this, new UpdateKalaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteKala", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteKala(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteKala", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteKalaAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteKalaAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteKalaAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteKalaOperationCompleted == null)) {
                this.DeleteKalaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteKalaOperationCompleted);
            }
            this.InvokeAsync("DeleteKala", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteKalaOperationCompleted, userState);
        }
        
        private void OnDeleteKalaOperationCompleted(object arg) {
            if ((this.DeleteKalaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteKalaCompleted(this, new DeleteKalaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetCharacterPersianPlaqueDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CharacterPersianPlaque GetCharacterPersianPlaqueDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCharacterPersianPlaqueDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CharacterPersianPlaque)(results[0]));
        }
        
        /// <remarks/>
        public void GetCharacterPersianPlaqueDetailAsync(int Id, string IP) {
            this.GetCharacterPersianPlaqueDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetCharacterPersianPlaqueDetailAsync(int Id, string IP, object userState) {
            if ((this.GetCharacterPersianPlaqueDetailOperationCompleted == null)) {
                this.GetCharacterPersianPlaqueDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCharacterPersianPlaqueDetailOperationCompleted);
            }
            this.InvokeAsync("GetCharacterPersianPlaqueDetail", new object[] {
                        Id,
                        IP}, this.GetCharacterPersianPlaqueDetailOperationCompleted, userState);
        }
        
        private void OnGetCharacterPersianPlaqueDetailOperationCompleted(object arg) {
            if ((this.GetCharacterPersianPlaqueDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCharacterPersianPlaqueDetailCompleted(this, new GetCharacterPersianPlaqueDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetCharacterPersianPlaqueWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CharacterPersianPlaque[] GetCharacterPersianPlaqueWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCharacterPersianPlaqueWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CharacterPersianPlaque[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCharacterPersianPlaqueWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetCharacterPersianPlaqueWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCharacterPersianPlaqueWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetCharacterPersianPlaqueWithFilterOperationCompleted == null)) {
                this.GetCharacterPersianPlaqueWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCharacterPersianPlaqueWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCharacterPersianPlaqueWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetCharacterPersianPlaqueWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCharacterPersianPlaqueWithFilterOperationCompleted(object arg) {
            if ((this.GetCharacterPersianPlaqueWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCharacterPersianPlaqueWithFilterCompleted(this, new GetCharacterPersianPlaqueWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertCharacterPersianPlaque", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCharacterPersianPlaque(string fldName, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCharacterPersianPlaque", new object[] {
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCharacterPersianPlaqueAsync(string fldName, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertCharacterPersianPlaqueAsync(fldName, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCharacterPersianPlaqueAsync(string fldName, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCharacterPersianPlaqueOperationCompleted == null)) {
                this.InsertCharacterPersianPlaqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCharacterPersianPlaqueOperationCompleted);
            }
            this.InvokeAsync("InsertCharacterPersianPlaque", new object[] {
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCharacterPersianPlaqueOperationCompleted, userState);
        }
        
        private void OnInsertCharacterPersianPlaqueOperationCompleted(object arg) {
            if ((this.InsertCharacterPersianPlaqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCharacterPersianPlaqueCompleted(this, new InsertCharacterPersianPlaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateCharacterPersianPlaque", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCharacterPersianPlaque(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCharacterPersianPlaque", new object[] {
                        fldId,
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCharacterPersianPlaqueAsync(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCharacterPersianPlaqueAsync(fldId, fldName, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCharacterPersianPlaqueAsync(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCharacterPersianPlaqueOperationCompleted == null)) {
                this.UpdateCharacterPersianPlaqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCharacterPersianPlaqueOperationCompleted);
            }
            this.InvokeAsync("UpdateCharacterPersianPlaque", new object[] {
                        fldId,
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCharacterPersianPlaqueOperationCompleted, userState);
        }
        
        private void OnUpdateCharacterPersianPlaqueOperationCompleted(object arg) {
            if ((this.UpdateCharacterPersianPlaqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCharacterPersianPlaqueCompleted(this, new UpdateCharacterPersianPlaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteCharacterPersianPlaque", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCharacterPersianPlaque(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCharacterPersianPlaque", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCharacterPersianPlaqueAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCharacterPersianPlaqueAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCharacterPersianPlaqueAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCharacterPersianPlaqueOperationCompleted == null)) {
                this.DeleteCharacterPersianPlaqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCharacterPersianPlaqueOperationCompleted);
            }
            this.InvokeAsync("DeleteCharacterPersianPlaque", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCharacterPersianPlaqueOperationCompleted, userState);
        }
        
        private void OnDeleteCharacterPersianPlaqueOperationCompleted(object arg) {
            if ((this.DeleteCharacterPersianPlaqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCharacterPersianPlaqueCompleted(this, new DeleteCharacterPersianPlaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetTypeKhodroDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TypeKhodro GetTypeKhodroDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTypeKhodroDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TypeKhodro)(results[0]));
        }
        
        /// <remarks/>
        public void GetTypeKhodroDetailAsync(int Id, string IP) {
            this.GetTypeKhodroDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetTypeKhodroDetailAsync(int Id, string IP, object userState) {
            if ((this.GetTypeKhodroDetailOperationCompleted == null)) {
                this.GetTypeKhodroDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTypeKhodroDetailOperationCompleted);
            }
            this.InvokeAsync("GetTypeKhodroDetail", new object[] {
                        Id,
                        IP}, this.GetTypeKhodroDetailOperationCompleted, userState);
        }
        
        private void OnGetTypeKhodroDetailOperationCompleted(object arg) {
            if ((this.GetTypeKhodroDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTypeKhodroDetailCompleted(this, new GetTypeKhodroDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetTypeKhodroWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TypeKhodro[] GetTypeKhodroWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTypeKhodroWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TypeKhodro[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTypeKhodroWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetTypeKhodroWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetTypeKhodroWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetTypeKhodroWithFilterOperationCompleted == null)) {
                this.GetTypeKhodroWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTypeKhodroWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetTypeKhodroWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetTypeKhodroWithFilterOperationCompleted, userState);
        }
        
        private void OnGetTypeKhodroWithFilterOperationCompleted(object arg) {
            if ((this.GetTypeKhodroWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTypeKhodroWithFilterCompleted(this, new GetTypeKhodroWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertTypeKhodro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertTypeKhodro(string fldName, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertTypeKhodro", new object[] {
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTypeKhodroAsync(string fldName, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertTypeKhodroAsync(fldName, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertTypeKhodroAsync(string fldName, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertTypeKhodroOperationCompleted == null)) {
                this.InsertTypeKhodroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTypeKhodroOperationCompleted);
            }
            this.InvokeAsync("InsertTypeKhodro", new object[] {
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertTypeKhodroOperationCompleted, userState);
        }
        
        private void OnInsertTypeKhodroOperationCompleted(object arg) {
            if ((this.InsertTypeKhodroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTypeKhodroCompleted(this, new InsertTypeKhodroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateTypeKhodro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateTypeKhodro(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateTypeKhodro", new object[] {
                        fldId,
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTypeKhodroAsync(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateTypeKhodroAsync(fldId, fldName, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateTypeKhodroAsync(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateTypeKhodroOperationCompleted == null)) {
                this.UpdateTypeKhodroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTypeKhodroOperationCompleted);
            }
            this.InvokeAsync("UpdateTypeKhodro", new object[] {
                        fldId,
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateTypeKhodroOperationCompleted, userState);
        }
        
        private void OnUpdateTypeKhodroOperationCompleted(object arg) {
            if ((this.UpdateTypeKhodroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTypeKhodroCompleted(this, new UpdateTypeKhodroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteTypeKhodro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteTypeKhodro(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteTypeKhodro", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTypeKhodroAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteTypeKhodroAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteTypeKhodroAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteTypeKhodroOperationCompleted == null)) {
                this.DeleteTypeKhodroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTypeKhodroOperationCompleted);
            }
            this.InvokeAsync("DeleteTypeKhodro", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteTypeKhodroOperationCompleted, userState);
        }
        
        private void OnDeleteTypeKhodroOperationCompleted(object arg) {
            if ((this.DeleteTypeKhodroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTypeKhodroCompleted(this, new DeleteTypeKhodroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetPlaqueDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Plaque GetPlaqueDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetPlaqueDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Plaque)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaqueDetailAsync(int Id, string IP) {
            this.GetPlaqueDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetPlaqueDetailAsync(int Id, string IP, object userState) {
            if ((this.GetPlaqueDetailOperationCompleted == null)) {
                this.GetPlaqueDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaqueDetailOperationCompleted);
            }
            this.InvokeAsync("GetPlaqueDetail", new object[] {
                        Id,
                        IP}, this.GetPlaqueDetailOperationCompleted, userState);
        }
        
        private void OnGetPlaqueDetailOperationCompleted(object arg) {
            if ((this.GetPlaqueDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaqueDetailCompleted(this, new GetPlaqueDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetPlaqueWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Plaque[] GetPlaqueWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetPlaqueWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Plaque[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaqueWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetPlaqueWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetPlaqueWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetPlaqueWithFilterOperationCompleted == null)) {
                this.GetPlaqueWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaqueWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetPlaqueWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetPlaqueWithFilterOperationCompleted, userState);
        }
        
        private void OnGetPlaqueWithFilterOperationCompleted(object arg) {
            if ((this.GetPlaqueWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaqueWithFilterCompleted(this, new GetPlaqueWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertPlaque", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertPlaque(byte fldSerialPlaque, string harf, string fldPlaque2, string fldPlaque3, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertPlaque", new object[] {
                        fldSerialPlaque,
                        harf,
                        fldPlaque2,
                        fldPlaque3,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPlaqueAsync(byte fldSerialPlaque, string harf, string fldPlaque2, string fldPlaque3, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertPlaqueAsync(fldSerialPlaque, harf, fldPlaque2, fldPlaque3, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertPlaqueAsync(byte fldSerialPlaque, string harf, string fldPlaque2, string fldPlaque3, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertPlaqueOperationCompleted == null)) {
                this.InsertPlaqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPlaqueOperationCompleted);
            }
            this.InvokeAsync("InsertPlaque", new object[] {
                        fldSerialPlaque,
                        harf,
                        fldPlaque2,
                        fldPlaque3,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertPlaqueOperationCompleted, userState);
        }
        
        private void OnInsertPlaqueOperationCompleted(object arg) {
            if ((this.InsertPlaqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPlaqueCompleted(this, new InsertPlaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdatePlaque", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePlaque(int fldId, byte fldSerialPlaque, string harf, string fldPlaque2, string fldPlaque3, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdatePlaque", new object[] {
                        fldId,
                        fldSerialPlaque,
                        harf,
                        fldPlaque2,
                        fldPlaque3,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePlaqueAsync(int fldId, byte fldSerialPlaque, string harf, string fldPlaque2, string fldPlaque3, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdatePlaqueAsync(fldId, fldSerialPlaque, harf, fldPlaque2, fldPlaque3, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdatePlaqueAsync(int fldId, byte fldSerialPlaque, string harf, string fldPlaque2, string fldPlaque3, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdatePlaqueOperationCompleted == null)) {
                this.UpdatePlaqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePlaqueOperationCompleted);
            }
            this.InvokeAsync("UpdatePlaque", new object[] {
                        fldId,
                        fldSerialPlaque,
                        harf,
                        fldPlaque2,
                        fldPlaque3,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdatePlaqueOperationCompleted, userState);
        }
        
        private void OnUpdatePlaqueOperationCompleted(object arg) {
            if ((this.UpdatePlaqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePlaqueCompleted(this, new UpdatePlaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeletePlaque", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeletePlaque(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeletePlaque", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePlaqueAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeletePlaqueAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeletePlaqueAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeletePlaqueOperationCompleted == null)) {
                this.DeletePlaqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlaqueOperationCompleted);
            }
            this.InvokeAsync("DeletePlaque", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeletePlaqueOperationCompleted, userState);
        }
        
        private void OnDeletePlaqueOperationCompleted(object arg) {
            if ((this.DeletePlaqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlaqueCompleted(this, new DeletePlaqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertPlaque_WebService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertPlaque_WebService(string Harf, string Plaque2, string Plaque3, byte Serial, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertPlaque_WebService", new object[] {
                        Harf,
                        Plaque2,
                        Plaque3,
                        Serial,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPlaque_WebServiceAsync(string Harf, string Plaque2, string Plaque3, byte Serial, string IP) {
            this.InsertPlaque_WebServiceAsync(Harf, Plaque2, Plaque3, Serial, IP, null);
        }
        
        /// <remarks/>
        public void InsertPlaque_WebServiceAsync(string Harf, string Plaque2, string Plaque3, byte Serial, string IP, object userState) {
            if ((this.InsertPlaque_WebServiceOperationCompleted == null)) {
                this.InsertPlaque_WebServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPlaque_WebServiceOperationCompleted);
            }
            this.InvokeAsync("InsertPlaque_WebService", new object[] {
                        Harf,
                        Plaque2,
                        Plaque3,
                        Serial,
                        IP}, this.InsertPlaque_WebServiceOperationCompleted, userState);
        }
        
        private void OnInsertPlaque_WebServiceOperationCompleted(object arg) {
            if ((this.InsertPlaque_WebServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPlaque_WebServiceCompleted(this, new InsertPlaque_WebServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetGeneralSetting_ComboBoxDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GeneralSetting_ComboBox GetGeneralSetting_ComboBoxDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetGeneralSetting_ComboBoxDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GeneralSetting_ComboBox)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralSetting_ComboBoxDetailAsync(int Id, string IP) {
            this.GetGeneralSetting_ComboBoxDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetGeneralSetting_ComboBoxDetailAsync(int Id, string IP, object userState) {
            if ((this.GetGeneralSetting_ComboBoxDetailOperationCompleted == null)) {
                this.GetGeneralSetting_ComboBoxDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralSetting_ComboBoxDetailOperationCompleted);
            }
            this.InvokeAsync("GetGeneralSetting_ComboBoxDetail", new object[] {
                        Id,
                        IP}, this.GetGeneralSetting_ComboBoxDetailOperationCompleted, userState);
        }
        
        private void OnGetGeneralSetting_ComboBoxDetailOperationCompleted(object arg) {
            if ((this.GetGeneralSetting_ComboBoxDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralSetting_ComboBoxDetailCompleted(this, new GetGeneralSetting_ComboBoxDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetGeneralSetting_ComboBoxWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GeneralSetting_ComboBox[] GetGeneralSetting_ComboBoxWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetGeneralSetting_ComboBoxWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GeneralSetting_ComboBox[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralSetting_ComboBoxWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetGeneralSetting_ComboBoxWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetGeneralSetting_ComboBoxWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetGeneralSetting_ComboBoxWithFilterOperationCompleted == null)) {
                this.GetGeneralSetting_ComboBoxWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralSetting_ComboBoxWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetGeneralSetting_ComboBoxWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetGeneralSetting_ComboBoxWithFilterOperationCompleted, userState);
        }
        
        private void OnGetGeneralSetting_ComboBoxWithFilterOperationCompleted(object arg) {
            if ((this.GetGeneralSetting_ComboBoxWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralSetting_ComboBoxWithFilterCompleted(this, new GetGeneralSetting_ComboBoxWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertGeneralSetting_ComboBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertGeneralSetting_ComboBox(byte fldGeneralSettingId, string fldTtile, string fldValue, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertGeneralSetting_ComboBox", new object[] {
                        fldGeneralSettingId,
                        fldTtile,
                        fldValue,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGeneralSetting_ComboBoxAsync(byte fldGeneralSettingId, string fldTtile, string fldValue, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertGeneralSetting_ComboBoxAsync(fldGeneralSettingId, fldTtile, fldValue, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertGeneralSetting_ComboBoxAsync(byte fldGeneralSettingId, string fldTtile, string fldValue, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertGeneralSetting_ComboBoxOperationCompleted == null)) {
                this.InsertGeneralSetting_ComboBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGeneralSetting_ComboBoxOperationCompleted);
            }
            this.InvokeAsync("InsertGeneralSetting_ComboBox", new object[] {
                        fldGeneralSettingId,
                        fldTtile,
                        fldValue,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertGeneralSetting_ComboBoxOperationCompleted, userState);
        }
        
        private void OnInsertGeneralSetting_ComboBoxOperationCompleted(object arg) {
            if ((this.InsertGeneralSetting_ComboBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGeneralSetting_ComboBoxCompleted(this, new InsertGeneralSetting_ComboBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateGeneralSetting_ComboBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateGeneralSetting_ComboBox(byte fldId, byte fldGeneralSettingId, string fldTtile, string fldValue, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateGeneralSetting_ComboBox", new object[] {
                        fldId,
                        fldGeneralSettingId,
                        fldTtile,
                        fldValue,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGeneralSetting_ComboBoxAsync(byte fldId, byte fldGeneralSettingId, string fldTtile, string fldValue, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateGeneralSetting_ComboBoxAsync(fldId, fldGeneralSettingId, fldTtile, fldValue, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateGeneralSetting_ComboBoxAsync(byte fldId, byte fldGeneralSettingId, string fldTtile, string fldValue, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateGeneralSetting_ComboBoxOperationCompleted == null)) {
                this.UpdateGeneralSetting_ComboBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGeneralSetting_ComboBoxOperationCompleted);
            }
            this.InvokeAsync("UpdateGeneralSetting_ComboBox", new object[] {
                        fldId,
                        fldGeneralSettingId,
                        fldTtile,
                        fldValue,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateGeneralSetting_ComboBoxOperationCompleted, userState);
        }
        
        private void OnUpdateGeneralSetting_ComboBoxOperationCompleted(object arg) {
            if ((this.UpdateGeneralSetting_ComboBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGeneralSetting_ComboBoxCompleted(this, new UpdateGeneralSetting_ComboBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteGeneralSetting_ComboBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteGeneralSetting_ComboBox(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteGeneralSetting_ComboBox", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGeneralSetting_ComboBoxAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteGeneralSetting_ComboBoxAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteGeneralSetting_ComboBoxAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteGeneralSetting_ComboBoxOperationCompleted == null)) {
                this.DeleteGeneralSetting_ComboBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGeneralSetting_ComboBoxOperationCompleted);
            }
            this.InvokeAsync("DeleteGeneralSetting_ComboBox", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteGeneralSetting_ComboBoxOperationCompleted, userState);
        }
        
        private void OnDeleteGeneralSetting_ComboBoxOperationCompleted(object arg) {
            if ((this.DeleteGeneralSetting_ComboBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGeneralSetting_ComboBoxCompleted(this, new DeleteGeneralSetting_ComboBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetGeneralSetting_ValueDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GeneralSetting_Value GetGeneralSetting_ValueDetail(int Id, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetGeneralSetting_ValueDetail", new object[] {
                        Id,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GeneralSetting_Value)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralSetting_ValueDetailAsync(int Id, int OrganId, string IP) {
            this.GetGeneralSetting_ValueDetailAsync(Id, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetGeneralSetting_ValueDetailAsync(int Id, int OrganId, string IP, object userState) {
            if ((this.GetGeneralSetting_ValueDetailOperationCompleted == null)) {
                this.GetGeneralSetting_ValueDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralSetting_ValueDetailOperationCompleted);
            }
            this.InvokeAsync("GetGeneralSetting_ValueDetail", new object[] {
                        Id,
                        OrganId,
                        IP}, this.GetGeneralSetting_ValueDetailOperationCompleted, userState);
        }
        
        private void OnGetGeneralSetting_ValueDetailOperationCompleted(object arg) {
            if ((this.GetGeneralSetting_ValueDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralSetting_ValueDetailCompleted(this, new GetGeneralSetting_ValueDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetGeneralSetting_ValueWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GeneralSetting_Value[] GetGeneralSetting_ValueWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetGeneralSetting_ValueWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GeneralSetting_Value[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralSetting_ValueWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetGeneralSetting_ValueWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetGeneralSetting_ValueWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetGeneralSetting_ValueWithFilterOperationCompleted == null)) {
                this.GetGeneralSetting_ValueWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralSetting_ValueWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetGeneralSetting_ValueWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetGeneralSetting_ValueWithFilterOperationCompleted, userState);
        }
        
        private void OnGetGeneralSetting_ValueWithFilterOperationCompleted(object arg) {
            if ((this.GetGeneralSetting_ValueWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralSetting_ValueWithFilterCompleted(this, new GetGeneralSetting_ValueWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertGeneralSetting_Value", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertGeneralSetting_Value(byte fldGeneralSettingId, string fldValue, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertGeneralSetting_Value", new object[] {
                        fldGeneralSettingId,
                        fldValue,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGeneralSetting_ValueAsync(byte fldGeneralSettingId, string fldValue, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertGeneralSetting_ValueAsync(fldGeneralSettingId, fldValue, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertGeneralSetting_ValueAsync(byte fldGeneralSettingId, string fldValue, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertGeneralSetting_ValueOperationCompleted == null)) {
                this.InsertGeneralSetting_ValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGeneralSetting_ValueOperationCompleted);
            }
            this.InvokeAsync("InsertGeneralSetting_Value", new object[] {
                        fldGeneralSettingId,
                        fldValue,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertGeneralSetting_ValueOperationCompleted, userState);
        }
        
        private void OnInsertGeneralSetting_ValueOperationCompleted(object arg) {
            if ((this.InsertGeneralSetting_ValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGeneralSetting_ValueCompleted(this, new InsertGeneralSetting_ValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateGeneralSetting_Value", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateGeneralSetting_Value(byte fldId, byte fldGeneralSettingId, string fldValue, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateGeneralSetting_Value", new object[] {
                        fldId,
                        fldGeneralSettingId,
                        fldValue,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGeneralSetting_ValueAsync(byte fldId, byte fldGeneralSettingId, string fldValue, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateGeneralSetting_ValueAsync(fldId, fldGeneralSettingId, fldValue, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateGeneralSetting_ValueAsync(byte fldId, byte fldGeneralSettingId, string fldValue, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateGeneralSetting_ValueOperationCompleted == null)) {
                this.UpdateGeneralSetting_ValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGeneralSetting_ValueOperationCompleted);
            }
            this.InvokeAsync("UpdateGeneralSetting_Value", new object[] {
                        fldId,
                        fldGeneralSettingId,
                        fldValue,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateGeneralSetting_ValueOperationCompleted, userState);
        }
        
        private void OnUpdateGeneralSetting_ValueOperationCompleted(object arg) {
            if ((this.UpdateGeneralSetting_ValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGeneralSetting_ValueCompleted(this, new UpdateGeneralSetting_ValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteGeneralSetting_Value", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteGeneralSetting_Value(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteGeneralSetting_Value", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGeneralSetting_ValueAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteGeneralSetting_ValueAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteGeneralSetting_ValueAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteGeneralSetting_ValueOperationCompleted == null)) {
                this.DeleteGeneralSetting_ValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGeneralSetting_ValueOperationCompleted);
            }
            this.InvokeAsync("DeleteGeneralSetting_Value", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteGeneralSetting_ValueOperationCompleted, userState);
        }
        
        private void OnDeleteGeneralSetting_ValueOperationCompleted(object arg) {
            if ((this.DeleteGeneralSetting_ValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGeneralSetting_ValueCompleted(this, new DeleteGeneralSetting_ValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOrder(string FieldName, int fldId, int OrderId, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateOrder", new object[] {
                        FieldName,
                        fldId,
                        OrderId,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrderAsync(string FieldName, int fldId, int OrderId, string Username, string Password, int OrganId, string IP) {
            this.UpdateOrderAsync(FieldName, fldId, OrderId, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateOrderAsync(string FieldName, int fldId, int OrderId, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateOrderOperationCompleted == null)) {
                this.UpdateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderOperationCompleted);
            }
            this.InvokeAsync("UpdateOrder", new object[] {
                        FieldName,
                        fldId,
                        OrderId,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateOrderOperationCompleted, userState);
        }
        
        private void OnUpdateOrderOperationCompleted(object arg) {
            if ((this.UpdateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderCompleted(this, new UpdateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetCompanyPostDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CompanyPost GetCompanyPostDetail(short Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCompanyPostDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CompanyPost)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyPostDetailAsync(short Id, string IP) {
            this.GetCompanyPostDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetCompanyPostDetailAsync(short Id, string IP, object userState) {
            if ((this.GetCompanyPostDetailOperationCompleted == null)) {
                this.GetCompanyPostDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyPostDetailOperationCompleted);
            }
            this.InvokeAsync("GetCompanyPostDetail", new object[] {
                        Id,
                        IP}, this.GetCompanyPostDetailOperationCompleted, userState);
        }
        
        private void OnGetCompanyPostDetailOperationCompleted(object arg) {
            if ((this.GetCompanyPostDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyPostDetailCompleted(this, new GetCompanyPostDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetCompanyPostWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CompanyPost[] GetCompanyPostWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCompanyPostWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CompanyPost[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyPostWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetCompanyPostWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCompanyPostWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetCompanyPostWithFilterOperationCompleted == null)) {
                this.GetCompanyPostWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyPostWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCompanyPostWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetCompanyPostWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCompanyPostWithFilterOperationCompleted(object arg) {
            if ((this.GetCompanyPostWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyPostWithFilterCompleted(this, new GetCompanyPostWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertCompanyPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCompanyPost(string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCompanyPost", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCompanyPostAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertCompanyPostAsync(Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCompanyPostAsync(string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCompanyPostOperationCompleted == null)) {
                this.InsertCompanyPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCompanyPostOperationCompleted);
            }
            this.InvokeAsync("InsertCompanyPost", new object[] {
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCompanyPostOperationCompleted, userState);
        }
        
        private void OnInsertCompanyPostOperationCompleted(object arg) {
            if ((this.InsertCompanyPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCompanyPostCompleted(this, new InsertCompanyPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateCompanyPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCompanyPost(short Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCompanyPost", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCompanyPostAsync(short Id, string Name, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCompanyPostAsync(Id, Name, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCompanyPostAsync(short Id, string Name, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCompanyPostOperationCompleted == null)) {
                this.UpdateCompanyPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCompanyPostOperationCompleted);
            }
            this.InvokeAsync("UpdateCompanyPost", new object[] {
                        Id,
                        Name,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCompanyPostOperationCompleted, userState);
        }
        
        private void OnUpdateCompanyPostOperationCompleted(object arg) {
            if ((this.UpdateCompanyPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompanyPostCompleted(this, new UpdateCompanyPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteCompanyPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCompanyPost(short id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCompanyPost", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCompanyPostAsync(short id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCompanyPostAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCompanyPostAsync(short id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCompanyPostOperationCompleted == null)) {
                this.DeleteCompanyPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCompanyPostOperationCompleted);
            }
            this.InvokeAsync("DeleteCompanyPost", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCompanyPostOperationCompleted, userState);
        }
        
        private void OnDeleteCompanyPostOperationCompleted(object arg) {
            if ((this.DeleteCompanyPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompanyPostCompleted(this, new DeleteCompanyPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/SelectMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Month[] SelectMonth(string IP, out ClsError Error) {
            object[] results = this.Invoke("SelectMonth", new object[] {
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Month[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectMonthAsync(string IP) {
            this.SelectMonthAsync(IP, null);
        }
        
        /// <remarks/>
        public void SelectMonthAsync(string IP, object userState) {
            if ((this.SelectMonthOperationCompleted == null)) {
                this.SelectMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMonthOperationCompleted);
            }
            this.InvokeAsync("SelectMonth", new object[] {
                        IP}, this.SelectMonthOperationCompleted, userState);
        }
        
        private void OnSelectMonthOperationCompleted(object arg) {
            if ((this.SelectMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMonthCompleted(this, new SelectMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetHesabTypeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_HesabType[] GetHesabTypeWithFilter(string FieldName, string FilterValue, int Top, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetHesabTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_HesabType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHesabTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, string IP) {
            this.GetHesabTypeWithFilterAsync(FieldName, FilterValue, Top, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetHesabTypeWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, string IP, object userState) {
            if ((this.GetHesabTypeWithFilterOperationCompleted == null)) {
                this.GetHesabTypeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHesabTypeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetHesabTypeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        IP}, this.GetHesabTypeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetHesabTypeWithFilterOperationCompleted(object arg) {
            if ((this.GetHesabTypeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHesabTypeWithFilterCompleted(this, new GetHesabTypeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertLoginFailed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertLoginFailed(string UserName, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertLoginFailed", new object[] {
                        UserName,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLoginFailedAsync(string UserName, string IP) {
            this.InsertLoginFailedAsync(UserName, IP, null);
        }
        
        /// <remarks/>
        public void InsertLoginFailedAsync(string UserName, string IP, object userState) {
            if ((this.InsertLoginFailedOperationCompleted == null)) {
                this.InsertLoginFailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLoginFailedOperationCompleted);
            }
            this.InvokeAsync("InsertLoginFailed", new object[] {
                        UserName,
                        IP}, this.InsertLoginFailedOperationCompleted, userState);
        }
        
        private void OnInsertLoginFailedOperationCompleted(object arg) {
            if ((this.InsertLoginFailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLoginFailedCompleted(this, new InsertLoginFailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetHistoryTahsilatWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_HistoryTahsilat[] GetHistoryTahsilatWithFilter(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetHistoryTahsilatWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_HistoryTahsilat[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryTahsilatWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP) {
            this.GetHistoryTahsilatWithFilterAsync(FieldName, FilterValue, FilterValue2, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetHistoryTahsilatWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, object userState) {
            if ((this.GetHistoryTahsilatWithFilterOperationCompleted == null)) {
                this.GetHistoryTahsilatWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryTahsilatWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetHistoryTahsilatWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP}, this.GetHistoryTahsilatWithFilterOperationCompleted, userState);
        }
        
        private void OnGetHistoryTahsilatWithFilterOperationCompleted(object arg) {
            if ((this.GetHistoryTahsilatWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryTahsilatWithFilterCompleted(this, new GetHistoryTahsilatWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateDigitalArchiveTreeStructure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDigitalArchiveTreeStructure(int Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ModuleId, string Title, bool AttachFile, string Desc, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateDigitalArchiveTreeStructure", new object[] {
                        Id,
                        PID,
                        ModuleId,
                        Title,
                        AttachFile,
                        Desc,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDigitalArchiveTreeStructureAsync(int Id, System.Nullable<int> PID, System.Nullable<int> ModuleId, string Title, bool AttachFile, string Desc, string UserName, string Password, string IP) {
            this.UpdateDigitalArchiveTreeStructureAsync(Id, PID, ModuleId, Title, AttachFile, Desc, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void UpdateDigitalArchiveTreeStructureAsync(int Id, System.Nullable<int> PID, System.Nullable<int> ModuleId, string Title, bool AttachFile, string Desc, string UserName, string Password, string IP, object userState) {
            if ((this.UpdateDigitalArchiveTreeStructureOperationCompleted == null)) {
                this.UpdateDigitalArchiveTreeStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDigitalArchiveTreeStructureOperationCompleted);
            }
            this.InvokeAsync("UpdateDigitalArchiveTreeStructure", new object[] {
                        Id,
                        PID,
                        ModuleId,
                        Title,
                        AttachFile,
                        Desc,
                        UserName,
                        Password,
                        IP}, this.UpdateDigitalArchiveTreeStructureOperationCompleted, userState);
        }
        
        private void OnUpdateDigitalArchiveTreeStructureOperationCompleted(object arg) {
            if ((this.UpdateDigitalArchiveTreeStructureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDigitalArchiveTreeStructureCompleted(this, new UpdateDigitalArchiveTreeStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteDigitalArchiveTreeStructure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDigitalArchiveTreeStructure(int Id, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteDigitalArchiveTreeStructure", new object[] {
                        Id,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDigitalArchiveTreeStructureAsync(int Id, string UserName, string Password, string IP) {
            this.DeleteDigitalArchiveTreeStructureAsync(Id, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteDigitalArchiveTreeStructureAsync(int Id, string UserName, string Password, string IP, object userState) {
            if ((this.DeleteDigitalArchiveTreeStructureOperationCompleted == null)) {
                this.DeleteDigitalArchiveTreeStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDigitalArchiveTreeStructureOperationCompleted);
            }
            this.InvokeAsync("DeleteDigitalArchiveTreeStructure", new object[] {
                        Id,
                        UserName,
                        Password,
                        IP}, this.DeleteDigitalArchiveTreeStructureOperationCompleted, userState);
        }
        
        private void OnDeleteDigitalArchiveTreeStructureOperationCompleted(object arg) {
            if ((this.DeleteDigitalArchiveTreeStructureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDigitalArchiveTreeStructureCompleted(this, new DeleteDigitalArchiveTreeStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetNameOrganForFormul", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GetNameOrganForFormul[] GetNameOrganForFormul(string IP, out ClsError Error) {
            object[] results = this.Invoke("GetNameOrganForFormul", new object[] {
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GetNameOrganForFormul[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNameOrganForFormulAsync(string IP) {
            this.GetNameOrganForFormulAsync(IP, null);
        }
        
        /// <remarks/>
        public void GetNameOrganForFormulAsync(string IP, object userState) {
            if ((this.GetNameOrganForFormulOperationCompleted == null)) {
                this.GetNameOrganForFormulOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNameOrganForFormulOperationCompleted);
            }
            this.InvokeAsync("GetNameOrganForFormul", new object[] {
                        IP}, this.GetNameOrganForFormulOperationCompleted, userState);
        }
        
        private void OnGetNameOrganForFormulOperationCompleted(object arg) {
            if ((this.GetNameOrganForFormulCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNameOrganForFormulCompleted(this, new GetNameOrganForFormulCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetOrganizationalPostsDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_OrganizationalPosts GetOrganizationalPostsDetail(int Id, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetOrganizationalPostsDetail", new object[] {
                        Id,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_OrganizationalPosts)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationalPostsDetailAsync(int Id, string UserName, string Password, string IP) {
            this.GetOrganizationalPostsDetailAsync(Id, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetOrganizationalPostsDetailAsync(int Id, string UserName, string Password, string IP, object userState) {
            if ((this.GetOrganizationalPostsDetailOperationCompleted == null)) {
                this.GetOrganizationalPostsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationalPostsDetailOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationalPostsDetail", new object[] {
                        Id,
                        UserName,
                        Password,
                        IP}, this.GetOrganizationalPostsDetailOperationCompleted, userState);
        }
        
        private void OnGetOrganizationalPostsDetailOperationCompleted(object arg) {
            if ((this.GetOrganizationalPostsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationalPostsDetailCompleted(this, new GetOrganizationalPostsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetOrganizationalPostsWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_OrganizationalPosts[] GetOrganizationalPostsWithFilter(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetOrganizationalPostsWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_OrganizationalPosts[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationalPostsWithFilterAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP) {
            this.GetOrganizationalPostsWithFilterAsync(FieldName, FilterValue, Top, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetOrganizationalPostsWithFilterAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP, object userState) {
            if ((this.GetOrganizationalPostsWithFilterOperationCompleted == null)) {
                this.GetOrganizationalPostsWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationalPostsWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationalPostsWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password,
                        IP}, this.GetOrganizationalPostsWithFilterOperationCompleted, userState);
        }
        
        private void OnGetOrganizationalPostsWithFilterOperationCompleted(object arg) {
            if ((this.GetOrganizationalPostsWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationalPostsWithFilterCompleted(this, new GetOrganizationalPostsWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertOrganizationalPosts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertOrganizationalPosts(string fldTitle, string fldOrgPostCode, int fldChartOrganId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPId, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertOrganizationalPosts", new object[] {
                        fldTitle,
                        fldOrgPostCode,
                        fldChartOrganId,
                        fldPId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOrganizationalPostsAsync(string fldTitle, string fldOrgPostCode, int fldChartOrganId, System.Nullable<int> fldPId, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertOrganizationalPostsAsync(fldTitle, fldOrgPostCode, fldChartOrganId, fldPId, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertOrganizationalPostsAsync(string fldTitle, string fldOrgPostCode, int fldChartOrganId, System.Nullable<int> fldPId, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertOrganizationalPostsOperationCompleted == null)) {
                this.InsertOrganizationalPostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOrganizationalPostsOperationCompleted);
            }
            this.InvokeAsync("InsertOrganizationalPosts", new object[] {
                        fldTitle,
                        fldOrgPostCode,
                        fldChartOrganId,
                        fldPId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertOrganizationalPostsOperationCompleted, userState);
        }
        
        private void OnInsertOrganizationalPostsOperationCompleted(object arg) {
            if ((this.InsertOrganizationalPostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOrganizationalPostsCompleted(this, new InsertOrganizationalPostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateOrganizationalPosts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOrganizationalPosts(int Id, string fldTitle, string fldOrgPostCode, int fldChartOrganId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPId, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateOrganizationalPosts", new object[] {
                        Id,
                        fldTitle,
                        fldOrgPostCode,
                        fldChartOrganId,
                        fldPId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrganizationalPostsAsync(int Id, string fldTitle, string fldOrgPostCode, int fldChartOrganId, System.Nullable<int> fldPId, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateOrganizationalPostsAsync(Id, fldTitle, fldOrgPostCode, fldChartOrganId, fldPId, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateOrganizationalPostsAsync(int Id, string fldTitle, string fldOrgPostCode, int fldChartOrganId, System.Nullable<int> fldPId, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateOrganizationalPostsOperationCompleted == null)) {
                this.UpdateOrganizationalPostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrganizationalPostsOperationCompleted);
            }
            this.InvokeAsync("UpdateOrganizationalPosts", new object[] {
                        Id,
                        fldTitle,
                        fldOrgPostCode,
                        fldChartOrganId,
                        fldPId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateOrganizationalPostsOperationCompleted, userState);
        }
        
        private void OnUpdateOrganizationalPostsOperationCompleted(object arg) {
            if ((this.UpdateOrganizationalPostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrganizationalPostsCompleted(this, new UpdateOrganizationalPostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteOrganizationalPosts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteOrganizationalPosts(int Id, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteOrganizationalPosts", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationalPostsAsync(int Id, string UserName, string Password, int OrganId, string IP) {
            this.DeleteOrganizationalPostsAsync(Id, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationalPostsAsync(int Id, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteOrganizationalPostsOperationCompleted == null)) {
                this.DeleteOrganizationalPostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationalPostsOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationalPosts", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.DeleteOrganizationalPostsOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationalPostsOperationCompleted(object arg) {
            if ((this.DeleteOrganizationalPostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationalPostsCompleted(this, new DeleteOrganizationalPostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetBankDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Bank GetBankDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBankDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Bank)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankDetailAsync(int Id, string IP) {
            this.GetBankDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetBankDetailAsync(int Id, string IP, object userState) {
            if ((this.GetBankDetailOperationCompleted == null)) {
                this.GetBankDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankDetailOperationCompleted);
            }
            this.InvokeAsync("GetBankDetail", new object[] {
                        Id,
                        IP}, this.GetBankDetailOperationCompleted, userState);
        }
        
        private void OnGetBankDetailOperationCompleted(object arg) {
            if ((this.GetBankDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankDetailCompleted(this, new GetBankDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetBankWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Bank[] GetBankWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetBankWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Bank[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBankWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetBankWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetBankWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetBankWithFilterOperationCompleted == null)) {
                this.GetBankWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetBankWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetBankWithFilterOperationCompleted, userState);
        }
        
        private void OnGetBankWithFilterOperationCompleted(object arg) {
            if ((this.GetBankWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankWithFilterCompleted(this, new GetBankWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertBank(string BankName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File, string Pasvand, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<byte> CentralBankCode, string InfinitiveBank, bool Fix, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertBank", new object[] {
                        BankName,
                        File,
                        Pasvand,
                        CentralBankCode,
                        InfinitiveBank,
                        Fix,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBankAsync(string BankName, byte[] File, string Pasvand, System.Nullable<byte> CentralBankCode, string InfinitiveBank, bool Fix, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertBankAsync(BankName, File, Pasvand, CentralBankCode, InfinitiveBank, Fix, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertBankAsync(string BankName, byte[] File, string Pasvand, System.Nullable<byte> CentralBankCode, string InfinitiveBank, bool Fix, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertBankOperationCompleted == null)) {
                this.InsertBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBankOperationCompleted);
            }
            this.InvokeAsync("InsertBank", new object[] {
                        BankName,
                        File,
                        Pasvand,
                        CentralBankCode,
                        InfinitiveBank,
                        Fix,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertBankOperationCompleted, userState);
        }
        
        private void OnInsertBankOperationCompleted(object arg) {
            if ((this.InsertBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBankCompleted(this, new InsertBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateBank(int Id, string BankName, int FileId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File, string Pasvand, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<byte> CentralBankCode, string InfinitiveBank, bool Fix, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateBank", new object[] {
                        Id,
                        BankName,
                        FileId,
                        File,
                        Pasvand,
                        CentralBankCode,
                        InfinitiveBank,
                        Fix,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBankAsync(int Id, string BankName, int FileId, byte[] File, string Pasvand, System.Nullable<byte> CentralBankCode, string InfinitiveBank, bool Fix, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateBankAsync(Id, BankName, FileId, File, Pasvand, CentralBankCode, InfinitiveBank, Fix, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateBankAsync(int Id, string BankName, int FileId, byte[] File, string Pasvand, System.Nullable<byte> CentralBankCode, string InfinitiveBank, bool Fix, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateBankOperationCompleted == null)) {
                this.UpdateBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBankOperationCompleted);
            }
            this.InvokeAsync("UpdateBank", new object[] {
                        Id,
                        BankName,
                        FileId,
                        File,
                        Pasvand,
                        CentralBankCode,
                        InfinitiveBank,
                        Fix,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateBankOperationCompleted, userState);
        }
        
        private void OnUpdateBankOperationCompleted(object arg) {
            if ((this.UpdateBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBankCompleted(this, new UpdateBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteBank(int Id, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteBank", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBankAsync(int Id, string UserName, string Password, int OrganId, string IP) {
            this.DeleteBankAsync(Id, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteBankAsync(int Id, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteBankOperationCompleted == null)) {
                this.DeleteBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBankOperationCompleted);
            }
            this.InvokeAsync("DeleteBank", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.DeleteBankOperationCompleted, userState);
        }
        
        private void OnDeleteBankOperationCompleted(object arg) {
            if ((this.DeleteBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBankCompleted(this, new DeleteBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetrptDastresiKarbaranWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_RptDastresiKarbaran[] GetrptDastresiKarbaranWithFilter([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> appId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> userGroup_ModuleOrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetrptDastresiKarbaranWithFilter", new object[] {
                        appId,
                        userGroup_ModuleOrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_RptDastresiKarbaran[])(results[0]));
        }
        
        /// <remarks/>
        public void GetrptDastresiKarbaranWithFilterAsync(System.Nullable<int> appId, System.Nullable<int> userGroup_ModuleOrganId, string IP) {
            this.GetrptDastresiKarbaranWithFilterAsync(appId, userGroup_ModuleOrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetrptDastresiKarbaranWithFilterAsync(System.Nullable<int> appId, System.Nullable<int> userGroup_ModuleOrganId, string IP, object userState) {
            if ((this.GetrptDastresiKarbaranWithFilterOperationCompleted == null)) {
                this.GetrptDastresiKarbaranWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetrptDastresiKarbaranWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetrptDastresiKarbaranWithFilter", new object[] {
                        appId,
                        userGroup_ModuleOrganId,
                        IP}, this.GetrptDastresiKarbaranWithFilterOperationCompleted, userState);
        }
        
        private void OnGetrptDastresiKarbaranWithFilterOperationCompleted(object arg) {
            if ((this.GetrptDastresiKarbaranWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetrptDastresiKarbaranWithFilterCompleted(this, new GetrptDastresiKarbaranWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetSHobeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_SHobe GetSHobeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSHobeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_SHobe)(results[0]));
        }
        
        /// <remarks/>
        public void GetSHobeDetailAsync(int Id, string IP) {
            this.GetSHobeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetSHobeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetSHobeDetailOperationCompleted == null)) {
                this.GetSHobeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSHobeDetailOperationCompleted);
            }
            this.InvokeAsync("GetSHobeDetail", new object[] {
                        Id,
                        IP}, this.GetSHobeDetailOperationCompleted, userState);
        }
        
        private void OnGetSHobeDetailOperationCompleted(object arg) {
            if ((this.GetSHobeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSHobeDetailCompleted(this, new GetSHobeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetSHobeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_SHobe[] GetSHobeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSHobeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_SHobe[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSHobeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetSHobeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetSHobeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetSHobeWithFilterOperationCompleted == null)) {
                this.GetSHobeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSHobeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetSHobeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetSHobeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetSHobeWithFilterOperationCompleted(object arg) {
            if ((this.GetSHobeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSHobeWithFilterCompleted(this, new GetSHobeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertSHobe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSHobe(int BankId, string Name, int CodeSHobe, string Address, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertSHobe", new object[] {
                        BankId,
                        Name,
                        CodeSHobe,
                        Address,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSHobeAsync(int BankId, string Name, int CodeSHobe, string Address, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertSHobeAsync(BankId, Name, CodeSHobe, Address, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertSHobeAsync(int BankId, string Name, int CodeSHobe, string Address, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertSHobeOperationCompleted == null)) {
                this.InsertSHobeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSHobeOperationCompleted);
            }
            this.InvokeAsync("InsertSHobe", new object[] {
                        BankId,
                        Name,
                        CodeSHobe,
                        Address,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertSHobeOperationCompleted, userState);
        }
        
        private void OnInsertSHobeOperationCompleted(object arg) {
            if ((this.InsertSHobeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSHobeCompleted(this, new InsertSHobeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateSHobe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSHobe(int Id, int BankId, string Name, int CodeSHobe, string Address, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateSHobe", new object[] {
                        Id,
                        BankId,
                        Name,
                        CodeSHobe,
                        Address,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSHobeAsync(int Id, int BankId, string Name, int CodeSHobe, string Address, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateSHobeAsync(Id, BankId, Name, CodeSHobe, Address, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateSHobeAsync(int Id, int BankId, string Name, int CodeSHobe, string Address, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateSHobeOperationCompleted == null)) {
                this.UpdateSHobeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSHobeOperationCompleted);
            }
            this.InvokeAsync("UpdateSHobe", new object[] {
                        Id,
                        BankId,
                        Name,
                        CodeSHobe,
                        Address,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateSHobeOperationCompleted, userState);
        }
        
        private void OnUpdateSHobeOperationCompleted(object arg) {
            if ((this.UpdateSHobeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSHobeCompleted(this, new UpdateSHobeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteSHobe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSHobe(int Id, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteSHobe", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSHobeAsync(int Id, string UserName, string Password, int OrganId, string IP) {
            this.DeleteSHobeAsync(Id, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteSHobeAsync(int Id, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteSHobeOperationCompleted == null)) {
                this.DeleteSHobeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSHobeOperationCompleted);
            }
            this.InvokeAsync("DeleteSHobe", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.DeleteSHobeOperationCompleted, userState);
        }
        
        private void OnDeleteSHobeOperationCompleted(object arg) {
            if ((this.DeleteSHobeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSHobeCompleted(this, new DeleteSHobeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetErrorWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Error[] GetErrorWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetErrorWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Error[])(results[0]));
        }
        
        /// <remarks/>
        public void GetErrorWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetErrorWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetErrorWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetErrorWithFilterOperationCompleted == null)) {
                this.GetErrorWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErrorWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetErrorWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetErrorWithFilterOperationCompleted, userState);
        }
        
        private void OnGetErrorWithFilterOperationCompleted(object arg) {
            if ((this.GetErrorWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErrorWithFilterCompleted(this, new GetErrorWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertError(string Matn, System.DateTime Tarikh, string IP, string Desc, string UserName, string Password, out ClsError Error) {
            object[] results = this.Invoke("InsertError", new object[] {
                        Matn,
                        Tarikh,
                        IP,
                        Desc,
                        UserName,
                        Password});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertErrorAsync(string Matn, System.DateTime Tarikh, string IP, string Desc, string UserName, string Password) {
            this.InsertErrorAsync(Matn, Tarikh, IP, Desc, UserName, Password, null);
        }
        
        /// <remarks/>
        public void InsertErrorAsync(string Matn, System.DateTime Tarikh, string IP, string Desc, string UserName, string Password, object userState) {
            if ((this.InsertErrorOperationCompleted == null)) {
                this.InsertErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertErrorOperationCompleted);
            }
            this.InvokeAsync("InsertError", new object[] {
                        Matn,
                        Tarikh,
                        IP,
                        Desc,
                        UserName,
                        Password}, this.InsertErrorOperationCompleted, userState);
        }
        
        private void OnInsertErrorOperationCompleted(object arg) {
            if ((this.InsertErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertErrorCompleted(this, new InsertErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetSignersWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Signers[] GetSignersWithFilter(int Module_OrganId, string Tarikh, int reportId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetSignersWithFilter", new object[] {
                        Module_OrganId,
                        Tarikh,
                        reportId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Signers[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSignersWithFilterAsync(int Module_OrganId, string Tarikh, int reportId, string IP) {
            this.GetSignersWithFilterAsync(Module_OrganId, Tarikh, reportId, IP, null);
        }
        
        /// <remarks/>
        public void GetSignersWithFilterAsync(int Module_OrganId, string Tarikh, int reportId, string IP, object userState) {
            if ((this.GetSignersWithFilterOperationCompleted == null)) {
                this.GetSignersWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignersWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetSignersWithFilter", new object[] {
                        Module_OrganId,
                        Tarikh,
                        reportId,
                        IP}, this.GetSignersWithFilterOperationCompleted, userState);
        }
        
        private void OnGetSignersWithFilterOperationCompleted(object arg) {
            if ((this.GetSignersWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignersWithFilterCompleted(this, new GetSignersWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetTreeOrganPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_TreeOrganPost[] GetTreeOrganPost(string FieldName, string Value, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetTreeOrganPost", new object[] {
                        FieldName,
                        Value,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_TreeOrganPost[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeOrganPostAsync(string FieldName, string Value, string UserName, string Password, string IP) {
            this.GetTreeOrganPostAsync(FieldName, Value, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetTreeOrganPostAsync(string FieldName, string Value, string UserName, string Password, string IP, object userState) {
            if ((this.GetTreeOrganPostOperationCompleted == null)) {
                this.GetTreeOrganPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeOrganPostOperationCompleted);
            }
            this.InvokeAsync("GetTreeOrganPost", new object[] {
                        FieldName,
                        Value,
                        UserName,
                        Password,
                        IP}, this.GetTreeOrganPostOperationCompleted, userState);
        }
        
        private void OnGetTreeOrganPostOperationCompleted(object arg) {
            if ((this.GetTreeOrganPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeOrganPostCompleted(this, new GetTreeOrganPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetNezamVazifeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_NezamVazife[] GetNezamVazifeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetNezamVazifeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_NezamVazife[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNezamVazifeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetNezamVazifeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetNezamVazifeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetNezamVazifeWithFilterOperationCompleted == null)) {
                this.GetNezamVazifeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNezamVazifeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetNezamVazifeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetNezamVazifeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetNezamVazifeWithFilterOperationCompleted(object arg) {
            if ((this.GetNezamVazifeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNezamVazifeWithFilterCompleted(this, new GetNezamVazifeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetNezamVazifeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_NezamVazife GetNezamVazifeDetail(int NezamVazifeId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetNezamVazifeDetail", new object[] {
                        NezamVazifeId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_NezamVazife)(results[0]));
        }
        
        /// <remarks/>
        public void GetNezamVazifeDetailAsync(int NezamVazifeId, string IP) {
            this.GetNezamVazifeDetailAsync(NezamVazifeId, IP, null);
        }
        
        /// <remarks/>
        public void GetNezamVazifeDetailAsync(int NezamVazifeId, string IP, object userState) {
            if ((this.GetNezamVazifeDetailOperationCompleted == null)) {
                this.GetNezamVazifeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNezamVazifeDetailOperationCompleted);
            }
            this.InvokeAsync("GetNezamVazifeDetail", new object[] {
                        NezamVazifeId,
                        IP}, this.GetNezamVazifeDetailOperationCompleted, userState);
        }
        
        private void OnGetNezamVazifeDetailOperationCompleted(object arg) {
            if ((this.GetNezamVazifeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNezamVazifeDetailCompleted(this, new GetNezamVazifeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertNezamVazife", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertNezamVazife(string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertNezamVazife", new object[] {
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNezamVazifeAsync(string fldTitle, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertNezamVazifeAsync(fldTitle, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertNezamVazifeAsync(string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertNezamVazifeOperationCompleted == null)) {
                this.InsertNezamVazifeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNezamVazifeOperationCompleted);
            }
            this.InvokeAsync("InsertNezamVazife", new object[] {
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertNezamVazifeOperationCompleted, userState);
        }
        
        private void OnInsertNezamVazifeOperationCompleted(object arg) {
            if ((this.InsertNezamVazifeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNezamVazifeCompleted(this, new InsertNezamVazifeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateNezamVazife", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateNezamVazife(byte fldId, string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateNezamVazife", new object[] {
                        fldId,
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNezamVazifeAsync(byte fldId, string fldTitle, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateNezamVazifeAsync(fldId, fldTitle, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateNezamVazifeAsync(byte fldId, string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateNezamVazifeOperationCompleted == null)) {
                this.UpdateNezamVazifeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNezamVazifeOperationCompleted);
            }
            this.InvokeAsync("UpdateNezamVazife", new object[] {
                        fldId,
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateNezamVazifeOperationCompleted, userState);
        }
        
        private void OnUpdateNezamVazifeOperationCompleted(object arg) {
            if ((this.UpdateNezamVazifeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNezamVazifeCompleted(this, new UpdateNezamVazifeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteNezamVazife", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteNezamVazife(byte id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteNezamVazife", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNezamVazifeAsync(byte id, string Username, string Password, int OrganId, string IP) {
            this.DeleteNezamVazifeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteNezamVazifeAsync(byte id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteNezamVazifeOperationCompleted == null)) {
                this.DeleteNezamVazifeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNezamVazifeOperationCompleted);
            }
            this.InvokeAsync("DeleteNezamVazife", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteNezamVazifeOperationCompleted, userState);
        }
        
        private void OnDeleteNezamVazifeOperationCompleted(object arg) {
            if ((this.DeleteNezamVazifeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNezamVazifeCompleted(this, new DeleteNezamVazifeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMadrakTahsiliWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MadrakTahsili[] GetMadrakTahsiliWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMadrakTahsiliWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MadrakTahsili[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMadrakTahsiliWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetMadrakTahsiliWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetMadrakTahsiliWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetMadrakTahsiliWithFilterOperationCompleted == null)) {
                this.GetMadrakTahsiliWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMadrakTahsiliWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetMadrakTahsiliWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetMadrakTahsiliWithFilterOperationCompleted, userState);
        }
        
        private void OnGetMadrakTahsiliWithFilterOperationCompleted(object arg) {
            if ((this.GetMadrakTahsiliWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMadrakTahsiliWithFilterCompleted(this, new GetMadrakTahsiliWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMadrakTahsiliDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MadrakTahsili GetMadrakTahsiliDetail(int MadrakTahsiliId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMadrakTahsiliDetail", new object[] {
                        MadrakTahsiliId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MadrakTahsili)(results[0]));
        }
        
        /// <remarks/>
        public void GetMadrakTahsiliDetailAsync(int MadrakTahsiliId, string IP) {
            this.GetMadrakTahsiliDetailAsync(MadrakTahsiliId, IP, null);
        }
        
        /// <remarks/>
        public void GetMadrakTahsiliDetailAsync(int MadrakTahsiliId, string IP, object userState) {
            if ((this.GetMadrakTahsiliDetailOperationCompleted == null)) {
                this.GetMadrakTahsiliDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMadrakTahsiliDetailOperationCompleted);
            }
            this.InvokeAsync("GetMadrakTahsiliDetail", new object[] {
                        MadrakTahsiliId,
                        IP}, this.GetMadrakTahsiliDetailOperationCompleted, userState);
        }
        
        private void OnGetMadrakTahsiliDetailOperationCompleted(object arg) {
            if ((this.GetMadrakTahsiliDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMadrakTahsiliDetailCompleted(this, new GetMadrakTahsiliDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertMadrakTahsili", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertMadrakTahsili(string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertMadrakTahsili", new object[] {
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMadrakTahsiliAsync(string fldTitle, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertMadrakTahsiliAsync(fldTitle, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertMadrakTahsiliAsync(string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertMadrakTahsiliOperationCompleted == null)) {
                this.InsertMadrakTahsiliOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMadrakTahsiliOperationCompleted);
            }
            this.InvokeAsync("InsertMadrakTahsili", new object[] {
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertMadrakTahsiliOperationCompleted, userState);
        }
        
        private void OnInsertMadrakTahsiliOperationCompleted(object arg) {
            if ((this.InsertMadrakTahsiliCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMadrakTahsiliCompleted(this, new InsertMadrakTahsiliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateMadrakTahsili", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMadrakTahsili(int fldId, string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateMadrakTahsili", new object[] {
                        fldId,
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMadrakTahsiliAsync(int fldId, string fldTitle, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateMadrakTahsiliAsync(fldId, fldTitle, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateMadrakTahsiliAsync(int fldId, string fldTitle, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateMadrakTahsiliOperationCompleted == null)) {
                this.UpdateMadrakTahsiliOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMadrakTahsiliOperationCompleted);
            }
            this.InvokeAsync("UpdateMadrakTahsili", new object[] {
                        fldId,
                        fldTitle,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateMadrakTahsiliOperationCompleted, userState);
        }
        
        private void OnUpdateMadrakTahsiliOperationCompleted(object arg) {
            if ((this.UpdateMadrakTahsiliCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMadrakTahsiliCompleted(this, new UpdateMadrakTahsiliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteMadrakTahsili", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteMadrakTahsili(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteMadrakTahsili", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMadrakTahsiliAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteMadrakTahsiliAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteMadrakTahsiliAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteMadrakTahsiliOperationCompleted == null)) {
                this.DeleteMadrakTahsiliOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMadrakTahsiliOperationCompleted);
            }
            this.InvokeAsync("DeleteMadrakTahsili", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteMadrakTahsiliOperationCompleted, userState);
        }
        
        private void OnDeleteMadrakTahsiliOperationCompleted(object arg) {
            if ((this.DeleteMadrakTahsiliCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMadrakTahsiliCompleted(this, new DeleteMadrakTahsiliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetStatusTaaholWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_StatusTaahol[] GetStatusTaaholWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetStatusTaaholWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_StatusTaahol[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusTaaholWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetStatusTaaholWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetStatusTaaholWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetStatusTaaholWithFilterOperationCompleted == null)) {
                this.GetStatusTaaholWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusTaaholWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetStatusTaaholWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetStatusTaaholWithFilterOperationCompleted, userState);
        }
        
        private void OnGetStatusTaaholWithFilterOperationCompleted(object arg) {
            if ((this.GetStatusTaaholWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusTaaholWithFilterCompleted(this, new GetStatusTaaholWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetReshteTahsiliDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ReshteTahsili GetReshteTahsiliDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetReshteTahsiliDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ReshteTahsili)(results[0]));
        }
        
        /// <remarks/>
        public void GetReshteTahsiliDetailAsync(int Id, string IP) {
            this.GetReshteTahsiliDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetReshteTahsiliDetailAsync(int Id, string IP, object userState) {
            if ((this.GetReshteTahsiliDetailOperationCompleted == null)) {
                this.GetReshteTahsiliDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReshteTahsiliDetailOperationCompleted);
            }
            this.InvokeAsync("GetReshteTahsiliDetail", new object[] {
                        Id,
                        IP}, this.GetReshteTahsiliDetailOperationCompleted, userState);
        }
        
        private void OnGetReshteTahsiliDetailOperationCompleted(object arg) {
            if ((this.GetReshteTahsiliDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReshteTahsiliDetailCompleted(this, new GetReshteTahsiliDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetReshteTahsiliWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ReshteTahsili[] GetReshteTahsiliWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetReshteTahsiliWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ReshteTahsili[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReshteTahsiliWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetReshteTahsiliWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetReshteTahsiliWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetReshteTahsiliWithFilterOperationCompleted == null)) {
                this.GetReshteTahsiliWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReshteTahsiliWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetReshteTahsiliWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetReshteTahsiliWithFilterOperationCompleted, userState);
        }
        
        private void OnGetReshteTahsiliWithFilterOperationCompleted(object arg) {
            if ((this.GetReshteTahsiliWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReshteTahsiliWithFilterCompleted(this, new GetReshteTahsiliWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertReshteTahsili", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertReshteTahsili(string Title, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertReshteTahsili", new object[] {
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertReshteTahsiliAsync(string Title, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertReshteTahsiliAsync(Title, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertReshteTahsiliAsync(string Title, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertReshteTahsiliOperationCompleted == null)) {
                this.InsertReshteTahsiliOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReshteTahsiliOperationCompleted);
            }
            this.InvokeAsync("InsertReshteTahsili", new object[] {
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertReshteTahsiliOperationCompleted, userState);
        }
        
        private void OnInsertReshteTahsiliOperationCompleted(object arg) {
            if ((this.InsertReshteTahsiliCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReshteTahsiliCompleted(this, new InsertReshteTahsiliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateReshteTahsili", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateReshteTahsili(int Id, string Title, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateReshteTahsili", new object[] {
                        Id,
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReshteTahsiliAsync(int Id, string Title, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateReshteTahsiliAsync(Id, Title, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateReshteTahsiliAsync(int Id, string Title, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateReshteTahsiliOperationCompleted == null)) {
                this.UpdateReshteTahsiliOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReshteTahsiliOperationCompleted);
            }
            this.InvokeAsync("UpdateReshteTahsili", new object[] {
                        Id,
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateReshteTahsiliOperationCompleted, userState);
        }
        
        private void OnUpdateReshteTahsiliOperationCompleted(object arg) {
            if ((this.UpdateReshteTahsiliCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReshteTahsiliCompleted(this, new UpdateReshteTahsiliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteReshteTahsili", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteReshteTahsili(int Id, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteReshteTahsili", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReshteTahsiliAsync(int Id, string UserName, string Password, int OrganId, string IP) {
            this.DeleteReshteTahsiliAsync(Id, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteReshteTahsiliAsync(int Id, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteReshteTahsiliOperationCompleted == null)) {
                this.DeleteReshteTahsiliOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReshteTahsiliOperationCompleted);
            }
            this.InvokeAsync("DeleteReshteTahsili", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.DeleteReshteTahsiliOperationCompleted, userState);
        }
        
        private void OnDeleteReshteTahsiliOperationCompleted(object arg) {
            if ((this.DeleteReshteTahsiliCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReshteTahsiliCompleted(this, new DeleteReshteTahsiliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetEmployee_DetailWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Employee_Detail[] GetEmployee_DetailWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetEmployee_DetailWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Employee_Detail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployee_DetailWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetEmployee_DetailWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetEmployee_DetailWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetEmployee_DetailWithFilterOperationCompleted == null)) {
                this.GetEmployee_DetailWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployee_DetailWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetEmployee_DetailWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetEmployee_DetailWithFilterOperationCompleted, userState);
        }
        
        private void OnGetEmployee_DetailWithFilterOperationCompleted(object arg) {
            if ((this.GetEmployee_DetailWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployee_DetailWithFilterCompleted(this, new GetEmployee_DetailWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetEmployee_DetailDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Employee_Detail GetEmployee_DetailDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetEmployee_DetailDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Employee_Detail)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployee_DetailDetailAsync(int Id, string IP) {
            this.GetEmployee_DetailDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetEmployee_DetailDetailAsync(int Id, string IP, object userState) {
            if ((this.GetEmployee_DetailDetailOperationCompleted == null)) {
                this.GetEmployee_DetailDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployee_DetailDetailOperationCompleted);
            }
            this.InvokeAsync("GetEmployee_DetailDetail", new object[] {
                        Id,
                        IP}, this.GetEmployee_DetailDetailOperationCompleted, userState);
        }
        
        private void OnGetEmployee_DetailDetailOperationCompleted(object arg) {
            if ((this.GetEmployee_DetailDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployee_DetailDetailCompleted(this, new GetEmployee_DetailDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertEmployee_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertEmployee_Detail(
                    int fldEmployeeId, 
                    string fldFatherName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> fldJensiyat, 
                    string fldTarikhTavalod, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMadrakId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<byte> fldNezamVazifeId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldTaaholId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldReshteId, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldFile, 
                    string fldPassvand, 
                    string fldSh_Shenasname, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMahalTavalodId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMahalSodoorId, 
                    string fldTarikhSodoor, 
                    string fldAddress, 
                    string fldCodePosti, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> fldMeliyat, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    string fldTel, 
                    string fldMobile, 
                    out ClsError Error) {
            object[] results = this.Invoke("InsertEmployee_Detail", new object[] {
                        fldEmployeeId,
                        fldFatherName,
                        fldJensiyat,
                        fldTarikhTavalod,
                        fldMadrakId,
                        fldNezamVazifeId,
                        fldTaaholId,
                        fldReshteId,
                        fldFile,
                        fldPassvand,
                        fldSh_Shenasname,
                        fldMahalTavalodId,
                        fldMahalSodoorId,
                        fldTarikhSodoor,
                        fldAddress,
                        fldCodePosti,
                        fldMeliyat,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP,
                        fldTel,
                        fldMobile});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEmployee_DetailAsync(
                    int fldEmployeeId, 
                    string fldFatherName, 
                    System.Nullable<bool> fldJensiyat, 
                    string fldTarikhTavalod, 
                    System.Nullable<int> fldMadrakId, 
                    System.Nullable<byte> fldNezamVazifeId, 
                    System.Nullable<int> fldTaaholId, 
                    System.Nullable<int> fldReshteId, 
                    byte[] fldFile, 
                    string fldPassvand, 
                    string fldSh_Shenasname, 
                    System.Nullable<int> fldMahalTavalodId, 
                    System.Nullable<int> fldMahalSodoorId, 
                    string fldTarikhSodoor, 
                    string fldAddress, 
                    string fldCodePosti, 
                    System.Nullable<bool> fldMeliyat, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    string fldTel, 
                    string fldMobile) {
            this.InsertEmployee_DetailAsync(fldEmployeeId, fldFatherName, fldJensiyat, fldTarikhTavalod, fldMadrakId, fldNezamVazifeId, fldTaaholId, fldReshteId, fldFile, fldPassvand, fldSh_Shenasname, fldMahalTavalodId, fldMahalSodoorId, fldTarikhSodoor, fldAddress, fldCodePosti, fldMeliyat, Desc, Username, Password, OrganId, IP, fldTel, fldMobile, null);
        }
        
        /// <remarks/>
        public void InsertEmployee_DetailAsync(
                    int fldEmployeeId, 
                    string fldFatherName, 
                    System.Nullable<bool> fldJensiyat, 
                    string fldTarikhTavalod, 
                    System.Nullable<int> fldMadrakId, 
                    System.Nullable<byte> fldNezamVazifeId, 
                    System.Nullable<int> fldTaaholId, 
                    System.Nullable<int> fldReshteId, 
                    byte[] fldFile, 
                    string fldPassvand, 
                    string fldSh_Shenasname, 
                    System.Nullable<int> fldMahalTavalodId, 
                    System.Nullable<int> fldMahalSodoorId, 
                    string fldTarikhSodoor, 
                    string fldAddress, 
                    string fldCodePosti, 
                    System.Nullable<bool> fldMeliyat, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    string fldTel, 
                    string fldMobile, 
                    object userState) {
            if ((this.InsertEmployee_DetailOperationCompleted == null)) {
                this.InsertEmployee_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmployee_DetailOperationCompleted);
            }
            this.InvokeAsync("InsertEmployee_Detail", new object[] {
                        fldEmployeeId,
                        fldFatherName,
                        fldJensiyat,
                        fldTarikhTavalod,
                        fldMadrakId,
                        fldNezamVazifeId,
                        fldTaaholId,
                        fldReshteId,
                        fldFile,
                        fldPassvand,
                        fldSh_Shenasname,
                        fldMahalTavalodId,
                        fldMahalSodoorId,
                        fldTarikhSodoor,
                        fldAddress,
                        fldCodePosti,
                        fldMeliyat,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP,
                        fldTel,
                        fldMobile}, this.InsertEmployee_DetailOperationCompleted, userState);
        }
        
        private void OnInsertEmployee_DetailOperationCompleted(object arg) {
            if ((this.InsertEmployee_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmployee_DetailCompleted(this, new InsertEmployee_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateEmployee_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateEmployee_Detail(
                    int fldId, 
                    int fldEmployeeId, 
                    string fldFatherName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> fldJensiyat, 
                    string fldTarikhTavalod, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMadrakId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<byte> fldNezamVazifeId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldTaaholId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldReshteId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldFileId, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldFile, 
                    string fldPasvand, 
                    string fldSh_Shenasname, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMahalTavalodId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldMahalSodoorId, 
                    string fldTarikhSodoor, 
                    string fldAddress, 
                    string fldCodePosti, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> fldMeliyat, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    string fldTel, 
                    string fldMobile, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateEmployee_Detail", new object[] {
                        fldId,
                        fldEmployeeId,
                        fldFatherName,
                        fldJensiyat,
                        fldTarikhTavalod,
                        fldMadrakId,
                        fldNezamVazifeId,
                        fldTaaholId,
                        fldReshteId,
                        fldFileId,
                        fldFile,
                        fldPasvand,
                        fldSh_Shenasname,
                        fldMahalTavalodId,
                        fldMahalSodoorId,
                        fldTarikhSodoor,
                        fldAddress,
                        fldCodePosti,
                        fldMeliyat,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP,
                        fldTel,
                        fldMobile});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmployee_DetailAsync(
                    int fldId, 
                    int fldEmployeeId, 
                    string fldFatherName, 
                    System.Nullable<bool> fldJensiyat, 
                    string fldTarikhTavalod, 
                    System.Nullable<int> fldMadrakId, 
                    System.Nullable<byte> fldNezamVazifeId, 
                    System.Nullable<int> fldTaaholId, 
                    System.Nullable<int> fldReshteId, 
                    System.Nullable<int> fldFileId, 
                    byte[] fldFile, 
                    string fldPasvand, 
                    string fldSh_Shenasname, 
                    System.Nullable<int> fldMahalTavalodId, 
                    System.Nullable<int> fldMahalSodoorId, 
                    string fldTarikhSodoor, 
                    string fldAddress, 
                    string fldCodePosti, 
                    System.Nullable<bool> fldMeliyat, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    string fldTel, 
                    string fldMobile) {
            this.UpdateEmployee_DetailAsync(fldId, fldEmployeeId, fldFatherName, fldJensiyat, fldTarikhTavalod, fldMadrakId, fldNezamVazifeId, fldTaaholId, fldReshteId, fldFileId, fldFile, fldPasvand, fldSh_Shenasname, fldMahalTavalodId, fldMahalSodoorId, fldTarikhSodoor, fldAddress, fldCodePosti, fldMeliyat, Desc, Username, Password, OrganId, IP, fldTel, fldMobile, null);
        }
        
        /// <remarks/>
        public void UpdateEmployee_DetailAsync(
                    int fldId, 
                    int fldEmployeeId, 
                    string fldFatherName, 
                    System.Nullable<bool> fldJensiyat, 
                    string fldTarikhTavalod, 
                    System.Nullable<int> fldMadrakId, 
                    System.Nullable<byte> fldNezamVazifeId, 
                    System.Nullable<int> fldTaaholId, 
                    System.Nullable<int> fldReshteId, 
                    System.Nullable<int> fldFileId, 
                    byte[] fldFile, 
                    string fldPasvand, 
                    string fldSh_Shenasname, 
                    System.Nullable<int> fldMahalTavalodId, 
                    System.Nullable<int> fldMahalSodoorId, 
                    string fldTarikhSodoor, 
                    string fldAddress, 
                    string fldCodePosti, 
                    System.Nullable<bool> fldMeliyat, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    string fldTel, 
                    string fldMobile, 
                    object userState) {
            if ((this.UpdateEmployee_DetailOperationCompleted == null)) {
                this.UpdateEmployee_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployee_DetailOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployee_Detail", new object[] {
                        fldId,
                        fldEmployeeId,
                        fldFatherName,
                        fldJensiyat,
                        fldTarikhTavalod,
                        fldMadrakId,
                        fldNezamVazifeId,
                        fldTaaholId,
                        fldReshteId,
                        fldFileId,
                        fldFile,
                        fldPasvand,
                        fldSh_Shenasname,
                        fldMahalTavalodId,
                        fldMahalSodoorId,
                        fldTarikhSodoor,
                        fldAddress,
                        fldCodePosti,
                        fldMeliyat,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP,
                        fldTel,
                        fldMobile}, this.UpdateEmployee_DetailOperationCompleted, userState);
        }
        
        private void OnUpdateEmployee_DetailOperationCompleted(object arg) {
            if ((this.UpdateEmployee_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployee_DetailCompleted(this, new UpdateEmployee_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteEmployee_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteEmployee_Detail(int id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteEmployee_Detail", new object[] {
                        id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmployee_DetailAsync(int id, string Username, string Password, string IP) {
            this.DeleteEmployee_DetailAsync(id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteEmployee_DetailAsync(int id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteEmployee_DetailOperationCompleted == null)) {
                this.DeleteEmployee_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmployee_DetailOperationCompleted);
            }
            this.InvokeAsync("DeleteEmployee_Detail", new object[] {
                        id,
                        Username,
                        Password,
                        IP}, this.DeleteEmployee_DetailOperationCompleted, userState);
        }
        
        private void OnDeleteEmployee_DetailOperationCompleted(object arg) {
            if ((this.DeleteEmployee_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmployee_DetailCompleted(this, new DeleteEmployee_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetAshkhasDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Ashkhas GetAshkhasDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAshkhasDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Ashkhas)(results[0]));
        }
        
        /// <remarks/>
        public void GetAshkhasDetailAsync(int Id, string IP) {
            this.GetAshkhasDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetAshkhasDetailAsync(int Id, string IP, object userState) {
            if ((this.GetAshkhasDetailOperationCompleted == null)) {
                this.GetAshkhasDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAshkhasDetailOperationCompleted);
            }
            this.InvokeAsync("GetAshkhasDetail", new object[] {
                        Id,
                        IP}, this.GetAshkhasDetailOperationCompleted, userState);
        }
        
        private void OnGetAshkhasDetailOperationCompleted(object arg) {
            if ((this.GetAshkhasDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAshkhasDetailCompleted(this, new GetAshkhasDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetAshkhasWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Ashkhas[] GetAshkhasWithFilter(string FieldName, string FilterValue, string FilterValue1, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAshkhasWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue1,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Ashkhas[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAshkhasWithFilterAsync(string FieldName, string FilterValue, string FilterValue1, int Top, string IP) {
            this.GetAshkhasWithFilterAsync(FieldName, FilterValue, FilterValue1, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAshkhasWithFilterAsync(string FieldName, string FilterValue, string FilterValue1, int Top, string IP, object userState) {
            if ((this.GetAshkhasWithFilterOperationCompleted == null)) {
                this.GetAshkhasWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAshkhasWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAshkhasWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue1,
                        Top,
                        IP}, this.GetAshkhasWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAshkhasWithFilterOperationCompleted(object arg) {
            if ((this.GetAshkhasWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAshkhasWithFilterCompleted(this, new GetAshkhasWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertAshkhas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAshkhas([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> HaghighiId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> HoghoghiId, string Desc, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAshkhas", new object[] {
                        HaghighiId,
                        HoghoghiId,
                        Desc,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAshkhasAsync(System.Nullable<int> HaghighiId, System.Nullable<int> HoghoghiId, string Desc, string Username, string Password, string IP) {
            this.InsertAshkhasAsync(HaghighiId, HoghoghiId, Desc, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void InsertAshkhasAsync(System.Nullable<int> HaghighiId, System.Nullable<int> HoghoghiId, string Desc, string Username, string Password, string IP, object userState) {
            if ((this.InsertAshkhasOperationCompleted == null)) {
                this.InsertAshkhasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAshkhasOperationCompleted);
            }
            this.InvokeAsync("InsertAshkhas", new object[] {
                        HaghighiId,
                        HoghoghiId,
                        Desc,
                        Username,
                        Password,
                        IP}, this.InsertAshkhasOperationCompleted, userState);
        }
        
        private void OnInsertAshkhasOperationCompleted(object arg) {
            if ((this.InsertAshkhasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAshkhasCompleted(this, new InsertAshkhasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateAshkhas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAshkhas(int Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> HaghighiId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> HoghoghiId, string Desc, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAshkhas", new object[] {
                        Id,
                        HaghighiId,
                        HoghoghiId,
                        Desc,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAshkhasAsync(int Id, System.Nullable<int> HaghighiId, System.Nullable<int> HoghoghiId, string Desc, string Username, string Password, string IP) {
            this.UpdateAshkhasAsync(Id, HaghighiId, HoghoghiId, Desc, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAshkhasAsync(int Id, System.Nullable<int> HaghighiId, System.Nullable<int> HoghoghiId, string Desc, string Username, string Password, string IP, object userState) {
            if ((this.UpdateAshkhasOperationCompleted == null)) {
                this.UpdateAshkhasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAshkhasOperationCompleted);
            }
            this.InvokeAsync("UpdateAshkhas", new object[] {
                        Id,
                        HaghighiId,
                        HoghoghiId,
                        Desc,
                        Username,
                        Password,
                        IP}, this.UpdateAshkhasOperationCompleted, userState);
        }
        
        private void OnUpdateAshkhasOperationCompleted(object arg) {
            if ((this.UpdateAshkhasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAshkhasCompleted(this, new UpdateAshkhasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteAshkhas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAshkhas(int id, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAshkhas", new object[] {
                        id,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAshkhasAsync(int id, string Username, string Password, string IP) {
            this.DeleteAshkhasAsync(id, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAshkhasAsync(int id, string Username, string Password, string IP, object userState) {
            if ((this.DeleteAshkhasOperationCompleted == null)) {
                this.DeleteAshkhasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAshkhasOperationCompleted);
            }
            this.InvokeAsync("DeleteAshkhas", new object[] {
                        id,
                        Username,
                        Password,
                        IP}, this.DeleteAshkhasOperationCompleted, userState);
        }
        
        private void OnDeleteAshkhasOperationCompleted(object arg) {
            if ((this.DeleteAshkhasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAshkhasCompleted(this, new DeleteAshkhasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMaliyatArzesheAfzoodeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MaliyatArzesheAfzoode GetMaliyatArzesheAfzoodeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMaliyatArzesheAfzoodeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MaliyatArzesheAfzoode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaliyatArzesheAfzoodeDetailAsync(int Id, string IP) {
            this.GetMaliyatArzesheAfzoodeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetMaliyatArzesheAfzoodeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetMaliyatArzesheAfzoodeDetailOperationCompleted == null)) {
                this.GetMaliyatArzesheAfzoodeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaliyatArzesheAfzoodeDetailOperationCompleted);
            }
            this.InvokeAsync("GetMaliyatArzesheAfzoodeDetail", new object[] {
                        Id,
                        IP}, this.GetMaliyatArzesheAfzoodeDetailOperationCompleted, userState);
        }
        
        private void OnGetMaliyatArzesheAfzoodeDetailOperationCompleted(object arg) {
            if ((this.GetMaliyatArzesheAfzoodeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaliyatArzesheAfzoodeDetailCompleted(this, new GetMaliyatArzesheAfzoodeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMaliyatArzesheAfzoodeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MaliyatArzesheAfzoode[] GetMaliyatArzesheAfzoodeWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMaliyatArzesheAfzoodeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MaliyatArzesheAfzoode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMaliyatArzesheAfzoodeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetMaliyatArzesheAfzoodeWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetMaliyatArzesheAfzoodeWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetMaliyatArzesheAfzoodeWithFilterOperationCompleted == null)) {
                this.GetMaliyatArzesheAfzoodeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaliyatArzesheAfzoodeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetMaliyatArzesheAfzoodeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetMaliyatArzesheAfzoodeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetMaliyatArzesheAfzoodeWithFilterOperationCompleted(object arg) {
            if ((this.GetMaliyatArzesheAfzoodeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaliyatArzesheAfzoodeWithFilterCompleted(this, new GetMaliyatArzesheAfzoodeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertMaliyatArzesheAfzoode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertMaliyatArzesheAfzoode(string FromDate, string EndDate, decimal DarsadeAvarez, decimal DarsadeMaliyat, decimal DarasadAmuzeshParvaresh, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertMaliyatArzesheAfzoode", new object[] {
                        FromDate,
                        EndDate,
                        DarsadeAvarez,
                        DarsadeMaliyat,
                        DarasadAmuzeshParvaresh,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMaliyatArzesheAfzoodeAsync(string FromDate, string EndDate, decimal DarsadeAvarez, decimal DarsadeMaliyat, decimal DarasadAmuzeshParvaresh, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertMaliyatArzesheAfzoodeAsync(FromDate, EndDate, DarsadeAvarez, DarsadeMaliyat, DarasadAmuzeshParvaresh, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertMaliyatArzesheAfzoodeAsync(string FromDate, string EndDate, decimal DarsadeAvarez, decimal DarsadeMaliyat, decimal DarasadAmuzeshParvaresh, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertMaliyatArzesheAfzoodeOperationCompleted == null)) {
                this.InsertMaliyatArzesheAfzoodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMaliyatArzesheAfzoodeOperationCompleted);
            }
            this.InvokeAsync("InsertMaliyatArzesheAfzoode", new object[] {
                        FromDate,
                        EndDate,
                        DarsadeAvarez,
                        DarsadeMaliyat,
                        DarasadAmuzeshParvaresh,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertMaliyatArzesheAfzoodeOperationCompleted, userState);
        }
        
        private void OnInsertMaliyatArzesheAfzoodeOperationCompleted(object arg) {
            if ((this.InsertMaliyatArzesheAfzoodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMaliyatArzesheAfzoodeCompleted(this, new InsertMaliyatArzesheAfzoodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateMaliyatArzesheAfzoode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMaliyatArzesheAfzoode(int Id, string FromDate, string EndDate, decimal DarsadeAvarez, decimal DarsadeMaliyat, decimal DarasadAmuzeshParvaresh, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateMaliyatArzesheAfzoode", new object[] {
                        Id,
                        FromDate,
                        EndDate,
                        DarsadeAvarez,
                        DarsadeMaliyat,
                        DarasadAmuzeshParvaresh,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMaliyatArzesheAfzoodeAsync(int Id, string FromDate, string EndDate, decimal DarsadeAvarez, decimal DarsadeMaliyat, decimal DarasadAmuzeshParvaresh, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateMaliyatArzesheAfzoodeAsync(Id, FromDate, EndDate, DarsadeAvarez, DarsadeMaliyat, DarasadAmuzeshParvaresh, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateMaliyatArzesheAfzoodeAsync(int Id, string FromDate, string EndDate, decimal DarsadeAvarez, decimal DarsadeMaliyat, decimal DarasadAmuzeshParvaresh, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateMaliyatArzesheAfzoodeOperationCompleted == null)) {
                this.UpdateMaliyatArzesheAfzoodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMaliyatArzesheAfzoodeOperationCompleted);
            }
            this.InvokeAsync("UpdateMaliyatArzesheAfzoode", new object[] {
                        Id,
                        FromDate,
                        EndDate,
                        DarsadeAvarez,
                        DarsadeMaliyat,
                        DarasadAmuzeshParvaresh,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateMaliyatArzesheAfzoodeOperationCompleted, userState);
        }
        
        private void OnUpdateMaliyatArzesheAfzoodeOperationCompleted(object arg) {
            if ((this.UpdateMaliyatArzesheAfzoodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMaliyatArzesheAfzoodeCompleted(this, new UpdateMaliyatArzesheAfzoodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteMaliyatArzesheAfzoode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteMaliyatArzesheAfzoode(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteMaliyatArzesheAfzoode", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMaliyatArzesheAfzoodeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteMaliyatArzesheAfzoodeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteMaliyatArzesheAfzoodeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteMaliyatArzesheAfzoodeOperationCompleted == null)) {
                this.DeleteMaliyatArzesheAfzoodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMaliyatArzesheAfzoodeOperationCompleted);
            }
            this.InvokeAsync("DeleteMaliyatArzesheAfzoode", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteMaliyatArzesheAfzoodeOperationCompleted, userState);
        }
        
        private void OnDeleteMaliyatArzesheAfzoodeOperationCompleted(object arg) {
            if ((this.DeleteMaliyatArzesheAfzoodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMaliyatArzesheAfzoodeCompleted(this, new DeleteMaliyatArzesheAfzoodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetAshkhaseHoghoghiDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AshkhaseHoghoghi GetAshkhaseHoghoghiDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAshkhaseHoghoghiDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AshkhaseHoghoghi)(results[0]));
        }
        
        /// <remarks/>
        public void GetAshkhaseHoghoghiDetailAsync(int Id, string IP) {
            this.GetAshkhaseHoghoghiDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetAshkhaseHoghoghiDetailAsync(int Id, string IP, object userState) {
            if ((this.GetAshkhaseHoghoghiDetailOperationCompleted == null)) {
                this.GetAshkhaseHoghoghiDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAshkhaseHoghoghiDetailOperationCompleted);
            }
            this.InvokeAsync("GetAshkhaseHoghoghiDetail", new object[] {
                        Id,
                        IP}, this.GetAshkhaseHoghoghiDetailOperationCompleted, userState);
        }
        
        private void OnGetAshkhaseHoghoghiDetailOperationCompleted(object arg) {
            if ((this.GetAshkhaseHoghoghiDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAshkhaseHoghoghiDetailCompleted(this, new GetAshkhaseHoghoghiDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetAshkhaseHoghoghiWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AshkhaseHoghoghi[] GetAshkhaseHoghoghiWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAshkhaseHoghoghiWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AshkhaseHoghoghi[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAshkhaseHoghoghiWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetAshkhaseHoghoghiWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAshkhaseHoghoghiWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetAshkhaseHoghoghiWithFilterOperationCompleted == null)) {
                this.GetAshkhaseHoghoghiWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAshkhaseHoghoghiWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAshkhaseHoghoghiWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetAshkhaseHoghoghiWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAshkhaseHoghoghiWithFilterOperationCompleted(object arg) {
            if ((this.GetAshkhaseHoghoghiWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAshkhaseHoghoghiWithFilterCompleted(this, new GetAshkhaseHoghoghiWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertAshkhaseHoghoghi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertAshkhaseHoghoghi(string fldShenaseMelli, string fldName, string fldShomareSabt, byte TypeShakhs, byte Sayer, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAshkhaseHoghoghi", new object[] {
                        fldShenaseMelli,
                        fldName,
                        fldShomareSabt,
                        TypeShakhs,
                        Sayer,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAshkhaseHoghoghiAsync(string fldShenaseMelli, string fldName, string fldShomareSabt, byte TypeShakhs, byte Sayer, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertAshkhaseHoghoghiAsync(fldShenaseMelli, fldName, fldShomareSabt, TypeShakhs, Sayer, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAshkhaseHoghoghiAsync(string fldShenaseMelli, string fldName, string fldShomareSabt, byte TypeShakhs, byte Sayer, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAshkhaseHoghoghiOperationCompleted == null)) {
                this.InsertAshkhaseHoghoghiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAshkhaseHoghoghiOperationCompleted);
            }
            this.InvokeAsync("InsertAshkhaseHoghoghi", new object[] {
                        fldShenaseMelli,
                        fldName,
                        fldShomareSabt,
                        TypeShakhs,
                        Sayer,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertAshkhaseHoghoghiOperationCompleted, userState);
        }
        
        private void OnInsertAshkhaseHoghoghiOperationCompleted(object arg) {
            if ((this.InsertAshkhaseHoghoghiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAshkhaseHoghoghiCompleted(this, new InsertAshkhaseHoghoghiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateAshkhaseHoghoghi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAshkhaseHoghoghi(int Id, string fldShenaseMelli, string fldName, string fldShomareSabt, byte TypeShakhs, byte Sayer, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAshkhaseHoghoghi", new object[] {
                        Id,
                        fldShenaseMelli,
                        fldName,
                        fldShomareSabt,
                        TypeShakhs,
                        Sayer,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAshkhaseHoghoghiAsync(int Id, string fldShenaseMelli, string fldName, string fldShomareSabt, byte TypeShakhs, byte Sayer, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateAshkhaseHoghoghiAsync(Id, fldShenaseMelli, fldName, fldShomareSabt, TypeShakhs, Sayer, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAshkhaseHoghoghiAsync(int Id, string fldShenaseMelli, string fldName, string fldShomareSabt, byte TypeShakhs, byte Sayer, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateAshkhaseHoghoghiOperationCompleted == null)) {
                this.UpdateAshkhaseHoghoghiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAshkhaseHoghoghiOperationCompleted);
            }
            this.InvokeAsync("UpdateAshkhaseHoghoghi", new object[] {
                        Id,
                        fldShenaseMelli,
                        fldName,
                        fldShomareSabt,
                        TypeShakhs,
                        Sayer,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateAshkhaseHoghoghiOperationCompleted, userState);
        }
        
        private void OnUpdateAshkhaseHoghoghiOperationCompleted(object arg) {
            if ((this.UpdateAshkhaseHoghoghiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAshkhaseHoghoghiCompleted(this, new UpdateAshkhaseHoghoghiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteAshkhaseHoghoghi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAshkhaseHoghoghi(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAshkhaseHoghoghi", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAshkhaseHoghoghiAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteAshkhaseHoghoghiAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAshkhaseHoghoghiAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteAshkhaseHoghoghiOperationCompleted == null)) {
                this.DeleteAshkhaseHoghoghiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAshkhaseHoghoghiOperationCompleted);
            }
            this.InvokeAsync("DeleteAshkhaseHoghoghi", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteAshkhaseHoghoghiOperationCompleted, userState);
        }
        
        private void OnDeleteAshkhaseHoghoghiOperationCompleted(object arg) {
            if ((this.DeleteAshkhaseHoghoghiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAshkhaseHoghoghiCompleted(this, new DeleteAshkhaseHoghoghiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetShomareHesabeOmoomiDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ShomareHesabeOmoomi GetShomareHesabeOmoomiDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetShomareHesabeOmoomiDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ShomareHesabeOmoomi)(results[0]));
        }
        
        /// <remarks/>
        public void GetShomareHesabeOmoomiDetailAsync(int Id, string IP) {
            this.GetShomareHesabeOmoomiDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetShomareHesabeOmoomiDetailAsync(int Id, string IP, object userState) {
            if ((this.GetShomareHesabeOmoomiDetailOperationCompleted == null)) {
                this.GetShomareHesabeOmoomiDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShomareHesabeOmoomiDetailOperationCompleted);
            }
            this.InvokeAsync("GetShomareHesabeOmoomiDetail", new object[] {
                        Id,
                        IP}, this.GetShomareHesabeOmoomiDetailOperationCompleted, userState);
        }
        
        private void OnGetShomareHesabeOmoomiDetailOperationCompleted(object arg) {
            if ((this.GetShomareHesabeOmoomiDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShomareHesabeOmoomiDetailCompleted(this, new GetShomareHesabeOmoomiDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetShomareHesabeOmoomiWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ShomareHesabeOmoomi[] GetShomareHesabeOmoomiWithFilter(string FieldName, string FilterValue, string FilterValue2, string FilterValue3, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetShomareHesabeOmoomiWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        FilterValue3,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ShomareHesabeOmoomi[])(results[0]));
        }
        
        /// <remarks/>
        public void GetShomareHesabeOmoomiWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, string FilterValue3, int Top, string IP) {
            this.GetShomareHesabeOmoomiWithFilterAsync(FieldName, FilterValue, FilterValue2, FilterValue3, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetShomareHesabeOmoomiWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, string FilterValue3, int Top, string IP, object userState) {
            if ((this.GetShomareHesabeOmoomiWithFilterOperationCompleted == null)) {
                this.GetShomareHesabeOmoomiWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShomareHesabeOmoomiWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetShomareHesabeOmoomiWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        FilterValue3,
                        Top,
                        IP}, this.GetShomareHesabeOmoomiWithFilterOperationCompleted, userState);
        }
        
        private void OnGetShomareHesabeOmoomiWithFilterOperationCompleted(object arg) {
            if ((this.GetShomareHesabeOmoomiWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShomareHesabeOmoomiWithFilterCompleted(this, new GetShomareHesabeOmoomiWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertShomareHesabeOmoomi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertShomareHesabeOmoomi(int ShobeId, int AshkhasId, string ShomareHesab, string ShomareSheba, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertShomareHesabeOmoomi", new object[] {
                        ShobeId,
                        AshkhasId,
                        ShomareHesab,
                        ShomareSheba,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertShomareHesabeOmoomiAsync(int ShobeId, int AshkhasId, string ShomareHesab, string ShomareSheba, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertShomareHesabeOmoomiAsync(ShobeId, AshkhasId, ShomareHesab, ShomareSheba, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertShomareHesabeOmoomiAsync(int ShobeId, int AshkhasId, string ShomareHesab, string ShomareSheba, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertShomareHesabeOmoomiOperationCompleted == null)) {
                this.InsertShomareHesabeOmoomiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertShomareHesabeOmoomiOperationCompleted);
            }
            this.InvokeAsync("InsertShomareHesabeOmoomi", new object[] {
                        ShobeId,
                        AshkhasId,
                        ShomareHesab,
                        ShomareSheba,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertShomareHesabeOmoomiOperationCompleted, userState);
        }
        
        private void OnInsertShomareHesabeOmoomiOperationCompleted(object arg) {
            if ((this.InsertShomareHesabeOmoomiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertShomareHesabeOmoomiCompleted(this, new InsertShomareHesabeOmoomiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateShomareHesabeOmoomi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateShomareHesabeOmoomi(int Id, int ShobeId, int AshkhasId, string ShomareHesab, string ShomareSheba, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateShomareHesabeOmoomi", new object[] {
                        Id,
                        ShobeId,
                        AshkhasId,
                        ShomareHesab,
                        ShomareSheba,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateShomareHesabeOmoomiAsync(int Id, int ShobeId, int AshkhasId, string ShomareHesab, string ShomareSheba, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateShomareHesabeOmoomiAsync(Id, ShobeId, AshkhasId, ShomareHesab, ShomareSheba, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateShomareHesabeOmoomiAsync(int Id, int ShobeId, int AshkhasId, string ShomareHesab, string ShomareSheba, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateShomareHesabeOmoomiOperationCompleted == null)) {
                this.UpdateShomareHesabeOmoomiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateShomareHesabeOmoomiOperationCompleted);
            }
            this.InvokeAsync("UpdateShomareHesabeOmoomi", new object[] {
                        Id,
                        ShobeId,
                        AshkhasId,
                        ShomareHesab,
                        ShomareSheba,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateShomareHesabeOmoomiOperationCompleted, userState);
        }
        
        private void OnUpdateShomareHesabeOmoomiOperationCompleted(object arg) {
            if ((this.UpdateShomareHesabeOmoomiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateShomareHesabeOmoomiCompleted(this, new UpdateShomareHesabeOmoomiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteShomareHesabeOmoomi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteShomareHesabeOmoomi(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteShomareHesabeOmoomi", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteShomareHesabeOmoomiAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteShomareHesabeOmoomiAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteShomareHesabeOmoomiAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteShomareHesabeOmoomiOperationCompleted == null)) {
                this.DeleteShomareHesabeOmoomiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteShomareHesabeOmoomiOperationCompleted);
            }
            this.InvokeAsync("DeleteShomareHesabeOmoomi", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteShomareHesabeOmoomiOperationCompleted, userState);
        }
        
        private void OnDeleteShomareHesabeOmoomiOperationCompleted(object arg) {
            if ((this.DeleteShomareHesabeOmoomiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteShomareHesabeOmoomiCompleted(this, new DeleteShomareHesabeOmoomiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetUserGroupTreeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GetUserGroupTree[] GetUserGroupTreeWithFilter(int UserId, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetUserGroupTreeWithFilter", new object[] {
                        UserId,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GetUserGroupTree[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroupTreeWithFilterAsync(int UserId, string Username, string Password, string IP) {
            this.GetUserGroupTreeWithFilterAsync(UserId, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetUserGroupTreeWithFilterAsync(int UserId, string Username, string Password, string IP, object userState) {
            if ((this.GetUserGroupTreeWithFilterOperationCompleted == null)) {
                this.GetUserGroupTreeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroupTreeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetUserGroupTreeWithFilter", new object[] {
                        UserId,
                        Username,
                        Password,
                        IP}, this.GetUserGroupTreeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetUserGroupTreeWithFilterOperationCompleted(object arg) {
            if ((this.GetUserGroupTreeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroupTreeWithFilterCompleted(this, new GetUserGroupTreeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/CheckEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_CheckEmail CheckEmail(string Email, string IP, out ClsError Error) {
            object[] results = this.Invoke("CheckEmail", new object[] {
                        Email,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_CheckEmail)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmailAsync(string Email, string IP) {
            this.CheckEmailAsync(Email, IP, null);
        }
        
        /// <remarks/>
        public void CheckEmailAsync(string Email, string IP, object userState) {
            if ((this.CheckEmailOperationCompleted == null)) {
                this.CheckEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmailOperationCompleted);
            }
            this.InvokeAsync("CheckEmail", new object[] {
                        Email,
                        IP}, this.CheckEmailOperationCompleted, userState);
        }
        
        private void OnCheckEmailOperationCompleted(object arg) {
            if ((this.CheckEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmailCompleted(this, new CheckEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMeasureUnitDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MeasureUnit GetMeasureUnitDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMeasureUnitDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MeasureUnit)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasureUnitDetailAsync(int Id, string IP) {
            this.GetMeasureUnitDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetMeasureUnitDetailAsync(int Id, string IP, object userState) {
            if ((this.GetMeasureUnitDetailOperationCompleted == null)) {
                this.GetMeasureUnitDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasureUnitDetailOperationCompleted);
            }
            this.InvokeAsync("GetMeasureUnitDetail", new object[] {
                        Id,
                        IP}, this.GetMeasureUnitDetailOperationCompleted, userState);
        }
        
        private void OnGetMeasureUnitDetailOperationCompleted(object arg) {
            if ((this.GetMeasureUnitDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasureUnitDetailCompleted(this, new GetMeasureUnitDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMeasureUnitWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_MeasureUnit[] GetMeasureUnitWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMeasureUnitWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_MeasureUnit[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasureUnitWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetMeasureUnitWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetMeasureUnitWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetMeasureUnitWithFilterOperationCompleted == null)) {
                this.GetMeasureUnitWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasureUnitWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetMeasureUnitWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetMeasureUnitWithFilterOperationCompleted, userState);
        }
        
        private void OnGetMeasureUnitWithFilterOperationCompleted(object arg) {
            if ((this.GetMeasureUnitWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasureUnitWithFilterCompleted(this, new GetMeasureUnitWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertMeasureUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertMeasureUnit(string NameVahed, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertMeasureUnit", new object[] {
                        NameVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMeasureUnitAsync(string NameVahed, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertMeasureUnitAsync(NameVahed, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertMeasureUnitAsync(string NameVahed, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertMeasureUnitOperationCompleted == null)) {
                this.InsertMeasureUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMeasureUnitOperationCompleted);
            }
            this.InvokeAsync("InsertMeasureUnit", new object[] {
                        NameVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertMeasureUnitOperationCompleted, userState);
        }
        
        private void OnInsertMeasureUnitOperationCompleted(object arg) {
            if ((this.InsertMeasureUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMeasureUnitCompleted(this, new InsertMeasureUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateMeasureUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMeasureUnit(int Id, string NameVahed, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateMeasureUnit", new object[] {
                        Id,
                        NameVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMeasureUnitAsync(int Id, string NameVahed, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateMeasureUnitAsync(Id, NameVahed, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateMeasureUnitAsync(int Id, string NameVahed, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateMeasureUnitOperationCompleted == null)) {
                this.UpdateMeasureUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMeasureUnitOperationCompleted);
            }
            this.InvokeAsync("UpdateMeasureUnit", new object[] {
                        Id,
                        NameVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateMeasureUnitOperationCompleted, userState);
        }
        
        private void OnUpdateMeasureUnitOperationCompleted(object arg) {
            if ((this.UpdateMeasureUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMeasureUnitCompleted(this, new UpdateMeasureUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteMeasureUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteMeasureUnit(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteMeasureUnit", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMeasureUnitAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteMeasureUnitAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteMeasureUnitAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteMeasureUnitOperationCompleted == null)) {
                this.DeleteMeasureUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMeasureUnitOperationCompleted);
            }
            this.InvokeAsync("DeleteMeasureUnit", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteMeasureUnitOperationCompleted, userState);
        }
        
        private void OnDeleteMeasureUnitOperationCompleted(object arg) {
            if ((this.DeleteMeasureUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMeasureUnitCompleted(this, new DeleteMeasureUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetAshkhaseHoghoghi_DetailDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AshkhaseHoghoghi_Detail GetAshkhaseHoghoghi_DetailDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAshkhaseHoghoghi_DetailDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AshkhaseHoghoghi_Detail)(results[0]));
        }
        
        /// <remarks/>
        public void GetAshkhaseHoghoghi_DetailDetailAsync(int Id, string IP) {
            this.GetAshkhaseHoghoghi_DetailDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetAshkhaseHoghoghi_DetailDetailAsync(int Id, string IP, object userState) {
            if ((this.GetAshkhaseHoghoghi_DetailDetailOperationCompleted == null)) {
                this.GetAshkhaseHoghoghi_DetailDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAshkhaseHoghoghi_DetailDetailOperationCompleted);
            }
            this.InvokeAsync("GetAshkhaseHoghoghi_DetailDetail", new object[] {
                        Id,
                        IP}, this.GetAshkhaseHoghoghi_DetailDetailOperationCompleted, userState);
        }
        
        private void OnGetAshkhaseHoghoghi_DetailDetailOperationCompleted(object arg) {
            if ((this.GetAshkhaseHoghoghi_DetailDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAshkhaseHoghoghi_DetailDetailCompleted(this, new GetAshkhaseHoghoghi_DetailDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetAshkhaseHoghoghi_DetailWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_AshkhaseHoghoghi_Detail[] GetAshkhaseHoghoghi_DetailWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetAshkhaseHoghoghi_DetailWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_AshkhaseHoghoghi_Detail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAshkhaseHoghoghi_DetailWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetAshkhaseHoghoghi_DetailWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetAshkhaseHoghoghi_DetailWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetAshkhaseHoghoghi_DetailWithFilterOperationCompleted == null)) {
                this.GetAshkhaseHoghoghi_DetailWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAshkhaseHoghoghi_DetailWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetAshkhaseHoghoghi_DetailWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetAshkhaseHoghoghi_DetailWithFilterOperationCompleted, userState);
        }
        
        private void OnGetAshkhaseHoghoghi_DetailWithFilterOperationCompleted(object arg) {
            if ((this.GetAshkhaseHoghoghi_DetailWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAshkhaseHoghoghi_DetailWithFilterCompleted(this, new GetAshkhaseHoghoghi_DetailWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertAshkhaseHoghoghi_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAshkhaseHoghoghi_Detail(int AshkhaseHoghoghiId, string CodEghtesadi, string Address, string CodePosti, string ShomareTelephone, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertAshkhaseHoghoghi_Detail", new object[] {
                        AshkhaseHoghoghiId,
                        CodEghtesadi,
                        Address,
                        CodePosti,
                        ShomareTelephone,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAshkhaseHoghoghi_DetailAsync(int AshkhaseHoghoghiId, string CodEghtesadi, string Address, string CodePosti, string ShomareTelephone, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertAshkhaseHoghoghi_DetailAsync(AshkhaseHoghoghiId, CodEghtesadi, Address, CodePosti, ShomareTelephone, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertAshkhaseHoghoghi_DetailAsync(int AshkhaseHoghoghiId, string CodEghtesadi, string Address, string CodePosti, string ShomareTelephone, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertAshkhaseHoghoghi_DetailOperationCompleted == null)) {
                this.InsertAshkhaseHoghoghi_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAshkhaseHoghoghi_DetailOperationCompleted);
            }
            this.InvokeAsync("InsertAshkhaseHoghoghi_Detail", new object[] {
                        AshkhaseHoghoghiId,
                        CodEghtesadi,
                        Address,
                        CodePosti,
                        ShomareTelephone,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertAshkhaseHoghoghi_DetailOperationCompleted, userState);
        }
        
        private void OnInsertAshkhaseHoghoghi_DetailOperationCompleted(object arg) {
            if ((this.InsertAshkhaseHoghoghi_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAshkhaseHoghoghi_DetailCompleted(this, new InsertAshkhaseHoghoghi_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateAshkhaseHoghoghi_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAshkhaseHoghoghi_Detail(int Id, int AshkhaseHoghoghiId, string CodEghtesadi, string Address, string CodePosti, string ShomareTelephone, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateAshkhaseHoghoghi_Detail", new object[] {
                        Id,
                        AshkhaseHoghoghiId,
                        CodEghtesadi,
                        Address,
                        CodePosti,
                        ShomareTelephone,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAshkhaseHoghoghi_DetailAsync(int Id, int AshkhaseHoghoghiId, string CodEghtesadi, string Address, string CodePosti, string ShomareTelephone, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateAshkhaseHoghoghi_DetailAsync(Id, AshkhaseHoghoghiId, CodEghtesadi, Address, CodePosti, ShomareTelephone, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateAshkhaseHoghoghi_DetailAsync(int Id, int AshkhaseHoghoghiId, string CodEghtesadi, string Address, string CodePosti, string ShomareTelephone, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateAshkhaseHoghoghi_DetailOperationCompleted == null)) {
                this.UpdateAshkhaseHoghoghi_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAshkhaseHoghoghi_DetailOperationCompleted);
            }
            this.InvokeAsync("UpdateAshkhaseHoghoghi_Detail", new object[] {
                        Id,
                        AshkhaseHoghoghiId,
                        CodEghtesadi,
                        Address,
                        CodePosti,
                        ShomareTelephone,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateAshkhaseHoghoghi_DetailOperationCompleted, userState);
        }
        
        private void OnUpdateAshkhaseHoghoghi_DetailOperationCompleted(object arg) {
            if ((this.UpdateAshkhaseHoghoghi_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAshkhaseHoghoghi_DetailCompleted(this, new UpdateAshkhaseHoghoghi_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteAshkhaseHoghoghi_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAshkhaseHoghoghi_Detail(int Id, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteAshkhaseHoghoghi_Detail", new object[] {
                        Id,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAshkhaseHoghoghi_DetailAsync(int Id, string UserName, string Password, string IP) {
            this.DeleteAshkhaseHoghoghi_DetailAsync(Id, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteAshkhaseHoghoghi_DetailAsync(int Id, string UserName, string Password, string IP, object userState) {
            if ((this.DeleteAshkhaseHoghoghi_DetailOperationCompleted == null)) {
                this.DeleteAshkhaseHoghoghi_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAshkhaseHoghoghi_DetailOperationCompleted);
            }
            this.InvokeAsync("DeleteAshkhaseHoghoghi_Detail", new object[] {
                        Id,
                        UserName,
                        Password,
                        IP}, this.DeleteAshkhaseHoghoghi_DetailOperationCompleted, userState);
        }
        
        private void OnDeleteAshkhaseHoghoghi_DetailOperationCompleted(object arg) {
            if ((this.DeleteAshkhaseHoghoghi_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAshkhaseHoghoghi_DetailCompleted(this, new DeleteAshkhaseHoghoghi_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetUserGroup_ModuleOrganDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_UserGroup_ModuleOrgan GetUserGroup_ModuleOrganDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetUserGroup_ModuleOrganDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_UserGroup_ModuleOrgan)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroup_ModuleOrganDetailAsync(int Id, string IP) {
            this.GetUserGroup_ModuleOrganDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetUserGroup_ModuleOrganDetailAsync(int Id, string IP, object userState) {
            if ((this.GetUserGroup_ModuleOrganDetailOperationCompleted == null)) {
                this.GetUserGroup_ModuleOrganDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroup_ModuleOrganDetailOperationCompleted);
            }
            this.InvokeAsync("GetUserGroup_ModuleOrganDetail", new object[] {
                        Id,
                        IP}, this.GetUserGroup_ModuleOrganDetailOperationCompleted, userState);
        }
        
        private void OnGetUserGroup_ModuleOrganDetailOperationCompleted(object arg) {
            if ((this.GetUserGroup_ModuleOrganDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroup_ModuleOrganDetailCompleted(this, new GetUserGroup_ModuleOrganDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetUserGroup_ModuleOrganWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_UserGroup_ModuleOrgan[] GetUserGroup_ModuleOrganWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetUserGroup_ModuleOrganWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_UserGroup_ModuleOrgan[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroup_ModuleOrganWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetUserGroup_ModuleOrganWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetUserGroup_ModuleOrganWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetUserGroup_ModuleOrganWithFilterOperationCompleted == null)) {
                this.GetUserGroup_ModuleOrganWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroup_ModuleOrganWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetUserGroup_ModuleOrganWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetUserGroup_ModuleOrganWithFilterOperationCompleted, userState);
        }
        
        private void OnGetUserGroup_ModuleOrganWithFilterOperationCompleted(object arg) {
            if ((this.GetUserGroup_ModuleOrganWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroup_ModuleOrganWithFilterCompleted(this, new GetUserGroup_ModuleOrganWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertUserGroup_ModuleOrgan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertUserGroup_ModuleOrgan(int UserGroupId, int Module_OrganId, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertUserGroup_ModuleOrgan", new object[] {
                        UserGroupId,
                        Module_OrganId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUserGroup_ModuleOrganAsync(int UserGroupId, int Module_OrganId, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertUserGroup_ModuleOrganAsync(UserGroupId, Module_OrganId, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertUserGroup_ModuleOrganAsync(int UserGroupId, int Module_OrganId, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertUserGroup_ModuleOrganOperationCompleted == null)) {
                this.InsertUserGroup_ModuleOrganOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserGroup_ModuleOrganOperationCompleted);
            }
            this.InvokeAsync("InsertUserGroup_ModuleOrgan", new object[] {
                        UserGroupId,
                        Module_OrganId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertUserGroup_ModuleOrganOperationCompleted, userState);
        }
        
        private void OnInsertUserGroup_ModuleOrganOperationCompleted(object arg) {
            if ((this.InsertUserGroup_ModuleOrganCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserGroup_ModuleOrganCompleted(this, new InsertUserGroup_ModuleOrganCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateUserGroup_ModuleOrgan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUserGroup_ModuleOrgan(int Id, int UserGroupId, int Module_OrganId, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateUserGroup_ModuleOrgan", new object[] {
                        Id,
                        UserGroupId,
                        Module_OrganId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserGroup_ModuleOrganAsync(int Id, int UserGroupId, int Module_OrganId, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateUserGroup_ModuleOrganAsync(Id, UserGroupId, Module_OrganId, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateUserGroup_ModuleOrganAsync(int Id, int UserGroupId, int Module_OrganId, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateUserGroup_ModuleOrganOperationCompleted == null)) {
                this.UpdateUserGroup_ModuleOrganOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserGroup_ModuleOrganOperationCompleted);
            }
            this.InvokeAsync("UpdateUserGroup_ModuleOrgan", new object[] {
                        Id,
                        UserGroupId,
                        Module_OrganId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateUserGroup_ModuleOrganOperationCompleted, userState);
        }
        
        private void OnUpdateUserGroup_ModuleOrganOperationCompleted(object arg) {
            if ((this.UpdateUserGroup_ModuleOrganCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserGroup_ModuleOrganCompleted(this, new UpdateUserGroup_ModuleOrganCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteUserGroup_ModuleOrgan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteUserGroup_ModuleOrgan(int Id, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteUserGroup_ModuleOrgan", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserGroup_ModuleOrganAsync(int Id, string UserName, string Password, int OrganId, string IP) {
            this.DeleteUserGroup_ModuleOrganAsync(Id, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteUserGroup_ModuleOrganAsync(int Id, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteUserGroup_ModuleOrganOperationCompleted == null)) {
                this.DeleteUserGroup_ModuleOrganOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserGroup_ModuleOrganOperationCompleted);
            }
            this.InvokeAsync("DeleteUserGroup_ModuleOrgan", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.DeleteUserGroup_ModuleOrganOperationCompleted, userState);
        }
        
        private void OnDeleteUserGroup_ModuleOrganOperationCompleted(object arg) {
            if ((this.DeleteUserGroup_ModuleOrganCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserGroup_ModuleOrganCompleted(this, new DeleteUserGroup_ModuleOrganCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetInputInfoWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_InputInfo[] GetInputInfoWithFilter(string FieldName, string FilterValue, bool LoginType, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetInputInfoWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        LoginType,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_InputInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInputInfoWithFilterAsync(string FieldName, string FilterValue, bool LoginType, int Top, string IP) {
            this.GetInputInfoWithFilterAsync(FieldName, FilterValue, LoginType, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetInputInfoWithFilterAsync(string FieldName, string FilterValue, bool LoginType, int Top, string IP, object userState) {
            if ((this.GetInputInfoWithFilterOperationCompleted == null)) {
                this.GetInputInfoWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInputInfoWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetInputInfoWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        LoginType,
                        Top,
                        IP}, this.GetInputInfoWithFilterOperationCompleted, userState);
        }
        
        private void OnGetInputInfoWithFilterOperationCompleted(object arg) {
            if ((this.GetInputInfoWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInputInfoWithFilterCompleted(this, new GetInputInfoWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertInputInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertInputInfo(System.DateTime fldDateTime, string fldIP, string fldMACAddress, bool fldLoginType, string Desc, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertInputInfo", new object[] {
                        fldDateTime,
                        fldIP,
                        fldMACAddress,
                        fldLoginType,
                        Desc,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertInputInfoAsync(System.DateTime fldDateTime, string fldIP, string fldMACAddress, bool fldLoginType, string Desc, string UserName, string Password, string IP) {
            this.InsertInputInfoAsync(fldDateTime, fldIP, fldMACAddress, fldLoginType, Desc, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void InsertInputInfoAsync(System.DateTime fldDateTime, string fldIP, string fldMACAddress, bool fldLoginType, string Desc, string UserName, string Password, string IP, object userState) {
            if ((this.InsertInputInfoOperationCompleted == null)) {
                this.InsertInputInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInputInfoOperationCompleted);
            }
            this.InvokeAsync("InsertInputInfo", new object[] {
                        fldDateTime,
                        fldIP,
                        fldMACAddress,
                        fldLoginType,
                        Desc,
                        UserName,
                        Password,
                        IP}, this.InsertInputInfoOperationCompleted, userState);
        }
        
        private void OnInsertInputInfoOperationCompleted(object arg) {
            if ((this.InsertInputInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInputInfoCompleted(this, new InsertInputInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetChartOrganEjraeeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ChartOrganEjraee GetChartOrganEjraeeDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetChartOrganEjraeeDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ChartOrganEjraee)(results[0]));
        }
        
        /// <remarks/>
        public void GetChartOrganEjraeeDetailAsync(int Id, string IP) {
            this.GetChartOrganEjraeeDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetChartOrganEjraeeDetailAsync(int Id, string IP, object userState) {
            if ((this.GetChartOrganEjraeeDetailOperationCompleted == null)) {
                this.GetChartOrganEjraeeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChartOrganEjraeeDetailOperationCompleted);
            }
            this.InvokeAsync("GetChartOrganEjraeeDetail", new object[] {
                        Id,
                        IP}, this.GetChartOrganEjraeeDetailOperationCompleted, userState);
        }
        
        private void OnGetChartOrganEjraeeDetailOperationCompleted(object arg) {
            if ((this.GetChartOrganEjraeeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChartOrganEjraeeDetailCompleted(this, new GetChartOrganEjraeeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetChartOrganEjraeeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ChartOrganEjraee[] GetChartOrganEjraeeWithFilter(string FieldName, string FilterValue, int Top, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetChartOrganEjraeeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ChartOrganEjraee[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChartOrganEjraeeWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, string IP) {
            this.GetChartOrganEjraeeWithFilterAsync(FieldName, FilterValue, Top, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetChartOrganEjraeeWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, string IP, object userState) {
            if ((this.GetChartOrganEjraeeWithFilterOperationCompleted == null)) {
                this.GetChartOrganEjraeeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChartOrganEjraeeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetChartOrganEjraeeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        IP}, this.GetChartOrganEjraeeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetChartOrganEjraeeWithFilterOperationCompleted(object arg) {
            if ((this.GetChartOrganEjraeeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChartOrganEjraeeWithFilterCompleted(this, new GetChartOrganEjraeeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/Permission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Permission(int AppId, int OrganId, string Username, string Password, out ClsError Error) {
            object[] results = this.Invoke("Permission", new object[] {
                        AppId,
                        OrganId,
                        Username,
                        Password});
            Error = ((ClsError)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PermissionAsync(int AppId, int OrganId, string Username, string Password) {
            this.PermissionAsync(AppId, OrganId, Username, Password, null);
        }
        
        /// <remarks/>
        public void PermissionAsync(int AppId, int OrganId, string Username, string Password, object userState) {
            if ((this.PermissionOperationCompleted == null)) {
                this.PermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionOperationCompleted);
            }
            this.InvokeAsync("Permission", new object[] {
                        AppId,
                        OrganId,
                        Username,
                        Password}, this.PermissionOperationCompleted, userState);
        }
        
        private void OnPermissionOperationCompleted(object arg) {
            if ((this.PermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionCompleted(this, new PermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/HashPass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HashPass(string Password) {
            object[] results = this.Invoke("HashPass", new object[] {
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HashPassAsync(string Password) {
            this.HashPassAsync(Password, null);
        }
        
        /// <remarks/>
        public void HashPassAsync(string Password, object userState) {
            if ((this.HashPassOperationCompleted == null)) {
                this.HashPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHashPassOperationCompleted);
            }
            this.InvokeAsync("HashPass", new object[] {
                        Password}, this.HashPassOperationCompleted, userState);
        }
        
        private void OnHashPassOperationCompleted(object arg) {
            if ((this.HashPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HashPassCompleted(this, new HashPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetEmployeeWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Employee[] GetEmployeeWithFilter(string FieldName, string FilterValue, int Top, string Username, string Password, int OrganId, out ClsError Error) {
            object[] results = this.Invoke("GetEmployeeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        OrganId});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, int OrganId) {
            this.GetEmployeeWithFilterAsync(FieldName, FilterValue, Top, Username, Password, OrganId, null);
        }
        
        /// <remarks/>
        public void GetEmployeeWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, int OrganId, object userState) {
            if ((this.GetEmployeeWithFilterOperationCompleted == null)) {
                this.GetEmployeeWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        OrganId}, this.GetEmployeeWithFilterOperationCompleted, userState);
        }
        
        private void OnGetEmployeeWithFilterOperationCompleted(object arg) {
            if ((this.GetEmployeeWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeWithFilterCompleted(this, new GetEmployeeWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetEmployeeDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Employee GetEmployeeDetail(int EmployeeId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetEmployeeDetail", new object[] {
                        EmployeeId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Employee)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeDetailAsync(int EmployeeId, string IP) {
            this.GetEmployeeDetailAsync(EmployeeId, IP, null);
        }
        
        /// <remarks/>
        public void GetEmployeeDetailAsync(int EmployeeId, string IP, object userState) {
            if ((this.GetEmployeeDetailOperationCompleted == null)) {
                this.GetEmployeeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeDetailOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeDetail", new object[] {
                        EmployeeId,
                        IP}, this.GetEmployeeDetailOperationCompleted, userState);
        }
        
        private void OnGetEmployeeDetailOperationCompleted(object arg) {
            if ((this.GetEmployeeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeDetailCompleted(this, new GetEmployeeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertEmployee(string fldName, string fldFamily, string fldCodemeli, bool fldStatus, byte TypeShakhs, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertEmployee", new object[] {
                        fldName,
                        fldFamily,
                        fldCodemeli,
                        fldStatus,
                        TypeShakhs,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEmployeeAsync(string fldName, string fldFamily, string fldCodemeli, bool fldStatus, byte TypeShakhs, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertEmployeeAsync(fldName, fldFamily, fldCodemeli, fldStatus, TypeShakhs, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertEmployeeAsync(string fldName, string fldFamily, string fldCodemeli, bool fldStatus, byte TypeShakhs, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertEmployeeOperationCompleted == null)) {
                this.InsertEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmployeeOperationCompleted);
            }
            this.InvokeAsync("InsertEmployee", new object[] {
                        fldName,
                        fldFamily,
                        fldCodemeli,
                        fldStatus,
                        TypeShakhs,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertEmployeeOperationCompleted, userState);
        }
        
        private void OnInsertEmployeeOperationCompleted(object arg) {
            if ((this.InsertEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmployeeCompleted(this, new InsertEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateEmployee(int fldId, string fldName, string fldFamily, string fldCodemeli, bool fldStatus, byte TypeShakhs, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateEmployee", new object[] {
                        fldId,
                        fldName,
                        fldFamily,
                        fldCodemeli,
                        fldStatus,
                        TypeShakhs,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(int fldId, string fldName, string fldFamily, string fldCodemeli, bool fldStatus, byte TypeShakhs, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateEmployeeAsync(fldId, fldName, fldFamily, fldCodemeli, fldStatus, TypeShakhs, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(int fldId, string fldName, string fldFamily, string fldCodemeli, bool fldStatus, byte TypeShakhs, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateEmployeeOperationCompleted == null)) {
                this.UpdateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployee", new object[] {
                        fldId,
                        fldName,
                        fldFamily,
                        fldCodemeli,
                        fldStatus,
                        TypeShakhs,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateEmployeeOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeeOperationCompleted(object arg) {
            if ((this.UpdateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeeCompleted(this, new UpdateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteEmployee(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteEmployee", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmployeeAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteEmployeeAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteEmployeeAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteEmployeeOperationCompleted == null)) {
                this.DeleteEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeOperationCompleted);
            }
            this.InvokeAsync("DeleteEmployee", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteEmployeeOperationCompleted, userState);
        }
        
        private void OnDeleteEmployeeOperationCompleted(object arg) {
            if ((this.DeleteEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmployeeCompleted(this, new DeleteEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetRasteWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Raste[] GetRasteWithFilter(string FieldName, string FilterValue, int h, string Username, string Password, int OrganId, out ClsError Error) {
            object[] results = this.Invoke("GetRasteWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        h,
                        Username,
                        Password,
                        OrganId});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Raste[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRasteWithFilterAsync(string FieldName, string FilterValue, int h, string Username, string Password, int OrganId) {
            this.GetRasteWithFilterAsync(FieldName, FilterValue, h, Username, Password, OrganId, null);
        }
        
        /// <remarks/>
        public void GetRasteWithFilterAsync(string FieldName, string FilterValue, int h, string Username, string Password, int OrganId, object userState) {
            if ((this.GetRasteWithFilterOperationCompleted == null)) {
                this.GetRasteWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRasteWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetRasteWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        h,
                        Username,
                        Password,
                        OrganId}, this.GetRasteWithFilterOperationCompleted, userState);
        }
        
        private void OnGetRasteWithFilterOperationCompleted(object arg) {
            if ((this.GetRasteWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRasteWithFilterCompleted(this, new GetRasteWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetStateWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_State[] GetStateWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetStateWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_State[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStateWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetStateWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetStateWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetStateWithFilterOperationCompleted == null)) {
                this.GetStateWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetStateWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetStateWithFilterOperationCompleted, userState);
        }
        
        private void OnGetStateWithFilterOperationCompleted(object arg) {
            if ((this.GetStateWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStateWithFilterCompleted(this, new GetStateWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetStateDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_State GetStateDetail(int StateId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetStateDetail", new object[] {
                        StateId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_State)(results[0]));
        }
        
        /// <remarks/>
        public void GetStateDetailAsync(int StateId, string IP) {
            this.GetStateDetailAsync(StateId, IP, null);
        }
        
        /// <remarks/>
        public void GetStateDetailAsync(int StateId, string IP, object userState) {
            if ((this.GetStateDetailOperationCompleted == null)) {
                this.GetStateDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateDetailOperationCompleted);
            }
            this.InvokeAsync("GetStateDetail", new object[] {
                        StateId,
                        IP}, this.GetStateDetailOperationCompleted, userState);
        }
        
        private void OnGetStateDetailOperationCompleted(object arg) {
            if ((this.GetStateDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStateDetailCompleted(this, new GetStateDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertState(string fldName, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertState", new object[] {
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertStateAsync(string fldName, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertStateAsync(fldName, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertStateAsync(string fldName, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertStateOperationCompleted == null)) {
                this.InsertStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertStateOperationCompleted);
            }
            this.InvokeAsync("InsertState", new object[] {
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertStateOperationCompleted, userState);
        }
        
        private void OnInsertStateOperationCompleted(object arg) {
            if ((this.InsertStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertStateCompleted(this, new InsertStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateState(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateState", new object[] {
                        fldId,
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStateAsync(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateStateAsync(fldId, fldName, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateStateAsync(int fldId, string fldName, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateStateOperationCompleted == null)) {
                this.UpdateStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStateOperationCompleted);
            }
            this.InvokeAsync("UpdateState", new object[] {
                        fldId,
                        fldName,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateStateOperationCompleted, userState);
        }
        
        private void OnUpdateStateOperationCompleted(object arg) {
            if ((this.UpdateStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStateCompleted(this, new UpdateStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteState(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteState", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStateAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteStateAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteStateAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteStateOperationCompleted == null)) {
                this.DeleteStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStateOperationCompleted);
            }
            this.InvokeAsync("DeleteState", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteStateOperationCompleted, userState);
        }
        
        private void OnDeleteStateOperationCompleted(object arg) {
            if ((this.DeleteStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStateCompleted(this, new DeleteStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetCityWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_City[] GetCityWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCityWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_City[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCityWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetCityWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetCityWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetCityWithFilterOperationCompleted == null)) {
                this.GetCityWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCityWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetCityWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetCityWithFilterOperationCompleted, userState);
        }
        
        private void OnGetCityWithFilterOperationCompleted(object arg) {
            if ((this.GetCityWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCityWithFilterCompleted(this, new GetCityWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetCityDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_City GetCityDetail(int CityId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetCityDetail", new object[] {
                        CityId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_City)(results[0]));
        }
        
        /// <remarks/>
        public void GetCityDetailAsync(int CityId, string IP) {
            this.GetCityDetailAsync(CityId, IP, null);
        }
        
        /// <remarks/>
        public void GetCityDetailAsync(int CityId, string IP, object userState) {
            if ((this.GetCityDetailOperationCompleted == null)) {
                this.GetCityDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCityDetailOperationCompleted);
            }
            this.InvokeAsync("GetCityDetail", new object[] {
                        CityId,
                        IP}, this.GetCityDetailOperationCompleted, userState);
        }
        
        private void OnGetCityDetailOperationCompleted(object arg) {
            if ((this.GetCityDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCityDetailCompleted(this, new GetCityDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCity(string fldName, int fldStateId, string fldLatitude, string fldLongitude, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertCity", new object[] {
                        fldName,
                        fldStateId,
                        fldLatitude,
                        fldLongitude,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCityAsync(string fldName, int fldStateId, string fldLatitude, string fldLongitude, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertCityAsync(fldName, fldStateId, fldLatitude, fldLongitude, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertCityAsync(string fldName, int fldStateId, string fldLatitude, string fldLongitude, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertCityOperationCompleted == null)) {
                this.InsertCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCityOperationCompleted);
            }
            this.InvokeAsync("InsertCity", new object[] {
                        fldName,
                        fldStateId,
                        fldLatitude,
                        fldLongitude,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertCityOperationCompleted, userState);
        }
        
        private void OnInsertCityOperationCompleted(object arg) {
            if ((this.InsertCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCityCompleted(this, new InsertCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCity(int fldId, string fldName, int fldStateId, string fldLatitude, string fldLongitude, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateCity", new object[] {
                        fldId,
                        fldName,
                        fldStateId,
                        fldLatitude,
                        fldLongitude,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCityAsync(int fldId, string fldName, int fldStateId, string fldLatitude, string fldLongitude, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateCityAsync(fldId, fldName, fldStateId, fldLatitude, fldLongitude, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateCityAsync(int fldId, string fldName, int fldStateId, string fldLatitude, string fldLongitude, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateCityOperationCompleted == null)) {
                this.UpdateCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCityOperationCompleted);
            }
            this.InvokeAsync("UpdateCity", new object[] {
                        fldId,
                        fldName,
                        fldStateId,
                        fldLatitude,
                        fldLongitude,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateCityOperationCompleted, userState);
        }
        
        private void OnUpdateCityOperationCompleted(object arg) {
            if ((this.UpdateCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCityCompleted(this, new UpdateCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCity(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteCity", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCityAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteCityAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteCityAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteCityOperationCompleted == null)) {
                this.DeleteCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCityOperationCompleted);
            }
            this.InvokeAsync("DeleteCity", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteCityOperationCompleted, userState);
        }
        
        private void OnDeleteCityOperationCompleted(object arg) {
            if ((this.DeleteCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCityCompleted(this, new DeleteCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetOrganizationWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Organization[] GetOrganizationWithFilter(string FieldName, string FilterValue, int Top, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetOrganizationWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Organization[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, string IP) {
            this.GetOrganizationWithFilterAsync(FieldName, FilterValue, Top, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetOrganizationWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, string IP, object userState) {
            if ((this.GetOrganizationWithFilterOperationCompleted == null)) {
                this.GetOrganizationWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        IP}, this.GetOrganizationWithFilterOperationCompleted, userState);
        }
        
        private void OnGetOrganizationWithFilterOperationCompleted(object arg) {
            if ((this.GetOrganizationWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationWithFilterCompleted(this, new GetOrganizationWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetOrganizationDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Organization GetOrganizationDetail(int OrganizationId, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetOrganizationDetail", new object[] {
                        OrganizationId,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Organization)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationDetailAsync(int OrganizationId, string Username, string Password, string IP) {
            this.GetOrganizationDetailAsync(OrganizationId, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetOrganizationDetailAsync(int OrganizationId, string Username, string Password, string IP, object userState) {
            if ((this.GetOrganizationDetailOperationCompleted == null)) {
                this.GetOrganizationDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationDetailOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationDetail", new object[] {
                        OrganizationId,
                        Username,
                        Password,
                        IP}, this.GetOrganizationDetailOperationCompleted, userState);
        }
        
        private void OnGetOrganizationDetailOperationCompleted(object arg) {
            if ((this.GetOrganizationDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationDetailCompleted(this, new GetOrganizationDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertOrganization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertOrganization(string fldName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldArm, string Pasvand, int fldCityId, string fldCodAnformatic, byte fldCodKhedmat, int AshkhaseHoghoghiId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertOrganization", new object[] {
                        fldName,
                        fldPId,
                        fldArm,
                        Pasvand,
                        fldCityId,
                        fldCodAnformatic,
                        fldCodKhedmat,
                        AshkhaseHoghoghiId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOrganizationAsync(string fldName, System.Nullable<int> fldPId, byte[] fldArm, string Pasvand, int fldCityId, string fldCodAnformatic, byte fldCodKhedmat, int AshkhaseHoghoghiId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertOrganizationAsync(fldName, fldPId, fldArm, Pasvand, fldCityId, fldCodAnformatic, fldCodKhedmat, AshkhaseHoghoghiId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertOrganizationAsync(string fldName, System.Nullable<int> fldPId, byte[] fldArm, string Pasvand, int fldCityId, string fldCodAnformatic, byte fldCodKhedmat, int AshkhaseHoghoghiId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertOrganizationOperationCompleted == null)) {
                this.InsertOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOrganizationOperationCompleted);
            }
            this.InvokeAsync("InsertOrganization", new object[] {
                        fldName,
                        fldPId,
                        fldArm,
                        Pasvand,
                        fldCityId,
                        fldCodAnformatic,
                        fldCodKhedmat,
                        AshkhaseHoghoghiId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertOrganizationOperationCompleted, userState);
        }
        
        private void OnInsertOrganizationOperationCompleted(object arg) {
            if ((this.InsertOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOrganizationCompleted(this, new InsertOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateOrganization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOrganization(
                    int fldId, 
                    string fldName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPId, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fldArm, 
                    string Pasvand, 
                    int fldCityId, 
                    int fldFileId, 
                    string fldCodAnformatic, 
                    byte fldCodKhedmat, 
                    int AshkhaseHoghoghiId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    out ClsError Error) {
            object[] results = this.Invoke("UpdateOrganization", new object[] {
                        fldId,
                        fldName,
                        fldPId,
                        fldArm,
                        Pasvand,
                        fldCityId,
                        fldFileId,
                        fldCodAnformatic,
                        fldCodKhedmat,
                        AshkhaseHoghoghiId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrganizationAsync(int fldId, string fldName, System.Nullable<int> fldPId, byte[] fldArm, string Pasvand, int fldCityId, int fldFileId, string fldCodAnformatic, byte fldCodKhedmat, int AshkhaseHoghoghiId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateOrganizationAsync(fldId, fldName, fldPId, fldArm, Pasvand, fldCityId, fldFileId, fldCodAnformatic, fldCodKhedmat, AshkhaseHoghoghiId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateOrganizationAsync(
                    int fldId, 
                    string fldName, 
                    System.Nullable<int> fldPId, 
                    byte[] fldArm, 
                    string Pasvand, 
                    int fldCityId, 
                    int fldFileId, 
                    string fldCodAnformatic, 
                    byte fldCodKhedmat, 
                    int AshkhaseHoghoghiId, 
                    string Desc, 
                    string Username, 
                    string Password, 
                    int OrganId, 
                    string IP, 
                    object userState) {
            if ((this.UpdateOrganizationOperationCompleted == null)) {
                this.UpdateOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrganizationOperationCompleted);
            }
            this.InvokeAsync("UpdateOrganization", new object[] {
                        fldId,
                        fldName,
                        fldPId,
                        fldArm,
                        Pasvand,
                        fldCityId,
                        fldFileId,
                        fldCodAnformatic,
                        fldCodKhedmat,
                        AshkhaseHoghoghiId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateOrganizationOperationCompleted, userState);
        }
        
        private void OnUpdateOrganizationOperationCompleted(object arg) {
            if ((this.UpdateOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrganizationCompleted(this, new UpdateOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteOrganization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteOrganization(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteOrganization", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteOrganizationAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteOrganizationOperationCompleted == null)) {
                this.DeleteOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganization", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteOrganizationOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationOperationCompleted(object arg) {
            if ((this.DeleteOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationCompleted(this, new DeleteOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetChartOrganWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ChartOrgan[] GetChartOrganWithFilter(string FieldName, string FilterValue, int Top, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetChartOrganWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ChartOrgan[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChartOrganWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, string IP) {
            this.GetChartOrganWithFilterAsync(FieldName, FilterValue, Top, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetChartOrganWithFilterAsync(string FieldName, string FilterValue, int Top, string Username, string Password, string IP, object userState) {
            if ((this.GetChartOrganWithFilterOperationCompleted == null)) {
                this.GetChartOrganWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChartOrganWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetChartOrganWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        Username,
                        Password,
                        IP}, this.GetChartOrganWithFilterOperationCompleted, userState);
        }
        
        private void OnGetChartOrganWithFilterOperationCompleted(object arg) {
            if ((this.GetChartOrganWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChartOrganWithFilterCompleted(this, new GetChartOrganWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetChartOrganDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ChartOrgan GetChartOrganDetail(int ChartOrganId, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetChartOrganDetail", new object[] {
                        ChartOrganId,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ChartOrgan)(results[0]));
        }
        
        /// <remarks/>
        public void GetChartOrganDetailAsync(int ChartOrganId, string Username, string Password, string IP) {
            this.GetChartOrganDetailAsync(ChartOrganId, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetChartOrganDetailAsync(int ChartOrganId, string Username, string Password, string IP, object userState) {
            if ((this.GetChartOrganDetailOperationCompleted == null)) {
                this.GetChartOrganDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChartOrganDetailOperationCompleted);
            }
            this.InvokeAsync("GetChartOrganDetail", new object[] {
                        ChartOrganId,
                        Username,
                        Password,
                        IP}, this.GetChartOrganDetailOperationCompleted, userState);
        }
        
        private void OnGetChartOrganDetailOperationCompleted(object arg) {
            if ((this.GetChartOrganDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChartOrganDetailCompleted(this, new GetChartOrganDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertChartOrgan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertChartOrgan(string fldTitle, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldOrganId, byte fldNoeVahed, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertChartOrgan", new object[] {
                        fldTitle,
                        fldPId,
                        fldOrganId,
                        fldNoeVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertChartOrganAsync(string fldTitle, System.Nullable<int> fldPId, System.Nullable<int> fldOrganId, byte fldNoeVahed, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertChartOrganAsync(fldTitle, fldPId, fldOrganId, fldNoeVahed, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertChartOrganAsync(string fldTitle, System.Nullable<int> fldPId, System.Nullable<int> fldOrganId, byte fldNoeVahed, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertChartOrganOperationCompleted == null)) {
                this.InsertChartOrganOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertChartOrganOperationCompleted);
            }
            this.InvokeAsync("InsertChartOrgan", new object[] {
                        fldTitle,
                        fldPId,
                        fldOrganId,
                        fldNoeVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertChartOrganOperationCompleted, userState);
        }
        
        private void OnInsertChartOrganOperationCompleted(object arg) {
            if ((this.InsertChartOrganCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertChartOrganCompleted(this, new InsertChartOrganCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateChartOrgan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateChartOrgan(int fldId, string fldTitle, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldPId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fldOrganId, byte fldNoeVahed, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateChartOrgan", new object[] {
                        fldId,
                        fldTitle,
                        fldPId,
                        fldOrganId,
                        fldNoeVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateChartOrganAsync(int fldId, string fldTitle, System.Nullable<int> fldPId, System.Nullable<int> fldOrganId, byte fldNoeVahed, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateChartOrganAsync(fldId, fldTitle, fldPId, fldOrganId, fldNoeVahed, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateChartOrganAsync(int fldId, string fldTitle, System.Nullable<int> fldPId, System.Nullable<int> fldOrganId, byte fldNoeVahed, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateChartOrganOperationCompleted == null)) {
                this.UpdateChartOrganOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateChartOrganOperationCompleted);
            }
            this.InvokeAsync("UpdateChartOrgan", new object[] {
                        fldId,
                        fldTitle,
                        fldPId,
                        fldOrganId,
                        fldNoeVahed,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateChartOrganOperationCompleted, userState);
        }
        
        private void OnUpdateChartOrganOperationCompleted(object arg) {
            if ((this.UpdateChartOrganCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateChartOrganCompleted(this, new UpdateChartOrganCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteChartOrgan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteChartOrgan(int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteChartOrgan", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteChartOrganAsync(int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteChartOrganAsync(id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteChartOrganAsync(int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteChartOrganOperationCompleted == null)) {
                this.DeleteChartOrganOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChartOrganOperationCompleted);
            }
            this.InvokeAsync("DeleteChartOrgan", new object[] {
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteChartOrganOperationCompleted, userState);
        }
        
        private void OnDeleteChartOrganOperationCompleted(object arg) {
            if ((this.DeleteChartOrganCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChartOrganCompleted(this, new DeleteChartOrganCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetModuleWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Module[] GetModuleWithFilter(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetModuleWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Module[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModuleWithFilterAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP) {
            this.GetModuleWithFilterAsync(FieldName, FilterValue, Top, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetModuleWithFilterAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP, object userState) {
            if ((this.GetModuleWithFilterOperationCompleted == null)) {
                this.GetModuleWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModuleWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetModuleWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password,
                        IP}, this.GetModuleWithFilterOperationCompleted, userState);
        }
        
        private void OnGetModuleWithFilterOperationCompleted(object arg) {
            if ((this.GetModuleWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModuleWithFilterCompleted(this, new GetModuleWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetModuleDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Module GetModuleDetail(int ModuleId, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetModuleDetail", new object[] {
                        ModuleId,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Module)(results[0]));
        }
        
        /// <remarks/>
        public void GetModuleDetailAsync(int ModuleId, string UserName, string Password, string IP) {
            this.GetModuleDetailAsync(ModuleId, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetModuleDetailAsync(int ModuleId, string UserName, string Password, string IP, object userState) {
            if ((this.GetModuleDetailOperationCompleted == null)) {
                this.GetModuleDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModuleDetailOperationCompleted);
            }
            this.InvokeAsync("GetModuleDetail", new object[] {
                        ModuleId,
                        UserName,
                        Password,
                        IP}, this.GetModuleDetailOperationCompleted, userState);
        }
        
        private void OnGetModuleDetailOperationCompleted(object arg) {
            if ((this.GetModuleDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModuleDetailCompleted(this, new GetModuleDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertModule(string Title, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertModule", new object[] {
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertModuleAsync(string Title, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertModuleAsync(Title, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertModuleAsync(string Title, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertModuleOperationCompleted == null)) {
                this.InsertModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertModuleOperationCompleted);
            }
            this.InvokeAsync("InsertModule", new object[] {
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertModuleOperationCompleted, userState);
        }
        
        private void OnInsertModuleOperationCompleted(object arg) {
            if ((this.InsertModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertModuleCompleted(this, new InsertModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateModule(int ModuleId, string Title, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateModule", new object[] {
                        ModuleId,
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateModuleAsync(int ModuleId, string Title, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateModuleAsync(ModuleId, Title, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateModuleAsync(int ModuleId, string Title, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateModuleOperationCompleted == null)) {
                this.UpdateModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateModuleOperationCompleted);
            }
            this.InvokeAsync("UpdateModule", new object[] {
                        ModuleId,
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateModuleOperationCompleted, userState);
        }
        
        private void OnUpdateModuleOperationCompleted(object arg) {
            if ((this.UpdateModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateModuleCompleted(this, new UpdateModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteModule(int ModuleId, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteModule", new object[] {
                        ModuleId,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteModuleAsync(int ModuleId, string UserName, string Password, int OrganId, string IP) {
            this.DeleteModuleAsync(ModuleId, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteModuleAsync(int ModuleId, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteModuleOperationCompleted == null)) {
                this.DeleteModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteModuleOperationCompleted);
            }
            this.InvokeAsync("DeleteModule", new object[] {
                        ModuleId,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.DeleteModuleOperationCompleted, userState);
        }
        
        private void OnDeleteModuleOperationCompleted(object arg) {
            if ((this.DeleteModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteModuleCompleted(this, new DeleteModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetModule_OrganWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Module_Organ[] GetModule_OrganWithFilter(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetModule_OrganWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Module_Organ[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModule_OrganWithFilterAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP) {
            this.GetModule_OrganWithFilterAsync(FieldName, FilterValue, Top, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetModule_OrganWithFilterAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP, object userState) {
            if ((this.GetModule_OrganWithFilterOperationCompleted == null)) {
                this.GetModule_OrganWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModule_OrganWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetModule_OrganWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password,
                        IP}, this.GetModule_OrganWithFilterOperationCompleted, userState);
        }
        
        private void OnGetModule_OrganWithFilterOperationCompleted(object arg) {
            if ((this.GetModule_OrganWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModule_OrganWithFilterCompleted(this, new GetModule_OrganWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetModule_OrganDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Module_Organ GetModule_OrganDetail(int Module_OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetModule_OrganDetail", new object[] {
                        Module_OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Module_Organ)(results[0]));
        }
        
        /// <remarks/>
        public void GetModule_OrganDetailAsync(int Module_OrganId, string IP) {
            this.GetModule_OrganDetailAsync(Module_OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetModule_OrganDetailAsync(int Module_OrganId, string IP, object userState) {
            if ((this.GetModule_OrganDetailOperationCompleted == null)) {
                this.GetModule_OrganDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModule_OrganDetailOperationCompleted);
            }
            this.InvokeAsync("GetModule_OrganDetail", new object[] {
                        Module_OrganId,
                        IP}, this.GetModule_OrganDetailOperationCompleted, userState);
        }
        
        private void OnGetModule_OrganDetailOperationCompleted(object arg) {
            if ((this.GetModule_OrganDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModule_OrganDetailCompleted(this, new GetModule_OrganDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertModule_Organ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertModule_Organ(int fldOrganId, int ModuleId, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertModule_Organ", new object[] {
                        fldOrganId,
                        ModuleId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertModule_OrganAsync(int fldOrganId, int ModuleId, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertModule_OrganAsync(fldOrganId, ModuleId, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertModule_OrganAsync(int fldOrganId, int ModuleId, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertModule_OrganOperationCompleted == null)) {
                this.InsertModule_OrganOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertModule_OrganOperationCompleted);
            }
            this.InvokeAsync("InsertModule_Organ", new object[] {
                        fldOrganId,
                        ModuleId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertModule_OrganOperationCompleted, userState);
        }
        
        private void OnInsertModule_OrganOperationCompleted(object arg) {
            if ((this.InsertModule_OrganCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertModule_OrganCompleted(this, new InsertModule_OrganCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateModule_Organ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateModule_Organ(int Id, int fldOrganId, int ModuleId, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateModule_Organ", new object[] {
                        Id,
                        fldOrganId,
                        ModuleId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateModule_OrganAsync(int Id, int fldOrganId, int ModuleId, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateModule_OrganAsync(Id, fldOrganId, ModuleId, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateModule_OrganAsync(int Id, int fldOrganId, int ModuleId, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateModule_OrganOperationCompleted == null)) {
                this.UpdateModule_OrganOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateModule_OrganOperationCompleted);
            }
            this.InvokeAsync("UpdateModule_Organ", new object[] {
                        Id,
                        fldOrganId,
                        ModuleId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateModule_OrganOperationCompleted, userState);
        }
        
        private void OnUpdateModule_OrganOperationCompleted(object arg) {
            if ((this.UpdateModule_OrganCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateModule_OrganCompleted(this, new UpdateModule_OrganCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteModule_Organ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteModule_Organ(int Id, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteModule_Organ", new object[] {
                        Id,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteModule_OrganAsync(int Id, string UserName, string Password, string IP) {
            this.DeleteModule_OrganAsync(Id, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteModule_OrganAsync(int Id, string UserName, string Password, string IP, object userState) {
            if ((this.DeleteModule_OrganOperationCompleted == null)) {
                this.DeleteModule_OrganOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteModule_OrganOperationCompleted);
            }
            this.InvokeAsync("DeleteModule_Organ", new object[] {
                        Id,
                        UserName,
                        Password,
                        IP}, this.DeleteModule_OrganOperationCompleted, userState);
        }
        
        private void OnDeleteModule_OrganOperationCompleted(object arg) {
            if ((this.DeleteModule_OrganCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteModule_OrganCompleted(this, new DeleteModule_OrganCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMasoulinWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Masoulin[] GetMasoulinWithFilter(string FieldName, string FilterValue, int OrganId, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMasoulinWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Masoulin[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMasoulinWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP) {
            this.GetMasoulinWithFilterAsync(FieldName, FilterValue, OrganId, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetMasoulinWithFilterAsync(string FieldName, string FilterValue, int OrganId, int Top, string IP, object userState) {
            if ((this.GetMasoulinWithFilterOperationCompleted == null)) {
                this.GetMasoulinWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasoulinWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetMasoulinWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        OrganId,
                        Top,
                        IP}, this.GetMasoulinWithFilterOperationCompleted, userState);
        }
        
        private void OnGetMasoulinWithFilterOperationCompleted(object arg) {
            if ((this.GetMasoulinWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasoulinWithFilterCompleted(this, new GetMasoulinWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMasoulinDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Masoulin GetMasoulinDetail(int MasoulinId, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMasoulinDetail", new object[] {
                        MasoulinId,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Masoulin)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasoulinDetailAsync(int MasoulinId, int OrganId, string IP) {
            this.GetMasoulinDetailAsync(MasoulinId, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetMasoulinDetailAsync(int MasoulinId, int OrganId, string IP, object userState) {
            if ((this.GetMasoulinDetailOperationCompleted == null)) {
                this.GetMasoulinDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasoulinDetailOperationCompleted);
            }
            this.InvokeAsync("GetMasoulinDetail", new object[] {
                        MasoulinId,
                        OrganId,
                        IP}, this.GetMasoulinDetailOperationCompleted, userState);
        }
        
        private void OnGetMasoulinDetailOperationCompleted(object arg) {
            if ((this.GetMasoulinDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasoulinDetailCompleted(this, new GetMasoulinDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertMasoulin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertMasoulin(int Module_OrganId, string TarikhEjra, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertMasoulin", new object[] {
                        Module_OrganId,
                        TarikhEjra,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMasoulinAsync(int Module_OrganId, string TarikhEjra, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertMasoulinAsync(Module_OrganId, TarikhEjra, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertMasoulinAsync(int Module_OrganId, string TarikhEjra, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertMasoulinOperationCompleted == null)) {
                this.InsertMasoulinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMasoulinOperationCompleted);
            }
            this.InvokeAsync("InsertMasoulin", new object[] {
                        Module_OrganId,
                        TarikhEjra,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertMasoulinOperationCompleted, userState);
        }
        
        private void OnInsertMasoulinOperationCompleted(object arg) {
            if ((this.InsertMasoulinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMasoulinCompleted(this, new InsertMasoulinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateMasoulin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMasoulin(int MasoulinId, string TarikhEjra, int Module_OrganId, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateMasoulin", new object[] {
                        MasoulinId,
                        TarikhEjra,
                        Module_OrganId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMasoulinAsync(int MasoulinId, string TarikhEjra, int Module_OrganId, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateMasoulinAsync(MasoulinId, TarikhEjra, Module_OrganId, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateMasoulinAsync(int MasoulinId, string TarikhEjra, int Module_OrganId, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateMasoulinOperationCompleted == null)) {
                this.UpdateMasoulinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMasoulinOperationCompleted);
            }
            this.InvokeAsync("UpdateMasoulin", new object[] {
                        MasoulinId,
                        TarikhEjra,
                        Module_OrganId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateMasoulinOperationCompleted, userState);
        }
        
        private void OnUpdateMasoulinOperationCompleted(object arg) {
            if ((this.UpdateMasoulinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMasoulinCompleted(this, new UpdateMasoulinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMasuolin_ZirList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Masuolin_ZirList[] GetMasuolin_ZirList(int headerId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMasuolin_ZirList", new object[] {
                        headerId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Masuolin_ZirList[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMasuolin_ZirListAsync(int headerId, string IP) {
            this.GetMasuolin_ZirListAsync(headerId, IP, null);
        }
        
        /// <remarks/>
        public void GetMasuolin_ZirListAsync(int headerId, string IP, object userState) {
            if ((this.GetMasuolin_ZirListOperationCompleted == null)) {
                this.GetMasuolin_ZirListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasuolin_ZirListOperationCompleted);
            }
            this.InvokeAsync("GetMasuolin_ZirList", new object[] {
                        headerId,
                        IP}, this.GetMasuolin_ZirListOperationCompleted, userState);
        }
        
        private void OnGetMasuolin_ZirListOperationCompleted(object arg) {
            if ((this.GetMasuolin_ZirListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasuolin_ZirListCompleted(this, new GetMasuolin_ZirListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMasoulin_DetailWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Masoulin_Detail[] GetMasoulin_DetailWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMasoulin_DetailWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Masoulin_Detail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMasoulin_DetailWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetMasoulin_DetailWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetMasoulin_DetailWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetMasoulin_DetailWithFilterOperationCompleted == null)) {
                this.GetMasoulin_DetailWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasoulin_DetailWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetMasoulin_DetailWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetMasoulin_DetailWithFilterOperationCompleted, userState);
        }
        
        private void OnGetMasoulin_DetailWithFilterOperationCompleted(object arg) {
            if ((this.GetMasoulin_DetailWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasoulin_DetailWithFilterCompleted(this, new GetMasoulin_DetailWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMasoulin_DetailDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Masoulin_Detail GetMasoulin_DetailDetail(int Masoulin_DetailId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMasoulin_DetailDetail", new object[] {
                        Masoulin_DetailId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Masoulin_Detail)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasoulin_DetailDetailAsync(int Masoulin_DetailId, string IP) {
            this.GetMasoulin_DetailDetailAsync(Masoulin_DetailId, IP, null);
        }
        
        /// <remarks/>
        public void GetMasoulin_DetailDetailAsync(int Masoulin_DetailId, string IP, object userState) {
            if ((this.GetMasoulin_DetailDetailOperationCompleted == null)) {
                this.GetMasoulin_DetailDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasoulin_DetailDetailOperationCompleted);
            }
            this.InvokeAsync("GetMasoulin_DetailDetail", new object[] {
                        Masoulin_DetailId,
                        IP}, this.GetMasoulin_DetailDetailOperationCompleted, userState);
        }
        
        private void OnGetMasoulin_DetailDetailOperationCompleted(object arg) {
            if ((this.GetMasoulin_DetailDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasoulin_DetailDetailCompleted(this, new GetMasoulin_DetailDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertMasoulin_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertMasoulin_Detail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> EmployeeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> OrganPostId, int MasoulinId, int OrderId, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertMasoulin_Detail", new object[] {
                        EmployeeId,
                        OrganPostId,
                        MasoulinId,
                        OrderId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMasoulin_DetailAsync(System.Nullable<int> EmployeeId, System.Nullable<int> OrganPostId, int MasoulinId, int OrderId, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertMasoulin_DetailAsync(EmployeeId, OrganPostId, MasoulinId, OrderId, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertMasoulin_DetailAsync(System.Nullable<int> EmployeeId, System.Nullable<int> OrganPostId, int MasoulinId, int OrderId, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertMasoulin_DetailOperationCompleted == null)) {
                this.InsertMasoulin_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMasoulin_DetailOperationCompleted);
            }
            this.InvokeAsync("InsertMasoulin_Detail", new object[] {
                        EmployeeId,
                        OrganPostId,
                        MasoulinId,
                        OrderId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertMasoulin_DetailOperationCompleted, userState);
        }
        
        private void OnInsertMasoulin_DetailOperationCompleted(object arg) {
            if ((this.InsertMasoulin_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMasoulin_DetailCompleted(this, new InsertMasoulin_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateMasoulin_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMasoulin_Detail(int Msoulin_DetailId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> EmployeeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> OrganPostId, int MasoulinId, int OrderId, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateMasoulin_Detail", new object[] {
                        Msoulin_DetailId,
                        EmployeeId,
                        OrganPostId,
                        MasoulinId,
                        OrderId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMasoulin_DetailAsync(int Msoulin_DetailId, System.Nullable<int> EmployeeId, System.Nullable<int> OrganPostId, int MasoulinId, int OrderId, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateMasoulin_DetailAsync(Msoulin_DetailId, EmployeeId, OrganPostId, MasoulinId, OrderId, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateMasoulin_DetailAsync(int Msoulin_DetailId, System.Nullable<int> EmployeeId, System.Nullable<int> OrganPostId, int MasoulinId, int OrderId, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateMasoulin_DetailOperationCompleted == null)) {
                this.UpdateMasoulin_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMasoulin_DetailOperationCompleted);
            }
            this.InvokeAsync("UpdateMasoulin_Detail", new object[] {
                        Msoulin_DetailId,
                        EmployeeId,
                        OrganPostId,
                        MasoulinId,
                        OrderId,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateMasoulin_DetailOperationCompleted, userState);
        }
        
        private void OnUpdateMasoulin_DetailOperationCompleted(object arg) {
            if ((this.UpdateMasoulin_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMasoulin_DetailCompleted(this, new UpdateMasoulin_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteMasoulin_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteMasoulin_Detail(int Id, string FieldName, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteMasoulin_Detail", new object[] {
                        Id,
                        FieldName,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMasoulin_DetailAsync(int Id, string FieldName, string UserName, string Password, int OrganId, string IP) {
            this.DeleteMasoulin_DetailAsync(Id, FieldName, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteMasoulin_DetailAsync(int Id, string FieldName, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteMasoulin_DetailOperationCompleted == null)) {
                this.DeleteMasoulin_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMasoulin_DetailOperationCompleted);
            }
            this.InvokeAsync("DeleteMasoulin_Detail", new object[] {
                        Id,
                        FieldName,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.DeleteMasoulin_DetailOperationCompleted, userState);
        }
        
        private void OnDeleteMasoulin_DetailOperationCompleted(object arg) {
            if ((this.DeleteMasoulin_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMasoulin_DetailCompleted(this, new DeleteMasoulin_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetMasoulin_DetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Masoulin_DetailList[] GetMasoulin_DetailList(int HeaderId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetMasoulin_DetailList", new object[] {
                        HeaderId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Masoulin_DetailList[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMasoulin_DetailListAsync(int HeaderId, string IP) {
            this.GetMasoulin_DetailListAsync(HeaderId, IP, null);
        }
        
        /// <remarks/>
        public void GetMasoulin_DetailListAsync(int HeaderId, string IP, object userState) {
            if ((this.GetMasoulin_DetailListOperationCompleted == null)) {
                this.GetMasoulin_DetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasoulin_DetailListOperationCompleted);
            }
            this.InvokeAsync("GetMasoulin_DetailList", new object[] {
                        HeaderId,
                        IP}, this.GetMasoulin_DetailListOperationCompleted, userState);
        }
        
        private void OnGetMasoulin_DetailListOperationCompleted(object arg) {
            if ((this.GetMasoulin_DetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasoulin_DetailListCompleted(this, new GetMasoulin_DetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetUserWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_User[] GetUserWithFilter(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetUserWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP) {
            this.GetUserWithFilterAsync(FieldName, FilterValue, FilterValue2, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetUserWithFilterAsync(string FieldName, string FilterValue, string FilterValue2, int Top, string IP, object userState) {
            if ((this.GetUserWithFilterOperationCompleted == null)) {
                this.GetUserWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetUserWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue2,
                        Top,
                        IP}, this.GetUserWithFilterOperationCompleted, userState);
        }
        
        private void OnGetUserWithFilterOperationCompleted(object arg) {
            if ((this.GetUserWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserWithFilterCompleted(this, new GetUserWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetUserDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_User GetUserDetail(int User_Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetUserDetail", new object[] {
                        User_Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDetailAsync(int User_Id, string IP) {
            this.GetUserDetailAsync(User_Id, IP, null);
        }
        
        /// <remarks/>
        public void GetUserDetailAsync(int User_Id, string IP, object userState) {
            if ((this.GetUserDetailOperationCompleted == null)) {
                this.GetUserDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDetailOperationCompleted);
            }
            this.InvokeAsync("GetUserDetail", new object[] {
                        User_Id,
                        IP}, this.GetUserDetailOperationCompleted, userState);
        }
        
        private void OnGetUserDetailOperationCompleted(object arg) {
            if ((this.GetUserDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDetailCompleted(this, new GetUserDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertUser(int EmployeeId, string fldUserName, string fldPassword, bool State, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertUser", new object[] {
                        EmployeeId,
                        fldUserName,
                        fldPassword,
                        State,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUserAsync(int EmployeeId, string fldUserName, string fldPassword, bool State, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertUserAsync(EmployeeId, fldUserName, fldPassword, State, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertUserAsync(int EmployeeId, string fldUserName, string fldPassword, bool State, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertUserOperationCompleted == null)) {
                this.InsertUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserOperationCompleted);
            }
            this.InvokeAsync("InsertUser", new object[] {
                        EmployeeId,
                        fldUserName,
                        fldPassword,
                        State,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertUserOperationCompleted, userState);
        }
        
        private void OnInsertUserOperationCompleted(object arg) {
            if ((this.InsertUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserCompleted(this, new InsertUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUser(int User_Id, int EmployeeId, string fldUserName, bool State, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        User_Id,
                        EmployeeId,
                        fldUserName,
                        State,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int User_Id, int EmployeeId, string fldUserName, bool State, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateUserAsync(User_Id, EmployeeId, fldUserName, State, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int User_Id, int EmployeeId, string fldUserName, bool State, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        User_Id,
                        EmployeeId,
                        fldUserName,
                        State,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteUser(int User_Id, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        User_Id,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int User_Id, string UserName, string Password, int OrganId, string IP) {
            this.DeleteUserAsync(User_Id, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int User_Id, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        User_Id,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UserPassUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserPassUpdate(int User_Id, string Pass, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UserPassUpdate", new object[] {
                        User_Id,
                        Pass,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserPassUpdateAsync(int User_Id, string Pass, string UserName, string Password, int OrganId, string IP) {
            this.UserPassUpdateAsync(User_Id, Pass, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UserPassUpdateAsync(int User_Id, string Pass, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UserPassUpdateOperationCompleted == null)) {
                this.UserPassUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserPassUpdateOperationCompleted);
            }
            this.InvokeAsync("UserPassUpdate", new object[] {
                        User_Id,
                        Pass,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UserPassUpdateOperationCompleted, userState);
        }
        
        private void OnUserPassUpdateOperationCompleted(object arg) {
            if ((this.UserPassUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserPassUpdateCompleted(this, new UserPassUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/ChangePass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangePass(string Password, string UserName, string NewPass, out ClsError Error) {
            object[] results = this.Invoke("ChangePass", new object[] {
                        Password,
                        UserName,
                        NewPass});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePassAsync(string Password, string UserName, string NewPass) {
            this.ChangePassAsync(Password, UserName, NewPass, null);
        }
        
        /// <remarks/>
        public void ChangePassAsync(string Password, string UserName, string NewPass, object userState) {
            if ((this.ChangePassOperationCompleted == null)) {
                this.ChangePassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePassOperationCompleted);
            }
            this.InvokeAsync("ChangePass", new object[] {
                        Password,
                        UserName,
                        NewPass}, this.ChangePassOperationCompleted, userState);
        }
        
        private void OnChangePassOperationCompleted(object arg) {
            if ((this.ChangePassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePassCompleted(this, new ChangePassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/ExistUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExistUser(string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("ExistUser", new object[] {
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExistUserAsync(string UserName, string Password, string IP) {
            this.ExistUserAsync(UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void ExistUserAsync(string UserName, string Password, string IP, object userState) {
            if ((this.ExistUserOperationCompleted == null)) {
                this.ExistUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistUserOperationCompleted);
            }
            this.InvokeAsync("ExistUser", new object[] {
                        UserName,
                        Password,
                        IP}, this.ExistUserOperationCompleted, userState);
        }
        
        private void OnExistUserOperationCompleted(object arg) {
            if ((this.ExistUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistUserCompleted(this, new ExistUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/SelectUserByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_User[] SelectUserByUserId(string FieldName, string FilterValue, int Top, string UserName, string Password, out ClsError Error) {
            object[] results = this.Invoke("SelectUserByUserId", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password});
            Error = ((ClsError)(results[1]));
            return ((OBJ_User[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectUserByUserIdAsync(string FieldName, string FilterValue, int Top, string UserName, string Password) {
            this.SelectUserByUserIdAsync(FieldName, FilterValue, Top, UserName, Password, null);
        }
        
        /// <remarks/>
        public void SelectUserByUserIdAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, object userState) {
            if ((this.SelectUserByUserIdOperationCompleted == null)) {
                this.SelectUserByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectUserByUserIdOperationCompleted);
            }
            this.InvokeAsync("SelectUserByUserId", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password}, this.SelectUserByUserIdOperationCompleted, userState);
        }
        
        private void OnSelectUserByUserIdOperationCompleted(object arg) {
            if ((this.SelectUserByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectUserByUserIdCompleted(this, new SelectUserByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateActiveUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateActiveUser(int Id, bool Active_Deactive, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateActiveUser", new object[] {
                        Id,
                        Active_Deactive,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateActiveUserAsync(int Id, bool Active_Deactive, string IP) {
            this.UpdateActiveUserAsync(Id, Active_Deactive, IP, null);
        }
        
        /// <remarks/>
        public void UpdateActiveUserAsync(int Id, bool Active_Deactive, string IP, object userState) {
            if ((this.UpdateActiveUserOperationCompleted == null)) {
                this.UpdateActiveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateActiveUserOperationCompleted);
            }
            this.InvokeAsync("UpdateActiveUser", new object[] {
                        Id,
                        Active_Deactive,
                        IP}, this.UpdateActiveUserOperationCompleted, userState);
        }
        
        private void OnUpdateActiveUserOperationCompleted(object arg) {
            if ((this.UpdateActiveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateActiveUserCompleted(this, new UpdateActiveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetPermissionWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_Permission[] GetPermissionWithFilter(string FieldName, string FilterValue, int Top, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetPermissionWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_Permission[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPermissionWithFilterAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, int OrganId, string IP) {
            this.GetPermissionWithFilterAsync(FieldName, FilterValue, Top, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void GetPermissionWithFilterAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.GetPermissionWithFilterOperationCompleted == null)) {
                this.GetPermissionWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermissionWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetPermissionWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.GetPermissionWithFilterOperationCompleted, userState);
        }
        
        private void OnGetPermissionWithFilterOperationCompleted(object arg) {
            if ((this.GetPermissionWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermissionWithFilterCompleted(this, new GetPermissionWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertPermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertPermission(int UserGroup_ModuleOrganID, int ApplicationPartId, string Desc, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertPermission", new object[] {
                        UserGroup_ModuleOrganID,
                        ApplicationPartId,
                        Desc,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPermissionAsync(int UserGroup_ModuleOrganID, int ApplicationPartId, string Desc, string UserName, string Password, string IP) {
            this.InsertPermissionAsync(UserGroup_ModuleOrganID, ApplicationPartId, Desc, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void InsertPermissionAsync(int UserGroup_ModuleOrganID, int ApplicationPartId, string Desc, string UserName, string Password, string IP, object userState) {
            if ((this.InsertPermissionOperationCompleted == null)) {
                this.InsertPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPermissionOperationCompleted);
            }
            this.InvokeAsync("InsertPermission", new object[] {
                        UserGroup_ModuleOrganID,
                        ApplicationPartId,
                        Desc,
                        UserName,
                        Password,
                        IP}, this.InsertPermissionOperationCompleted, userState);
        }
        
        private void OnInsertPermissionOperationCompleted(object arg) {
            if ((this.InsertPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPermissionCompleted(this, new InsertPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeletePermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeletePermission(int UserGroupId, int ModuleId, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeletePermission", new object[] {
                        UserGroupId,
                        ModuleId,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePermissionAsync(int UserGroupId, int ModuleId, string UserName, string Password, string IP) {
            this.DeletePermissionAsync(UserGroupId, ModuleId, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeletePermissionAsync(int UserGroupId, int ModuleId, string UserName, string Password, string IP, object userState) {
            if ((this.DeletePermissionOperationCompleted == null)) {
                this.DeletePermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePermissionOperationCompleted);
            }
            this.InvokeAsync("DeletePermission", new object[] {
                        UserGroupId,
                        ModuleId,
                        UserName,
                        Password,
                        IP}, this.DeletePermissionOperationCompleted, userState);
        }
        
        private void OnDeletePermissionOperationCompleted(object arg) {
            if ((this.DeletePermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePermissionCompleted(this, new DeletePermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/CopyPermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CopyPermission(int por, int khali, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("CopyPermission", new object[] {
                        por,
                        khali,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CopyPermissionAsync(int por, int khali, string UserName, string Password, string IP) {
            this.CopyPermissionAsync(por, khali, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void CopyPermissionAsync(int por, int khali, string UserName, string Password, string IP, object userState) {
            if ((this.CopyPermissionOperationCompleted == null)) {
                this.CopyPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyPermissionOperationCompleted);
            }
            this.InvokeAsync("CopyPermission", new object[] {
                        por,
                        khali,
                        UserName,
                        Password,
                        IP}, this.CopyPermissionOperationCompleted, userState);
        }
        
        private void OnCopyPermissionOperationCompleted(object arg) {
            if ((this.CopyPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyPermissionCompleted(this, new CopyPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteChildUserGroupPermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteChildUserGroupPermission(int UserGroup_ModuleOrganId, string appId, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteChildUserGroupPermission", new object[] {
                        UserGroup_ModuleOrganId,
                        appId,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteChildUserGroupPermissionAsync(int UserGroup_ModuleOrganId, string appId, string UserName, string Password, string IP) {
            this.DeleteChildUserGroupPermissionAsync(UserGroup_ModuleOrganId, appId, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteChildUserGroupPermissionAsync(int UserGroup_ModuleOrganId, string appId, string UserName, string Password, string IP, object userState) {
            if ((this.DeleteChildUserGroupPermissionOperationCompleted == null)) {
                this.DeleteChildUserGroupPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChildUserGroupPermissionOperationCompleted);
            }
            this.InvokeAsync("DeleteChildUserGroupPermission", new object[] {
                        UserGroup_ModuleOrganId,
                        appId,
                        UserName,
                        Password,
                        IP}, this.DeleteChildUserGroupPermissionOperationCompleted, userState);
        }
        
        private void OnDeleteChildUserGroupPermissionOperationCompleted(object arg) {
            if ((this.DeleteChildUserGroupPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChildUserGroupPermissionCompleted(this, new DeleteChildUserGroupPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetUserGroupWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_UserGroup[] GetUserGroupWithFilter(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetUserGroupWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_UserGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroupWithFilterAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP) {
            this.GetUserGroupWithFilterAsync(FieldName, FilterValue, Top, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetUserGroupWithFilterAsync(string FieldName, string FilterValue, int Top, string UserName, string Password, string IP, object userState) {
            if ((this.GetUserGroupWithFilterOperationCompleted == null)) {
                this.GetUserGroupWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroupWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetUserGroupWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        UserName,
                        Password,
                        IP}, this.GetUserGroupWithFilterOperationCompleted, userState);
        }
        
        private void OnGetUserGroupWithFilterOperationCompleted(object arg) {
            if ((this.GetUserGroupWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroupWithFilterCompleted(this, new GetUserGroupWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetUserGroupDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_UserGroup GetUserGroupDetail(int UserGroupId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetUserGroupDetail", new object[] {
                        UserGroupId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_UserGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroupDetailAsync(int UserGroupId, string IP) {
            this.GetUserGroupDetailAsync(UserGroupId, IP, null);
        }
        
        /// <remarks/>
        public void GetUserGroupDetailAsync(int UserGroupId, string IP, object userState) {
            if ((this.GetUserGroupDetailOperationCompleted == null)) {
                this.GetUserGroupDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroupDetailOperationCompleted);
            }
            this.InvokeAsync("GetUserGroupDetail", new object[] {
                        UserGroupId,
                        IP}, this.GetUserGroupDetailOperationCompleted, userState);
        }
        
        private void OnGetUserGroupDetailOperationCompleted(object arg) {
            if ((this.GetUserGroupDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroupDetailCompleted(this, new GetUserGroupDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertUserGroup(string Title, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertUserGroup", new object[] {
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUserGroupAsync(string Title, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.InsertUserGroupAsync(Title, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertUserGroupAsync(string Title, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertUserGroupOperationCompleted == null)) {
                this.InsertUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserGroupOperationCompleted);
            }
            this.InvokeAsync("InsertUserGroup", new object[] {
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.InsertUserGroupOperationCompleted, userState);
        }
        
        private void OnInsertUserGroupOperationCompleted(object arg) {
            if ((this.InsertUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserGroupCompleted(this, new InsertUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUserGroup(int Id, string Title, string Desc, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateUserGroup", new object[] {
                        Id,
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserGroupAsync(int Id, string Title, string Desc, string UserName, string Password, int OrganId, string IP) {
            this.UpdateUserGroupAsync(Id, Title, Desc, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateUserGroupAsync(int Id, string Title, string Desc, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateUserGroupOperationCompleted == null)) {
                this.UpdateUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateUserGroup", new object[] {
                        Id,
                        Title,
                        Desc,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.UpdateUserGroupOperationCompleted, userState);
        }
        
        private void OnUpdateUserGroupOperationCompleted(object arg) {
            if ((this.UpdateUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserGroupCompleted(this, new UpdateUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteUserGroup(int Id, string UserName, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteUserGroup", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserGroupAsync(int Id, string UserName, string Password, int OrganId, string IP) {
            this.DeleteUserGroupAsync(Id, UserName, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteUserGroupAsync(int Id, string UserName, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteUserGroupOperationCompleted == null)) {
                this.DeleteUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteUserGroup", new object[] {
                        Id,
                        UserName,
                        Password,
                        OrganId,
                        IP}, this.DeleteUserGroupOperationCompleted, userState);
        }
        
        private void OnDeleteUserGroupOperationCompleted(object arg) {
            if ((this.DeleteUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserGroupCompleted(this, new DeleteUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetUser_GroupWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_User_Group[] GetUser_GroupWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetUser_GroupWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_User_Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUser_GroupWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetUser_GroupWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetUser_GroupWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetUser_GroupWithFilterOperationCompleted == null)) {
                this.GetUser_GroupWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUser_GroupWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetUser_GroupWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetUser_GroupWithFilterOperationCompleted, userState);
        }
        
        private void OnGetUser_GroupWithFilterOperationCompleted(object arg) {
            if ((this.GetUser_GroupWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUser_GroupWithFilterCompleted(this, new GetUser_GroupWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetUser_GroupDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_User_Group GetUser_GroupDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetUser_GroupDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_User_Group)(results[0]));
        }
        
        /// <remarks/>
        public void GetUser_GroupDetailAsync(int Id, string IP) {
            this.GetUser_GroupDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetUser_GroupDetailAsync(int Id, string IP, object userState) {
            if ((this.GetUser_GroupDetailOperationCompleted == null)) {
                this.GetUser_GroupDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUser_GroupDetailOperationCompleted);
            }
            this.InvokeAsync("GetUser_GroupDetail", new object[] {
                        Id,
                        IP}, this.GetUser_GroupDetailOperationCompleted, userState);
        }
        
        private void OnGetUser_GroupDetailOperationCompleted(object arg) {
            if ((this.GetUser_GroupDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUser_GroupDetailCompleted(this, new GetUser_GroupDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertUser_Group", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertUser_Group(int UserGroupId, int UserSelectId, bool fldGrant, bool fldWithGrant, string Desc, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertUser_Group", new object[] {
                        UserGroupId,
                        UserSelectId,
                        fldGrant,
                        fldWithGrant,
                        Desc,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUser_GroupAsync(int UserGroupId, int UserSelectId, bool fldGrant, bool fldWithGrant, string Desc, string UserName, string Password, string IP) {
            this.InsertUser_GroupAsync(UserGroupId, UserSelectId, fldGrant, fldWithGrant, Desc, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void InsertUser_GroupAsync(int UserGroupId, int UserSelectId, bool fldGrant, bool fldWithGrant, string Desc, string UserName, string Password, string IP, object userState) {
            if ((this.InsertUser_GroupOperationCompleted == null)) {
                this.InsertUser_GroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUser_GroupOperationCompleted);
            }
            this.InvokeAsync("InsertUser_Group", new object[] {
                        UserGroupId,
                        UserSelectId,
                        fldGrant,
                        fldWithGrant,
                        Desc,
                        UserName,
                        Password,
                        IP}, this.InsertUser_GroupOperationCompleted, userState);
        }
        
        private void OnInsertUser_GroupOperationCompleted(object arg) {
            if ((this.InsertUser_GroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUser_GroupCompleted(this, new InsertUser_GroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateUser_Group", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUser_Group(int Id, int UserGroupId, int UserSelectId, bool fldGrant, bool fldWithGrant, string Desc, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateUser_Group", new object[] {
                        Id,
                        UserGroupId,
                        UserSelectId,
                        fldGrant,
                        fldWithGrant,
                        Desc,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUser_GroupAsync(int Id, int UserGroupId, int UserSelectId, bool fldGrant, bool fldWithGrant, string Desc, string UserName, string Password, string IP) {
            this.UpdateUser_GroupAsync(Id, UserGroupId, UserSelectId, fldGrant, fldWithGrant, Desc, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void UpdateUser_GroupAsync(int Id, int UserGroupId, int UserSelectId, bool fldGrant, bool fldWithGrant, string Desc, string UserName, string Password, string IP, object userState) {
            if ((this.UpdateUser_GroupOperationCompleted == null)) {
                this.UpdateUser_GroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUser_GroupOperationCompleted);
            }
            this.InvokeAsync("UpdateUser_Group", new object[] {
                        Id,
                        UserGroupId,
                        UserSelectId,
                        fldGrant,
                        fldWithGrant,
                        Desc,
                        UserName,
                        Password,
                        IP}, this.UpdateUser_GroupOperationCompleted, userState);
        }
        
        private void OnUpdateUser_GroupOperationCompleted(object arg) {
            if ((this.UpdateUser_GroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUser_GroupCompleted(this, new UpdateUser_GroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteUser_Group", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteUser_Group(int Id, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteUser_Group", new object[] {
                        Id,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUser_GroupAsync(int Id, string UserName, string Password, string IP) {
            this.DeleteUser_GroupAsync(Id, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void DeleteUser_GroupAsync(int Id, string UserName, string Password, string IP, object userState) {
            if ((this.DeleteUser_GroupOperationCompleted == null)) {
                this.DeleteUser_GroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUser_GroupOperationCompleted);
            }
            this.InvokeAsync("DeleteUser_Group", new object[] {
                        Id,
                        UserName,
                        Password,
                        IP}, this.DeleteUser_GroupOperationCompleted, userState);
        }
        
        private void OnDeleteUser_GroupOperationCompleted(object arg) {
            if ((this.DeleteUser_GroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUser_GroupCompleted(this, new DeleteUser_GroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetApplictionPartWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ApplictionPart[] GetApplictionPartWithFilter(string FieldName, string FilterValue, string FilterValue1, int Top, string Username, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetApplictionPartWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue1,
                        Top,
                        Username,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ApplictionPart[])(results[0]));
        }
        
        /// <remarks/>
        public void GetApplictionPartWithFilterAsync(string FieldName, string FilterValue, string FilterValue1, int Top, string Username, string Password, string IP) {
            this.GetApplictionPartWithFilterAsync(FieldName, FilterValue, FilterValue1, Top, Username, Password, IP, null);
        }
        
        /// <remarks/>
        public void GetApplictionPartWithFilterAsync(string FieldName, string FilterValue, string FilterValue1, int Top, string Username, string Password, string IP, object userState) {
            if ((this.GetApplictionPartWithFilterOperationCompleted == null)) {
                this.GetApplictionPartWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplictionPartWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetApplictionPartWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        FilterValue1,
                        Top,
                        Username,
                        Password,
                        IP}, this.GetApplictionPartWithFilterOperationCompleted, userState);
        }
        
        private void OnGetApplictionPartWithFilterOperationCompleted(object arg) {
            if ((this.GetApplictionPartWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplictionPartWithFilterCompleted(this, new GetApplictionPartWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetZirListHaWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ZirListHa[] GetZirListHaWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetZirListHaWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ZirListHa[])(results[0]));
        }
        
        /// <remarks/>
        public void GetZirListHaWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetZirListHaWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetZirListHaWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetZirListHaWithFilterOperationCompleted == null)) {
                this.GetZirListHaWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZirListHaWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetZirListHaWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetZirListHaWithFilterOperationCompleted, userState);
        }
        
        private void OnGetZirListHaWithFilterOperationCompleted(object arg) {
            if ((this.GetZirListHaWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZirListHaWithFilterCompleted(this, new GetZirListHaWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetZirListHaDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_ZirListHa GetZirListHaDetail(int ZirListHaId, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetZirListHaDetail", new object[] {
                        ZirListHaId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_ZirListHa)(results[0]));
        }
        
        /// <remarks/>
        public void GetZirListHaDetailAsync(int ZirListHaId, string IP) {
            this.GetZirListHaDetailAsync(ZirListHaId, IP, null);
        }
        
        /// <remarks/>
        public void GetZirListHaDetailAsync(int ZirListHaId, string IP, object userState) {
            if ((this.GetZirListHaDetailOperationCompleted == null)) {
                this.GetZirListHaDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZirListHaDetailOperationCompleted);
            }
            this.InvokeAsync("GetZirListHaDetail", new object[] {
                        ZirListHaId,
                        IP}, this.GetZirListHaDetailOperationCompleted, userState);
        }
        
        private void OnGetZirListHaDetailOperationCompleted(object arg) {
            if ((this.GetZirListHaDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZirListHaDetailCompleted(this, new GetZirListHaDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertZirListHa", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertZirListHa(int fldReportId, int fldMasuolin_DetailId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertZirListHa", new object[] {
                        fldReportId,
                        fldMasuolin_DetailId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertZirListHaAsync(int fldReportId, int fldMasuolin_DetailId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.InsertZirListHaAsync(fldReportId, fldMasuolin_DetailId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void InsertZirListHaAsync(int fldReportId, int fldMasuolin_DetailId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.InsertZirListHaOperationCompleted == null)) {
                this.InsertZirListHaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertZirListHaOperationCompleted);
            }
            this.InvokeAsync("InsertZirListHa", new object[] {
                        fldReportId,
                        fldMasuolin_DetailId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.InsertZirListHaOperationCompleted, userState);
        }
        
        private void OnInsertZirListHaOperationCompleted(object arg) {
            if ((this.InsertZirListHaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertZirListHaCompleted(this, new InsertZirListHaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/UpdateZirListHa", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateZirListHa(int fldId, int fldReportId, int fldMasuolin_DetailId, string Desc, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("UpdateZirListHa", new object[] {
                        fldId,
                        fldReportId,
                        fldMasuolin_DetailId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateZirListHaAsync(int fldId, int fldReportId, int fldMasuolin_DetailId, string Desc, string Username, string Password, int OrganId, string IP) {
            this.UpdateZirListHaAsync(fldId, fldReportId, fldMasuolin_DetailId, Desc, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void UpdateZirListHaAsync(int fldId, int fldReportId, int fldMasuolin_DetailId, string Desc, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.UpdateZirListHaOperationCompleted == null)) {
                this.UpdateZirListHaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateZirListHaOperationCompleted);
            }
            this.InvokeAsync("UpdateZirListHa", new object[] {
                        fldId,
                        fldReportId,
                        fldMasuolin_DetailId,
                        Desc,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.UpdateZirListHaOperationCompleted, userState);
        }
        
        private void OnUpdateZirListHaOperationCompleted(object arg) {
            if ((this.UpdateZirListHaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateZirListHaCompleted(this, new UpdateZirListHaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/DeleteZirListHa", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteZirListHa(string FieldName, int id, string Username, string Password, int OrganId, string IP, out ClsError Error) {
            object[] results = this.Invoke("DeleteZirListHa", new object[] {
                        FieldName,
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteZirListHaAsync(string FieldName, int id, string Username, string Password, int OrganId, string IP) {
            this.DeleteZirListHaAsync(FieldName, id, Username, Password, OrganId, IP, null);
        }
        
        /// <remarks/>
        public void DeleteZirListHaAsync(string FieldName, int id, string Username, string Password, int OrganId, string IP, object userState) {
            if ((this.DeleteZirListHaOperationCompleted == null)) {
                this.DeleteZirListHaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteZirListHaOperationCompleted);
            }
            this.InvokeAsync("DeleteZirListHa", new object[] {
                        FieldName,
                        id,
                        Username,
                        Password,
                        OrganId,
                        IP}, this.DeleteZirListHaOperationCompleted, userState);
        }
        
        private void OnDeleteZirListHaOperationCompleted(object arg) {
            if ((this.DeleteZirListHaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteZirListHaCompleted(this, new DeleteZirListHaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetFileWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_File[] GetFileWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetFileWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_File[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetFileWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetFileWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetFileWithFilterOperationCompleted == null)) {
                this.GetFileWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetFileWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetFileWithFilterOperationCompleted, userState);
        }
        
        private void OnGetFileWithFilterOperationCompleted(object arg) {
            if ((this.GetFileWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileWithFilterCompleted(this, new GetFileWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_GetDate GetDate(string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDate", new object[] {
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_GetDate)(results[0]));
        }
        
        /// <remarks/>
        public void GetDateAsync(string IP) {
            this.GetDateAsync(IP, null);
        }
        
        /// <remarks/>
        public void GetDateAsync(string IP, object userState) {
            if ((this.GetDateOperationCompleted == null)) {
                this.GetDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateOperationCompleted);
            }
            this.InvokeAsync("GetDate", new object[] {
                        IP}, this.GetDateOperationCompleted, userState);
        }
        
        private void OnGetDateOperationCompleted(object arg) {
            if ((this.GetDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateCompleted(this, new GetDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetDigitalArchiveTreeStructureDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DigitalArchiveTreeStructure GetDigitalArchiveTreeStructureDetail(int Id, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDigitalArchiveTreeStructureDetail", new object[] {
                        Id,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DigitalArchiveTreeStructure)(results[0]));
        }
        
        /// <remarks/>
        public void GetDigitalArchiveTreeStructureDetailAsync(int Id, string IP) {
            this.GetDigitalArchiveTreeStructureDetailAsync(Id, IP, null);
        }
        
        /// <remarks/>
        public void GetDigitalArchiveTreeStructureDetailAsync(int Id, string IP, object userState) {
            if ((this.GetDigitalArchiveTreeStructureDetailOperationCompleted == null)) {
                this.GetDigitalArchiveTreeStructureDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigitalArchiveTreeStructureDetailOperationCompleted);
            }
            this.InvokeAsync("GetDigitalArchiveTreeStructureDetail", new object[] {
                        Id,
                        IP}, this.GetDigitalArchiveTreeStructureDetailOperationCompleted, userState);
        }
        
        private void OnGetDigitalArchiveTreeStructureDetailOperationCompleted(object arg) {
            if ((this.GetDigitalArchiveTreeStructureDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigitalArchiveTreeStructureDetailCompleted(this, new GetDigitalArchiveTreeStructureDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/GetDigitalArchiveTreeStructureWithFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OBJ_DigitalArchiveTreeStructure[] GetDigitalArchiveTreeStructureWithFilter(string FieldName, string FilterValue, int Top, string IP, out ClsError Error) {
            object[] results = this.Invoke("GetDigitalArchiveTreeStructureWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((OBJ_DigitalArchiveTreeStructure[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDigitalArchiveTreeStructureWithFilterAsync(string FieldName, string FilterValue, int Top, string IP) {
            this.GetDigitalArchiveTreeStructureWithFilterAsync(FieldName, FilterValue, Top, IP, null);
        }
        
        /// <remarks/>
        public void GetDigitalArchiveTreeStructureWithFilterAsync(string FieldName, string FilterValue, int Top, string IP, object userState) {
            if ((this.GetDigitalArchiveTreeStructureWithFilterOperationCompleted == null)) {
                this.GetDigitalArchiveTreeStructureWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigitalArchiveTreeStructureWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetDigitalArchiveTreeStructureWithFilter", new object[] {
                        FieldName,
                        FilterValue,
                        Top,
                        IP}, this.GetDigitalArchiveTreeStructureWithFilterOperationCompleted, userState);
        }
        
        private void OnGetDigitalArchiveTreeStructureWithFilterOperationCompleted(object arg) {
            if ((this.GetDigitalArchiveTreeStructureWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigitalArchiveTreeStructureWithFilterCompleted(this, new GetDigitalArchiveTreeStructureWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICommonService/InsertDigitalArchiveTreeStructure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDigitalArchiveTreeStructure([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> PID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ModuleId, string Title, bool AttachFile, string Desc, string UserName, string Password, string IP, out ClsError Error) {
            object[] results = this.Invoke("InsertDigitalArchiveTreeStructure", new object[] {
                        PID,
                        ModuleId,
                        Title,
                        AttachFile,
                        Desc,
                        UserName,
                        Password,
                        IP});
            Error = ((ClsError)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDigitalArchiveTreeStructureAsync(System.Nullable<int> PID, System.Nullable<int> ModuleId, string Title, bool AttachFile, string Desc, string UserName, string Password, string IP) {
            this.InsertDigitalArchiveTreeStructureAsync(PID, ModuleId, Title, AttachFile, Desc, UserName, Password, IP, null);
        }
        
        /// <remarks/>
        public void InsertDigitalArchiveTreeStructureAsync(System.Nullable<int> PID, System.Nullable<int> ModuleId, string Title, bool AttachFile, string Desc, string UserName, string Password, string IP, object userState) {
            if ((this.InsertDigitalArchiveTreeStructureOperationCompleted == null)) {
                this.InsertDigitalArchiveTreeStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDigitalArchiveTreeStructureOperationCompleted);
            }
            this.InvokeAsync("InsertDigitalArchiveTreeStructure", new object[] {
                        PID,
                        ModuleId,
                        Title,
                        AttachFile,
                        Desc,
                        UserName,
                        Password,
                        IP}, this.InsertDigitalArchiveTreeStructureOperationCompleted, userState);
        }
        
        private void OnInsertDigitalArchiveTreeStructureOperationCompleted(object arg) {
            if ((this.InsertDigitalArchiveTreeStructureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDigitalArchiveTreeStructureCompleted(this, new InsertDigitalArchiveTreeStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_HistoryTahsilat {
        
        private int fldIdField;
        
        private int fldEmployeeIdField;
        
        private int fldMadrakIdField;
        
        private int fldReshteIdField;
        
        private string fldTarikhField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldTitleMadrakField;
        
        private string fldTitleReshteField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldEmployeeId {
            get {
                return this.fldEmployeeIdField;
            }
            set {
                this.fldEmployeeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldMadrakId {
            get {
                return this.fldMadrakIdField;
            }
            set {
                this.fldMadrakIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldReshteId {
            get {
                return this.fldReshteIdField;
            }
            set {
                this.fldReshteIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikh {
            get {
                return this.fldTarikhField;
            }
            set {
                this.fldTarikhField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleMadrak {
            get {
                return this.fldTitleMadrakField;
            }
            set {
                this.fldTitleMadrakField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleReshte {
            get {
                return this.fldTitleReshteField;
            }
            set {
                this.fldTitleReshteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_DigitalArchiveTreeStructure {
        
        private int fldIdField;
        
        private System.Nullable<int> fldPIDField;
        
        private System.Nullable<int> fldModuleIdField;
        
        private string fldTitleField;
        
        private string fldModuleNameField;
        
        private bool fldAttachFileField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldModuleId {
            get {
                return this.fldModuleIdField;
            }
            set {
                this.fldModuleIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldModuleName {
            get {
                return this.fldModuleNameField;
            }
            set {
                this.fldModuleNameField = value;
            }
        }
        
        /// <remarks/>
        public bool fldAttachFile {
            get {
                return this.fldAttachFileField;
            }
            set {
                this.fldAttachFileField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TimeSpan {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_GetDate {
        
        private System.DateTime fldDateTimeField;
        
        private string fldTarikhField;
        
        private TimeSpan fldTimeField;
        
        /// <remarks/>
        public System.DateTime fldDateTime {
            get {
                return this.fldDateTimeField;
            }
            set {
                this.fldDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikh {
            get {
                return this.fldTarikhField;
            }
            set {
                this.fldTarikhField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public TimeSpan fldTime {
            get {
                return this.fldTimeField;
            }
            set {
                this.fldTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_File {
        
        private int fldIdField;
        
        private byte[] fldImageField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldPasvandField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fldImage {
            get {
                return this.fldImageField;
            }
            set {
                this.fldImageField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldPasvand {
            get {
                return this.fldPasvandField;
            }
            set {
                this.fldPasvandField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ZirListHa {
        
        private int fldIdField;
        
        private int fldReportIdField;
        
        private int fldMasuolin_DetailIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldReportId {
            get {
                return this.fldReportIdField;
            }
            set {
                this.fldReportIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldMasuolin_DetailId {
            get {
                return this.fldMasuolin_DetailIdField;
            }
            set {
                this.fldMasuolin_DetailIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ApplictionPart {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private System.Nullable<int> fldPIDField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private System.Nullable<int> fldModuleIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldModuleId {
            get {
                return this.fldModuleIdField;
            }
            set {
                this.fldModuleIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_User_Group {
        
        private int fldIdField;
        
        private int fldUserGroupIdField;
        
        private int fldUserSelectIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private bool fldGrantField;
        
        private bool fldWithGrantField;
        
        private string fldNameField;
        
        private string fldCodemeliField;
        
        private string fldFatherNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserGroupId {
            get {
                return this.fldUserGroupIdField;
            }
            set {
                this.fldUserGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserSelectId {
            get {
                return this.fldUserSelectIdField;
            }
            set {
                this.fldUserSelectIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public bool fldGrant {
            get {
                return this.fldGrantField;
            }
            set {
                this.fldGrantField = value;
            }
        }
        
        /// <remarks/>
        public bool fldWithGrant {
            get {
                return this.fldWithGrantField;
            }
            set {
                this.fldWithGrantField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodemeli {
            get {
                return this.fldCodemeliField;
            }
            set {
                this.fldCodemeliField = value;
            }
        }
        
        /// <remarks/>
        public string fldFatherName {
            get {
                return this.fldFatherNameField;
            }
            set {
                this.fldFatherNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_UserGroup {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Permission {
        
        private int fldIdField;
        
        private int fldUserGroup_ModuleOrganIDField;
        
        private int fldApplicationPartIdField;
        
        private int userIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserGroup_ModuleOrganID {
            get {
                return this.fldUserGroup_ModuleOrganIDField;
            }
            set {
                this.fldUserGroup_ModuleOrganIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldApplicationPartId {
            get {
                return this.fldApplicationPartIdField;
            }
            set {
                this.fldApplicationPartIdField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_User {
        
        private int fldIdField;
        
        private int fldEmployeeIdField;
        
        private string fldUserNameField;
        
        private string fldPasswordField;
        
        private bool fldActive_DeactiveField;
        
        private string fldActive_DeactiveNameField;
        
        private string fldNameEmployeeField;
        
        private int fldUserIdField;
        
        private System.DateTime fldDateField;
        
        private string fldDescField;
        
        private string fldCodemeliField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldEmployeeId {
            get {
                return this.fldEmployeeIdField;
            }
            set {
                this.fldEmployeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldUserName {
            get {
                return this.fldUserNameField;
            }
            set {
                this.fldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldPassword {
            get {
                return this.fldPasswordField;
            }
            set {
                this.fldPasswordField = value;
            }
        }
        
        /// <remarks/>
        public bool fldActive_Deactive {
            get {
                return this.fldActive_DeactiveField;
            }
            set {
                this.fldActive_DeactiveField = value;
            }
        }
        
        /// <remarks/>
        public string fldActive_DeactiveName {
            get {
                return this.fldActive_DeactiveNameField;
            }
            set {
                this.fldActive_DeactiveNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameEmployee {
            get {
                return this.fldNameEmployeeField;
            }
            set {
                this.fldNameEmployeeField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodemeli {
            get {
                return this.fldCodemeliField;
            }
            set {
                this.fldCodemeliField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Masoulin_DetailList {
        
        private System.Nullable<int> fldIdField;
        
        private System.Nullable<int> fldEmployeeIdField;
        
        private string fldNameEmployeeField;
        
        private System.Nullable<int> fldOrganIdField;
        
        private string fldNameOrganField;
        
        private System.Nullable<int> fldOrderIdField;
        
        private System.Nullable<int> fldMasuolinIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldEmployeeId {
            get {
                return this.fldEmployeeIdField;
            }
            set {
                this.fldEmployeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameEmployee {
            get {
                return this.fldNameEmployeeField;
            }
            set {
                this.fldNameEmployeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameOrgan {
            get {
                return this.fldNameOrganField;
            }
            set {
                this.fldNameOrganField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrderId {
            get {
                return this.fldOrderIdField;
            }
            set {
                this.fldOrderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMasuolinId {
            get {
                return this.fldMasuolinIdField;
            }
            set {
                this.fldMasuolinIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Masoulin_Detail {
        
        private int fldIdField;
        
        private System.Nullable<int> fldEmployIdField;
        
        private int fldMasuolinIdField;
        
        private int fldOrderIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldTarikhEjraField;
        
        private string fldNameEmployeeField;
        
        private string fldNameOrganField;
        
        private int fldModule_OrganIdField;
        
        private string namePostOrganField;
        
        private System.Nullable<int> fldOrganPostIdField;
        
        private string titlePostField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldEmployId {
            get {
                return this.fldEmployIdField;
            }
            set {
                this.fldEmployIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldMasuolinId {
            get {
                return this.fldMasuolinIdField;
            }
            set {
                this.fldMasuolinIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrderId {
            get {
                return this.fldOrderIdField;
            }
            set {
                this.fldOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhEjra {
            get {
                return this.fldTarikhEjraField;
            }
            set {
                this.fldTarikhEjraField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameEmployee {
            get {
                return this.fldNameEmployeeField;
            }
            set {
                this.fldNameEmployeeField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameOrgan {
            get {
                return this.fldNameOrganField;
            }
            set {
                this.fldNameOrganField = value;
            }
        }
        
        /// <remarks/>
        public int fldModule_OrganId {
            get {
                return this.fldModule_OrganIdField;
            }
            set {
                this.fldModule_OrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string NamePostOrgan {
            get {
                return this.namePostOrganField;
            }
            set {
                this.namePostOrganField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganPostId {
            get {
                return this.fldOrganPostIdField;
            }
            set {
                this.fldOrganPostIdField = value;
            }
        }
        
        /// <remarks/>
        public string TitlePost {
            get {
                return this.titlePostField;
            }
            set {
                this.titlePostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Masuolin_ZirList {
        
        private int fldidField;
        
        private string fldTitleField;
        
        private string fldMasirReportField;
        
        private System.Nullable<bool> c1Field;
        
        private System.Nullable<bool> c2Field;
        
        private System.Nullable<bool> c3Field;
        
        private System.Nullable<bool> c4Field;
        
        private System.Nullable<bool> c5Field;
        
        /// <remarks/>
        public int fldid {
            get {
                return this.fldidField;
            }
            set {
                this.fldidField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldMasirReport {
            get {
                return this.fldMasirReportField;
            }
            set {
                this.fldMasirReportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> C1 {
            get {
                return this.c1Field;
            }
            set {
                this.c1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> C2 {
            get {
                return this.c2Field;
            }
            set {
                this.c2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> C3 {
            get {
                return this.c3Field;
            }
            set {
                this.c3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> C4 {
            get {
                return this.c4Field;
            }
            set {
                this.c4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> C5 {
            get {
                return this.c5Field;
            }
            set {
                this.c5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Masoulin {
        
        private int fldIdField;
        
        private string fldTarikhEjraField;
        
        private string fldTitleModuleField;
        
        private int fldUserIdField;
        
        private System.DateTime fldDateField;
        
        private string fldDescField;
        
        private int fldModule_OrganIdField;
        
        private string fldModule_OrganNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhEjra {
            get {
                return this.fldTarikhEjraField;
            }
            set {
                this.fldTarikhEjraField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleModule {
            get {
                return this.fldTitleModuleField;
            }
            set {
                this.fldTitleModuleField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public int fldModule_OrganId {
            get {
                return this.fldModule_OrganIdField;
            }
            set {
                this.fldModule_OrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldModule_OrganName {
            get {
                return this.fldModule_OrganNameField;
            }
            set {
                this.fldModule_OrganNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Module_Organ {
        
        private int fldIdField;
        
        private int fldModuleIdField;
        
        private int fldOrganIdField;
        
        private string fldNameOrganField;
        
        private string fldNameModuleField;
        
        private string fldNameModule_OrganField;
        
        private int fldUserIdField;
        
        private System.DateTime fldDateField;
        
        private string fldDescField;
        
        private int fldPermissionIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldModuleId {
            get {
                return this.fldModuleIdField;
            }
            set {
                this.fldModuleIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameOrgan {
            get {
                return this.fldNameOrganField;
            }
            set {
                this.fldNameOrganField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameModule {
            get {
                return this.fldNameModuleField;
            }
            set {
                this.fldNameModuleField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameModule_Organ {
            get {
                return this.fldNameModule_OrganField;
            }
            set {
                this.fldNameModule_OrganField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public int fldPermissionId {
            get {
                return this.fldPermissionIdField;
            }
            set {
                this.fldPermissionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Module {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private int fldUserIdField;
        
        private System.DateTime fldDateField;
        
        private string fldDescField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ChartOrgan {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private System.Nullable<int> fldPIdField;
        
        private System.Nullable<int> fldOrganIdField;
        
        private byte fldNoeVahedField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldNoeVahedNameField;
        
        private string fldOrganizationNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPId {
            get {
                return this.fldPIdField;
            }
            set {
                this.fldPIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public byte fldNoeVahed {
            get {
                return this.fldNoeVahedField;
            }
            set {
                this.fldNoeVahedField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldNoeVahedName {
            get {
                return this.fldNoeVahedNameField;
            }
            set {
                this.fldNoeVahedNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldOrganizationName {
            get {
                return this.fldOrganizationNameField;
            }
            set {
                this.fldOrganizationNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Organization {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private System.Nullable<int> fldPIdField;
        
        private int fldFileIdField;
        
        private int fldCityIdField;
        
        private string fldCityNameField;
        
        private string fldCodePostiField;
        
        private string fldTelphonField;
        
        private string fldAddressField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldCodAnformaticField;
        
        private byte fldCodKhedmatField;
        
        private string fldShenaseMelliField;
        
        private string fldCodEghtesadiField;
        
        private string fldShomareSabtField;
        
        private int fldAshkhaseHoghoghiIdField;
        
        private string fldNameAshkhaseHoghoghiField;
        
        private int fldStateIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPId {
            get {
                return this.fldPIdField;
            }
            set {
                this.fldPIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldFileId {
            get {
                return this.fldFileIdField;
            }
            set {
                this.fldFileIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldCityId {
            get {
                return this.fldCityIdField;
            }
            set {
                this.fldCityIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldCityName {
            get {
                return this.fldCityNameField;
            }
            set {
                this.fldCityNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodePosti {
            get {
                return this.fldCodePostiField;
            }
            set {
                this.fldCodePostiField = value;
            }
        }
        
        /// <remarks/>
        public string fldTelphon {
            get {
                return this.fldTelphonField;
            }
            set {
                this.fldTelphonField = value;
            }
        }
        
        /// <remarks/>
        public string fldAddress {
            get {
                return this.fldAddressField;
            }
            set {
                this.fldAddressField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodAnformatic {
            get {
                return this.fldCodAnformaticField;
            }
            set {
                this.fldCodAnformaticField = value;
            }
        }
        
        /// <remarks/>
        public byte fldCodKhedmat {
            get {
                return this.fldCodKhedmatField;
            }
            set {
                this.fldCodKhedmatField = value;
            }
        }
        
        /// <remarks/>
        public string fldShenaseMelli {
            get {
                return this.fldShenaseMelliField;
            }
            set {
                this.fldShenaseMelliField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodEghtesadi {
            get {
                return this.fldCodEghtesadiField;
            }
            set {
                this.fldCodEghtesadiField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareSabt {
            get {
                return this.fldShomareSabtField;
            }
            set {
                this.fldShomareSabtField = value;
            }
        }
        
        /// <remarks/>
        public int fldAshkhaseHoghoghiId {
            get {
                return this.fldAshkhaseHoghoghiIdField;
            }
            set {
                this.fldAshkhaseHoghoghiIdField = value;
            }
        }
        
        /// <remarks/>
        public string FldNameAshkhaseHoghoghi {
            get {
                return this.fldNameAshkhaseHoghoghiField;
            }
            set {
                this.fldNameAshkhaseHoghoghiField = value;
            }
        }
        
        /// <remarks/>
        public int fldStateId {
            get {
                return this.fldStateIdField;
            }
            set {
                this.fldStateIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_City {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private int fldStateIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldStateNameField;
        
        private string fldLatitudeField;
        
        private string fldLongitudeField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldStateId {
            get {
                return this.fldStateIdField;
            }
            set {
                this.fldStateIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldStateName {
            get {
                return this.fldStateNameField;
            }
            set {
                this.fldStateNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldLatitude {
            get {
                return this.fldLatitudeField;
            }
            set {
                this.fldLatitudeField = value;
            }
        }
        
        /// <remarks/>
        public string fldLongitude {
            get {
                return this.fldLongitudeField;
            }
            set {
                this.fldLongitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_State {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private long fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public long fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Raste {
        
        private int fldIdField;
        
        private double fldCodeField;
        
        private string fldTextField;
        
        private string fldIndexField;
        
        private System.Nullable<int> fldMaliyatField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public double fldCode {
            get {
                return this.fldCodeField;
            }
            set {
                this.fldCodeField = value;
            }
        }
        
        /// <remarks/>
        public string fldText {
            get {
                return this.fldTextField;
            }
            set {
                this.fldTextField = value;
            }
        }
        
        /// <remarks/>
        public string fldIndex {
            get {
                return this.fldIndexField;
            }
            set {
                this.fldIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMaliyat {
            get {
                return this.fldMaliyatField;
            }
            set {
                this.fldMaliyatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Employee {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private string fldFamilyField;
        
        private string fldCodemeliField;
        
        private long fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private bool fldStatusField;
        
        private string fldStatusNameField;
        
        private string fldFatherNameField;
        
        private byte fldTypeShakhsField;
        
        private string fldTypeShakhsNameField;
        
        private string fldSh_ShenasnameField;
        
        private string fldCodeMoshakhaseField;
        
        private string fldMeli_MoshakhaseField;
        
        private string fldPostEjraeeField;
        
        private System.Nullable<int> fldOrganPostEjraeeIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldFamily {
            get {
                return this.fldFamilyField;
            }
            set {
                this.fldFamilyField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodemeli {
            get {
                return this.fldCodemeliField;
            }
            set {
                this.fldCodemeliField = value;
            }
        }
        
        /// <remarks/>
        public long fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public bool fldStatus {
            get {
                return this.fldStatusField;
            }
            set {
                this.fldStatusField = value;
            }
        }
        
        /// <remarks/>
        public string fldStatusName {
            get {
                return this.fldStatusNameField;
            }
            set {
                this.fldStatusNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldFatherName {
            get {
                return this.fldFatherNameField;
            }
            set {
                this.fldFatherNameField = value;
            }
        }
        
        /// <remarks/>
        public byte fldTypeShakhs {
            get {
                return this.fldTypeShakhsField;
            }
            set {
                this.fldTypeShakhsField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeShakhsName {
            get {
                return this.fldTypeShakhsNameField;
            }
            set {
                this.fldTypeShakhsNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldSh_Shenasname {
            get {
                return this.fldSh_ShenasnameField;
            }
            set {
                this.fldSh_ShenasnameField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodeMoshakhase {
            get {
                return this.fldCodeMoshakhaseField;
            }
            set {
                this.fldCodeMoshakhaseField = value;
            }
        }
        
        /// <remarks/>
        public string fldMeli_Moshakhase {
            get {
                return this.fldMeli_MoshakhaseField;
            }
            set {
                this.fldMeli_MoshakhaseField = value;
            }
        }
        
        /// <remarks/>
        public string fldPostEjraee {
            get {
                return this.fldPostEjraeeField;
            }
            set {
                this.fldPostEjraeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganPostEjraeeId {
            get {
                return this.fldOrganPostEjraeeIdField;
            }
            set {
                this.fldOrganPostEjraeeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_InputInfo {
        
        private int fldIdField;
        
        private string fldDateTimeField;
        
        private string fldTimeField;
        
        private string fldIPField;
        
        private string fldMACAddressField;
        
        private bool fldLoginTypeField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string name_FamilyField;
        
        private string fldLoginTypeNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDateTime {
            get {
                return this.fldDateTimeField;
            }
            set {
                this.fldDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string fldTime {
            get {
                return this.fldTimeField;
            }
            set {
                this.fldTimeField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldMACAddress {
            get {
                return this.fldMACAddressField;
            }
            set {
                this.fldMACAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool fldLoginType {
            get {
                return this.fldLoginTypeField;
            }
            set {
                this.fldLoginTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string Name_Family {
            get {
                return this.name_FamilyField;
            }
            set {
                this.name_FamilyField = value;
            }
        }
        
        /// <remarks/>
        public string fldLoginTypeName {
            get {
                return this.fldLoginTypeNameField;
            }
            set {
                this.fldLoginTypeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_UserGroup_ModuleOrgan {
        
        private int fldIdField;
        
        private int fldUserGroupIdField;
        
        private int fldModuleOrganIdField;
        
        private int fldUserIDField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldModuleOrganNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserGroupId {
            get {
                return this.fldUserGroupIdField;
            }
            set {
                this.fldUserGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldModuleOrganId {
            get {
                return this.fldModuleOrganIdField;
            }
            set {
                this.fldModuleOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldModuleOrganName {
            get {
                return this.fldModuleOrganNameField;
            }
            set {
                this.fldModuleOrganNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_AshkhaseHoghoghi_Detail {
        
        private int fldIdField;
        
        private int fldAshkhaseHoghoghiIdField;
        
        private string fldCodEghtesadiField;
        
        private string fldAddressField;
        
        private string fldCodePostiField;
        
        private string fldShomareTelephoneField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldNameField;
        
        private string fldShenaseMelliField;
        
        private string fldShomareSabtField;
        
        private byte fldTypeShakhsField;
        
        private string fldTypeShakhsNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldAshkhaseHoghoghiId {
            get {
                return this.fldAshkhaseHoghoghiIdField;
            }
            set {
                this.fldAshkhaseHoghoghiIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodEghtesadi {
            get {
                return this.fldCodEghtesadiField;
            }
            set {
                this.fldCodEghtesadiField = value;
            }
        }
        
        /// <remarks/>
        public string fldAddress {
            get {
                return this.fldAddressField;
            }
            set {
                this.fldAddressField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodePosti {
            get {
                return this.fldCodePostiField;
            }
            set {
                this.fldCodePostiField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareTelephone {
            get {
                return this.fldShomareTelephoneField;
            }
            set {
                this.fldShomareTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldShenaseMelli {
            get {
                return this.fldShenaseMelliField;
            }
            set {
                this.fldShenaseMelliField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareSabt {
            get {
                return this.fldShomareSabtField;
            }
            set {
                this.fldShomareSabtField = value;
            }
        }
        
        /// <remarks/>
        public byte fldTypeShakhs {
            get {
                return this.fldTypeShakhsField;
            }
            set {
                this.fldTypeShakhsField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeShakhsName {
            get {
                return this.fldTypeShakhsNameField;
            }
            set {
                this.fldTypeShakhsNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_MeasureUnit {
        
        private int fldIdField;
        
        private string fldNameVahedField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameVahed {
            get {
                return this.fldNameVahedField;
            }
            set {
                this.fldNameVahedField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_CheckEmail {
        
        private bool fldTypeField;
        
        /// <remarks/>
        public bool fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_GetUserGroupTree {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private System.Nullable<bool> fldGrantField;
        
        private System.Nullable<bool> fldWithGrantField;
        
        private int fldUserIDField;
        
        private System.Nullable<bool> fldWithGrantLoginField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fldGrant {
            get {
                return this.fldGrantField;
            }
            set {
                this.fldGrantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fldWithGrant {
            get {
                return this.fldWithGrantField;
            }
            set {
                this.fldWithGrantField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserID {
            get {
                return this.fldUserIDField;
            }
            set {
                this.fldUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fldWithGrantLogin {
            get {
                return this.fldWithGrantLoginField;
            }
            set {
                this.fldWithGrantLoginField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ShomareHesabeOmoomi {
        
        private int fldIdField;
        
        private int fldShobeIdField;
        
        private int fldAshkhasIdField;
        
        private string fldShomareHesabField;
        
        private string fldShomareShebaField;
        
        private System.Nullable<int> fldBankIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldBankNameField;
        
        private string nameShobeField;
        
        private string nameAshkhasField;
        
        private int fldCodeSHobeField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldShobeId {
            get {
                return this.fldShobeIdField;
            }
            set {
                this.fldShobeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldAshkhasId {
            get {
                return this.fldAshkhasIdField;
            }
            set {
                this.fldAshkhasIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareHesab {
            get {
                return this.fldShomareHesabField;
            }
            set {
                this.fldShomareHesabField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareSheba {
            get {
                return this.fldShomareShebaField;
            }
            set {
                this.fldShomareShebaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldBankId {
            get {
                return this.fldBankIdField;
            }
            set {
                this.fldBankIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankName {
            get {
                return this.fldBankNameField;
            }
            set {
                this.fldBankNameField = value;
            }
        }
        
        /// <remarks/>
        public string nameShobe {
            get {
                return this.nameShobeField;
            }
            set {
                this.nameShobeField = value;
            }
        }
        
        /// <remarks/>
        public string NameAshkhas {
            get {
                return this.nameAshkhasField;
            }
            set {
                this.nameAshkhasField = value;
            }
        }
        
        /// <remarks/>
        public int fldCodeSHobe {
            get {
                return this.fldCodeSHobeField;
            }
            set {
                this.fldCodeSHobeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_AshkhaseHoghoghi {
        
        private int fldIdField;
        
        private string fldShenaseMelliField;
        
        private string fldNameField;
        
        private string fldShomareSabtField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private byte fldTypeShakhsField;
        
        private string fldTypeShakhsNameField;
        
        private byte fldSayerField;
        
        private string fldSayerNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldShenaseMelli {
            get {
                return this.fldShenaseMelliField;
            }
            set {
                this.fldShenaseMelliField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareSabt {
            get {
                return this.fldShomareSabtField;
            }
            set {
                this.fldShomareSabtField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public byte fldTypeShakhs {
            get {
                return this.fldTypeShakhsField;
            }
            set {
                this.fldTypeShakhsField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeShakhsName {
            get {
                return this.fldTypeShakhsNameField;
            }
            set {
                this.fldTypeShakhsNameField = value;
            }
        }
        
        /// <remarks/>
        public byte fldSayer {
            get {
                return this.fldSayerField;
            }
            set {
                this.fldSayerField = value;
            }
        }
        
        /// <remarks/>
        public string fldSayerName {
            get {
                return this.fldSayerNameField;
            }
            set {
                this.fldSayerNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_MaliyatArzesheAfzoode {
        
        private int fldIdField;
        
        private string fldFromDateField;
        
        private string fldEndDateField;
        
        private decimal fldDarsadeAvarezField;
        
        private decimal fldDarsadeMaliyatField;
        
        private decimal fldDarsadAmuzeshParvareshField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldFromDate {
            get {
                return this.fldFromDateField;
            }
            set {
                this.fldFromDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldEndDate {
            get {
                return this.fldEndDateField;
            }
            set {
                this.fldEndDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal fldDarsadeAvarez {
            get {
                return this.fldDarsadeAvarezField;
            }
            set {
                this.fldDarsadeAvarezField = value;
            }
        }
        
        /// <remarks/>
        public decimal fldDarsadeMaliyat {
            get {
                return this.fldDarsadeMaliyatField;
            }
            set {
                this.fldDarsadeMaliyatField = value;
            }
        }
        
        /// <remarks/>
        public decimal fldDarsadAmuzeshParvaresh {
            get {
                return this.fldDarsadAmuzeshParvareshField;
            }
            set {
                this.fldDarsadAmuzeshParvareshField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Ashkhas {
        
        private int fldIdField;
        
        private System.Nullable<int> fldHaghighiIdField;
        
        private System.Nullable<int> fldHoghoghiIdField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string nameField;
        
        private string noeShakhsField;
        
        private string fldShenase_CodeMeliField;
        
        private string shomareshabt_fatherField;
        
        private string fldNameField;
        
        private string fldSh_ShenasnameField;
        
        private string fldFamilyField;
        
        private string fldCodePostiField;
        
        private string fldShomareTelephoneField;
        
        private string fldAddressField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldHaghighiId {
            get {
                return this.fldHaghighiIdField;
            }
            set {
                this.fldHaghighiIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldHoghoghiId {
            get {
                return this.fldHoghoghiIdField;
            }
            set {
                this.fldHoghoghiIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string NoeShakhs {
            get {
                return this.noeShakhsField;
            }
            set {
                this.noeShakhsField = value;
            }
        }
        
        /// <remarks/>
        public string fldShenase_CodeMeli {
            get {
                return this.fldShenase_CodeMeliField;
            }
            set {
                this.fldShenase_CodeMeliField = value;
            }
        }
        
        /// <remarks/>
        public string shomareshabt_father {
            get {
                return this.shomareshabt_fatherField;
            }
            set {
                this.shomareshabt_fatherField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldSh_Shenasname {
            get {
                return this.fldSh_ShenasnameField;
            }
            set {
                this.fldSh_ShenasnameField = value;
            }
        }
        
        /// <remarks/>
        public string fldFamily {
            get {
                return this.fldFamilyField;
            }
            set {
                this.fldFamilyField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodePosti {
            get {
                return this.fldCodePostiField;
            }
            set {
                this.fldCodePostiField = value;
            }
        }
        
        /// <remarks/>
        public string fldShomareTelephone {
            get {
                return this.fldShomareTelephoneField;
            }
            set {
                this.fldShomareTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string fldAddress {
            get {
                return this.fldAddressField;
            }
            set {
                this.fldAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Employee_Detail {
        
        private int fldIdField;
        
        private int fldEmployeeIdField;
        
        private string fldFatherNameField;
        
        private System.Nullable<bool> fldJensiyatField;
        
        private System.Nullable<int> fldMadrakIdField;
        
        private System.Nullable<byte> fldNezamVazifeIdField;
        
        private System.Nullable<int> fldTaaholIdField;
        
        private System.Nullable<int> fldReshteIdField;
        
        private System.Nullable<int> fldFileIdField;
        
        private string fldSh_ShenasnameField;
        
        private System.Nullable<int> fldMahalTavalodIdField;
        
        private System.Nullable<int> fldMahalSodoorIdField;
        
        private string fldTarikhSodoorField;
        
        private string fldAddressField;
        
        private string fldCodePostiField;
        
        private System.Nullable<bool> fldMeliyatField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldNameField;
        
        private string fldFamilyField;
        
        private string fldCodemeliField;
        
        private string fldTarikhTavalodField;
        
        private byte fldTypeShakhsField;
        
        private string fldTypeShakhsNameField;
        
        private string fldTelField;
        
        private string fldMobileField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldEmployeeId {
            get {
                return this.fldEmployeeIdField;
            }
            set {
                this.fldEmployeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldFatherName {
            get {
                return this.fldFatherNameField;
            }
            set {
                this.fldFatherNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fldJensiyat {
            get {
                return this.fldJensiyatField;
            }
            set {
                this.fldJensiyatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMadrakId {
            get {
                return this.fldMadrakIdField;
            }
            set {
                this.fldMadrakIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<byte> fldNezamVazifeId {
            get {
                return this.fldNezamVazifeIdField;
            }
            set {
                this.fldNezamVazifeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldTaaholId {
            get {
                return this.fldTaaholIdField;
            }
            set {
                this.fldTaaholIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldReshteId {
            get {
                return this.fldReshteIdField;
            }
            set {
                this.fldReshteIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldFileId {
            get {
                return this.fldFileIdField;
            }
            set {
                this.fldFileIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldSh_Shenasname {
            get {
                return this.fldSh_ShenasnameField;
            }
            set {
                this.fldSh_ShenasnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMahalTavalodId {
            get {
                return this.fldMahalTavalodIdField;
            }
            set {
                this.fldMahalTavalodIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldMahalSodoorId {
            get {
                return this.fldMahalSodoorIdField;
            }
            set {
                this.fldMahalSodoorIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhSodoor {
            get {
                return this.fldTarikhSodoorField;
            }
            set {
                this.fldTarikhSodoorField = value;
            }
        }
        
        /// <remarks/>
        public string fldAddress {
            get {
                return this.fldAddressField;
            }
            set {
                this.fldAddressField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodePosti {
            get {
                return this.fldCodePostiField;
            }
            set {
                this.fldCodePostiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fldMeliyat {
            get {
                return this.fldMeliyatField;
            }
            set {
                this.fldMeliyatField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldFamily {
            get {
                return this.fldFamilyField;
            }
            set {
                this.fldFamilyField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodemeli {
            get {
                return this.fldCodemeliField;
            }
            set {
                this.fldCodemeliField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikhTavalod {
            get {
                return this.fldTarikhTavalodField;
            }
            set {
                this.fldTarikhTavalodField = value;
            }
        }
        
        /// <remarks/>
        public byte fldTypeShakhs {
            get {
                return this.fldTypeShakhsField;
            }
            set {
                this.fldTypeShakhsField = value;
            }
        }
        
        /// <remarks/>
        public string fldTypeShakhsName {
            get {
                return this.fldTypeShakhsNameField;
            }
            set {
                this.fldTypeShakhsNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldTel {
            get {
                return this.fldTelField;
            }
            set {
                this.fldTelField = value;
            }
        }
        
        /// <remarks/>
        public string fldMobile {
            get {
                return this.fldMobileField;
            }
            set {
                this.fldMobileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ReshteTahsili {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_StatusTaahol {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_MadrakTahsili {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_NezamVazife {
        
        private byte fldIdField;
        
        private string fldTitleField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public byte fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Signers {
        
        private string postField;
        
        private string signerNameField;
        
        private System.Nullable<int> orderIdField;
        
        /// <remarks/>
        public string Post {
            get {
                return this.postField;
            }
            set {
                this.postField = value;
            }
        }
        
        /// <remarks/>
        public string SignerName {
            get {
                return this.signerNameField;
            }
            set {
                this.signerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> orderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Error {
        
        private int fldIdField;
        
        private string fldUserNameField;
        
        private string fldMatnField;
        
        private string fldTarikhField;
        
        private string fldIPField;
        
        private System.Nullable<int> fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldUserName {
            get {
                return this.fldUserNameField;
            }
            set {
                this.fldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldMatn {
            get {
                return this.fldMatnField;
            }
            set {
                this.fldMatnField = value;
            }
        }
        
        /// <remarks/>
        public string fldTarikh {
            get {
                return this.fldTarikhField;
            }
            set {
                this.fldTarikhField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_SHobe {
        
        private int fldIdField;
        
        private int fldBankIdField;
        
        private string fldNameField;
        
        private int fldCodeSHobeField;
        
        private string fldAddressField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldBankNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldBankId {
            get {
                return this.fldBankIdField;
            }
            set {
                this.fldBankIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldCodeSHobe {
            get {
                return this.fldCodeSHobeField;
            }
            set {
                this.fldCodeSHobeField = value;
            }
        }
        
        /// <remarks/>
        public string fldAddress {
            get {
                return this.fldAddressField;
            }
            set {
                this.fldAddressField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankName {
            get {
                return this.fldBankNameField;
            }
            set {
                this.fldBankNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_RptDastresiKarbaran {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private string fldFamilyField;
        
        private string nameGroupUserField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldFamily {
            get {
                return this.fldFamilyField;
            }
            set {
                this.fldFamilyField = value;
            }
        }
        
        /// <remarks/>
        public string NameGroupUser {
            get {
                return this.nameGroupUserField;
            }
            set {
                this.nameGroupUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Bank {
        
        private int fldIdField;
        
        private string fldBankNameField;
        
        private int fldFileIdField;
        
        private int fldUserIdField;
        
        private System.DateTime fldDateField;
        
        private string fldDescField;
        
        private System.Nullable<byte> fldCentralBankCodeField;
        
        private string fldInfinitiveBankField;
        
        private bool fldFixField;
        
        private string fldFixTitleField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldBankName {
            get {
                return this.fldBankNameField;
            }
            set {
                this.fldBankNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldFileId {
            get {
                return this.fldFileIdField;
            }
            set {
                this.fldFileIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<byte> fldCentralBankCode {
            get {
                return this.fldCentralBankCodeField;
            }
            set {
                this.fldCentralBankCodeField = value;
            }
        }
        
        /// <remarks/>
        public string fldInfinitiveBank {
            get {
                return this.fldInfinitiveBankField;
            }
            set {
                this.fldInfinitiveBankField = value;
            }
        }
        
        /// <remarks/>
        public bool fldFix {
            get {
                return this.fldFixField;
            }
            set {
                this.fldFixField = value;
            }
        }
        
        /// <remarks/>
        public string fldFixTitle {
            get {
                return this.fldFixTitleField;
            }
            set {
                this.fldFixTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_OrganizationalPosts {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private string fldOrgPostCodeField;
        
        private int fldChartOrganIdField;
        
        private System.Nullable<int> fldPIDField;
        
        private int fldUserIdField;
        
        private System.DateTime fldDateField;
        
        private string fldDescField;
        
        private string fldNameChartField;
        
        private System.Nullable<int> fldOrganIdField;
        
        private string fldTitlePIDField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldOrgPostCode {
            get {
                return this.fldOrgPostCodeField;
            }
            set {
                this.fldOrgPostCodeField = value;
            }
        }
        
        /// <remarks/>
        public int fldChartOrganId {
            get {
                return this.fldChartOrganIdField;
            }
            set {
                this.fldChartOrganIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameChart {
            get {
                return this.fldNameChartField;
            }
            set {
                this.fldNameChartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitlePID {
            get {
                return this.fldTitlePIDField;
            }
            set {
                this.fldTitlePIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_GetNameOrganForFormul {
        
        private int fldIdField;
        
        private string fldNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_HesabType {
        
        private byte fldIdField;
        
        private string fldTitleField;
        
        private byte fldTypeField;
        
        /// <remarks/>
        public byte fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public byte fldType {
            get {
                return this.fldTypeField;
            }
            set {
                this.fldTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Month {
        
        private string fldCodeField;
        
        private string fldNameField;
        
        /// <remarks/>
        public string fldCode {
            get {
                return this.fldCodeField;
            }
            set {
                this.fldCodeField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_CompanyPost {
        
        private short fldIdField;
        
        private string fldTitleField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        /// <remarks/>
        public short fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_GeneralSetting_Value {
        
        private byte fldIdField;
        
        private byte fldGeneralSettingIdField;
        
        private string fldValueField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private int fldOrganIdField;
        
        private string fldNameGeneralSettingField;
        
        /// <remarks/>
        public byte fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public byte fldGeneralSettingId {
            get {
                return this.fldGeneralSettingIdField;
            }
            set {
                this.fldGeneralSettingIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldValue {
            get {
                return this.fldValueField;
            }
            set {
                this.fldValueField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameGeneralSetting {
            get {
                return this.fldNameGeneralSettingField;
            }
            set {
                this.fldNameGeneralSettingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_GeneralSetting_ComboBox {
        
        private byte fldIdField;
        
        private byte fldGeneralSettingIdField;
        
        private string fldTtileField;
        
        private string fldValueField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldNameGeneralSettingField;
        
        /// <remarks/>
        public byte fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public byte fldGeneralSettingId {
            get {
                return this.fldGeneralSettingIdField;
            }
            set {
                this.fldGeneralSettingIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTtile {
            get {
                return this.fldTtileField;
            }
            set {
                this.fldTtileField = value;
            }
        }
        
        /// <remarks/>
        public string fldValue {
            get {
                return this.fldValueField;
            }
            set {
                this.fldValueField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameGeneralSetting {
            get {
                return this.fldNameGeneralSettingField;
            }
            set {
                this.fldNameGeneralSettingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Plaque {
        
        private int fldIdField;
        
        private byte fldSerialPlaqueField;
        
        private string fldPlaqueField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private string fldSerial_PlaqueField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public byte fldSerialPlaque {
            get {
                return this.fldSerialPlaqueField;
            }
            set {
                this.fldSerialPlaqueField = value;
            }
        }
        
        /// <remarks/>
        public string fldPlaque {
            get {
                return this.fldPlaqueField;
            }
            set {
                this.fldPlaqueField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public string fldSerial_Plaque {
            get {
                return this.fldSerial_PlaqueField;
            }
            set {
                this.fldSerial_PlaqueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_TypeKhodro {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int orderIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_CharacterPersianPlaque {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_Kala {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private byte fldKalaTypeField;
        
        private string fldKalaCodeField;
        
        private byte fldStatusField;
        
        private System.Nullable<bool> fldSellField;
        
        private bool fldArzeshAfzodehField;
        
        private string fldIranCodeField;
        
        private byte fldMoshakhaseTypeField;
        
        private string fldMoshakhaseField;
        
        private int fldVahedAsliField;
        
        private int fldVahedFareeField;
        
        private byte fldNesbatTypeField;
        
        private System.Nullable<int> fldVahedMoadelField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        private string fldStatusNameField;
        
        private string fldVahedAsli_NameField;
        
        private string fldVahedFaree_NameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public byte fldKalaType {
            get {
                return this.fldKalaTypeField;
            }
            set {
                this.fldKalaTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldKalaCode {
            get {
                return this.fldKalaCodeField;
            }
            set {
                this.fldKalaCodeField = value;
            }
        }
        
        /// <remarks/>
        public byte fldStatus {
            get {
                return this.fldStatusField;
            }
            set {
                this.fldStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fldSell {
            get {
                return this.fldSellField;
            }
            set {
                this.fldSellField = value;
            }
        }
        
        /// <remarks/>
        public bool fldArzeshAfzodeh {
            get {
                return this.fldArzeshAfzodehField;
            }
            set {
                this.fldArzeshAfzodehField = value;
            }
        }
        
        /// <remarks/>
        public string fldIranCode {
            get {
                return this.fldIranCodeField;
            }
            set {
                this.fldIranCodeField = value;
            }
        }
        
        /// <remarks/>
        public byte fldMoshakhaseType {
            get {
                return this.fldMoshakhaseTypeField;
            }
            set {
                this.fldMoshakhaseTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldMoshakhase {
            get {
                return this.fldMoshakhaseField;
            }
            set {
                this.fldMoshakhaseField = value;
            }
        }
        
        /// <remarks/>
        public int fldVahedAsli {
            get {
                return this.fldVahedAsliField;
            }
            set {
                this.fldVahedAsliField = value;
            }
        }
        
        /// <remarks/>
        public int fldVahedFaree {
            get {
                return this.fldVahedFareeField;
            }
            set {
                this.fldVahedFareeField = value;
            }
        }
        
        /// <remarks/>
        public byte fldNesbatType {
            get {
                return this.fldNesbatTypeField;
            }
            set {
                this.fldNesbatTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldVahedMoadel {
            get {
                return this.fldVahedMoadelField;
            }
            set {
                this.fldVahedMoadelField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldStatusName {
            get {
                return this.fldStatusNameField;
            }
            set {
                this.fldStatusNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldVahedAsli_Name {
            get {
                return this.fldVahedAsli_NameField;
            }
            set {
                this.fldVahedAsli_NameField = value;
            }
        }
        
        /// <remarks/>
        public string fldVahedFaree_Name {
            get {
                return this.fldVahedFaree_NameField;
            }
            set {
                this.fldVahedFaree_NameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_GeneralSetting {
        
        private byte fldIdField;
        
        private string fldNameField;
        
        private string fldValueField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private System.Nullable<int> fldOrganIdField;
        
        private System.Nullable<int> fldModuleIdField;
        
        private string fldNameModuleField;
        
        private string fldTitleComboField;
        
        /// <remarks/>
        public byte fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldValue {
            get {
                return this.fldValueField;
            }
            set {
                this.fldValueField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldModuleId {
            get {
                return this.fldModuleIdField;
            }
            set {
                this.fldModuleIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameModule {
            get {
                return this.fldNameModuleField;
            }
            set {
                this.fldNameModuleField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitleCombo {
            get {
                return this.fldTitleComboField;
            }
            set {
                this.fldTitleComboField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_FormatFile {
        
        private byte fldIdField;
        
        private string fldFormatNameField;
        
        private int fldSizeField;
        
        private string fldPassvandField;
        
        private byte[] fldIconField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private int fldOrganIdField;
        
        /// <remarks/>
        public byte fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldFormatName {
            get {
                return this.fldFormatNameField;
            }
            set {
                this.fldFormatNameField = value;
            }
        }
        
        /// <remarks/>
        public int fldSize {
            get {
                return this.fldSizeField;
            }
            set {
                this.fldSizeField = value;
            }
        }
        
        /// <remarks/>
        public string fldPassvand {
            get {
                return this.fldPassvandField;
            }
            set {
                this.fldPassvandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fldIcon {
            get {
                return this.fldIconField;
            }
            set {
                this.fldIconField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_CaseBills {
        
        private int fldIdField;
        
        private int fldBillsTypeIdField;
        
        private int fldFileNumField;
        
        private int fldCentercoIdField;
        
        private int fldOrganIdField;
        
        private int fldOrganChartIdField;
        
        private System.Nullable<int> fldAshkhasIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        private string fldName_BillsTypeField;
        
        private string fldNameCenterField;
        
        private string fldName_shakhsField;
        
        private string fldCodeMelliField;
        
        private string fldTitle_chartOrganField;
        
        private string fldName_OrganField;
        
        private string fldShakhs_TypeField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldBillsTypeId {
            get {
                return this.fldBillsTypeIdField;
            }
            set {
                this.fldBillsTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldFileNum {
            get {
                return this.fldFileNumField;
            }
            set {
                this.fldFileNumField = value;
            }
        }
        
        /// <remarks/>
        public int fldCentercoId {
            get {
                return this.fldCentercoIdField;
            }
            set {
                this.fldCentercoIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public int fldOrganChartId {
            get {
                return this.fldOrganChartIdField;
            }
            set {
                this.fldOrganChartIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldAshkhasId {
            get {
                return this.fldAshkhasIdField;
            }
            set {
                this.fldAshkhasIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_BillsType {
            get {
                return this.fldName_BillsTypeField;
            }
            set {
                this.fldName_BillsTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameCenter {
            get {
                return this.fldNameCenterField;
            }
            set {
                this.fldNameCenterField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_shakhs {
            get {
                return this.fldName_shakhsField;
            }
            set {
                this.fldName_shakhsField = value;
            }
        }
        
        /// <remarks/>
        public string fldCodeMelli {
            get {
                return this.fldCodeMelliField;
            }
            set {
                this.fldCodeMelliField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle_chartOrgan {
            get {
                return this.fldTitle_chartOrganField;
            }
            set {
                this.fldTitle_chartOrganField = value;
            }
        }
        
        /// <remarks/>
        public string fldName_Organ {
            get {
                return this.fldName_OrganField;
            }
            set {
                this.fldName_OrganField = value;
            }
        }
        
        /// <remarks/>
        public string fldShakhs_Type {
            get {
                return this.fldShakhs_TypeField;
            }
            set {
                this.fldShakhs_TypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_BillsType {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIPField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIP {
            get {
                return this.fldIPField;
            }
            set {
                this.fldIPField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_WarrantyType {
        
        private int fldIdField;
        
        private string fldNameField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldIpField;
        
        private int fldUserIdField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldName {
            get {
                return this.fldNameField;
            }
            set {
                this.fldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldIp {
            get {
                return this.fldIpField;
            }
            set {
                this.fldIpField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_WebServiceLog {
        
        private int fldIdField;
        
        private string fldMatnField;
        
        private string fldUserField;
        
        private System.Nullable<System.DateTime> flddateField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldMatn {
            get {
                return this.fldMatnField;
            }
            set {
                this.fldMatnField = value;
            }
        }
        
        /// <remarks/>
        public string fldUser {
            get {
                return this.fldUserField;
            }
            set {
                this.fldUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> flddate {
            get {
                return this.flddateField;
            }
            set {
                this.flddateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_TreeOrganPost {
        
        private System.Nullable<int> idField;
        
        private System.Nullable<int> pidField;
        
        private string titleField;
        
        private string namechartField;
        
        private string fldOrgPostCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Namechart {
            get {
                return this.namechartField;
            }
            set {
                this.namechartField = value;
            }
        }
        
        /// <remarks/>
        public string fldOrgPostCode {
            get {
                return this.fldOrgPostCodeField;
            }
            set {
                this.fldOrgPostCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_OrganizationalPostsEjraee {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private string fldOrgPostCodeField;
        
        private int fldChartOrganIdField;
        
        private System.Nullable<int> fldPIDField;
        
        private int fldUserIdField;
        
        private System.DateTime fldDateField;
        
        private string fldDescField;
        
        private string fldNameChartField;
        
        private System.Nullable<int> fldOrganIdField;
        
        private string fldTitlePIDField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        public string fldOrgPostCode {
            get {
                return this.fldOrgPostCodeField;
            }
            set {
                this.fldOrgPostCodeField = value;
            }
        }
        
        /// <remarks/>
        public int fldChartOrganId {
            get {
                return this.fldChartOrganIdField;
            }
            set {
                this.fldChartOrganIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPID {
            get {
                return this.fldPIDField;
            }
            set {
                this.fldPIDField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public string fldNameChart {
            get {
                return this.fldNameChartField;
            }
            set {
                this.fldNameChartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitlePID {
            get {
                return this.fldTitlePIDField;
            }
            set {
                this.fldTitlePIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OBJ_ChartOrganEjraee {
        
        private int fldIdField;
        
        private string fldTitleField;
        
        private System.Nullable<int> fldPIdField;
        
        private System.Nullable<int> fldOrganIdField;
        
        private byte fldNoeVahedField;
        
        private int fldUserIdField;
        
        private string fldDescField;
        
        private System.DateTime fldDateField;
        
        private string fldNoeVahedNameField;
        
        private string fldOrganizationNameField;
        
        /// <remarks/>
        public int fldId {
            get {
                return this.fldIdField;
            }
            set {
                this.fldIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldTitle {
            get {
                return this.fldTitleField;
            }
            set {
                this.fldTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldPId {
            get {
                return this.fldPIdField;
            }
            set {
                this.fldPIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> fldOrganId {
            get {
                return this.fldOrganIdField;
            }
            set {
                this.fldOrganIdField = value;
            }
        }
        
        /// <remarks/>
        public byte fldNoeVahed {
            get {
                return this.fldNoeVahedField;
            }
            set {
                this.fldNoeVahedField = value;
            }
        }
        
        /// <remarks/>
        public int fldUserId {
            get {
                return this.fldUserIdField;
            }
            set {
                this.fldUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string fldDesc {
            get {
                return this.fldDescField;
            }
            set {
                this.fldDescField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fldDate {
            get {
                return this.fldDateField;
            }
            set {
                this.fldDateField = value;
            }
        }
        
        /// <remarks/>
        public string fldNoeVahedName {
            get {
                return this.fldNoeVahedNameField;
            }
            set {
                this.fldNoeVahedNameField = value;
            }
        }
        
        /// <remarks/>
        public string fldOrganizationName {
            get {
                return this.fldOrganizationNameField;
            }
            set {
                this.fldOrganizationNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ClsError {
        
        private string errorMsgField;
        
        private string msgField;
        
        private bool errorTypeField;
        
        private int outputIdField;
        
        private int outputId2Field;
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
            }
        }
        
        /// <remarks/>
        public bool ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId {
            get {
                return this.outputIdField;
            }
            set {
                this.outputIdField = value;
            }
        }
        
        /// <remarks/>
        public int OutputId2 {
            get {
                return this.outputId2Field;
            }
            set {
                this.outputId2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetHistoryTahsilatDetailCompletedEventHandler(object sender, GetHistoryTahsilatDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryTahsilatDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryTahsilatDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_HistoryTahsilat Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_HistoryTahsilat)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertHistoryTahsilatCompletedEventHandler(object sender, InsertHistoryTahsilatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertHistoryTahsilatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertHistoryTahsilatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateHistoryTahsilatCompletedEventHandler(object sender, UpdateHistoryTahsilatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHistoryTahsilatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHistoryTahsilatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteHistoryTahsilatCompletedEventHandler(object sender, DeleteHistoryTahsilatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteHistoryTahsilatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteHistoryTahsilatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertChartOrganEjraeeCompletedEventHandler(object sender, InsertChartOrganEjraeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertChartOrganEjraeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertChartOrganEjraeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateChartOrganEjraeeCompletedEventHandler(object sender, UpdateChartOrganEjraeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateChartOrganEjraeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateChartOrganEjraeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteChartOrganEjraeeCompletedEventHandler(object sender, DeleteChartOrganEjraeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteChartOrganEjraeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteChartOrganEjraeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetChartEjraee_LastNodeCompletedEventHandler(object sender, GetChartEjraee_LastNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChartEjraee_LastNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChartEjraee_LastNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ChartOrganEjraee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ChartOrganEjraee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetOrganizationalPostsEjraeeDetailCompletedEventHandler(object sender, GetOrganizationalPostsEjraeeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationalPostsEjraeeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationalPostsEjraeeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_OrganizationalPostsEjraee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_OrganizationalPostsEjraee)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetOrganizationalPostsEjraeeWithFilterCompletedEventHandler(object sender, GetOrganizationalPostsEjraeeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationalPostsEjraeeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationalPostsEjraeeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_OrganizationalPostsEjraee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_OrganizationalPostsEjraee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertOrganizationalPostsEjraeeCompletedEventHandler(object sender, InsertOrganizationalPostsEjraeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOrganizationalPostsEjraeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOrganizationalPostsEjraeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateOrganizationalPostsEjraeeCompletedEventHandler(object sender, UpdateOrganizationalPostsEjraeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrganizationalPostsEjraeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrganizationalPostsEjraeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteOrganizationalPostsEjraeeCompletedEventHandler(object sender, DeleteOrganizationalPostsEjraeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationalPostsEjraeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationalPostsEjraeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTreeOrganPostEjraCompletedEventHandler(object sender, GetTreeOrganPostEjraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeOrganPostEjraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeOrganPostEjraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TreeOrganPost[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TreeOrganPost[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChangeLetterCompletedEventHandler(object sender, ChangeLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetWebServiceLogDetailCompletedEventHandler(object sender, GetWebServiceLogDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebServiceLogDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebServiceLogDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_WebServiceLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_WebServiceLog)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetWebServiceLogWithFilterCompletedEventHandler(object sender, GetWebServiceLogWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebServiceLogWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebServiceLogWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_WebServiceLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_WebServiceLog[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertWebServiceLogCompletedEventHandler(object sender, InsertWebServiceLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertWebServiceLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertWebServiceLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateWebServiceLogCompletedEventHandler(object sender, UpdateWebServiceLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWebServiceLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWebServiceLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteWebServiceLogCompletedEventHandler(object sender, DeleteWebServiceLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWebServiceLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWebServiceLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetWarrantyTypeDetailCompletedEventHandler(object sender, GetWarrantyTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarrantyTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarrantyTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_WarrantyType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_WarrantyType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetWarrantyTypeWithFilterCompletedEventHandler(object sender, GetWarrantyTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarrantyTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarrantyTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_WarrantyType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_WarrantyType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertWarrantyTypeCompletedEventHandler(object sender, InsertWarrantyTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertWarrantyTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertWarrantyTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateWarrantyTypeCompletedEventHandler(object sender, UpdateWarrantyTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWarrantyTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWarrantyTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteWarrantyTypeCompletedEventHandler(object sender, DeleteWarrantyTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWarrantyTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWarrantyTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBillsTypeDetailCompletedEventHandler(object sender, GetBillsTypeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillsTypeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillsTypeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BillsType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BillsType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBillsTypeWithFilterCompletedEventHandler(object sender, GetBillsTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillsTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillsTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_BillsType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_BillsType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBillsTypeCompletedEventHandler(object sender, InsertBillsTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBillsTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBillsTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBillsTypeCompletedEventHandler(object sender, UpdateBillsTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBillsTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBillsTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteBillsTypeCompletedEventHandler(object sender, DeleteBillsTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBillsTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBillsTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCaseBillsDetailCompletedEventHandler(object sender, GetCaseBillsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseBillsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseBillsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CaseBills Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CaseBills)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCaseBillsWithFilterCompletedEventHandler(object sender, GetCaseBillsWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaseBillsWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaseBillsWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CaseBills[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CaseBills[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCaseBillsCompletedEventHandler(object sender, InsertCaseBillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCaseBillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCaseBillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCaseBillsCompletedEventHandler(object sender, UpdateCaseBillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCaseBillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCaseBillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCaseBillsCompletedEventHandler(object sender, DeleteCaseBillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCaseBillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCaseBillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFormatFileDetailCompletedEventHandler(object sender, GetFormatFileDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormatFileDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormatFileDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_FormatFile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_FormatFile)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFormatFileWithFilterCompletedEventHandler(object sender, GetFormatFileWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormatFileWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormatFileWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_FormatFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_FormatFile[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertFormatFileCompletedEventHandler(object sender, InsertFormatFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFormatFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFormatFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateFormatFileCompletedEventHandler(object sender, UpdateFormatFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFormatFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFormatFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteFormatFileCompletedEventHandler(object sender, DeleteFormatFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFormatFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFormatFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGeneralSettingDetailCompletedEventHandler(object sender, GetGeneralSettingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralSettingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralSettingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GeneralSetting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GeneralSetting)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGeneralSettingWithFilterCompletedEventHandler(object sender, GetGeneralSettingWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralSettingWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralSettingWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GeneralSetting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GeneralSetting[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertGeneralSettingCompletedEventHandler(object sender, InsertGeneralSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGeneralSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGeneralSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateGeneralSettingCompletedEventHandler(object sender, UpdateGeneralSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGeneralSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGeneralSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteGeneralSettingCompletedEventHandler(object sender, DeleteGeneralSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGeneralSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGeneralSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Insert_GeneralSettingCompletedEventHandler(object sender, Insert_GeneralSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_GeneralSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_GeneralSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Update_GeneralSettingCompletedEventHandler(object sender, Update_GeneralSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_GeneralSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_GeneralSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Delete_GeneralSettingCompletedEventHandler(object sender, Delete_GeneralSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_GeneralSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_GeneralSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetKalaDetailCompletedEventHandler(object sender, GetKalaDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKalaDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKalaDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Kala Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Kala)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetKalaWithFilterCompletedEventHandler(object sender, GetKalaWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKalaWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKalaWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Kala[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Kala[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertKalaCompletedEventHandler(object sender, InsertKalaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertKalaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertKalaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateKalaCompletedEventHandler(object sender, UpdateKalaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateKalaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateKalaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteKalaCompletedEventHandler(object sender, DeleteKalaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteKalaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteKalaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCharacterPersianPlaqueDetailCompletedEventHandler(object sender, GetCharacterPersianPlaqueDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCharacterPersianPlaqueDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCharacterPersianPlaqueDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CharacterPersianPlaque Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CharacterPersianPlaque)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCharacterPersianPlaqueWithFilterCompletedEventHandler(object sender, GetCharacterPersianPlaqueWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCharacterPersianPlaqueWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCharacterPersianPlaqueWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CharacterPersianPlaque[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CharacterPersianPlaque[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCharacterPersianPlaqueCompletedEventHandler(object sender, InsertCharacterPersianPlaqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCharacterPersianPlaqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCharacterPersianPlaqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCharacterPersianPlaqueCompletedEventHandler(object sender, UpdateCharacterPersianPlaqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCharacterPersianPlaqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCharacterPersianPlaqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCharacterPersianPlaqueCompletedEventHandler(object sender, DeleteCharacterPersianPlaqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCharacterPersianPlaqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCharacterPersianPlaqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTypeKhodroDetailCompletedEventHandler(object sender, GetTypeKhodroDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTypeKhodroDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTypeKhodroDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TypeKhodro Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TypeKhodro)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTypeKhodroWithFilterCompletedEventHandler(object sender, GetTypeKhodroWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTypeKhodroWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTypeKhodroWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TypeKhodro[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TypeKhodro[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertTypeKhodroCompletedEventHandler(object sender, InsertTypeKhodroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTypeKhodroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTypeKhodroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateTypeKhodroCompletedEventHandler(object sender, UpdateTypeKhodroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTypeKhodroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTypeKhodroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteTypeKhodroCompletedEventHandler(object sender, DeleteTypeKhodroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTypeKhodroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTypeKhodroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPlaqueDetailCompletedEventHandler(object sender, GetPlaqueDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaqueDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaqueDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Plaque Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Plaque)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPlaqueWithFilterCompletedEventHandler(object sender, GetPlaqueWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaqueWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaqueWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Plaque[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Plaque[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertPlaqueCompletedEventHandler(object sender, InsertPlaqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPlaqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPlaqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePlaqueCompletedEventHandler(object sender, UpdatePlaqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePlaqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePlaqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeletePlaqueCompletedEventHandler(object sender, DeletePlaqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePlaqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePlaqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertPlaque_WebServiceCompletedEventHandler(object sender, InsertPlaque_WebServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPlaque_WebServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPlaque_WebServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGeneralSetting_ComboBoxDetailCompletedEventHandler(object sender, GetGeneralSetting_ComboBoxDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralSetting_ComboBoxDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralSetting_ComboBoxDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GeneralSetting_ComboBox Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GeneralSetting_ComboBox)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGeneralSetting_ComboBoxWithFilterCompletedEventHandler(object sender, GetGeneralSetting_ComboBoxWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralSetting_ComboBoxWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralSetting_ComboBoxWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GeneralSetting_ComboBox[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GeneralSetting_ComboBox[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertGeneralSetting_ComboBoxCompletedEventHandler(object sender, InsertGeneralSetting_ComboBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGeneralSetting_ComboBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGeneralSetting_ComboBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateGeneralSetting_ComboBoxCompletedEventHandler(object sender, UpdateGeneralSetting_ComboBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGeneralSetting_ComboBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGeneralSetting_ComboBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteGeneralSetting_ComboBoxCompletedEventHandler(object sender, DeleteGeneralSetting_ComboBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGeneralSetting_ComboBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGeneralSetting_ComboBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGeneralSetting_ValueDetailCompletedEventHandler(object sender, GetGeneralSetting_ValueDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralSetting_ValueDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralSetting_ValueDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GeneralSetting_Value Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GeneralSetting_Value)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGeneralSetting_ValueWithFilterCompletedEventHandler(object sender, GetGeneralSetting_ValueWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralSetting_ValueWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralSetting_ValueWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GeneralSetting_Value[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GeneralSetting_Value[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertGeneralSetting_ValueCompletedEventHandler(object sender, InsertGeneralSetting_ValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGeneralSetting_ValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGeneralSetting_ValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateGeneralSetting_ValueCompletedEventHandler(object sender, UpdateGeneralSetting_ValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGeneralSetting_ValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGeneralSetting_ValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteGeneralSetting_ValueCompletedEventHandler(object sender, DeleteGeneralSetting_ValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGeneralSetting_ValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGeneralSetting_ValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateOrderCompletedEventHandler(object sender, UpdateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCompanyPostDetailCompletedEventHandler(object sender, GetCompanyPostDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyPostDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyPostDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CompanyPost Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CompanyPost)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCompanyPostWithFilterCompletedEventHandler(object sender, GetCompanyPostWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyPostWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyPostWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CompanyPost[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CompanyPost[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCompanyPostCompletedEventHandler(object sender, InsertCompanyPostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCompanyPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCompanyPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCompanyPostCompletedEventHandler(object sender, UpdateCompanyPostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompanyPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompanyPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCompanyPostCompletedEventHandler(object sender, DeleteCompanyPostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompanyPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompanyPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectMonthCompletedEventHandler(object sender, SelectMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Month[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Month[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetHesabTypeWithFilterCompletedEventHandler(object sender, GetHesabTypeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHesabTypeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHesabTypeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_HesabType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_HesabType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertLoginFailedCompletedEventHandler(object sender, InsertLoginFailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLoginFailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLoginFailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetHistoryTahsilatWithFilterCompletedEventHandler(object sender, GetHistoryTahsilatWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryTahsilatWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryTahsilatWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_HistoryTahsilat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_HistoryTahsilat[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateDigitalArchiveTreeStructureCompletedEventHandler(object sender, UpdateDigitalArchiveTreeStructureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDigitalArchiveTreeStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDigitalArchiveTreeStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDigitalArchiveTreeStructureCompletedEventHandler(object sender, DeleteDigitalArchiveTreeStructureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDigitalArchiveTreeStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDigitalArchiveTreeStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetNameOrganForFormulCompletedEventHandler(object sender, GetNameOrganForFormulCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNameOrganForFormulCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNameOrganForFormulCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GetNameOrganForFormul[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GetNameOrganForFormul[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetOrganizationalPostsDetailCompletedEventHandler(object sender, GetOrganizationalPostsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationalPostsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationalPostsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_OrganizationalPosts Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_OrganizationalPosts)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetOrganizationalPostsWithFilterCompletedEventHandler(object sender, GetOrganizationalPostsWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationalPostsWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationalPostsWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_OrganizationalPosts[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_OrganizationalPosts[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertOrganizationalPostsCompletedEventHandler(object sender, InsertOrganizationalPostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOrganizationalPostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOrganizationalPostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateOrganizationalPostsCompletedEventHandler(object sender, UpdateOrganizationalPostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrganizationalPostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrganizationalPostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteOrganizationalPostsCompletedEventHandler(object sender, DeleteOrganizationalPostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationalPostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationalPostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBankDetailCompletedEventHandler(object sender, GetBankDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Bank Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Bank)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBankWithFilterCompletedEventHandler(object sender, GetBankWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Bank[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Bank[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBankCompletedEventHandler(object sender, InsertBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBankCompletedEventHandler(object sender, UpdateBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteBankCompletedEventHandler(object sender, DeleteBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetrptDastresiKarbaranWithFilterCompletedEventHandler(object sender, GetrptDastresiKarbaranWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetrptDastresiKarbaranWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetrptDastresiKarbaranWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_RptDastresiKarbaran[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_RptDastresiKarbaran[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSHobeDetailCompletedEventHandler(object sender, GetSHobeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSHobeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSHobeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_SHobe Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_SHobe)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSHobeWithFilterCompletedEventHandler(object sender, GetSHobeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSHobeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSHobeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_SHobe[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_SHobe[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertSHobeCompletedEventHandler(object sender, InsertSHobeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSHobeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSHobeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSHobeCompletedEventHandler(object sender, UpdateSHobeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSHobeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSHobeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSHobeCompletedEventHandler(object sender, DeleteSHobeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSHobeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSHobeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetErrorWithFilterCompletedEventHandler(object sender, GetErrorWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErrorWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErrorWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Error[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Error[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertErrorCompletedEventHandler(object sender, InsertErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSignersWithFilterCompletedEventHandler(object sender, GetSignersWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignersWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignersWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Signers[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Signers[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTreeOrganPostCompletedEventHandler(object sender, GetTreeOrganPostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeOrganPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeOrganPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_TreeOrganPost[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_TreeOrganPost[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetNezamVazifeWithFilterCompletedEventHandler(object sender, GetNezamVazifeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNezamVazifeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNezamVazifeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_NezamVazife[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_NezamVazife[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetNezamVazifeDetailCompletedEventHandler(object sender, GetNezamVazifeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNezamVazifeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNezamVazifeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_NezamVazife Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_NezamVazife)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertNezamVazifeCompletedEventHandler(object sender, InsertNezamVazifeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNezamVazifeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNezamVazifeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateNezamVazifeCompletedEventHandler(object sender, UpdateNezamVazifeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNezamVazifeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNezamVazifeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteNezamVazifeCompletedEventHandler(object sender, DeleteNezamVazifeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNezamVazifeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNezamVazifeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMadrakTahsiliWithFilterCompletedEventHandler(object sender, GetMadrakTahsiliWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMadrakTahsiliWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMadrakTahsiliWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MadrakTahsili[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MadrakTahsili[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMadrakTahsiliDetailCompletedEventHandler(object sender, GetMadrakTahsiliDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMadrakTahsiliDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMadrakTahsiliDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MadrakTahsili Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MadrakTahsili)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertMadrakTahsiliCompletedEventHandler(object sender, InsertMadrakTahsiliCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMadrakTahsiliCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMadrakTahsiliCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateMadrakTahsiliCompletedEventHandler(object sender, UpdateMadrakTahsiliCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMadrakTahsiliCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMadrakTahsiliCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteMadrakTahsiliCompletedEventHandler(object sender, DeleteMadrakTahsiliCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMadrakTahsiliCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMadrakTahsiliCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStatusTaaholWithFilterCompletedEventHandler(object sender, GetStatusTaaholWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusTaaholWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusTaaholWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_StatusTaahol[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_StatusTaahol[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetReshteTahsiliDetailCompletedEventHandler(object sender, GetReshteTahsiliDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReshteTahsiliDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReshteTahsiliDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ReshteTahsili Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ReshteTahsili)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetReshteTahsiliWithFilterCompletedEventHandler(object sender, GetReshteTahsiliWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReshteTahsiliWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReshteTahsiliWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ReshteTahsili[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ReshteTahsili[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertReshteTahsiliCompletedEventHandler(object sender, InsertReshteTahsiliCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertReshteTahsiliCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertReshteTahsiliCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateReshteTahsiliCompletedEventHandler(object sender, UpdateReshteTahsiliCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReshteTahsiliCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReshteTahsiliCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteReshteTahsiliCompletedEventHandler(object sender, DeleteReshteTahsiliCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReshteTahsiliCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReshteTahsiliCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEmployee_DetailWithFilterCompletedEventHandler(object sender, GetEmployee_DetailWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployee_DetailWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployee_DetailWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Employee_Detail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Employee_Detail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEmployee_DetailDetailCompletedEventHandler(object sender, GetEmployee_DetailDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployee_DetailDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployee_DetailDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Employee_Detail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Employee_Detail)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertEmployee_DetailCompletedEventHandler(object sender, InsertEmployee_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEmployee_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEmployee_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateEmployee_DetailCompletedEventHandler(object sender, UpdateEmployee_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmployee_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmployee_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteEmployee_DetailCompletedEventHandler(object sender, DeleteEmployee_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmployee_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmployee_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAshkhasDetailCompletedEventHandler(object sender, GetAshkhasDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAshkhasDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAshkhasDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Ashkhas Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Ashkhas)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAshkhasWithFilterCompletedEventHandler(object sender, GetAshkhasWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAshkhasWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAshkhasWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Ashkhas[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Ashkhas[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAshkhasCompletedEventHandler(object sender, InsertAshkhasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAshkhasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAshkhasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAshkhasCompletedEventHandler(object sender, UpdateAshkhasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAshkhasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAshkhasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAshkhasCompletedEventHandler(object sender, DeleteAshkhasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAshkhasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAshkhasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMaliyatArzesheAfzoodeDetailCompletedEventHandler(object sender, GetMaliyatArzesheAfzoodeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaliyatArzesheAfzoodeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaliyatArzesheAfzoodeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MaliyatArzesheAfzoode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MaliyatArzesheAfzoode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMaliyatArzesheAfzoodeWithFilterCompletedEventHandler(object sender, GetMaliyatArzesheAfzoodeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaliyatArzesheAfzoodeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaliyatArzesheAfzoodeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MaliyatArzesheAfzoode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MaliyatArzesheAfzoode[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertMaliyatArzesheAfzoodeCompletedEventHandler(object sender, InsertMaliyatArzesheAfzoodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMaliyatArzesheAfzoodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMaliyatArzesheAfzoodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateMaliyatArzesheAfzoodeCompletedEventHandler(object sender, UpdateMaliyatArzesheAfzoodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMaliyatArzesheAfzoodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMaliyatArzesheAfzoodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteMaliyatArzesheAfzoodeCompletedEventHandler(object sender, DeleteMaliyatArzesheAfzoodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMaliyatArzesheAfzoodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMaliyatArzesheAfzoodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAshkhaseHoghoghiDetailCompletedEventHandler(object sender, GetAshkhaseHoghoghiDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAshkhaseHoghoghiDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAshkhaseHoghoghiDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AshkhaseHoghoghi Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AshkhaseHoghoghi)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAshkhaseHoghoghiWithFilterCompletedEventHandler(object sender, GetAshkhaseHoghoghiWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAshkhaseHoghoghiWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAshkhaseHoghoghiWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AshkhaseHoghoghi[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AshkhaseHoghoghi[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAshkhaseHoghoghiCompletedEventHandler(object sender, InsertAshkhaseHoghoghiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAshkhaseHoghoghiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAshkhaseHoghoghiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAshkhaseHoghoghiCompletedEventHandler(object sender, UpdateAshkhaseHoghoghiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAshkhaseHoghoghiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAshkhaseHoghoghiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAshkhaseHoghoghiCompletedEventHandler(object sender, DeleteAshkhaseHoghoghiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAshkhaseHoghoghiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAshkhaseHoghoghiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetShomareHesabeOmoomiDetailCompletedEventHandler(object sender, GetShomareHesabeOmoomiDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShomareHesabeOmoomiDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShomareHesabeOmoomiDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ShomareHesabeOmoomi Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ShomareHesabeOmoomi)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetShomareHesabeOmoomiWithFilterCompletedEventHandler(object sender, GetShomareHesabeOmoomiWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShomareHesabeOmoomiWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShomareHesabeOmoomiWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ShomareHesabeOmoomi[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ShomareHesabeOmoomi[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertShomareHesabeOmoomiCompletedEventHandler(object sender, InsertShomareHesabeOmoomiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertShomareHesabeOmoomiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertShomareHesabeOmoomiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateShomareHesabeOmoomiCompletedEventHandler(object sender, UpdateShomareHesabeOmoomiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateShomareHesabeOmoomiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateShomareHesabeOmoomiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteShomareHesabeOmoomiCompletedEventHandler(object sender, DeleteShomareHesabeOmoomiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteShomareHesabeOmoomiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteShomareHesabeOmoomiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserGroupTreeWithFilterCompletedEventHandler(object sender, GetUserGroupTreeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroupTreeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroupTreeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GetUserGroupTree[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GetUserGroupTree[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckEmailCompletedEventHandler(object sender, CheckEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_CheckEmail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_CheckEmail)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMeasureUnitDetailCompletedEventHandler(object sender, GetMeasureUnitDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasureUnitDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasureUnitDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MeasureUnit Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MeasureUnit)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMeasureUnitWithFilterCompletedEventHandler(object sender, GetMeasureUnitWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasureUnitWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasureUnitWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_MeasureUnit[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_MeasureUnit[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertMeasureUnitCompletedEventHandler(object sender, InsertMeasureUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMeasureUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMeasureUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateMeasureUnitCompletedEventHandler(object sender, UpdateMeasureUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMeasureUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMeasureUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteMeasureUnitCompletedEventHandler(object sender, DeleteMeasureUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMeasureUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMeasureUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAshkhaseHoghoghi_DetailDetailCompletedEventHandler(object sender, GetAshkhaseHoghoghi_DetailDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAshkhaseHoghoghi_DetailDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAshkhaseHoghoghi_DetailDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AshkhaseHoghoghi_Detail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AshkhaseHoghoghi_Detail)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAshkhaseHoghoghi_DetailWithFilterCompletedEventHandler(object sender, GetAshkhaseHoghoghi_DetailWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAshkhaseHoghoghi_DetailWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAshkhaseHoghoghi_DetailWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_AshkhaseHoghoghi_Detail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_AshkhaseHoghoghi_Detail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertAshkhaseHoghoghi_DetailCompletedEventHandler(object sender, InsertAshkhaseHoghoghi_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAshkhaseHoghoghi_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAshkhaseHoghoghi_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateAshkhaseHoghoghi_DetailCompletedEventHandler(object sender, UpdateAshkhaseHoghoghi_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAshkhaseHoghoghi_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAshkhaseHoghoghi_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAshkhaseHoghoghi_DetailCompletedEventHandler(object sender, DeleteAshkhaseHoghoghi_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAshkhaseHoghoghi_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAshkhaseHoghoghi_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserGroup_ModuleOrganDetailCompletedEventHandler(object sender, GetUserGroup_ModuleOrganDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroup_ModuleOrganDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroup_ModuleOrganDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_UserGroup_ModuleOrgan Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_UserGroup_ModuleOrgan)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserGroup_ModuleOrganWithFilterCompletedEventHandler(object sender, GetUserGroup_ModuleOrganWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroup_ModuleOrganWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroup_ModuleOrganWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_UserGroup_ModuleOrgan[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_UserGroup_ModuleOrgan[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertUserGroup_ModuleOrganCompletedEventHandler(object sender, InsertUserGroup_ModuleOrganCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUserGroup_ModuleOrganCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUserGroup_ModuleOrganCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateUserGroup_ModuleOrganCompletedEventHandler(object sender, UpdateUserGroup_ModuleOrganCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserGroup_ModuleOrganCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserGroup_ModuleOrganCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteUserGroup_ModuleOrganCompletedEventHandler(object sender, DeleteUserGroup_ModuleOrganCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserGroup_ModuleOrganCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserGroup_ModuleOrganCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInputInfoWithFilterCompletedEventHandler(object sender, GetInputInfoWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInputInfoWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInputInfoWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_InputInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_InputInfo[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertInputInfoCompletedEventHandler(object sender, InsertInputInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInputInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInputInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetChartOrganEjraeeDetailCompletedEventHandler(object sender, GetChartOrganEjraeeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChartOrganEjraeeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChartOrganEjraeeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ChartOrganEjraee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ChartOrganEjraee)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetChartOrganEjraeeWithFilterCompletedEventHandler(object sender, GetChartOrganEjraeeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChartOrganEjraeeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChartOrganEjraeeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ChartOrganEjraee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ChartOrganEjraee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void PermissionCompletedEventHandler(object sender, PermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void HashPassCompletedEventHandler(object sender, HashPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HashPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HashPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEmployeeWithFilterCompletedEventHandler(object sender, GetEmployeeWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Employee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEmployeeDetailCompletedEventHandler(object sender, GetEmployeeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Employee)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertEmployeeCompletedEventHandler(object sender, InsertEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateEmployeeCompletedEventHandler(object sender, UpdateEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteEmployeeCompletedEventHandler(object sender, DeleteEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRasteWithFilterCompletedEventHandler(object sender, GetRasteWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRasteWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRasteWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Raste[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Raste[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStateWithFilterCompletedEventHandler(object sender, GetStateWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStateWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStateWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_State[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_State[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStateDetailCompletedEventHandler(object sender, GetStateDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStateDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStateDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_State Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_State)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertStateCompletedEventHandler(object sender, InsertStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateStateCompletedEventHandler(object sender, UpdateStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteStateCompletedEventHandler(object sender, DeleteStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCityWithFilterCompletedEventHandler(object sender, GetCityWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCityWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCityWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_City[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCityDetailCompletedEventHandler(object sender, GetCityDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCityDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCityDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_City Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_City)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCityCompletedEventHandler(object sender, InsertCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCityCompletedEventHandler(object sender, UpdateCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCityCompletedEventHandler(object sender, DeleteCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetOrganizationWithFilterCompletedEventHandler(object sender, GetOrganizationWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Organization[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Organization[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetOrganizationDetailCompletedEventHandler(object sender, GetOrganizationDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Organization Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Organization)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertOrganizationCompletedEventHandler(object sender, InsertOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateOrganizationCompletedEventHandler(object sender, UpdateOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteOrganizationCompletedEventHandler(object sender, DeleteOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetChartOrganWithFilterCompletedEventHandler(object sender, GetChartOrganWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChartOrganWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChartOrganWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ChartOrgan[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ChartOrgan[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetChartOrganDetailCompletedEventHandler(object sender, GetChartOrganDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChartOrganDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChartOrganDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ChartOrgan Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ChartOrgan)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertChartOrganCompletedEventHandler(object sender, InsertChartOrganCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertChartOrganCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertChartOrganCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateChartOrganCompletedEventHandler(object sender, UpdateChartOrganCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateChartOrganCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateChartOrganCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteChartOrganCompletedEventHandler(object sender, DeleteChartOrganCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteChartOrganCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteChartOrganCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetModuleWithFilterCompletedEventHandler(object sender, GetModuleWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModuleWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModuleWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Module[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Module[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetModuleDetailCompletedEventHandler(object sender, GetModuleDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModuleDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModuleDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Module Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Module)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertModuleCompletedEventHandler(object sender, InsertModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateModuleCompletedEventHandler(object sender, UpdateModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteModuleCompletedEventHandler(object sender, DeleteModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetModule_OrganWithFilterCompletedEventHandler(object sender, GetModule_OrganWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModule_OrganWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModule_OrganWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Module_Organ[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Module_Organ[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetModule_OrganDetailCompletedEventHandler(object sender, GetModule_OrganDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModule_OrganDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModule_OrganDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Module_Organ Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Module_Organ)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertModule_OrganCompletedEventHandler(object sender, InsertModule_OrganCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertModule_OrganCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertModule_OrganCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateModule_OrganCompletedEventHandler(object sender, UpdateModule_OrganCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateModule_OrganCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateModule_OrganCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteModule_OrganCompletedEventHandler(object sender, DeleteModule_OrganCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteModule_OrganCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteModule_OrganCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMasoulinWithFilterCompletedEventHandler(object sender, GetMasoulinWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasoulinWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasoulinWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Masoulin[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Masoulin[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMasoulinDetailCompletedEventHandler(object sender, GetMasoulinDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasoulinDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasoulinDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Masoulin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Masoulin)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertMasoulinCompletedEventHandler(object sender, InsertMasoulinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMasoulinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMasoulinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateMasoulinCompletedEventHandler(object sender, UpdateMasoulinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMasoulinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMasoulinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMasuolin_ZirListCompletedEventHandler(object sender, GetMasuolin_ZirListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasuolin_ZirListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasuolin_ZirListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Masuolin_ZirList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Masuolin_ZirList[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMasoulin_DetailWithFilterCompletedEventHandler(object sender, GetMasoulin_DetailWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasoulin_DetailWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasoulin_DetailWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Masoulin_Detail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Masoulin_Detail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMasoulin_DetailDetailCompletedEventHandler(object sender, GetMasoulin_DetailDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasoulin_DetailDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasoulin_DetailDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Masoulin_Detail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Masoulin_Detail)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertMasoulin_DetailCompletedEventHandler(object sender, InsertMasoulin_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMasoulin_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMasoulin_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateMasoulin_DetailCompletedEventHandler(object sender, UpdateMasoulin_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMasoulin_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMasoulin_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteMasoulin_DetailCompletedEventHandler(object sender, DeleteMasoulin_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMasoulin_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMasoulin_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMasoulin_DetailListCompletedEventHandler(object sender, GetMasoulin_DetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasoulin_DetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasoulin_DetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Masoulin_DetailList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Masoulin_DetailList[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserWithFilterCompletedEventHandler(object sender, GetUserWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_User[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserDetailCompletedEventHandler(object sender, GetUserDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_User)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertUserCompletedEventHandler(object sender, InsertUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UserPassUpdateCompletedEventHandler(object sender, UserPassUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserPassUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserPassUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChangePassCompletedEventHandler(object sender, ChangePassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ExistUserCompletedEventHandler(object sender, ExistUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectUserByUserIdCompletedEventHandler(object sender, SelectUserByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectUserByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectUserByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_User[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateActiveUserCompletedEventHandler(object sender, UpdateActiveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateActiveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateActiveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPermissionWithFilterCompletedEventHandler(object sender, GetPermissionWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermissionWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermissionWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_Permission[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_Permission[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertPermissionCompletedEventHandler(object sender, InsertPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeletePermissionCompletedEventHandler(object sender, DeletePermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CopyPermissionCompletedEventHandler(object sender, CopyPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteChildUserGroupPermissionCompletedEventHandler(object sender, DeleteChildUserGroupPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteChildUserGroupPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteChildUserGroupPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserGroupWithFilterCompletedEventHandler(object sender, GetUserGroupWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroupWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroupWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_UserGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_UserGroup[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserGroupDetailCompletedEventHandler(object sender, GetUserGroupDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroupDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroupDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_UserGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_UserGroup)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertUserGroupCompletedEventHandler(object sender, InsertUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateUserGroupCompletedEventHandler(object sender, UpdateUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteUserGroupCompletedEventHandler(object sender, DeleteUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUser_GroupWithFilterCompletedEventHandler(object sender, GetUser_GroupWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUser_GroupWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUser_GroupWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_User_Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_User_Group[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUser_GroupDetailCompletedEventHandler(object sender, GetUser_GroupDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUser_GroupDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUser_GroupDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_User_Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_User_Group)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertUser_GroupCompletedEventHandler(object sender, InsertUser_GroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUser_GroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUser_GroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateUser_GroupCompletedEventHandler(object sender, UpdateUser_GroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUser_GroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUser_GroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteUser_GroupCompletedEventHandler(object sender, DeleteUser_GroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUser_GroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUser_GroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetApplictionPartWithFilterCompletedEventHandler(object sender, GetApplictionPartWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplictionPartWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplictionPartWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ApplictionPart[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ApplictionPart[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetZirListHaWithFilterCompletedEventHandler(object sender, GetZirListHaWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZirListHaWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZirListHaWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ZirListHa[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ZirListHa[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetZirListHaDetailCompletedEventHandler(object sender, GetZirListHaDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZirListHaDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZirListHaDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_ZirListHa Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_ZirListHa)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertZirListHaCompletedEventHandler(object sender, InsertZirListHaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertZirListHaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertZirListHaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateZirListHaCompletedEventHandler(object sender, UpdateZirListHaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateZirListHaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateZirListHaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteZirListHaCompletedEventHandler(object sender, DeleteZirListHaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteZirListHaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteZirListHaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFileWithFilterCompletedEventHandler(object sender, GetFileWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_File[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDateCompletedEventHandler(object sender, GetDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_GetDate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_GetDate)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDigitalArchiveTreeStructureDetailCompletedEventHandler(object sender, GetDigitalArchiveTreeStructureDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigitalArchiveTreeStructureDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDigitalArchiveTreeStructureDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DigitalArchiveTreeStructure Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DigitalArchiveTreeStructure)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDigitalArchiveTreeStructureWithFilterCompletedEventHandler(object sender, GetDigitalArchiveTreeStructureWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigitalArchiveTreeStructureWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDigitalArchiveTreeStructureWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OBJ_DigitalArchiveTreeStructure[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OBJ_DigitalArchiveTreeStructure[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertDigitalArchiveTreeStructureCompletedEventHandler(object sender, InsertDigitalArchiveTreeStructureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDigitalArchiveTreeStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDigitalArchiveTreeStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClsError Error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClsError)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591