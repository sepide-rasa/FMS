@model IEnumerable<NewFMS.WCF_Common.OBJ_Organization>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{

    var X = Html.X();
}
<script src="~/Scripts/accounting.js"></script>
<script>
</script>
@(X.Window().Title("سازمان ها").Border(false)
                .ID("Organization")
            .Closable(true)
            .Maximized(true)
       //  .Width(500)
           .Height(100)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
                   
            .Items(

                    X.FormPanel().Border(false)
                    .Border(false)
                    .AutoScroll(true)
                        .TopBar(
                                Html.X().Toolbar()
                                .Items(
                                    X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Add).ToolTip("کلید میانبر F8")
                                                .Listeners(li => li.Click.Handler = "SaveOrganization();"),
                                    X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).ToolTip("کلید میانبر F2")
                                                .Listeners(Li => Li.Click.Handler = "EditOrganization();"),
                                    X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).ToolTip("کلید میانبر F9")
                                    .Listeners(de =>
                                        {
                                            de.Click.Handler = "DeleteOrganization();";
                                        })
                                )
                            )

               
                        
                    
                       
                        .Layout(Ext.Net.LayoutType.Table)
                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                        
                        .Defaults(new { Margin = 10 })
                        .Items(
                            X.Hidden().ItemID("fldId"),
                            X.Hidden().ItemID("fldFatherId"),
                          X.TextField()
                                .ItemID("txtTitle")
                                .FieldLabel("عنوان")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .AllowBlank(false)
                                .BlankText("لطفا عنوان را وارد کنید.")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                    , X.ComboBox()
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .FieldLabel("شهرستان")
                        .ItemID("CboCity")
                        .TypeAhead(true)
                        .Editable(false)
                        .QueryMode(DataLoadMode.Local)
                        .BlankText("لطفا شهرستان را انتخاب کنید.")
                        .ForceSelection(true)
                        .TriggerAction(TriggerAction.All)
                            .DisplayField("fldName")
                        .ValueField("fldId")
                        .EmptyText("شهرستان ...")
        //.SelectedItems(new { Value = "1" })
                        .Store(X.Store()
                        .Model(X.Model()
                        .IDProperty("fldId")
                        .Fields(
                            new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                )
                                    )
                        .Proxy(X.AjaxProxy()
                        .Url(Url.Action("GetCity"))
                        .Reader(X.JsonReader().Root("data"))
                                )
        //.Listeners(li => li.DataChanged.Handler = "LoadTeacherTakmili();")
                                )
                        .AllowBlank(false)
                           , X.TextField()
                                .ItemID("txtPostalCode")
                                .FieldLabel("کد پستی")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .AllowBlank(false)
                                .BlankText("لطفا کد پستی را وارد کنید.")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                .Weight(50)
                                    .Plugins(X.InputMask()
                                .Mask("AAAAAAAAAA")
                                .UnmaskOnBlur(true)
                                .ClearWhenInvalid(true)
                                .MaskSymbols(ls =>
                                {
                                    ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                })
                            )

                        , X.TextField()
                            .ItemID("txtCodeEghtesadi")
                        .FieldLabel("کد اقتصادی")
                        .MsgTarget(Ext.Net.MessageTarget.Side)
                        .AllowBlank(false)
                        .BlankText("لطفا کد اقتصادی را وارد کنید.")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                            , X.TextField()
                                .ItemID("txtTelphon")
                            .FieldLabel("تلفن")
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                            .AllowBlank(false)
                            .BlankText("لطفا تلفن را وارد کنید.")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                , X.TextArea()
                                .ItemID("txtAddress")
                            .FieldLabel("آدرس")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .Width(160)
                        , X.TextArea()
                        .ItemID("txtDesc")
                        .FieldLabel("توضیحات")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .Width(160).ColSpan(2)

              //      )
               
                   // )
                    
                       )    
                       , X.FieldSet().Border(false)
                                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                        .Defaults(new { Margin = 3 })
                                    .Items(
                                              X.FileUploadField()
                                    .ID("FileUploadField1")
                                    .ButtonOnly(true).ButtonText("انتخاب عکس")
                                    .DirectEvents(l =>
                                            {
                                                l.Change.Action = "Upload";
                                            }
                                        )
                                       .Listeners(l => l.Change.Fn = "showFile")
                                        .Icon(Ext.Net.Icon.DiskUpload)
                                       
                                    , X.Container().Content(@<div id="fi-button-msg" style="display:none;"></div>)
                                         , X.Label()
                                        .Text("حداکثر حجم مجاز برای بارگذاری 100 کیلوبایت می باشد.")
                                //, X.Button()
                                //.ID("ShowButton")
                                //.Text("دانلود عکس")
                                //.Listeners
                                //(l =>
                                //    {
                                //        l.Click.Handler = "Download();";
                                //    }
                                //)

                                
                                        , X.Image().ItemID("Image").ImageUrl("~/Content/Blank.jpg").Width(110).Height(130).Border(true)
                                    )
                             , X.TreePanel()
                                    .ID("TreeOrganization")
                                        .AutoScroll(true)
                                        .Width(300)
                                        .ColSpan(2)
                                        .Height(450)
                                        .UseArrows(true)
                                        .Border(false)
                                            .Store(
                        Html.X().TreeStore()
                            .Proxy(
                                        Html.X().AjaxProxy().Url(Url.Action("Node"))
                            )
                    )

                                        .Listeners(a =>
                                        {
                                            a.ItemClick.Handler = "GetId(record)";
                                            a.AfterRender.Handler = "this.getRootNode().expand();";
                                            a.BeforeLoad.Fn = "nodeLoad";
                                        })
                           .Root(Html.X().Node().NodeID("0").Text("سازمان ها"))

                                        .View(
                                        X.TreeView()
                                        .Plugins(
                                        X.TreeViewDragDrop().AppendOnly(true).ContainerScroll(true)

                                    )
                     )            
              )
            )
        
<script type="text/javascript">

    var NodeId;
    var id;
    var newParentid;
    var fldFatherId;
    var fldId;
    var UserImageId = 0;
    var UsersId = 0;
    var showFile = function (fb, v) {
        if (v) {
            var el = Ext.get('fi-button-msg');
            el.update('<b>فایل انتخاب شده:</b> ' + v);

            if (!el.isVisible()) {
                el.slideIn('t', {
                    duration: .2,
                    easing: 'easeIn',
                    callback: function () {
                        el.highlight();
                    }
                });
            } else {
                el.highlight();
            }
        }
    };
   /* function Download() {
        Ext.net.DirectMethod.request({
            url: '/Comon/Organization/HaveFile',
            params: {
                UsersId: UsersId
            },
            success: function (data) {
                if (data.HaveFile)*/
                   @* window.location.href = '@Url.Content("~/Comon/Organization/Download?UserId=")' + UsersId;*@
               /* else {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "عکس مورد نظر انتخاب نشده است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });
    }*/

    var nodeLoad = function (store, operation, options) {
        var node = operation.node;
        Ext.net.DirectMethod.request({
            url: '/Comon/Organization/NodeLoad',
            params: {
                nod: node.getId()
            },
            success: function (result) {
                node.set('loading', false);
                node.set('loaded', true);
                node.appendChild(result);
                node.expand();
            },

            failure: function (errorMsg) {
                Ext.Msg.alert('Failure', errorMsg);
            }
        });

        return false;
    };

    function Reload() {
        App.TreeOrganization.store.load();
    };

    function GetId(record) {
        NodeId = record.getId();
    };

    function EditOrganization() {

        if (NodeId != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Comon/Organization/Details',
                params: {
                    id: NodeId
                },
                success: function (data) {

                    var CboCity = App.Organization.queryById("CboCity");
                    CboCity.setValue(data.fldCityId);
                    var txtCodeEghtesadi = App.Organization.queryById('txtCodeEghtesadi');
                    txtCodeEghtesadi.setValue(data.fldCodeEghtesadi);
                    var fldTitle = App.Organization.queryById('txtTitle');
                    fldTitle.setValue(data.fldName);
                    var txtPostalCode = App.Organization.queryById('txtPostalCode');
                    txtPostalCode.setValue(data.fldCodePosti);
                    var txtTelphon = App.Organization.queryById('txtTelphon');
                    txtTelphon.setValue(data.fldTelphon);
                    var txtAddress = App.Organization.queryById('txtAddress');
                    txtAddress.setValue(data.fldAddress);
                    var txtDesc = App.Organization.queryById('txtDesc');
                    txtDesc.setValue(data.fldDesc);
                    var FatherId = App.Organization.queryById('fldFatherId');
                    FatherId.setValue(data.fldPId);
                    var Id = App.Organization.queryById('fldId');
                    Id.setValue(data.fldId);
                    Ext.net.Mask.hide();
                    UserImageId = data.fldFileId;
                    UsersId = data.fldId;
                    var url = '/Comon/Organization/ShowPic';
                    var g = url + '?FileId=' + data.fldFileId;
                    var k = App.Organization.queryById('Image');
                    k.setImageUrl(g);
                }
            });

        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک گزینه از سازمان ها را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function SaveOrganization() {

        var Id = App.Organization.queryById('fldId');
        var CboCity = App.Organization.queryById("CboCity");
        var FatherId = App.Organization.queryById("fldFatherId");
        var txtCodeEghtesadi = App.Organization.queryById('txtCodeEghtesadi');
        var txtTitle = App.Organization.queryById('txtTitle');
        var txtPostalCode = App.Organization.queryById('txtPostalCode');
        var txtTelphon = App.Organization.queryById('txtTelphon');
        var txtAddress = App.Organization.queryById('txtAddress');
        var txtDesc = App.Organization.queryById('txtDesc');
        var er = false;
        if (txtTitle.validate() == false) {
            er = true;
        }
        if (txtPostalCode.getValue().length < 10) {
            alert("کد پستی وارد شده نامعتبر است.");
        }
        if (txtPostalCode.validate() == false) {
            er = true;
        }
        if (CboCity.validate() == false) {
            er = true;
        }
        if (txtCodeEghtesadi.validate() == false) {
            er = true;
        }
        if (txtTelphon.validate() == false) {
            er = true;
        }
        if (txtAddress.validate() == false) {
            er = true;
        }
        if (Id.getValue() == '' || Id.getValue() == 0) {
            fldFatherId = NodeId;
            fldId = Id.getValue();
        }
        else {
            fldFatherId = FatherId.getValue();
            fldId = Id.getValue();
        }
        if (er == true)
            return;
        Ext.net.DirectMethod.request({
            url: '/Comon/Organization/Save',
            params: {
                fldId: fldId,
                fldPId: fldFatherId,
                fldName: txtTitle.getValue(),
                fldCityId: CboCity.getValue(),
                fldAddress: txtAddress.getValue(),
                fldTelphon: txtTelphon.getValue(),
                fldCodeEghtesadi: txtCodeEghtesadi.getValue(),
                fldCodePosti: txtPostalCode.getValue(),
                fldFileId: UserImageId,
                fldDesc: txtDesc.getValue()
            },
            success: function (data) {
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: Ext.MessageBox.INFO,
                    buttons: Ext.MessageBox.OK
                });
                Reload(),
               ClearOrganization()
            }

        });
    }

    function DeleteEmployee() {
        if (NodeId != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Comon/Organization/Delete',
                            params: {
                                id: NodeId
                            },
                            success: function (data) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.INFO,
                                    buttons: Ext.MessageBox.OK
                                });
                                Reload()
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک گزینه از سازمان ها را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ClearOrganization() {
        App.Organization.queryById('fldId').setValue(0);
        App.Organization.queryById("CboCity").setValue('');
        App.Organization.queryById("fldFatherId").setValue(0);
        App.Organization.queryById('txtTelphon').setValue('');
        App.Organization.queryById('txtTitle').setValue('');
        App.Organization.queryById('txtCodeEghtesadi').setValue('');
        App.Organization.queryById('txtPostalCode').setValue('');
        App.Organization.queryById('txtDesc').setValue('');

    }
</script>
