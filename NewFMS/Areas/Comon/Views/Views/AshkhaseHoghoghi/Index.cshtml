@model IEnumerable<NewFMS.WCF_Common.OBJ_AshkhaseHoghoghi>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<br />
@(Html.X().Panel()
        .ID("SabtAshkhaseHoghoghi")
        .Title("ثبت اشخاص حقوقی")
                .Listeners(li => { li.AfterRender.Handler = "AshkhaseHoghoghiSetSize();SelectType();"; li.Render.Fn = "addKeyMapSabtAshkhaseHoghoghi"; })
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
        .Border(false)
       .Items(
    X.Panel().Border(false).Items(X.Label()),
        X.Panel().Border(false).Buttons(
                X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ItemID("btnSaveAshkhaseHoghoghi")
                .Listeners(l => { l.Click.Handler = "SaveAshkhaseHoghoghi();"; })
            , X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                .Listeners(l => { l.Click.Handler = "LoadAshkhaseHoghoghi();"; })
            , X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)
                    .Listeners(l => { l.Click.Handler = "DeleteAshkhaseHoghoghi();"; })
            , X.Button().Text("اطلاعات تکمیلی").Icon(Ext.Net.Icon.ApplicationViewDetail)
            .Listeners(l => { l.Click.Handler = "AshkhasHoghoghiDetail();"; })
                , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help).Listeners(l => { l.Click.Handler = "HelpAshkhaseHoghoghi();"; })
            , X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)
                    .OnClientClick("App.SabtAshkhaseHoghoghi.destroy()")
        ).ButtonAlign(Ext.Net.Alignment.Center)
        .Items(
                X.FormPanel().Border(false)
             .Layout(LayoutType.VBox)
                         .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
            X.FieldSet().Border(false).Items(
                    X.FieldSet().Border(true).Title("اطلاعات شخص حقوقی").Height(80)
                     .Defaults(new { Margin = 2 })
                    .Layout(LayoutType.Table)
                    .LayoutConfig(new TableLayoutConfig { Columns = 6 })
                .Items(
                    X.Hidden().ItemID("fldId"),
                        X.Label("نوع شخص:"),
                        X.ComboBox()
                        .ItemID("CboTypeShakhs")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .Editable(false)
                        .TypeAhead(true)
                        .BlankText("لطفا نوع شرکت را انتخاب کنید.")
                        .QueryMode(DataLoadMode.Local)
                        .TriggerAction(TriggerAction.All)
                        .EmptyText("شرکت")
    //.FieldLabel("تابعیت")
                        .Items(
                            new ListItem("حقوقی", "1"),
                            new ListItem("سایر", "2")
                            )
                            .SelectedItems(new { Value = "1" })
                            .Listeners(l =>
                            {
                                /*l.Select.Handler = "SelectType();";*/
                                /*l.Change.Handler="SelectType();";*/
                            }),
                        X.Label("نوع شرکت:"),
                        X.ComboBox()
                        .ItemID("CboType")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .Editable(false)
                        .TypeAhead(true)
                        .BlankText("لطفا نوع شرکت را انتخاب کنید.")
                        .QueryMode(DataLoadMode.Local)
                        .TriggerAction(TriggerAction.All)
                        .EmptyText("شرکت")
        //.FieldLabel("تابعیت")
                        .Items(
                            new ListItem("داخلی", "0"),
                            new ListItem("خارجی", "1")
                            )
                            .SelectedItems(new { Value = "0" })
                            .Listeners(l =>
                            {
                                l.Select.Handler = "SelectType();";
                                /*l.Change.Handler="SelectType();";*/
                            }),
                    X.Label("نام:"),
                        X.TextField().Width(200)
                    .ItemID("txtName")
    // .FieldLabel("نام")
    // .MsgTarget(Ext.Net.MessageTarget.Side)
                    .AllowBlank(false)
                    .BlankText("لطفا نام را وارد کنید.")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                            .MaxLength(250)
                            .EnforceMaxLength(true)
                    .MaskRe("[a-z,A-Z,آ-ی, ,_,-]")
                    .AutoFocus(true)
                    , X.Label("شناسه ملی:")
                    .ItemID("lblShenaseMelli")
                    ,X.FieldSet()
                    .Border(false)
                    .ItemID("fidShenaseMelli")
                    .Padding(0)
                    .Layout(LayoutType.HBox)
                    .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle })
                       .Items( 
                     X.TextField()
                        .ItemID("txtShenaseMelli")
                       
                                        .FieldStyle("direction:ltr;")
                    .AllowBlank(false)
                    .BlankText("لطفا شناسه ملی را وارد کنید.")
                    .MaxLength(11)
                    .EnforceMaxLength(true)
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                    .MaskRe("[0-9]")
                    , X.HyperLink()
                    .ItemID("lnkEstelam")
                    .Target("_blank")
                    .NavigateUrl("http://www.ilenc.ir/LegalPersonSearch.aspx")
                    .ImageUrl("/Content/icons/mini/استعلام.png")
                    .Text("استعلام شناسه ملی")
                    .Listeners(l=>l.AfterRender.Fn="linkEstelam")
                    )
                    , X.TextField()
                        .ItemID("txtCodeFaragir")
                    .FieldStyle("direction:ltr;")
                    .AllowBlank(false)
                    .BlankText("لطفا کد فراگیر را وارد کنید.")
                    .MaxLength(11)
                    .EnforceMaxLength(true)
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                    .MaskRe("[0-9]")
                  
                    
                            , X.Label("شماره ثبت:")
                    , X.TextField()
                            .ItemID("txtShomareSabt")
                                    .FieldStyle("direction:ltr;")
                    .AllowBlank(false)
                    .BlankText("لطفا شماره ثبت را وارد کنید.")
                    .MaxLength(20)
                    .EnforceMaxLength(true)
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                    .MaskRe("[0-9]")

                    , X.Label("توضیحات:"),
                        X.TextField()
                    .ItemID("txtDesc")
                    .Width(200)
                    .ColSpan(6)
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                    )
)
                )
            ),
            X.GridPanel()
            .ItemID("AshkhaseHoghoghiGrid")
                .BottomBar(X.PagingToolbar())
                .Store(
                                    X.StoreForModel()
                                                .Listeners(l => l.DataChanged.Handler = "App.SabtAshkhaseHoghoghi.queryById('AshkhaseHoghoghiGrid').selModel.refresh();")
                                .Proxy(Html.X().AjaxProxy()
                                    .Url(Url.Action("Read"))
                                    .Reader(Html.X().JsonReader().Root("data"))
                                )
                                .PageSize(20)
                                .RemoteFilter(true)
                                .RemotePaging(true)
                            )
                        .View(
                            Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                        .Plugins(X.FilterHeader().Remote(true))
                         .Listeners(l =>
                         {
                             l.AfterRender.Handler = "var grid = App.SabtAshkhaseHoghoghi.queryById('AshkhaseHoghoghiGrid');grid.setHeight(App.Win.getHeight() - 300); ";

                         })
            .ColumnModel(
                            Html.X().RowNumbererColumn(),
                                Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                Html.X().Column().DataIndex(Model, m => m.fldName).Text("نام").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldShenaseMelli).Text("شناسه ملی").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldShomareSabt).Text("شماره ثبت").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldTypeShakhs).Text("کد نوع شرکت").Flex(2).Hidden(true),
                                Html.X().Column().DataIndex(Model, m => m.fldTypeShakhsName).Text("نوع شرکت").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(10)
        )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
        )
        )

)
<script type="text/javascript">
    function AshkhaseHoghoghiSetSize() {
        App.SabtAshkhaseHoghoghi.setWidth(App.Win.getWidth());
        var grid = App.SabtAshkhaseHoghoghi.queryById('AshkhaseHoghoghiGrid');
        grid.setHeight(App.Win.getHeight() - 300);
    }
    var linkEstelam = function (obj) {
        obj.tip = Ext.create('Ext.tip.ToolTip', {
            target: obj.getEl().getAttribute("id"),
            trackMouse: true,
            renderTo: document.body,
            html: this.htmlTip,
            width: 110,
            title: "استعلام شناسه ملی"
        });
    };

    function SelectType() {
       
        var CboType = App.SabtAshkhaseHoghoghi.queryById('CboType');
        var lblShenaseMelli = App.SabtAshkhaseHoghoghi.queryById('lblShenaseMelli');
        var txtShenaseMelli = App.SabtAshkhaseHoghoghi.queryById('txtShenaseMelli');
        var fidShenaseMelli = App.SabtAshkhaseHoghoghi.queryById('fidShenaseMelli');
        var txtCodeFaragir = App.SabtAshkhaseHoghoghi.queryById('txtCodeFaragir'); 
        if (CboType.getValue() == "1") {
            lblShenaseMelli.setText("کد فراگیر:");
            fidShenaseMelli.hide();
            txtCodeFaragir.show();
        }
        else {
            lblShenaseMelli.setText("شناسه ملی:");
            fidShenaseMelli.show();
            txtCodeFaragir.hide();
        }
    }

    function LoadAshkhaseHoghoghi() {
        var SelectedRow = App.SabtAshkhaseHoghoghi.queryById('AshkhaseHoghoghiGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Comon/AshkhaseHoghoghi/Details',
                params: {
                    Id: SelectedRow.data.fldId
                },
                success: function (data) {
                    var txtName = App.SabtAshkhaseHoghoghi.queryById('txtName');
                    txtName.setValue(data.fldName);
                    if (data.fldTypeShakhs == "0") {
                        var txtShenaseMelli = App.SabtAshkhaseHoghoghi.queryById('txtShenaseMelli');
                        txtShenaseMelli.setValue(data.fldShenaseMelli);
                    }
                    else {
                        var txtCodeFaragir = App.SabtAshkhaseHoghoghi.queryById('txtCodeFaragir');
                        txtCodeFaragir.setValue(data.fldShenaseMelli);
                    }
                  
                    var txtShomareSabt = App.SabtAshkhaseHoghoghi.queryById('txtShomareSabt');
                    txtShomareSabt.setValue(data.fldShomareSabt);

                    var txtDesc = App.SabtAshkhaseHoghoghi.queryById('txtDesc');
                    txtDesc.setValue(data.fldDesc);
                    var fldId = App.SabtAshkhaseHoghoghi.queryById('fldId');
                    fldId.setValue(data.fldId); 
                    var CboTypeShakhs = App.SabtAshkhaseHoghoghi.queryById('CboTypeShakhs');
                    CboTypeShakhs.setValue(data.fldSayer);
                    Ext.net.Mask.hide();
                    SelectType();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function AshkhasHoghoghiDetail() {
        var SelectedRow = App.SabtAshkhaseHoghoghi.queryById('AshkhaseHoghoghiGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Comon/AshkhaseHoghoghi/AshkhasHoghoghiDetails',
                params: {
                    Id: SelectedRow.data.fldId,
                    flag: 0,
                    FishId: 0,
                    ElamAvarezId: 0
                },
                success: function (data) {
                }
            })
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function SaveAshkhaseHoghoghi() {
        var txtName = App.SabtAshkhaseHoghoghi.queryById('txtName');
        var txtShenaseMelli = App.SabtAshkhaseHoghoghi.queryById('txtShenaseMelli');
        var txtShomareSabt = App.SabtAshkhaseHoghoghi.queryById('txtShomareSabt');
        var txtDesc = App.SabtAshkhaseHoghoghi.queryById('txtDesc');
        var fldId = App.SabtAshkhaseHoghoghi.queryById('fldId');
        var txtCodeFaragir = App.SabtAshkhaseHoghoghi.queryById('txtCodeFaragir');
        var CboType = App.SabtAshkhaseHoghoghi.queryById('CboType');
        var CboTypeShakhs = App.SabtAshkhaseHoghoghi.queryById('CboTypeShakhs');
        var er = false;
        var code = "";

        if (txtName.validate() == false) {
            er = true;
        }
        if (CboTypeShakhs.getValue() == 1) {
            if (txtShenaseMelli.validate() == "" && CboType.getValue() == "0") {
                Ext.MessageBox.show({
                    Name: "خطا",
                    msg: "لطفا شناسه ملی را وارد نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                return;
            }
            else if (txtCodeFaragir.validate() == false && CboType.getValue() == "1") {
                Ext.MessageBox.show({
                    Name: "خطا",
                    msg: "لطفا کد فراگیر را وارد نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                return;
            }
            if (txtShomareSabt.validate() == false) {
                er = true;
            }

            if (!checkShenaseMeli(txtShenaseMelli.getValue()) && CboType.getValue() == "0") {
                Ext.MessageBox.show({
                    Name: "خطا",
                    msg: "شناسه ملی نامعتبراست.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                er = true;
            }
        }
        
        if (er == true)
            return;
        if (CboType.getValue() == "0") {
            code = txtShenaseMelli.getValue();
        } 
        else {
            code = txtCodeFaragir.getValue();
        }
        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        Ext.net.DirectMethod.request({
            url: '/Comon/AshkhaseHoghoghi/Save',
            params: {
                fldId: fldId.getValue(),
                fldName: txtName.getValue(),
                fldShenaseMelli: code,
                fldShomareSabt: txtShomareSabt.getValue(),
                fldDesc: txtDesc.getValue(),
                fldTypeShakhs: CboType.getValue(),
                fldSayer: CboTypeShakhs.getValue()
            },
            success: function (data) {
                Ext.net.Mask.hide();
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    Name: data.MsgName,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.SabtAshkhaseHoghoghi.queryById('AshkhaseHoghoghiGrid').store.load();
                if (data.Er != 1)
                    ClearAshkhaseHoghoghi();
            }

        });
    }
    function HelpAshkhaseHoghoghi() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Comon/AshkhaseHoghoghi/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function DeleteAshkhaseHoghoghi() {
        var SelectedRow = App.SabtAshkhaseHoghoghi.queryById('AshkhaseHoghoghiGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                        Ext.net.DirectMethod.request({
                            url: '/Comon/AshkhaseHoghoghi/Delete',
                            params: {
                                id: SelectedRow.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.SabtAshkhaseHoghoghi.queryById('AshkhaseHoghoghiGrid').store.load();
                            }
                        });
                        Ext.net.Mask.hide();
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ClearAshkhaseHoghoghi() {
        App.SabtAshkhaseHoghoghi.queryById('fldId').setValue(0);
        App.SabtAshkhaseHoghoghi.queryById('txtName').setValue("");
        App.SabtAshkhaseHoghoghi.queryById('txtShenaseMelli').setValue("");
        App.SabtAshkhaseHoghoghi.queryById('txtShomareSabt').setValue("");
        App.SabtAshkhaseHoghoghi.queryById('txtCodeFaragir').setValue("");
        App.SabtAshkhaseHoghoghi.queryById('txtDesc').setValue("");
    }
    function checkShenaseMeli(code) {

        var L = code.length;

        if (L < 11 || parseInt(code) == 0) return false;

        if (parseInt(code.substr(3, 6)) == 0) return false;
        var c = parseInt(code.substr(10, 1));
        var d = parseInt(code.substr(9, 1)) + 2;
        var z = new Array(29, 27, 23, 19, 17);
        var s = 0;
        for (var i = 0; i < 10; i++)
            s += (d + parseInt(code.substr(i, 1))) * z[i % 5];
        s = s % 11; if (s == 10) s = 0;
        return (c == s);

    }
    var addKeyMapSabtAshkhaseHoghoghi = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.SabtAshkhaseHoghoghi.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtDesc") {
                        nextfld = App.SabtAshkhaseHoghoghi.queryById('btnSaveAshkhaseHoghoghi');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }
</script>