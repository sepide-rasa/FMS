@model IEnumerable<NewFMS.WCF_Common.OBJ_Masoulin_Detail>
@using Ext.Net.MVC;
@{
    var X = Html.X();
}

@(X.Window()
    .Maximized(true)
    .Height(400)
    .Title("مسئولیت ها")
    .Border(false)
    .Listeners(li => li.AfterRender.Handler = "MasoulinMap();")
    .ID("Masoulin")
    .Closable(true)
    .Layout(Ext.Net.LayoutType.Fit)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .AutoScroll(true)
    .Items(
        X.Panel()
            .Border(false)
            .ID("PnlMasoulin")
            .AutoScroll(true)
            .Items(
                X.Panel()
                    .ItemID("PnlGridHeader")
                    .Border(false)
                    .Title("تعریف مسئولین")
                    .Layout(Ext.Net.LayoutType.Fit)
                    .Items(
                        X.GridPanel()
                            .AutoScroll(true)
                            .Listeners(l => l.ItemClick.Handler = "ReloadGridDetail();")
                            .TopBar(
                                Html.X().Toolbar()
                                    .Items(
                                        X.Button()
                                            .Text("جدید")
                                            .Icon(Ext.Net.Icon.Add)
                                            .ToolTip("کلید میانبر F8")
                                            .Listeners(li => li.Click.Handler = "NewMasoulin();"),
                                        X.Button()
                                            .Text("ویرایش")
                                            .Icon(Ext.Net.Icon.Pencil)
                                            .ToolTip("کلید میانبر F2")
                                            .Listeners(Li => Li.Click.Handler = "EditMasoulin();"),
                                        X.Button()
                                            .Text("تعریف زیرلیست ها")
                                            .Icon(Ext.Net.Icon.ApplicationSideList)
                                            .Listeners(Li => Li.Click.Handler = "ZirList();"))
                                    )
                            .ItemID("GridHeader")
                            .BottomBar(X.PagingToolbar())
                            .Flex(2)
                            .Store(
                                X.StoreForModel()
                                    .Proxy(Html.X().AjaxProxy()
                                        .Url(Url.Action("ReadHeader"))
                                        .Reader(Html.X().JsonReader().Root("data")))
                            .PageSize(9)
                            .RemotePaging(true)
                            /*.Listeners(l => l.DataChanged.Handler = "App.Masoulin.queryById('GridHeader').selModel.refresh();")*/)
                            .View(
                                Html.X().GridView()
                                    .LoadingText("در حال بارگذاری...")
                                    .RTL(true))
                            .ColumnModel(
                                Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                                Html.X().Column().DataIndex(Model, m => m.fldTarikhEjra).Text("تاریخ اجرا").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldModuleTitle).Text("نام ماژول").Flex(7))
                            .SelectionModel(
                                Html.X().RowSelectionModel()
                                    .Mode(Ext.Net.SelectionMode.Single)
                                    )),
                        X.Panel()
                            .ItemID("PnlGridDetail")
                            .Title("مسئولیت")
                            .Border(false)
                            .Layout(Ext.Net.LayoutType.Fit)
                            .Items(
                                X.GridPanel()
                                    .AutoScroll(true)
                                    .ID("GridDetail")
                                    .Flex(2)
                                    .Store(
                                        X.StoreForModel()
                                            .PageSize(9)
                                            .RemotePaging(true)
                                            /*.Listeners(l => l.DataChanged.Handler = " App.Masoulin.queryById('GridDetail').selModel.refresh();")*/
                    )
                                    .View(
                                        Html.X().GridView()
                                            .LoadingText("در حال بارگذاری...")
                                            .RTL(true)
                    )
                                    .ColumnModel(
                                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Hideable(false).Flex(1),
                                        Html.X().Column().DataIndex(Model, m => m.fldOrderId).Text("ردیف").Flex(1),
                                        Html.X().Column().DataIndex(Model, m => m.fldNameEmployee).Text("نام و نام خانودگی").Flex(3),
                                        Html.X().Column().DataIndex(Model, m => m.fldNameOrgan).Text("پست سازمانی").Flex(8)
                        )
                )
                )
            )
            )

<script type="text/javascript">
    function MasoulinMap() {
        var TotalHeight = Ext.getBody().getViewSize().height-32;
        App.Masoulin.queryById('PnlGridHeader').setHeight((TotalHeight)/2);
        App.Masoulin.queryById('PnlGridDetail').setHeight((TotalHeight)/2);

        var k = new Ext.KeyMap(
            document,
            [{
                target: Ext.get('Masoulin'),
                scope: this,
                key: [119],
                fn: function (key, event) {
                    if (App.HogTab.activeTab.id == 'Masoulin' && App.NewMasoulin) {
                        if (App.NewMasoulin.active == false)
                            NewMasoulin();
                    }
                    else if (App.HogTab.activeTab.id == 'Masuolin' && !App.NewMasoulin)
                        NewMasoulin();
                }
            },
            {
                target: App.Masoulin.getTargetEl(),
                scope: this,
                key: [113],
                fn: function (key, event) {
                    if (App.HogTab.activeTab.id == 'Masoulin' && App.NewMasoulinHeader) {
                        if (App.NewMasoulinHeader.active == false)
                            EditMasoulin();
                    }
                    else if (App.HogTab.activeTab.id == 'Masuolin' && !App.NewMasoulinHeader)
                        EditMasoulin();
                }
            },
            {
                target: App.Masoulin.getTargetEl(),
                scope: this,
                key: [120],
                fn: function (key, event) {
                    if (App.HogTab.activeTab.id == 'Masuolin' && App.NewMasoulinHeader) {
                        if (App.NewMasoulinHeader.active == false)
                            DeleteMasoulin();
                    }
                    else if (App.HogTab.activeTab.id == 'Masuolin' && !App.NewMasoulinHeader)
                        DeleteMasoulin();
                }
            }]
            )
    }

    function ReloadGridDetail() {
        var SelectedRow = App.Masoulin.queryById("GridHeader").getSelectionModel().getLastSelected();
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: 'Comon/Masoulin/ReloadDetail',
            params: {
                HeaderId: SelectedRow.data.fldId,
            },
            success: function (result) {
                App.Masoulin.queryById('GridDetail').getStore().loadData(result);
                Ext.net.Mask.hide();
            }
        });
    }

    /*function ReloadMasoulin() {
        var SelectedRow = App.Masoulin.queryById('GridHeader').selModel.getLastSelected();

        Ext.net.DirectMethod.request({
            url: 'Comon/Masuolin/Rload?MasuolinHeaderId=' + SelectedRow.data.fldId,

            success: function (result) {
                App.Masoulin.queryById('Grid').getStore().loadData(data);

            }

        });
    }*/

    function ZirList() {
        var SelectedRow = App.Masoulin.queryById('GridHeader').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: 'Comon/Masuolin/NewZirList',
                params: {
                    id: SelectedRow.data.fldId,
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function EditMasoulin() {
        var SelectedRow = App.Masoulin.queryById('GridHeader').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: 'Comon/Masoulin/New',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر راانتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function NewMasoulin() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: 'Comon/Masoulin/New',
            params: {
                Id: 0
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

</script>