@model IEnumerable<NewFMS.WCF_Common.OBJ_TreeOrganPost>
@using Ext.Net.MVC;
@using NewFMS.Models;
@{

    var X = Html.X();
}
<style>
    .x-grid-cell {
        background-color: transparent;
    }
</style>
@(Html.X().Window().Modal(true)
            .Width(500).Height(350)
            .Title("پست سازمانی اجرائی")
                .ID("SearchOrganizationalPostsEjraee")
            .Closable(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                 X.Panel().Border(false)
                 .AutoScroll(true)
                        .Items(
                                    X.GridPanel().AutoScroll(true).Border(false)
                            .TopBar(
                                Html.X().Toolbar()
                                .Items(
                                     X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)
                                           .Listeners(li => li.Click.Handler = "NewSearchOrganizationalPostsEjraee();")
                                            , X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                                                    .Hidden(!Permission.haveAccess(683, Session["Username"].ToString(), Session["Password"].ToString(), Convert.ToInt32(Session["OrganId"])))
                                                                        .Listeners(li => li.Click.Handler = "EditOrganizationalPostsEjraee();")
                                        , X.Button().Text("انتخاب").Icon(Ext.Net.Icon.ArrowRedo)
                                                            .Listeners(li => li.Click.Handler = "NextSearchOrganizationalPostsEjraee();")

                                )
                            )
                                            .ItemID("GridSearchOrganizationalPostsEjraee").Flex(2)
                        .BottomBar(X.PagingToolbar())
                        .Height(317)
                        .ColumnWidth(0.6)
                        .Layout(Ext.Net.LayoutType.Column)
                        .Store(
                            X.StoreForModel()
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
        //.ExtraParams(x => x.Add(new { FieldName = @ViewBag.FieldName }))
                            )
                            .PageSize(10)
                            .RemoteFilter(true)
                            .RemotePaging(true)

                        )
                        .View(
                            Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                        )
                        .Plugins(X.FilterHeader().Remote(true))
                        .ColumnModel(
                                        Html.X().Column().DataIndex(Model, m => m.id).Text("کد").Flex(1),
                                        Html.X().Column().DataIndex(Model, m => m.fldOrgPostCode).Text("کد پست").Flex(2),
                                        Html.X().Column().DataIndex(Model, m => m.title).Text("عنوان پست").Flex(6),
                                        Html.X().Column().DataIndex(Model, m => m.Namechart).Text("چارت سازمانی").Flex(4)
                        )
                                    .Listeners(a => a.CellDblClick.Handler = "NextSearchOrganizationalPostsEjraee();")
                        .SelectionModel(
                            Html.X().RowSelectionModel()
                                .Mode(Ext.Net.SelectionMode.Single)
                        )

                    )
        )
)

<script type="text/javascript">
    var State = '@ViewBag.State';
    var Name = "";
    var NodeId_O = 0;
    @*var nodeLoadOrgan = function (store, operation, options) {
        var node = operation.node;
        Ext.net.DirectMethod.request({
            url: '/Comon/SearchOrganizationPost/NodeLoad',
            params: {
                nod: node.getId()
            },
            success: function (result) {
                node.set('loading', false);
                node.set('loaded', true);
                node.appendChild(result);
                node.expand();
            },

            failure: function (errorMsg) {
                Ext.Msg.alert('Failure', errorMsg);
            }
        });

        return false;
    };

    function GetId(record) {
        NodeId_O = record.getId();
        if (NodeId_O != 0) {
            Ext.net.DirectMethod.request({
                url: '/Comon/SearchOrganizationPost/GetName',
                params: {
                    id: NodeId_O
                },
                success: function (data) {
                    Name = data.fldName;
                    NextSearchOrganizationalPostsEjraee();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "شما مجاز به انتخاب گزینه مورد نظر نمی باشید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    };*@
    function NewSearchOrganizationalPostsEjraee() {
        Ext.net.DirectMethod.request({
            url: '/Comon/SearchOrganizationPostEjraee/New?Id=0',
        });
    }
    function NextSearchOrganizationalPostsEjraee() {
        var SelectedRow = App.SearchOrganizationalPostsEjraee.queryById('GridSearchOrganizationalPostsEjraee').selModel.getLastSelected();
        if (SelectedRow != null) {
             if (State == 1) {
                App.NewPersonalInfo.queryById('OrganizationPostEjraeeId').setValue(SelectedRow.data.id);
                App.NewPersonalInfo.queryById('txtOrganizationPostEjraee').setValue(SelectedRow.data.title + "_" + SelectedRow.data.fldOrgPostCode);

                var tipEjraee = Ext.create('Ext.tip.ToolTip', {
                    target: App.NewPersonalInfo.queryById('txtOrganizationPostEjraee').el,
                    trackMouse: true,
                    renderTo: Ext.getBody(),
                    bodyCls: "backtooltip",
                    listeners: {
                        beforeshow: function updateTipBody(tipEjraee) {
                            tipEjraee.update(SelectedRow.data.title + "_" + SelectedRow.data.fldOrgPostCode);
                        }
                    }
                });
            }
            App.SearchOrganizationalPostsEjraee.destroy();
        }

        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
       @* if (NodeId_O != 0) {
             if (State == 1)
           {
              /* var g = Ext.getCmp('GridItem');*/
               var g = Ext.getCmp('GridDetail');
               var sm = g.getSelectionModel();
               sm.getSelection()[0].set('TitlePost', Name);
               sm.getSelection()[0].set('fldOrganPostId', NodeId_O);

             }
             else if (State == 2) {
                 App.NewPersonalInfo.queryById('OrganizationPostId').setValue(NodeId_O);
                 App.NewPersonalInfo.queryById('txtOrganizationPost').setValue(Name);
             }
            App.SearchOrganizationalPostsEjraee.destroy();
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک گره را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
       }*@
    }

    function EditOrganizationalPostsEjraee() {
        var SelectedRow = App.SearchOrganizationalPostsEjraee.queryById('GridSearchOrganizationalPostsEjraee').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.DirectMethod.request({
                url: '/Comon/SearchOrganizationPostEjraee/New?Id=' + SelectedRow.data.id,
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>