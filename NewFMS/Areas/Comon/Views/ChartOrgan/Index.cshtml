@model IEnumerable<NewFMS.WCF_Common.OBJ_ChartOrgan>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{

    var X = Html.X();
}
<script src="~/Scripts/accounting.js"></script>
<script>
</script>

@(X.Window().Title("چارت سازمانی").Border(false)//.Modal(true)
                .ID("ChartOrgan1")
            .Closable(true)
               // .AutoScroll(true)
                .Width(700)//.Height(430)
            .CloseAction(Ext.Net.CloseAction.Destroy)
                   /*.KeyMap(Html.X().KeyMap()
                            .ID("ChartOrganMap")
                        .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                        .Binding(b =>
                        {
                            b.Add(Html.X().KeyBinding()
                                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                                .Handler("SaveChartOrgan(); ")
                            );
                            b.Add(Html.X().KeyBinding()
                                .KeysString(((int)Ext.Net.KeyCode.F2).ToString())
                                .Handler("EditChartOrgan(); ")
                            );
                            b.Add(Html.X().KeyBinding()
                                .KeysString(((int)Ext.Net.KeyCode.F9).ToString())
                                .Handler("DeleteChartOrgan(); ")
                            );

                        }))*/
            .Items(

                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                    .TopBar(
                            Html.X().Toolbar()
                            .Items(
                                X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Add)//.ToolTip("کلید میانبر F8")
                                            .Listeners(li => li.Click.Handler = "SaveChartOrgan1();")/*,
                                X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)//.ToolTip("کلید میانبر F2")
                                            .Listeners(Li => Li.Click.Handler = "EditChartOrgan1();"),
                                X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)//.ToolTip("کلید میانبر F9")
                                .Listeners(de =>
                                    {
                                        de.Click.Handler = "DeleteChartOrgan1();";
                                    })*/
                            )
                        ).Width(700).Height(430)
                .Items(
                         X.TabPanel().ID("ChartOrganTab1")
                    .AutoScroll(true).Border(false)
                    .Items(
                        X.Panel().ItemID("Panel")

                        .Layout(Ext.Net.LayoutType.Table)
                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns =6 })
                        .Title("سازمان ها")
                        .Defaults(new { Margin = 2 })
                        .Items(
                                X.Hidden().ItemID("fldId"),
                                X.Hidden().ItemID("fldOrganId"),
                            X.Hidden().ItemID("fldFatherId"),
                          X.Label("عنوان:"),
                          X.TextField()
                                .ItemID("txtTitle")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .AllowBlank(false)
                                .BlankText("لطفا عنوان را وارد کنید.")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                       , X.Label("واحد:")       
                       , X.ComboBox()
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                .ItemID("CboUnit")
                                .AllowBlank(false)
                                .BlankText("لطفا واحد را انتخاب کنید.")
                                .EmptyText("واحد")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .Items(
                                    Html.X().ListItem().Text("عادی").Value("1"),
                                    Html.X().ListItem().Text("دبیرخانه").Value("2")
                                    )
                                .SelectedItems(new { Value = "1" })
                        , X.Label("سازمان(INS):")
                        ,X.TextField()
                                .ItemID("txtOrgan").IconCls("Organ")
                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                .ReadOnly(true)
                                .Listeners(l =>
                                {
                                    l.IconClick.Handler = "SelectOrgan(45);";
                                    l.SpecialKey.Handler = "SelectOrgan(e.getKey());";
                                }
                        
                                    )
                            , X.Label("توضیحات:")
                                 , X.TextField().ColSpan(6)
                                    .ItemID("txtDesc").Width(570)
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                      
                       )   
                    )
                    , X.Panel().Border(false)
                    .Items(
                            X.TreePanel()
                                .ID("TreeChartOrgan1")
                                    .AutoScroll(true)
                                    .Width(300)
                                    .ColSpan(2)
                                    .Height(200)
                                    .UseArrows(true)
                                    .Border(false)
                                        .Store(
                    Html.X().TreeStore()
                        .Proxy(
                                    Html.X().AjaxProxy().Url(Url.Action("Node"))
                        )
                )

                                    .Listeners(a =>
                                    {
                                        a.ItemClick.Handler = "GetId1(record)";
                                    })
                       .Root(Html.X().Node().NodeID("0").Text("چارت سازمانی"))
                      .Listeners(l =>
                      {
                          l.BeforeLoad.Fn = "nodeLoad";
                      })

                                    .View(
                                    X.TreeView()
                                    .Plugins(
                                    X.TreeViewDragDrop().AppendOnly(true).ContainerScroll(true)

                                )
                        )

                )
            )
        )

)
<script type="text/javascript">
    var NodeId;
    var id;
    var newParentid;
    var fldFatherId;
    var fldId;
    var UserImageId = 0;
    var UsersId = 0;
    var OrganId = null;

    function SelectOrgan(Code) {
        if (Code == 45) {
            Ext.net.DirectMethod.request({
                url: '/comon/SearchOrganization/Index',
                params: {
                    State: 9,
                    FieldName: ""
                }
            });
        }
    }

    var nodeLoad = function (store, operation, options) {
        var node = operation.node;
         Ext.net.DirectMethod.request({
             url: '/Comon/ChartOrgan/NodeLoad',
            params: {
                nod: node.getId()
            },
            success: function (result) {
                node.set('loading', false);
                node.set('loaded', true);
                node.appendChild(result);
                node.expand();
            },

            failure: function (errorMsg) {
                Ext.Msg.alert('Failure', errorMsg);
            }
        });

        return false;
    };

    function Reload() {
        App.TreeChartOrgan1.store.load();
    };

    function GetId1(record) {
        NodeId = record.getId();
    };

    function EditChartOrgan1() {

        if (NodeId != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Comon/ChartOrgan/Details',
                params: {
                    id: NodeId
                },
                success: function (data) {

                    var CboUnit = App.ChartOrganTab1.activeTab.queryById("CboUnit");
                    CboUnit.setValue(data.fldNoeVahed);
                    var txtTitle = App.ChartOrganTab1.activeTab.queryById('txtTitle');
                    txtTitle.setValue(data.fldTitle);
                    var txtOrgan = App.ChartOrganTab1.activeTab.queryById('txtOrgan');
                    txtOrgan.setValue(data.fldOrganizationName);
                    var txtDesc = App.ChartOrganTab1.activeTab.queryById('txtDesc');
                    txtDesc.setValue(data.fldDesc);
                    var FatherId = App.ChartOrganTab1.activeTab.queryById('fldFatherId');
                    FatherId.setValue(data.fldPId);
                    var Id = App.ChartOrganTab1.activeTab.queryById('fldId');
                    Id.setValue(data.fldId);
                    OrganId = data.fldOrganId;
                    Ext.net.Mask.hide();
                }
            });

        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function SaveChartOrgan1() {

        var Id = App.ChartOrganTab1.queryById('fldId');
        var CboUnit = App.ChartOrganTab1.queryById("CboUnit");
        var FatherId = App.ChartOrganTab1.queryById("fldFatherId");
        var txtTitle = App.ChartOrganTab1.queryById('txtTitle');
        var txtDesc = App.ChartOrganTab1.queryById('txtDesc');
        var fldOrganId = App.ChartOrgan1.queryById('fldOrganId');
        var er =false;
        if (txtTitle.validate() == false) {
            er = true;
        }
       
        if (Id.getValue() == '' || Id.getValue() == 0) {
            fldFatherId = NodeId;
            fldId = Id.getValue();
        }
        else
        {
            fldFatherId = FatherId.getValue();
            fldId = Id.getValue();
        }
        if (OrganId != null)
            fldFatherId = null;
        if (er == true)
            return;
        Ext.net.DirectMethod.request({
            url: '/Comon/ChartOrgan/Save',
            params: {
                fldId: fldId,
                fldPId: fldFatherId,
                fldTitle: txtTitle.getValue(),
                fldNoeVahed: CboUnit.getValue(),
                fldOrganId: fldOrganId.getValue(),
                fldDesc: txtDesc.getValue()
            },
            success: function (data) {
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: Ext.MessageBox.INFO,
                    buttons: Ext.MessageBox.OK
                });
                Reload();
               ClearChartOrgan1();
            }

        });
    }


    function DeleteChartOrgan1() {

        if (NodeId != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Comon/ChartOrgan/Delete',
                            params: {
                                id: NodeId
                            },
                            success: function (data) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.INFO,
                                    buttons: Ext.MessageBox.OK
                                });
                                Reload()
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ClearChartOrgan1() {
        App.ChartOrganTab1.activeTab.queryById('fldId').setValue(0);
        App.ChartOrganTab1.activeTab.queryById("fldFatherId").setValue(0);
        App.ChartOrganTab1.activeTab.queryById('txtTitle').setValue('');
        App.ChartOrganTab1.activeTab.queryById('txtOrgan').setValue('');
        App.ChartOrganTab1.activeTab.queryById('txtDesc').setValue('');
        OrganId = null;
    }
</script>