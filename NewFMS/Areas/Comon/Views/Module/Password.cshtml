@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
<style>
    .lbl {
        color: red;
    }
</style>

@(Html.X().Window().Modal(true)
    .Width(250)
    .Title("رمز عبور ")
                        .ID("PassModule")
                    .Resizable(false)
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel().Border(false)
        .Border(false).ButtonAlign(Ext.Net.Alignment.Center)

        .DefaultButton("btn")
        .TitleAlign(Ext.Net.TitleAlign.Center)
               .Buttons(X.Button().Text("ورود").Icon(Ext.Net.Icon.Disk)
                           .Listeners(l =>
                           {
                               l.Click.Handler = "VorodModule();";

                           })
                           .ItemID("btnSave")
                            ,
                            X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                                                    .OnClientClick("App.PassModule.destroy();"))


                .Items(
                X.Panel().Border(false)

            .Items(
                X.FieldSet().Border(false)
                .Center()
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 1 })
                    .Defaults(new { Margin = 10 })
                .Items(
                    X.Hidden().ItemID("fldId"),
                    X.Label()
                    .ItemID("lblError")
                    .Cls("lbl")
                    , X.TextField()
                    .ItemID("txtPass")
                    .FieldLabel("رمز ورود")
                    .MsgTarget(Ext.Net.MessageTarget.Side)
                    .AllowBlank(false)
                    .BlankText("لطفا رمز ورود را وارد کنید.")
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                    .AutoFocus(true)
       

                       )

                )
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
)
        )
)
@(Html.X().KeyMap()
                      .ID("PassModuleMap")
                             .Target("={App.PassModule.getTargetEl()}")
            .Binding(b =>
            {
                b.Add(Html.X().KeyBinding()
                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                .Handler("if(App.BasicInfTab.activeTab.id=='Module')VorodModule();")
                );

            }))



<script type="text/javascript">


    function VorodModule() {
        var lblError = App.PassModule.queryById('lblError');
        var txtPass = App.PassModule.queryById('txtPass');
        var er = false;

        if (txtPass.validate() == false) {
            er = true;
        }
        if (er == true)
            return;

        Ext.net.DirectMethod.request({
            url: '/Comon/Module/Vorod',
            params: {
                Password: txtPass.getValue()
            },
            success: function (data) {
                if (data.Resualt == true) {
                    index();

                }
                else
                    lblError.setText("رمز عبور اشتباه است.");
            }

        });
    }
    function index() {
        Ext.net.DirectMethod.request({
            url: '/Comon/Module/Index',
            params: {
               
            }
        });
        App.PassModule.destroy();
    }
    function EnterNext() {
        var keyfield = App.PassModule.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }
</script>