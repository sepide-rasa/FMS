@model IEnumerable<NewFMS.WCF_Common.OBJ_ChartOrganEjraee>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<br />
@(Html.X().Panel()
        .ID("ChartOrganEjraee")
                .Title("تعریف چارت سازمانی اجرائی")

                .Listeners(l => l.AfterRender.Handler = "setHeightTreeEjraee()")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
        .Border(false)
       .Items(
    X.Panel().Border(false).Items(X.Label()),
        X.Panel().Border(false).Buttons(
                X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ItemID("btnSave")
                .Listeners(l => { l.Click.Handler = "SaveChartOrganEjraee();"; })
            , X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                .Listeners(l => { l.Click.Handler = "LoadChartOrganEjraee();"; })
            , X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)
                .Listeners(l => { l.Click.Handler = "DeleteChartOrganEjraee();"; })
            , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                .Listeners(l => { l.Click.Handler = "HelpChartOrganEjraee();"; })    
            , X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)
                .OnClientClick("App.ChartOrganEjraee.destroy()")
        ).ButtonAlign(Ext.Net.Alignment.Center)
        .Items(
            X.Panel().Border(false)
             .Layout(LayoutType.VBox)
                         .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                .Items(
                    X.FieldSet().Border(true).Title("اطلاعات چارت سازمانی اجرائی").Height(75)
                         .Defaults(new { Margin = 2 })
                        .Layout(LayoutType.Table)
                        .LayoutConfig(new TableLayoutConfig { Columns = 6 })
                    .Items(
                               X.Hidden().ItemID("fldId"),
                                    X.Hidden().ItemID("fldFatherId")
                                        , X.Label("عنوان:"),
                                  X.TextField()
                                        .ItemID("txtTitle")
        //.MsgTarget(Ext.Net.MessageTarget.Side)
                                        .AllowBlank(false)
                                        .AutoFocus(true)
                                        .BlankText("لطفا عنوان را وارد کنید.")
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                                , X.Label("واحد:")
                               , X.ComboBox()
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .ItemID("CboUnit")
                                        .AllowBlank(false)
                                        .Editable(false)
                                        .BlankText("لطفا واحد را انتخاب کنید.")
                                        .EmptyText("واحد")
        //.MsgTarget(Ext.Net.MessageTarget.Side)
                                        .Items(
                                            Html.X().ListItem().Text("عادی").Value("1"),
                                            Html.X().ListItem().Text("دبیرخانه").Value("2")
                                            )
                                        .SelectedItems(new { Value = "1" })
                                            , X.Label("سازمان(INS):")
                                , X.TextField()
                                        .ItemID("txtOrgan")
        // .MsgTarget(Ext.Net.MessageTarget.Side)
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .ReadOnly(true)
                                        .Listeners(l =>
                                        {
                                            l.IconClick.Handler = "SelectOrgan(45);";
                                            l.SpecialKey.Handler = "SelectOrgan(e.getKey());";
                                        }

                                            )
                                             , X.Label("توضیحات:")
                                            , X.TextField().ColSpan(6)
                                    .ItemID("txtDesc").Width(548)
                                    .LabelAlign(Ext.Net.LabelAlign.Top)

                  )

            )
        )
                                ,
                                X.Panel().Border(false)
             .Layout(LayoutType.VBox)
                         .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                                X.TreePanel()
                                .ID("TreeChartOrganEjraee")
                                    .AutoScroll(true)
                                    .Width(300)
                                    .ColSpan(2)
        //.Height(450)
                                    .UseArrows(true)
                                    .Border(false)
                                        .Store(
                    Html.X().TreeStore()
                        .Proxy(
                                    Html.X().AjaxProxy().Url(Url.Action("Node"))
                        )
                )

                                    .Listeners(a =>
                                    {
                                        a.ItemClick.Handler = "GetIdChartOrganEjraee(record)";
                                        a.AfterRender.Handler = "this.getRootNode().expand();";
                                        a.BeforeLoad.Fn = "nodeLoadEjraee";
                                    })
                       .Root(Html.X().Node().NodeID("0").Text("چارت سازمانی"))

                                    .View(
                                    X.TreeView()
                                    .Plugins(
                                    X.TreeViewDragDrop().AppendOnly(true).ContainerScroll(true)

                                )
                        )
                        )
    )
)
<script type="text/javascript">
    var NodeIdEjaree;
    var id;
    var newParentid;
    var fldPId;
    var fldId;
    var UserImageId = 0;
    var UsersId = 0;
    var OrganIdEjraee = null;

    function HelpChartOrganEjraee() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Comon/ChartOrganEjraii/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function setHeightTreeEjraee() {
        App.TreeChartOrganEjraee.setHeight(App.Win.getHeight() - 300);
    }

    /*App.Win.addListener('resize', function () {
        App.ChartOrganEjraee.setWidth(App.Win.getWidth());
    });
    App.Win.addListener('resize', function () {
        var grid = App.ChartOrganEjraee.queryById('ChartOrganEjraeeGrid');
        grid.setHeight(App.Win.getHeight()-240);
    });*/
    function SelectOrgan(Code) {
        if (Code == 45) {
            Ext.net.DirectMethod.request({
                url: '/comon/SearchOrganization/Index',
                params: {
                    State: 8,
                    FieldName: ""
                }
            });
        }
    }
    var nodeLoadEjraee = function (store, operation, options) {
        var node = operation.node;
        Ext.net.DirectMethod.request({
            url: '/Comon/ChartOrganEjraii/NodeLoad',
            params: {
                nod: node.getId()
            },
            success: function (result) {
                node.set('loading', false);
                node.set('loaded', true);
                node.appendChild(result);
                node.expand();
            },

            failure: function (errorMsg) {
                Ext.Msg.alert('Failure', errorMsg);
            }
        });

        return false;
    };

    function ReloadChartOrganEjraee() {
        App.TreeChartOrganEjraee.store.load();
    };

    function GetIdChartOrganEjraee(record) {
        NodeIdEjaree = record.getId();
    };

    function LoadChartOrganEjraee() {

        if (NodeIdEjaree != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Comon/ChartOrganEjraii/Details',
                params: {
                    id: NodeIdEjaree
                },
                success: function (data) {

                    var CboUnit = App.ChartOrganEjraee.queryById("CboUnit");
                    CboUnit.setValue(data.fldNoeVahed);
                    var txtTitle = App.ChartOrganEjraee.queryById('txtTitle');
                    txtTitle.setValue(data.fldTitle);
                    var txtOrgan = App.ChartOrganEjraee.queryById('txtOrgan');
                    txtOrgan.setValue(data.fldOrganizationName);
                    var txtDesc = App.ChartOrganEjraee.queryById('txtDesc');
                    txtDesc.setValue(data.fldDesc);
                    var FatherId = App.ChartOrganEjraee.queryById('fldFatherId');
                    FatherId.setValue(data.fldPId);
                    var Id = App.ChartOrganEjraee.queryById('fldId');
                    Id.setValue(data.fldId);
                    OrganIdEjraee = data.fldOrganId;
                    Ext.net.Mask.hide();
                }
            });

        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function SaveChartOrganEjraee() {
        var Id = App.ChartOrganEjraee.queryById('fldId');
        var CboUnit = App.ChartOrganEjraee.queryById("CboUnit");
        var FatherId = App.ChartOrganEjraee.queryById("fldFatherId");
        var txtTitle = App.ChartOrganEjraee.queryById('txtTitle');
        var txtDesc = App.ChartOrganEjraee.queryById('txtDesc');
        var er = false;
        if (txtTitle.validate() == false) {
            er = true;
        }
        if (Id.getValue() == "" || Id.getValue() == 0) {
            fldPId = NodeIdEjaree;
            fldId = Id.getValue();
        }
        else {
            fldPId = FatherId.getValue();
            fldId = Id.getValue();
        }
        if (fldPId == 0)
            fldPId = null;

        if (er == true)
            return;
        Ext.net.DirectMethod.request({
            url: '/Comon/ChartOrganEjraii/Save',
            params: {
                fldId: fldId,
                fldPId: fldPId,
                fldTitle: txtTitle.getValue(),
                fldNoeVahed: CboUnit.getValue(),
                fldOrganId: OrganIdEjraee,
                fldDesc: txtDesc.getValue()
            },
            success: function (data) {
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: Ext.MessageBox.INFO,
                    buttons: Ext.MessageBox.OK
                });
                ReloadChartOrganEjraee();
                ClearChartOrganEjraee();
            }

        });
    }
    function DeleteChartOrganEjraee() {
        if (NodeIdEjaree != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                        Ext.net.DirectMethod.request({
                            url: '/Comon/ChartOrganEjraii/Delete',
                            params: {
                                id: NodeIdEjaree
                            },
                            success: function (data) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.INFO,
                                    buttons: Ext.MessageBox.OK
                                });
                                ReloadChartOrganEjraee();
                            }
                        });
                        Ext.net.Mask.hide();
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ClearChartOrganEjraee() {
        App.ChartOrganEjraee.queryById('fldId').setValue(0);
        App.ChartOrganEjraee.queryById("fldFatherId").setValue(0);
        App.ChartOrganEjraee.queryById('txtTitle').setValue('');
        App.ChartOrganEjraee.queryById('txtOrgan').setValue('');
        App.ChartOrganEjraee.queryById('txtDesc').setValue('');
        OrganIdEjraee = null;
    }
    function EnterNext() {
        var keyfield = App.ChartOrganEjraee.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld;
        if (keyfield.itemId == "txtOrgan") {
            nextfld = App.ChartOrganEjraee.queryById('txtDesc');
        }
        else if (keyfield.itemId == "txtDesc") {
            nextfld = App.ChartOrganEjraee.queryById('btnSave');
        }
        else {
            nextfld = keyfield.nextSibling().nextSibling();
            nextfld.selectText();
        }
        nextfld.focus();
    }
</script>