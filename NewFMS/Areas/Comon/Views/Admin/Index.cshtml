@{
    Layout = "~/Areas/Comon/Views/Shared/_shared.cshtml";
}<meta http-equiv="content-type" content="text/html; charset=Error" />
@{
    NewFMS.WCF_Common.CommonService servic = new NewFMS.WCF_Common.CommonService();
     NewFMS.WCF_Common.ClsError Err = new  NewFMS.WCF_Common.ClsError();
    //var setting = servic.GetSettingWithFilter("","", 1, Session["UserName"].ToString(), Session["UserPass"].ToString(),Err);
    //var user = hh.sp_tblUserSelect("fldId", Session["UserId"].ToString(), 1, "", 0).FirstOrDefault();
    //var q = hh.sp_tblCommisionSelect("fldStaffID", user.fldStaffID.ToString(), 0, 1, "");
    // var Date = hh.sp_GetDate().FirstOrDefault().fldDateTime;
    // var LastLogin = hh.sp_tblInputInfoSelect("fldUserID", user.fldId.ToString(), true, 2).ToList();
    string _Date = "", Time = "", Ip = "", Name = "", Location = "";
    int UsersId = 0;
    // UsersId = user.fldId;
    int UserLoginCount = 0;
    //TrainCautionRol.Models.UserLoginCount.userObj.Count();
    //  Name = user.fldName + ' ' + user.fldFamily;
    // Location = user.fldLocation;
    //if (LastLogin.Count == 2)
    //{
    //    _Date = LastLogin[1].fldTarikh.ToString();
    //    Time = LastLogin[1].fldTime.ToString();
    //    Ip = LastLogin[1].fldIP.ToString();

    //}
}
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{var X = Html.X();}

@(Html.X().Desktop().Listeners(k => k.Ready.Handler = "$('.ux-start-button .x-btn-inner').html('شروع');")
.ID("Desktop1")
.Modules(

    Html.X().DesktopModule()
                            .ModuleID("_Employee")
                    .Shortcut(
                       Html.X().DesktopShortcut()
                          //.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                            .Name("کارمندان")
                                                .IconCls("shortcut_Employee")
                                               .Handler("Ext.net.DirectMethod.request({url: '../Comon/Employee'})")

                    )
                    .Launcher(
                        Html.X().MenuItem()
                            .Text("کارمندان")//.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                    .IconCls("MiniEmployee")
                        ),
     Html.X().DesktopModule()
                                .ModuleID("_State")
                        .Shortcut(
                           Html.X().DesktopShortcut()
        //.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                .Name("استان")
                                                    .IconCls("shortcut_State")
                                                   .Handler("Ext.net.DirectMethod.request({url: '../Comon/State'})")

                        )
                        .Launcher(
                            Html.X().MenuItem()
                                .Text("شهرستان")//.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                        .IconCls("MiniCity")
                            ),
                             Html.X().DesktopModule()
                                    .ModuleID("_City")
                            .Shortcut(
                               Html.X().DesktopShortcut()
        //.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                    .Name("شهرستان")
                                                        .IconCls("shortcut_City")
                                                       .Handler("Ext.net.DirectMethod.request({url: '../Comon/City'})")

                            )
                            .Launcher(
                                Html.X().MenuItem()
                                    .Text("شهرستان")//.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                            .IconCls("MiniCity")
                                ),
                                
                                 Html.X().DesktopModule()
                                        .ModuleID("_Organization")
                            .Shortcut(
                               Html.X().DesktopShortcut()
        //.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                    .Name("سازمان")
                                                            .IconCls("shortcut_Organization")
                                                           .Handler("Ext.net.DirectMethod.request({url: '../comon/Organization'})")

                            )
                            .Launcher(
                                Html.X().MenuItem()
                                    .Text("سازمان")//.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                                .IconCls("MiniOrganization")
                                ),    
                                  
    Html.X().DesktopModule()
                                .ModuleID("_ChartOrgan")
                        .Shortcut(
                           Html.X().DesktopShortcut()
        //.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                .Name("چارت سازمانی")
                                                        .IconCls("shortcut_ChartOrgan")
                                                        .Handler("Ext.net.DirectMethod.request({url: '../comon/ChartOrgan'})")

                        )
                        .Launcher(
                            Html.X().MenuItem()
                                    .Text("چارت سازمانی")//.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                            .IconCls("MiniChartOrgan")
                            ),
          Html.X().DesktopModule()
                            .ModuleID("_Module")
                            .Shortcut(
                               Html.X().DesktopShortcut()
        //.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                    .Name("ماژول ها")
                                    .IconCls("shortcut_Module")
                                                .Handler("Ext.net.DirectMethod.request({url: '../comon/Password/Index?State=1'})")

                            )
                            .Launcher(
                                Html.X().MenuItem()
                                            .Text("ماژول ها")//.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                                .IconCls("MiniModule")
                                ),
           Html.X().DesktopModule()
                                .ModuleID("_Module_Organ")
                                .Shortcut(
                                   Html.X().DesktopShortcut()
        //.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                        .Name("ماژول_سازمان")
                                            .IconCls("shortcut_Module_Organ")
                                                    .Handler("Ext.net.DirectMethod.request({url: '../comon/Password/Index?State=2'})")

                                )
                                .Launcher(
                                    Html.X().MenuItem()
                                                    .Text("ماژول_سازمان")//.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                                        .IconCls("MiniModule_Organ")
                                    ),
             Html.X().DesktopModule()
                                        .ModuleID("_Masoulin")
                                    .Shortcut(
                                       Html.X().DesktopShortcut()
        //.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                                .Name("مسئولین")
                                                    .IconCls("shortcut_Masuolin")
                                                            .Handler("Ext.net.DirectMethod.request({url: '../comon/Masoulin'})")

                                    )
                                    .Launcher(
                                        Html.X().MenuItem()
                                                        .Text("مسئولین")//.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                                                .IconCls("MiniMasuolin")
                                        )
                            , Html.X().DesktopModule()
                                                .ModuleID("_DigitalArchiveTree")
                                        .Shortcut(
                                           Html.X().DesktopShortcut()
        //.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                                    .Name("ساختار درختی بایگانی دیجیتال")
                                                            .IconCls("shortcut_DigitalArchiveTree")
                                                                    .Handler("Ext.net.DirectMethod.request({url: '../comon/DigitalArchiveTree'})")

                                        )
                                        .Launcher(
                                            Html.X().MenuItem()
                                                                .Text("ساختار درختی بایگانی دیجیتال")//.Hidden(!servic.Permission(1, Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                                                        .IconCls("MiniDigitalArchiveTree")
                                            )                

)
                    .DesktopConfig(
                    Html.X().DesktopConfig()
                            .Wallpaper("~/Content/back1.jpg").WallpaperStretch(true).ShortcutDragSelector(true)
                        .ShortcutDefaults(defaults =>
                        {
                            defaults.IconCls = "x-default-shortcut";
                        })
                        .ContextMenu(
                            Html.X().Menu()
                                .Items(
                                    Html.X().MenuItem().Text("Change Settings"),
                                    Html.X().MenuSeparator(),
                                        Html.X().MenuItem().Text("Title").Icon(Ext.Net.Icon.ApplicationTileVertical),
                                        Html.X().MenuItem().Text("Cascade").Icon(Ext.Net.Icon.ApplicationCascade)
                                )
                        )
                        @*.Content(@<text>
                            @(
                             Html.X().Image()
                                                                    .ImageUrl("~/Content/blank.png")
                                                            .StyleSpec("position:absolute;top: 40%;left: 40%;width: 227px;margin-top: -39px; margin-left: -39px;")
                                                    )
                            </text>)*@
)
                    .StartMenu(
                        Html.X().DesktopStartMenu()
                            .Title("رسا سیستم البرز")
                            .IconCls("RasaIco")
                            .Height(300)
                            .ToolConfig(
                                Html.X().Toolbar()
                                    .Width(100)
                                    .Items(
                                        Html.X().Button()
                                                    .Text("تنظیمات")
        //.Hidden(!Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 90))
                                                    .Icon(Ext.Net.Icon.Cog)
                                                    .DirectEvents(de =>
                                                    {
                                                        de.Click.Action = "Setting";

                                                    }),
        //Html.X().Button()
        //    .Text("Settings")
        //                                .Icon(Ext.Net.Icon.Cog),
                                        Html.X().Button()
                                                    .Text("مدیریت کاربران")
        //.Hidden(!Permossions.haveAccess(Convert.ToInt32(Session["UserId"]), 39))
                                                                            .Icon(Ext.Net.Icon.User)
                                                .DirectEvents(
                                                    de =>
                                                    {
                                                        de.Click.Url = "/User/index";
                                                        de.Click.ExtraParams.Add(new { containerId = "UserTab" });
                                                        de.Click.Before = "if(App.User!=null){var tab =App.UserTab.getComponent('User');App.UserTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                    })
                                                ,
                                                Html.X().Button()
                                                .Text("تغییر رمز عبور")
                                                      .Icon(Ext.Net.Icon.Key)
                                                        .Handler("Ext.net.DirectMethod.request({url: '/ChangePassword/Index?state=1'})")
                                            , Html.X().Button()
                                            .Text("خروج")
                                                                        .Icon(Ext.Net.Icon.DoorOut)
                                            .DirectEvents(de =>
                                            {
                                                de.Click.Action = "Logout";
                                                de.Click.EventMask.ShowMask = true;
                                                de.Click.EventMask.Msg = "خدانگهدار...";
                                                de.Click.EventMask.MinDelay = 1000;
                                            })

                                    )
                            )
                    )
                    .TaskBar(
                        Html.X().DesktopTaskBar()
                            .TrayWidth(250).HideQuickStart(true)
        //.QuickStart(
        //    Html.X().Toolbar()
        //        .Items(
        //            Html.X().Button()
        //             .Icon(Ext.Net.Icon.ApplicationTileVertical)
        //                .ToolTip("Tile windows"),

                            //            Html.X().Button()
        //          .Icon(Ext.Net.Icon.ApplicationCascade)
        //                .ToolTip("Cascade windows")
        //        )
        //)
                                .Tray(
                                    Html.X().Toolbar()
                                        .Items(
                                            Html.X().Label()
                                                .Text(Location),
                                            Html.X().ToolbarFill()
                                        )
                                )
                    )
)
@X.TaskManager().ID("TaskManager1").Tasks(X.Task().TaskID("Task1")
    .Interval(100)
    .AutoRun(false)
    .DirectEvents(de => de.Update.Action = "RefreshProgress")
)
@(X.Panel().ID("Section")
            .Width(220)
                .Margin(50)
              .Frame(true)
                      .Layout(Ext.Net.LayoutType.Accordion)
                          .LayoutConfig(new Ext.Net.AccordionLayoutConfig { Multi = true, OriginalHeader = true }).Border(true)
        //.Layout(Ext.Net.LayoutType.HBox)
            .Items(
                        X.Panel().Title("اطلاعات کاربر").Icon(Ext.Net.Icon.UserTick)
                       .Items(
                       X.Container().Content(
                    @<div style="margin:10px; height:300px;">
                        <center>
                            <div style="font-weight:600"> @Name خوش آمدید.</div>
                            <br />
                            <div>موقعیت کاربر: @Location</div>
                            <br /><br />

                            <img alt="" src="@Url.Action("ShowPic", "Home")" width="90px" height="120px" style=" border-color: #2E4796; border-radius: 6px 6px 6px 6px; border-style: solid;border-width:2px;" />
                            <br />
                            <br />
                            تاریخ آخرین ورود: @_Date
                            <br />
                            <br />
                            زمان آخرین ورود: @Time
                            <br />
                            <br />
                            IP آخرین ورود: @Ip

                        </center>
                    </div>)

                       ),
                        X.Panel().Title("تعداد کاربران آنلاین").Icon(Ext.Net.Icon.Group)
                        .Items(
                       X.Container().Content(
                    @<div style="margin:10px;height:150px;">
                        <center>
                            <div>
                                <span id="lblUserOnline">تعداد کاربران آنلاین: @UserLoginCount</span>
                            </div>
                            <div id="container">
                                <div class="rotatingHands">
                                    <img alt="" id="hours" src="@Url.Content("~/Content/hours.png")" />
                                </div>
                                <div class="rotatingHands">
                                    <img alt="" id="minutes" src="@Url.Content("~/Content/minutes.png")" />
                                </div>
                                <div class="rotatingHands">
                                    <img alt="" id="seconds" src="@Url.Content("~/Content/seconds.png")" />
                                </div>
                                <div class="glass">
                                    <img alt="" src="@Url.Content("~/Content/glass.png")" />
                                </div>
                                <img alt="" src="@Url.Content("~/Content/clock.png")" />
                            </div>
                        </center>
                    </div>)

                       )

                        )


            //.LayoutConfig(new Ext.Net.HBoxLayoutConfig { Pack=Ext.Net.BoxPack.Center,Align=Ext.Net.HBoxAlign.StretchMax})
        //.Floating(true)
                .Shadow(false)
                    .Listeners(l =>
                    {
                        l.AfterRender.Handler = "App.Section.el.alignTo(document.body, 'tr-tr', [0, 0], true);";
                        //l.Far.Handler = "this.component.el.alignTo(Ext.net.Desktop.desktop.body, 'tl-tl', [0, 0], true);";
                    })


)
<script src="@Url.Content("~/Content/jQueryRotate.2.2.js")" type="text/javascript"></script>
<link href="~/Content/style.css" rel="stylesheet" />
<script>
    var datetime = '@ViewBag.time';
    $(document).ready(function () {
        var angleSec = 0;
        var angleMin = 0;
        var angleHour = 0;
        var min, hor;
        var treeRefresh;
        var WatchRefresh = 0;

        angleHour = datetime.substring(0, 2);
        angleMin = datetime.substring(3, 5);
        angleSec = datetime.substring(6, 8);
        angleSec = angleSec * 6;
        angleMin = angleMin * 6;
        angleHour = (angleHour * 5 + (angleMin / 6) / 12) * 6;
        $("#seconds").rotate(angleSec);
        $("#minutes").rotate(angleMin);
        $("#hours").rotate(angleHour);



        setInterval(function () {
            angleSec = ((angleSec / 6 + 1) * 6);
            $("#seconds").rotate(angleSec);
            if (angleSec >= 360) {

                angleMin = (angleMin / 6 + 1) * 6;
                $("#minutes").rotate(angleMin);
                angleSec = 0;
            }
            if (angleMin >= 360) {
                angleMin = 0;
            }

            treeRefresh++;
            if (treeRefresh == 30) {
                var URL = '@Url.Content("Home/ShowPic")';
                var g = URL;
                alert();
                $('#Image').attr('src', g);
                $('#lblUserOnline').html('تعداد کاربران آنلاین: UserLoginCount');
                treeRefresh = 0;
            }

            WatchRefresh++;
            if (WatchRefresh == 120) {
                Ext.net.DirectMethod.request({
                    url: "/Home/GetDate",
                    success: function (data) {
                        angleHour = data.datetime.substring(0, 2);
                        angleMin = data.datetime.substring(3, 5);
                        angleSec = data.datetime.substring(6, 8);
                        angleSec = angleSec * 6;
                        angleMin = angleMin * 6;
                        angleHour = (angleHour * 5 + (angleMin / 6) / 12) * 6;
                        $("#seconds").rotate(angleSec);
                        $("#minutes").rotate(angleMin);
                        $("#hours").rotate(angleHour);
                        WatchRefresh = 0;
                    }
                });
            }
        }, 1000);

        if ('@ViewBag.FirstLogin' == 'True') {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: "/ChangePassword/index",
                params: {
                    State: 1
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }

    });

</script>