@model IEnumerable<NewFMS.WCF_Chek.OBJ_CheckHayeVarede>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using NewFMS.Models;

@{
    var X = Html.X();

}

<style type="text/css">
   #fieldsetright legend{
       text-align:right;
       font-family:Tahoma !important;
   }
 #fieldsetVosol legend{
       text-align:right;
       font-family:Tahoma !important;
   }
 #fieldsetMablagh legend{
       text-align:right;
       font-family:Tahoma !important;
   }
 #fieldsetBank legend{
       text-align:right;
       font-family:Tahoma !important;
   }
 #fieldsetSerial legend{
       text-align:right;
       font-family:Tahoma !important;
   }
 #fieldsetShobe legend{
       text-align:right;
       font-family:Tahoma !important;
   }
 #fieldsetShakhs legend{
       text-align:right;
       font-family:Tahoma !important;
   }
 #fieldsetBabat legend{
       text-align:right;
       font-family:Tahoma !important;
   }
 #fieldsetUser legend{
       text-align:right;
       font-family:Tahoma !important;
   }
    .greenRow .x-grid-cell, .x-grid-rowwrap-div{
        background-color:#D5F5E3 !important;
    }

    .WhiteRow .x-grid-cell, .x-grid-rowwrap-div{
        background-color:white !important;
    }
</style>

@(Html.X().Panel()
        .ID("AghsatCheckAmani")
    .Title("اقساط چک امانی")
           .Listeners(li => { li.AfterRender.Handler = "AghsatCheckAmaniSetSize();"; })
    .Closable(true)
    .AutoScroll(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
        // .Listeners(l=>l.Destroy.Handler="CloseTab();")
    .Layout(LayoutType.Fit)
        //.LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
    .Border(false)
    .Items(
            X.Panel()//.Title("اعلام عوارض")
                         .Layout(LayoutType.VBox)
                              .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                        .ItemID("PnlAghsatCheckAmani")
            .Items(
                   X.FieldSet()
                         .Border(false)
             .Layout(LayoutType.HBox)
            .Defaults(new { Margin = 5 })
                     .Items(
                            X.FieldSet().Border(false)
                            .Defaults(new { Margin = 2 })
                        .Layout(LayoutType.Table)
                        .LayoutConfig(new TableLayoutConfig { Columns = 5 })
                                .Items(
                                    X.FieldSet().Title("تاریخ ثبت").ID("fieldsetright")
                                    .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                .Items(
                                 X.ComboBox()
                                    .ItemID("CboTarikhSabt")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Width(126)
        //.SelectedItems(new { Value = "1" })
                                    .Items(
                                        new ListItem("همه تاریخهای ثبت", "1"),
                                        new ListItem("تاریخ ثبت خاص", "0")
                                            ).ColSpan(2)
                                            .Listeners(l => l.Change.Handler = "ChangeTarikhSabt()"),
                                     X.Label("از تاریخ: "),
                                         X.PDateField().Listeners(l => l.Focus.Handler = "ChangeAzTarikh()")
                                         .MaskRe("/[0-9 /]/")
                                        .MaxLength(10).Editable(false)
                                        .EnforceMaxLength(true)
                                         .ItemID("txtAzTarikh")
                                         .Width(87)
                                         .AllowBlank(false)
                                         .BlankText("لطفا از تاریخ را وارد کنید.")
                                    , X.Label("تا تاریخ: "),
                                            X.PDateField().Width(87).Listeners(l => l.Focus.Handler = "ChangeTaTarikh()")
                                        .MaskRe("/[0-9 /]/")
                                            .MaxLength(10).Editable(false)
                                        .EnforceMaxLength(true)
                                        .ItemID("txtTaTarikh")
                                        .AllowBlank(false)
                                        .BlankText("لطفا تا تاریخ را وارد کنید.")
                                )
                                , X.FieldSet().Title("تاریخ وصول").ID("fieldsetVosol")
                                .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                            .Items(
                            X.ComboBox()
                                    .ItemID("TarikhVosol")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Width(128)
        //.SelectedItems(new { Value = "1" })
                                    .Items(
                                        new ListItem("همه تاریخهای وصول", "1"),
                                        new ListItem("تاریخ وصول خاص", "0")
                                            ).ColSpan(2)
                                            .Listeners(l => l.Change.Handler = "ChangeTarikhVosol()"),
                                         X.Label("از تاریخ: "),
                                             X.PDateField().Listeners(l => l.Focus.Handler = "ChangeAzTarikh_V()")
                                            .MaskRe("/[0-9 /]/")
                                                .MaxLength(10).Editable(false)
                                            .EnforceMaxLength(true)
                                             .ItemID("txtAzTarikh_V")
                                             .Width(89)
                                             .AllowBlank(false)
                                             .BlankText("لطفا از تاریخ را وارد کنید.")
                                        , X.Label("تا تاریخ: "),
                                                X.PDateField().Width(89).Listeners(l => l.Focus.Handler = "ChangeTaTarikh_V()")
                                            .MaskRe("/[0-9 /]/")
                                                .MaxLength(10).Editable(false)
                                            .EnforceMaxLength(true)
                                            .ItemID("txtTaTarikh_V")
                                            .AllowBlank(false)
                                            .BlankText("لطفا تا تاریخ را وارد کنید.")
                            )
                                    , X.FieldSet().Title("مبلغ چک").ID("fieldsetMablagh")
                                    .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                .Items(
                                X.ComboBox()
                                        .ItemID("MablaghChek")
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .Editable(false)
                                        .TypeAhead(true)
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Width(124)
        //.SelectedItems(new { Value = "1" })
                                        .Items(
                                            new ListItem("همه مبلغ ها", "1"),
                                            new ListItem("مبلغ خاص", "0")
                                              ).ColSpan(2).Listeners(l => l.Change.Handler = "ChangeMablaghChek()")
                                        , X.Label("از مبلغ: ")
                                         , X.TextField().Width(87)
                                            .ItemID("txtAzMablagh")
                                            .MaskRe("[0-9 .]").Listeners(l => { l.Change.Handler = "App.AghsatCheckAmani.queryById('txtAzMablagh').setValue(accounting.formatNumber(App.AghsatCheckAmani.queryById('txtAzMablagh').getValue()));"; })
                                            .AllowBlank(false)
                                             .BlankText("لطفا مبلغ را وارد کنید.")
                                        , X.Label("تا مبلغ: ")
                                             , X.TextField().Width(87)
                                            .ItemID("txtTaMablagh")
                                            .MaskRe("[0-9 .]").Listeners(l => { l.Blur.Handler = "CheckMablagh11()"; l.Change.Handler = "App.AghsatCheckAmani.queryById('txtTaMablagh').setValue(accounting.formatNumber(App.AghsatCheckAmani.queryById('txtTaMablagh').getValue()));"; })
                                            .AllowBlank(false)
                                            .BlankText("لطفا مبلغ را وارد کنید.")
                                )
                                       , X.FieldSet().Title("بــانک").ID("fieldsetBank")
                                    .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                    .Items(
                                    X.ComboBox()
                                        .ItemID("Bank")
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .Editable(false)
                                        .TypeAhead(true)
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Width(136)
        //.SelectedItems(new { Value = "1" })
                                        .Items(
                                            new ListItem("همه بانک ها", "1"),
                                            new ListItem("بانک خاص", "0")
                                                ).ColSpan(2)
                                                    .Listeners(l => l.Change.Handler = "ChangeBank()"),
                                    X.Label("بانک:"),
                                    X.ComboBox().Width(110)
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .ItemID("CboBank")
                                    .TypeAhead(true)
                                    .Editable(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldName")
                                    .ValueField("fldId")
                                    .EmptyText("بانک ...")
                                    .AllowBlank(false)
                                    .BlankText("لطفا بانک را انتخاب کنید.")
                                    .Store(X.Store()
                                    .Model(X.Model()
                                    .IDProperty("fldId")
                                    .Fields(
                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                                )
                                    .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetBank"))
                                    .Reader(X.JsonReader().Root("data"))
                                                )
                                         .Listeners(l => l.Load.Handler = "setdefaultValueBank()")
                                            )
                                  )
                                          , X.FieldSet().Title("سریالها").ID("fieldsetSerial")
                                           .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                    .Items(
                                    X.ComboBox()
                                            .ItemID("Serial")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .Width(146)
        //.SelectedItems(new { Value = "1" })
                                            .Items(
                                                new ListItem("همه سریالها", "1"),
                                                new ListItem("سریال خاص", "0")
                                                     ).ColSpan(2).Listeners(l => l.Change.Handler = "ChangeSerial()")
                                            , X.Label("از سریال: ")
                                             , X.TextField().Width(100)
                                                .ItemID("txtAzSerial")
                                                .MaskRe("[0-9 .]")
                                                .AllowBlank(false)
                                             .BlankText("لطفا شماره سریال را وارد کنید.")
                                            , X.Label("تا سریال: ")
                                                , X.TextField().Width(100)
                                                .ItemID("txtTaSerial")
                                                .MaskRe("[0-9 .]")
                                                .AllowBlank(false)
                                                .BlankText("لطفا شماره سریال را وارد کنید.")
                                    )
                                            , X.FieldSet().Title("شعب").ID("fieldsetShobe")
                                             .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                        .Items(
                                        X.ComboBox()
                                            .ItemID("Shobe")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .Width(140)
        //.SelectedItems(new { Value = "1" })
                                            .Items(
                                                new ListItem("همه شعبه ها", "1"),
                                                new ListItem("شعبه خاص", "0")
                                                  ).ColSpan(2).Listeners(l => l.Change.Handler = "ChangeShobe()"),
                                        X.Label("شعبه: "),
                                        X.ComboBox().Width(107)
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .ItemID("CboShobe")
                                        .TypeAhead(true)
                                        .Editable(true)
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldName")
                                        .ValueField("fldId")
                                        .EmptyText("شعبه ...")
                                        .AllowBlank(false)
                                        .BlankText("لطفا شعبه را انتخاب کنید.")
                                        .Store(X.Store()
                                        .Model(X.Model()
                                        .IDProperty("fldId")
                                        .Fields(
                                            new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                )
                                                    )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetShobe"))
                                        .Reader(X.JsonReader().Root("data"))
                                                    )
                                             .Listeners(l => l.Load.Handler = "setdefaultValueShobe()")
                                                )
                                      )
                                              , X.FieldSet().Title("اشخاص").ID("fieldsetShakhs")
                                               .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                        .Items(
                                        X.ComboBox()
                                                .ItemID("Ashkhas")
                                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                                .Editable(false)
                                                .TypeAhead(true)
                                                .QueryMode(DataLoadMode.Local)
                                                .TriggerAction(TriggerAction.All)
                                                .Width(110)
        //.SelectedItems(new { Value = "1" })
                                                .Items(
                                                    new ListItem("همه اشخاص", "1"),
                                                    new ListItem("شخص خاص", "0")
                                                        ).ColSpan(2).Listeners(l => l.Change.Handler = "ChangeAshkhas()")
                                                , X.Label("شخص: ")
                                                 , X.TextField().Width(140)
                                                  .ItemID("txtShakhs")
                                                  .AllowBlank(false)
                                                  .BlankText("لطفا شخص را وارد کنید.")
                                        )
                                                , X.FieldSet().Title("بابت").ID("fieldsetBabat")
                                                   .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                            .Items(
                                            X.ComboBox()
                                                    .ItemID("Babat")
                                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                                    .Editable(false)
                                                    .TypeAhead(true)
                                                    .QueryMode(DataLoadMode.Local)
                                                    .TriggerAction(TriggerAction.All)
                                                    .Width(110)
        //.SelectedItems(new { Value = "1" })
                                                    .Items(
                                                        new ListItem("همه موارد", "1"),
                                                        new ListItem("بابت", "0")
                                                           ).ColSpan(2).Listeners(l => l.Change.Handler = "ChangeBabat()")
                                                    , X.Label("بابت: ")
                                                     , X.TextField().Width(140)
                                                        .ItemID("txtBabat")
                                                        .AllowBlank(false)
                                                        .BlankText("لطفا بابت را وارد کنید.")
                                            )
                                                  , X.FieldSet().Title("کاربران").ID("fieldsetUser")
                                                   .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                            .Items(
                                            X.ComboBox()
                                                .ItemID("User")
                                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                                .Editable(false)
                                                .TypeAhead(true)
                                                .QueryMode(DataLoadMode.Local)
                                                .TriggerAction(TriggerAction.All)
                                                .Width(110)
        // .SelectedItems(new { Value = "1" })
                                                .Items(
                                                    new ListItem("همه کاربران", "1"),
                                                    new ListItem("کاربر خاص", "0")
                                                      ).ColSpan(2).Listeners(l => l.Change.Handler = "ChangeUser()"),
                                            X.Label("کــاربر:"),
                                            X.ComboBox().Width(110)
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .ItemID("Cbouser")
                                            .TypeAhead(true)
                                            .Editable(true)
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .TriggerAction(TriggerAction.All)
                                                .DisplayField("fldName")
                                            .ValueField("fldId")
                                            .EmptyText("کاربر ...")
                                            .AllowBlank(false)
                                             .BlankText("لطفا کاربر را انتخاب کنید.")
                                            .Store(X.Store()
                                            .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                    )
                                                        )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetUser"))
                                            .Reader(X.JsonReader().Root("data"))
                                                        )
                                                 .Listeners(l => l.Load.Handler = "setdefaultValueUser()")
                                                    )
                                          )
                                ,
                            X.Button()
                                .Text("جستجو")
                                .Icon(Ext.Net.Icon.Find)
                                    .Listeners(li => li.Click.Handler = "FullSearchSodorChek()")
                            )
                        )
                        ,
                              X.GridPanel().AutoScroll(true)
                                      .TopBar(
                                Html.X().Toolbar()
                                .Items(
                                    X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                                           .Listeners(li => li.Click.Handler = "HelpAghsat();")
                                )
                            )
                              .BottomBar(X.PagingToolbar())
                                .Title("چک امانی")
                                .Padding(5)
                                        .ItemID("AghsatCheckAmaniGrid").Flex(2)
                                .Width(200)
                                .Store(
                                        X.StoreForModel().AutoLoad(false)
                                        .Proxy(Html.X().AjaxProxy()
                                                .Url(Url.Action("ReadSodorChek"))
                                        .Reader(Html.X().JsonReader().Root("data"))

                                    )
                                    .PageSize(200000000)
                                    .RemoteFilter(true)
                                    .RemotePaging(false)

                                )
                                .View(
                                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true).GetRowClass(l => l.Fn = "getRowClassAmani")
                                )
        //.Plugins(X.FilterHeader().Remote(false))
                                .ColumnModel(
                                    Html.X().RowNumbererColumn(),
                                            Html.X().Column().DataIndex(Model, m => m.fldStatus).Text("fldStatus").Hidden(true).Flex(1),
                                    Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                    Html.X().Column().DataIndex(Model, m => m.fldBankName).Text("نام بانک").Flex(2),
                                    Html.X().Column().DataIndex(Model, m => m.fldShobeName).Text("نام شعبه").Flex(2),
                                    Html.X().Column().DataIndex(Model, m => m.NoeeCheckName).Text("نوع چک").Flex(2),
                                    Html.X().Column().DataIndex(Model, m => m.fldMablagh).Text("مبلغ").Flex(2).Renderer("LocalString"),
                                    Html.X().Column().DataIndex(Model, m => m.fldSaderKonandeh).Text("صادر کننده چک").Flex(2),
                                    Html.X().Column().DataIndex(Model, m => m.fldTarikhVosolCheck).Text("تاریخ وصول").Flex(2),
                                    Html.X().Column().DataIndex(Model, m => m.fldTarikhDaryaftCheck).Text("تاریخ دریافتی").Flex(2),
                                    Html.X().Column().DataIndex(Model, m => m.fldShenaseKamelCheck).Text("شناسه کامل چک").Flex(3),
                                    Html.X().Column().DataIndex(Model, m => m.fldBabat).Text("بابت").Flex(5),
                                        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(5),
                                        Html.X().Column().DataIndex(Model, m => m.NameVaziat).Text("وضعیت").Flex(3),
                                    Html.X().ImageCommandColumn()//.PrepareCommand("hideBtnAsnadEjra")
                                    .Listeners(l => l.Command.Fn = "ActionsInDetail")
                                    .Flex(1).Commands(
                                             Html.X().ImageCommand().CommandName("GoToDetail").Icon(Ext.Net.Icon.ArrowRight).ToolTip(tt => tt.Text = "جزئیات")
                                    )
                           )
                )
         )
)
<script type="text/javascript">
    function CheckMablagh11() {
        
        var txtAzMablagh = App.AghsatCheckAmani.queryById('txtAzMablagh');
        var txtTaMablagh = App.AghsatCheckAmani.queryById('txtTaMablagh');

        var azMablagh1 = txtAzMablagh.getValue().replace(',', '').replace(',', '').replace(',', '').replace(',', '').replace(',', '');
        var taMablagh1 = txtTaMablagh.getValue().replace(',', '').replace(',', '').replace(',', '').replace(',', '').replace(',', '');
        if (txtAzMablagh.getValue() != "") {
            if (parseFloat(taMablagh1) < parseFloat(azMablagh1)) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "مبلغ وارد شده غیر مجاز است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                txtTaMablagh.setValue("");
            }
        }
    }
    var getRowClassAmani = function (record, rowIndex, rowParams, store) {
        if (record.data.fldStatus == 1)
            return "greenRow";
        else
            return "WhiteRow";
    };
    function HelpAghsat() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Chek/AghsatCheckAmani/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function ChangeAzTarikh() {
        var txtAzTarikh = App.AghsatCheckAmani.queryById('txtAzTarikh');
        var txtTaTarikh = App.AghsatCheckAmani.queryById('txtTaTarikh');
        txtAzTarikh.setMaxValue(txtTaTarikh.getValue());
        txtAzTarikh.maxText = "از تاریخ باید قبل از تا تاریخ " + txtTaTarikh.rawValue + "باشد";
    }
    function ChangeTaTarikh() {
        var txtAzTarikh = App.AghsatCheckAmani.queryById('txtAzTarikh');
        var txtTaTarikh = App.AghsatCheckAmani.queryById('txtTaTarikh');
        txtTaTarikh.setMinValue(txtAzTarikh.getValue());
        txtTaTarikh.minText = "تا تاریخ باید بعد از تاریخ " + txtAzTarikh.rawValue + "باشد";
    }

    function ChangeAzTarikh_V() {
        var txtAzTarikh_V = App.AghsatCheckAmani.queryById('txtAzTarikh_V');
        var txtTaTarikh_V = App.AghsatCheckAmani.queryById('txtTaTarikh_V');
        txtAzTarikh_V.setMaxValue(txtTaTarikh_V.getValue());
        txtAzTarikh_V.maxText = "از تاریخ باید قبل از تا تاریخ " + txtTaTarikh_V.rawValue + "باشد";
    }
    function ChangeTaTarikh_V() {
        var txtAzTarikh_V = App.AghsatCheckAmani.queryById('txtAzTarikh_V');
        var txtTaTarikh_V = App.AghsatCheckAmani.queryById('txtTaTarikh_V');
        txtTaTarikh_V.setMinValue(txtAzTarikh_V.getValue());
        txtTaTarikh_V.minText = "تا تاریخ باید بعد از تاریخ " + txtAzTarikh_V.rawValue + "باشد";
    }
    var LocalString = function (value) {
        return value.toLocaleString();
    };
    function ActionsInDetail(grid, command, record, row) {

        if (command == 'GoToDetail') {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Chek/AghsatCheckAmani/DetailAghsat',
                params: {
                    ChekVaredeId: record.data.fldId,
                    Mablagh: record.data.fldMablagh,
                    status: record.data.fldStatus
                },
                success: function (data) {
                    Ext.net.Mask.hide();
                }

            });

        }
    }
    function setdefaultValueBank() {
        var CboBank = App.AghsatCheckAmani.queryById('CboBank');
        CboBank.select(CboBank.store.getAt(0));
    }
    function setdefaultValueShobe() {
        var CboShobe = App.AghsatCheckAmani.queryById('CboShobe');
        CboShobe.select(CboShobe.store.getAt(0));
    }
    function setdefaultValueUser() {
        var Cbouser = App.AghsatCheckAmani.queryById('Cbouser');
        Cbouser.select(Cbouser.store.getAt(0));
    }
    function AghsatCheckAmaniSetSize() {
        FullSearchSodorChek();
        App.AghsatCheckAmani.setWidth(App.ChekWin.getWidth());
        var PnlAghsatCheckAmani = App.AghsatCheckAmani.queryById('PnlAghsatCheckAmani');
        PnlAghsatCheckAmani.setHeight(App.ChekWin.getHeight() - 170);

        var AghsatCheckAmaniGrid = App.AghsatCheckAmani.queryById('AghsatCheckAmaniGrid');
        AghsatCheckAmaniGrid.setWidth(App.ChekWin.getWidth() - 50);

        var CboTarikhSabt = App.AghsatCheckAmani.queryById('CboTarikhSabt');
        CboTarikhSabt.setValue("1");

        var TarikhVosol = App.AghsatCheckAmani.queryById('TarikhVosol');
        TarikhVosol.setValue("1");

        var MablaghChek = App.AghsatCheckAmani.queryById('MablaghChek');
        MablaghChek.setValue("1");

        var Bank = App.AghsatCheckAmani.queryById('Bank');
        Bank.setValue("1");

        var Serial = App.AghsatCheckAmani.queryById('Serial');
        Serial.setValue("1");

        var Shobe = App.AghsatCheckAmani.queryById('Shobe');
        Shobe.setValue("1");

        var Ashkhas = App.AghsatCheckAmani.queryById('Ashkhas');
        Ashkhas.setValue("1");

        var Babat = App.AghsatCheckAmani.queryById('Babat');
        Babat.setValue("1");

        var User = App.AghsatCheckAmani.queryById('User');
        User.setValue("1");
    }
    function ChangeTarikhSabt() {
        var CboTarikhSabt = App.AghsatCheckAmani.queryById('CboTarikhSabt');
        var txtAzTarikh = App.AghsatCheckAmani.queryById('txtAzTarikh');
        var txtTaTarikh = App.AghsatCheckAmani.queryById('txtTaTarikh');
        if (CboTarikhSabt.getValue() == "1") {
            if (txtAzTarikh.getValue() != "")
                txtAzTarikh.setValue("");
            if (txtTaTarikh.getValue() != "")
                txtTaTarikh.setValue("");
            txtAzTarikh.disable(true);
            txtTaTarikh.disable(true);
        }
        else {
            txtAzTarikh.enable(true);
            txtTaTarikh.enable(true);
        }
    }
    function ChangeTarikhVosol (){
        var TarikhVosol = App.AghsatCheckAmani.queryById('TarikhVosol');
        var txtAzTarikh_V = App.AghsatCheckAmani.queryById('txtAzTarikh_V');
        var txtTaTarikh_V = App.AghsatCheckAmani.queryById('txtTaTarikh_V');
        if (TarikhVosol.getValue() == "1") {
            if (txtAzTarikh_V.getValue() != "")
                txtAzTarikh_V.setValue("");
            if (txtTaTarikh_V.getValue() != "")
                txtTaTarikh_V.setValue("");
            txtAzTarikh_V.disable(true);
            txtTaTarikh_V.disable(true);
        }
        else {
            txtAzTarikh_V.enable(true);
            txtTaTarikh_V.enable(true);
        }
    }
    function ChangeMablaghChek (){
        var MablaghChek = App.AghsatCheckAmani.queryById('MablaghChek');
        var txtAzMablagh = App.AghsatCheckAmani.queryById('txtAzMablagh');
        var txtTaMablagh = App.AghsatCheckAmani.queryById('txtTaMablagh');
        if (MablaghChek.getValue() == "1") {
            if (txtAzMablagh.getValue() != "")
                txtAzMablagh.setValue("");
            if (txtTaMablagh.getValue() != "")
                txtTaMablagh.setValue("");
            txtAzMablagh.disable(true);
            txtTaMablagh.disable(true);
        }
        else {
            txtAzMablagh.enable(true);
            txtTaMablagh.enable(true);
        }
    }
    function ChangeBank (){
        var Bank = App.AghsatCheckAmani.queryById('Bank');
        var CboBank = App.AghsatCheckAmani.queryById('CboBank');
        if (Bank.getValue() == "1") {
            if (CboBank.getValue() != "")
                CboBank.setValue("");
            CboBank.disable(true);
        }
        else {
            CboBank.enable(true);
        }
    }
    function ChangeSerial (){
        var Serial = App.AghsatCheckAmani.queryById('Serial');
        var txtAzSerial = App.AghsatCheckAmani.queryById('txtAzSerial');
        var txtTaSerial = App.AghsatCheckAmani.queryById('txtTaSerial');
        if (Serial.getValue() == "1") {
            if (txtAzSerial.getValue() != "")
                txtAzSerial.setValue("");
            if (txtTaSerial.getValue() != "")
                txtTaSerial.setValue("");
            txtAzSerial.disable(true);
            txtTaSerial.disable(true);
        }
        else {
            txtAzSerial.enable(true);
            txtTaSerial.enable(true);
        }
    }
    function ChangeShobe (){
        var Shobe = App.AghsatCheckAmani.queryById('Shobe');
        var CboShobe = App.AghsatCheckAmani.queryById('CboShobe');
        if (Shobe.getValue() == "1") {
            if (CboShobe.getValue() != "")
                CboShobe.setValue("");
            CboShobe.disable(true);
        }
        else {
            CboShobe.enable(true);
        }
    }
    function ChangeAshkhas (){
        var Ashkhas = App.AghsatCheckAmani.queryById('Ashkhas');
        var txtShakhs = App.AghsatCheckAmani.queryById('txtShakhs');
        if (Ashkhas.getValue() == "1") {
            if (txtShakhs.getValue() != "")
                txtShakhs.setValue("");
            txtShakhs.disable(true);
        }
        else {
            txtShakhs.enable(true);
        }
    }
    function ChangeBabat (){
        var Babat = App.AghsatCheckAmani.queryById('Babat');
        var txtBabat = App.AghsatCheckAmani.queryById('txtBabat');
        if (Babat.getValue() == "1") {
            if (txtBabat.getValue() != "")
                txtBabat.setValue("");
            txtBabat.disable(true);
        }
        else {
            txtBabat.enable(true);
        }
    }
    function ChangeUser (){
        var User = App.AghsatCheckAmani.queryById('User');
        var Cbouser = App.AghsatCheckAmani.queryById('Cbouser');
        if (User.getValue() == "1") {
            if (Cbouser.getValue() != "")
                Cbouser.setValue("");
            Cbouser.disable(true);
        }
        else {
            Cbouser.enable(true);
        }
    }
    function FullSearchSodorChek() {
        var er = false;
        var CboTarikhSabt = App.AghsatCheckAmani.queryById('CboTarikhSabt');
        var txtAzTarikh = App.AghsatCheckAmani.queryById('txtAzTarikh');
        var txtTaTarikh = App.AghsatCheckAmani.queryById('txtTaTarikh');
        if (CboTarikhSabt.getValue() == 0) {
            if (txtAzTarikh.validate() == false) {
                er = true;
            }
            if (txtTaTarikh.validate() == false) {
                er = true;
            }
        }

        var TarikhVosol = App.AghsatCheckAmani.queryById('TarikhVosol');
        var txtAzTarikh_V = App.AghsatCheckAmani.queryById('txtAzTarikh_V');
        var txtTaTarikh_V = App.AghsatCheckAmani.queryById('txtTaTarikh_V');
        if (TarikhVosol.getValue() == 0) {
            if (txtAzTarikh_V.validate() == false) {
                er = true;
            }
            if (txtTaTarikh_V.validate() == false) {
                er = true;
            }
        }

        var MablaghChek = App.AghsatCheckAmani.queryById('MablaghChek');
        var txtAzMablagh = App.AghsatCheckAmani.queryById('txtAzMablagh');
        var txtTaMablagh = App.AghsatCheckAmani.queryById('txtTaMablagh');
        if (MablaghChek.getValue() == 0) {
            if (txtAzMablagh.validate() == false) {
                er = true;
            }
            if (txtTaMablagh.validate() == false) {
                er = true;
            }
            if (txtTaMablagh.getValue() == "0") {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا مبلغ مورد نظر را وارد نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                return;
            }
        }

        var Bank = App.AghsatCheckAmani.queryById('Bank');
        var CboBank = App.AghsatCheckAmani.queryById('CboBank');
        var NameBank;
        if (Bank.getValue() == 0) {
            if (CboBank.validate() == false) {
                er = true;
            }
            NameBank = CboBank.getDisplayValue();
        }
        else
            NameBank = "";



        var Serial = App.AghsatCheckAmani.queryById('Serial');
        var txtAzSerial = App.AghsatCheckAmani.queryById('txtAzSerial');
        var txtTaSerial = App.AghsatCheckAmani.queryById('txtTaSerial');
        if (Serial.getValue() == 0) {
            if (txtAzSerial.validate() == false) {
                er = true;
            }
            if (txtTaSerial.validate() == false) {
                er = true;
            }
        }

        var Shobe = App.AghsatCheckAmani.queryById('Shobe');
        var CboShobe = App.AghsatCheckAmani.queryById('CboShobe');
        var NameShobe;
        if (Shobe.getValue() == 0) {
            if (CboShobe.validate() == false) {
                er = true;
            }
            NameShobe=CboShobe.getDisplayValue();
        }
        else
            NameShobe="";

        var Ashkhas = App.AghsatCheckAmani.queryById('Ashkhas');
        var txtShakhs = App.AghsatCheckAmani.queryById('txtShakhs');
        if (Ashkhas.getValue() == 0) {
            if (txtShakhs.validate() == false) {
                er = true;
            }
        }

        var Babat = App.AghsatCheckAmani.queryById('Babat');
        var txtBabat = App.AghsatCheckAmani.queryById('txtBabat');
        if (Babat.getValue() == 0) {
            if (txtBabat.validate() == false) {
                er = true;
            }
        }

        var User = App.AghsatCheckAmani.queryById('User');
        var Cbouser = App.AghsatCheckAmani.queryById('Cbouser');
        var NameUser;
        if (User.getValue() == 0) {
            if (Cbouser.validate() == false) {
                er = true;
            }
            NameUser = Cbouser.getDisplayValue();
        }
        else
            NameUser = "";
        if (er == true)
            return;
        Ext.net.Mask.show({ msg: 'در حال جستجو...' });
        Ext.net.DirectMethod.request({
            url: '/Chek/AghsatCheckAmani/FullSearch',
            params: {
                AzTarikh: txtAzTarikh.rawValue,
                TaTarikh: txtTaTarikh.rawValue,
                AzTarikh_V: txtAzTarikh_V.rawValue,
                TaTarikh_V: txtTaTarikh_V.rawValue,
                AzMablagh: txtAzMablagh.getValue().replace(',', '').replace(',', '').replace(',', '').replace(',', '').replace(',', ''),
                TaMablagh: txtTaMablagh.getValue().replace(',', '').replace(',', '').replace(',', '').replace(',', '').replace(',', ''),
                BankName: NameBank,
                AzSerial: txtAzSerial.getValue(),
                TaSerial: txtTaSerial.getValue(),
                ShobeName: NameShobe,
                DarVajh: txtShakhs.getValue(),
                Babat: txtBabat.getValue(),
                user: NameUser,
                NoeeChek:"0"
            },
            success: function (data) {
                App.AghsatCheckAmani.queryById('AghsatCheckAmaniGrid').getStore().loadData(data);
                Ext.net.Mask.hide();
            }
        });
    }
</script>

