@model IEnumerable<NewFMS.Areas.Contracts.Models.spr_tblContractTypeSelect>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<br />
@(Html.X().Panel()
        .ID("SabtContractType")
            .Title("ثبت انواع قرارداد")
           .Listeners(li => { li.AfterRender.Handler = "ContractTypeSetSize();"; li.Render.Fn = "addKeyMapSabtContractType"; })
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
        .Border(false)
       .Items(
    X.Panel().Border(false).Items(X.Label()),
        X.Panel().Border(false).Buttons(
                X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ItemID("btnSaveContractType")
                    .Listeners(l => { l.Click.Handler = "SaveContractType();"; })
            , X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                    .Listeners(l => { l.Click.Handler = "LoadContractType();"; })
            , X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)
                    .Listeners(l => { l.Click.Handler = "DeleteContractType();"; })
            //, X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
            //    .Listeners(l => { l.Click.Handler = "HelpContractType();"; })
            , X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)
                    .OnClientClick("App.SabtContractType.destroy()")
        ).ButtonAlign(Ext.Net.Alignment.Center)
        .Items(
            X.Panel().Border(false)
             .Layout(LayoutType.VBox)
                         .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.FieldSet().Border(true).Title("نوع قرارداد").Height(100)
                     .Defaults(new { Margin = 2 })
                    .Layout(LayoutType.Table)
                    .LayoutConfig(new TableLayoutConfig { Columns = 4 })
                .Items(
                       X.Hidden().ItemID("fldId")
                        , X.Label("عنوان:"),
                            X.TextField().ColSpan(3)
                        .ItemID("txtTitle")

                        .Width(300)
                        ,
                           X.Label().Text("درصد بیمه پیمانکار:")
                            , X.TextField()
                                    .ItemID("txtDarsadBimePeymankar")
                                   .AllowBlank(false).Width(100).FieldStyle("direction:Ltr;")
                                        .MaskRe("/[0-9,. /]/").MaxLength(5).EnforceMaxLength(true)
                                          .Listeners(l => l.Change.Handler = "ChangeDarsad(1);")
                                        .BlankText("لطفا درصد بیمه پیمانکار را وارد کنید.")

                            , X.Label().Text("درصد بیمه کارفرما:")
                                , X.TextField()

                                     .ItemID("txtDarsadBimeKarfarma")
                                   .AllowBlank(false).Width(100).FieldStyle("direction:Ltr;")
                                        .MaskRe("/[0-9,. /]/").MaxLength(5).EnforceMaxLength(true)
                                          .Listeners(l => l.Change.Handler = "ChangeDarsad(2);")
                                        .BlankText("لطفا درصد بیمه کارفرما را وارد کنید.")

                                 , X.Label().Text("درصد حسن انجام کار:")

                            , X.TextField()
                                .ItemID("txtDarsadAnjamKar")
                               .AllowBlank(false).Width(100).FieldStyle("direction:Ltr;")
                                    .MaskRe("/[0-9,. /]/").MaxLength(5).EnforceMaxLength(true)
                                      .Listeners(l => l.Change.Handler = "ChangeDarsad(3);")
                                    .BlankText("لطفا درصد حسن انجام کار را وارد کنید.")


                                     , X.Label().Text("درصد ضمانت نامه:")
                                , X.TextField()
                                    .ItemID("txtDarsadZemanatName")
                                        .AllowBlank(false).Width(100).FieldStyle("direction:Ltr;")
                                    .MaskRe("/[0-9,. /]/").MaxLength(5).EnforceMaxLength(true)
                                                  .Listeners(l => l.Change.Handler = "ChangeDarsad(4);")
                                        .BlankText("لطفا درصد ضمانت نامه را وارد کنید.")
                       
                )
            )
        ),
        X.GridPanel()
        .ItemID("ContractTypeGrid")
            .BottomBar(X.PagingToolbar())
            .Store(
                            X.StoreForModel()
                                            .Listeners(l => l.DataChanged.Handler = "App.SabtContractType.queryById('ContractTypeGrid').selModel.refresh();")
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
                            )
                            .PageSize(20)
                            .RemoteFilter(true)
                            .RemotePaging(true)
                        )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                )
                    .Plugins(X.FilterHeader().Remote(true))
                     .Listeners(l =>
                     {
                         l.AfterRender.Handler = "var grid = App.SabtContractType.queryById('ContractTypeGrid');grid.setHeight(App.ContractWin.getHeight() - 310); ";

                     })
        .ColumnModel(
                        Html.X().RowNumbererColumn(),
                            Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                           Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("عنوان").Flex(5),
                            Html.X().Column().DataIndex(Model, m => m.fldDarsadBimePeymankar).Text("درصد بیمه پیمانکار").Flex(2),
                            Html.X().Column().DataIndex(Model, m => m.fldDarsadBimeKarfarma).Text("درصد بیمه کارفرما").Flex(2),
                             Html.X().Column().DataIndex(Model, m => m.fldDarsadAnjamKar).Text("درصد حسن انجام کار").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldDarsadZemanatName).Text("درصد ضمانت نامه").Flex(2)
    )
                .SelectionModel(
                    Html.X().RowSelectionModel()
                        .Mode(Ext.Net.SelectionMode.Single)
    )
    )
)
<script type="text/javascript">

   
    function ChangeDarsad(st) {

        var txtDarsad = App.SabtContractType.queryById('txtDarsadBimePeymankar');
        if (st == 2)
            txtDarsad = App.SabtContractType.queryById('txtDarsadBimeKarfarma');
        else if (st == 3)
            txtDarsad = App.SabtContractType.queryById('txtDarsadAnjamKar');
        else if (st == 4)
            txtDarsad = App.SabtContractType.queryById('txtDarsadZemanatName');


        if (txtDarsad.getValue() > 100) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "درصد وارد شده بیشتر از حد مجاز می باشد.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            txtDarsad.setValue("");
        }
    }

    function HelpContractType() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Contracts/ContractType/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
       function ContractTypeSetSize() {
           App.SabtContractType.setWidth(App.ContractWin.getWidth());
            var grid = App.SabtContractType.queryById('ContractTypeGrid');
            grid.setHeight(App.ContractWin.getHeight() - 310);
        }
        function LoadContractType() {
            var SelectedRow = App.SabtContractType.queryById('ContractTypeGrid').selModel.getLastSelected();
            if (SelectedRow != null) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/ContractType/Details',
                    params: {
                        Id: SelectedRow.data.fldId
                    },
                    success: function (data) {
                        var txtDarsadBimePeymankar = App.SabtContractType.queryById('txtDarsadBimePeymankar');
                        txtDarsadBimePeymankar.setValue(data.fldDarsadBimePeymankar);
                        var txtDarsadBimeKarfarma = App.SabtContractType.queryById('txtDarsadBimeKarfarma');
                        txtDarsadBimeKarfarma.setValue(data.fldDarsadBimeKarfarma);
                        var txtDarsadAnjamKar = App.SabtContractType.queryById('txtDarsadAnjamKar');
                        txtDarsadAnjamKar.setValue(data.fldDarsadAnjamKar);
                        var txtDarsadZemanatName = App.SabtContractType.queryById('txtDarsadZemanatName');
                        txtDarsadZemanatName.setValue(data.fldDarsadZemanatName);
                        var txtTitle = App.SabtContractType.queryById('txtTitle');
                        txtTitle.setValue(data.fldTitle);
                        var fldId = App.SabtContractType.queryById('fldId');
                        fldId.setValue(data.fldId);
                        Ext.net.Mask.hide();
                    }
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا یک سطر را انتخاب کنید",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }

        function SaveContractType() {
            var txtDarsadBimePeymankar = App.SabtContractType.queryById('txtDarsadBimePeymankar');
            var txtDarsadBimeKarfarma = App.SabtContractType.queryById('txtDarsadBimeKarfarma');
            var txtDarsadAnjamKar = App.SabtContractType.queryById('txtDarsadAnjamKar');
            var txtDarsadZemanatName = App.SabtContractType.queryById('txtDarsadZemanatName');
            var txtTitle = App.SabtContractType.queryById('txtTitle');
            var fldId = App.SabtContractType.queryById('fldId');
            var er = false;

            if (txtDarsadBimePeymankar.validate() == false) {
                er = true;
            }
            if (txtDarsadBimeKarfarma.validate() == false) {
                er = true;
            }
            if (txtDarsadAnjamKar.validate() == false) {
                er = true;
            }
            if (txtDarsadZemanatName.validate() == false) {
                er = true;
            }
            if (er == true)
                return;

            Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
            Ext.net.DirectMethod.request({
                url: '/ContractType/Save',
                params: {
                    fldId: fldId.getValue(),
                    fldDarsadBimePeymankar: txtDarsadBimePeymankar.getRawValue(),
                    fldDarsadBimeKarfarma:txtDarsadBimeKarfarma.getRawValue(),
                    fldDarsadAnjamKar:txtDarsadAnjamKar.getValue(),
                    fldDarsadZemanatName: txtDarsadZemanatName.getValue(),
                    fldTitle: txtTitle.getValue()
                },
                success: function (data) {
                    Ext.net.Mask.hide();
                    var ic = Ext.MessageBox.INFO;
                    if (data.Err == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.SabtContractType.queryById('ContractTypeGrid').store.load();
                    if (data.Err != 1)
                        ClearContractType();
                }

            });
        }
        function DeleteContractType() {
            var SelectedRow = App.SabtContractType.queryById('ContractTypeGrid').selModel.getLastSelected();
            if (SelectedRow != null) {
                Ext.MessageBox.show({
                    title: "هشدار",
                    msg: "آیا برای حذف مطمئن هستید؟",
                    icon: Ext.MessageBox.WARNING,
                    buttons: Ext.MessageBox.YESNO,
                    fn: function (btn) {
                        if (btn == 'yes') {
                            Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                            Ext.net.DirectMethod.request({
                                url: '/ContractType/Delete',
                                params: {
                                    id: SelectedRow.data.fldId
                                },
                                success: function (data) {
                                    var ic = Ext.MessageBox.INFO;
                                    if (data.Er == 1)
                                        ic = Ext.MessageBox.ERROR;
                                    Ext.MessageBox.show({
                                        title: data.MsgTitle,
                                        msg: data.Msg,
                                        icon: ic,
                                        buttons: Ext.MessageBox.OK
                                    });
                                    App.SabtContractType.queryById('ContractTypeGrid').store.load()
                                }
                            });
                            Ext.net.Mask.hide();
                        }
                    }
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "لطفا یک سطر را انتخاب کنید",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
        function ClearContractType() {
            App.SabtContractType.queryById('fldId').setValue(0);
            App.SabtContractType.queryById('txtDarsadBimePeymankar').setValue("");
            App.SabtContractType.queryById('txtDarsadBimeKarfarma').setValue("");
            App.SabtContractType.queryById('txtDarsadAnjamKar').setValue("");
            App.SabtContractType.queryById('txtDarsadZemanatName').setValue("");
            App.SabtContractType.queryById('txtTitle').setValue("");
        }
        var addKeyMapSabtContractType = function (cmp) {
            this.keyMap = new Ext.util.KeyMap({
                target: cmp.getEl(),
                binding: [{
                    key: [13, 9], /*Ext.EventObject.ENTER,*/
                    fn: function (key, e) {
                        if (e.getKey() == 9) {
                            e.stopEvent();
                        }
                        var keyfield = App.SabtContractType.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;
                        if (keyfield.itemId == "txtDarsadZemanatName") {
                            nextfld = App.SabtContractType.queryById('btnSaveContractType');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                }]
            });
        }
</script>