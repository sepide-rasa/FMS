@model NewFMS.Models.Cemetery
@using Ext.Net.MVC;
@{
    var X = Html.X();
}

<link href="https://static.neshan.org/sdk/leaflet/1.4.0/leaflet.css" rel="stylesheet" type="text/css">
<script src="https://static.neshan.org/sdk/leaflet/1.4.0/leaflet.js" type="text/javascript"></script>
<script src="https://npmcdn.com/leaflet-geometryutil"></script>

@(X.Panel()
    .Title("تعریف وادی السلام")
    .Border(false)
    .ID("Cemetery")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Listeners(l => l.AfterRender.Handler = "setHeightCemetery()")
    .Items(
        X.Panel()
            .Border(false)
            //.KeyMap(Html.X().KeyMap()
            //        .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
            //        .Binding(b =>
            //        {
            //            b.Add(Html.X().KeyBinding()
            //                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
            //                .Handler("NewCemetery(); ")
            //            );
            //            b.Add(Html.X().KeyBinding()
            //                .KeysString(((int)Ext.Net.KeyCode.F2).ToString())
            //                .Handler("EditCemetery(); ")
            //            );
            //            b.Add(Html.X().KeyBinding()
            //                .KeysString(((int)Ext.Net.KeyCode.F9).ToString())
            //                .Handler("DeleteCemetery(); ")
            //            );
            //        })
            //)
            .Items(
                X.GridPanel()
                    .TopBar(
                        Html.X().Toolbar()
                            .Items(
                                X.Button()
                                    .Text("جدید")
                                    .Icon(Ext.Net.Icon.Add)
                                    //.ToolTip("کلید میانبر F8")
                                    .Listeners(li => li.Click.Handler = "NewCemetery();"),
                                X.Button()
                                    .Text("قطعه")
                                    .Icon(Ext.Net.Icon.BorderAll)
                                    .Listeners(li => li.Click.Handler = "NewPiece();")//,
                                //X.Button()
                                //    .Text("محدودیت")
                                //    .Icon(Ext.Net.Icon.LockAdd)
                                //    .Listeners(Li => Li.Click.Handler = "ChangeEstekhdamStatus()"),
                                //X.Button()
                                //    .Text("گالری تصاویر")
                                //    .Icon(Ext.Net.Icon.FolderPicture)
                                //    .Listeners(Li => Li.Click.Handler = "GoruhTashvighi();")        
                            )
                    )
                    .ItemID("GridCemetery")
                    .BottomBar(X.PagingToolbar())
                    .Store(
                        X.StoreFor(Model.VadiSalam)
                            .AutoLoad(true)
                            .Proxy(Html.X().AjaxProxy()                            
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
                            )
                            .PageSize(10)
                            .RemoteFilter(true)
                            .RemotePaging(true)
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                        Html.X().Column().DataIndex(Model.VadiSalam, m => m.fldName).Text("نام وادی السلام").Wrap(true).Flex(3),
                        Html.X().Column().DataIndex(Model.VadiSalam, m => m.fldNameState).Text("استان").Wrap(true).Flex(2),
                        Html.X().Column().DataIndex(Model.VadiSalam, m => m.fldNameCity).Text("شهرستان").Wrap(true).Flex(2),
                        Html.X().Column().DataIndex(Model.VadiSalam, m => m.fldAddress).Text("آدرس").Wrap(true).Flex(5),
                        Html.X().Column().DataIndex(Model.VadiSalam, m => m.fldDesc).Text("توضیحات").Wrap(true).Flex(5),
                        Html.X().ImageCommandColumn().Listeners(l => l.Command.Fn = "ActionsonCemetery").Flex(1).Filterable(false)
                            .Commands(
                                Html.X().ImageCommand().CommandName("EditCemetery").Icon(Ext.Net.Icon.PageEdit).ToolTip(tt => tt.Text = "ویرایش"),
                                Html.X().ImageCommand().CommandName("DeleteCemetery").Icon(Ext.Net.Icon.Delete).ToolTip(tt => tt.Text = "حذف")
                            )
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                            //.Listeners(l => l.Select.Handler = "ReloadPiece();")
                    )
            )//,
        //X.Panel()
        //    .Border(false)
        //    .KeyMap(Html.X().KeyMap()
        //            .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
        //            .Binding(b =>
        //            {
        //                b.Add(Html.X().KeyBinding()
        //                    .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
        //                    .Handler("NewCemetery(); ")
        //                );
        //                b.Add(Html.X().KeyBinding()
        //                    .KeysString(((int)Ext.Net.KeyCode.F2).ToString())
        //                    .Handler("EditCemetery(); ")
        //                );
        //                b.Add(Html.X().KeyBinding()
        //                    .KeysString(((int)Ext.Net.KeyCode.F9).ToString())
        //                    .Handler("DeleteCemetery(); ")
        //                );
        //            })
        //    )
        //    .Items(
        //        X.GridPanel()
        //            .TopBar(
        //                Html.X().Toolbar()
        //                    .Items(
        //                        X.Button()
        //                            .Text("جدید")
        //                            .Icon(Ext.Net.Icon.Add)
        //                            .ToolTip("کلید میانبر F8")
        //                            .Listeners(li => li.Click.Handler = "NewPiece();"),
        //                        X.Button()
        //                            .Text("ردیف")
        //                            .Icon(Ext.Net.Icon.ArrowRedo)
        //                            .Listeners(Li => Li.Click.Handler = "GotoRadif()")
        //                    )
        //            )
        //            .ItemID("GridPieces")
        //            .BottomBar(X.PagingToolbar())
        //            .Store(
        //                X.StoreFor(Model.Ghete)
        //                    .AutoLoad(false)
        //                    .Proxy(Html.X().AjaxProxy()
        //                        .Url(Url.Action("ReadPieces"))
        //                        .Reader(Html.X().JsonReader().Root("data"))
        //                    )
        //                    .PageSize(10)
        //                    .RemoteFilter(true)
        //                    .RemotePaging(true)
        //            )
        //            .View(
        //                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
        //            )
        //            .Plugins(X.FilterHeader().Remote(true))
        //            .ColumnModel(
        //                Html.X().RowNumbererColumn(),
        //                Html.X().Column().DataIndex(Model.Ghete, m => m.fldId).Text("نام قطعه").Hidden(true).Flex(1),
        //                Html.X().Column().DataIndex(Model.Ghete, m => m.fldVadiSalamId).Text("آیدی وادی السلام").Hidden(true).Flex(1),
        //                Html.X().Column().DataIndex(Model.Ghete, m => m.fldNameGhete).Text("نام قطعه").Wrap(true).Flex(3),
        //                Html.X().Column().DataIndex(Model.Ghete, m => m.fldDesc).Text("توضیحات").Wrap(true).Flex(5),
        //                Html.X().ImageCommandColumn().Listeners(l => l.Command.Fn = "ActionsonPiece").Flex(1).Filterable(false)
        //                    .Commands(
        //                        Html.X().ImageCommand().CommandName("EditPiece").Icon(Ext.Net.Icon.PageEdit).ToolTip(tt => tt.Text = "ویرایش"),
        //                        Html.X().ImageCommand().CommandName("DeletePiece").Icon(Ext.Net.Icon.Delete).ToolTip(tt => tt.Text = "حذف")
        //                    )
        //            )
        //    )
        )
)

<script type="text/javascript">

    function setHeightCemetery() {
        App.Cemetery.queryById('GridCemetery').setHeight(App.MotevafiatWin.getHeight() - 174);
        /*App.Cemetery.queryById('GridPieces').setHeight((App.MotevafiatWin.getHeight() - 174) / 2);*/
    }

    function NewCemetery() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Deceased/Cemetery/New',
            params: {
                Id: 0
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function NewPiece() {
        var SelectedRow = App.Cemetery.queryById('GridCemetery').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Deceased/Cemetery/NewGhete',
                params: {
                    VadiId: SelectedRow.data.fldId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    /*function ReloadPiece() {
        var SelectedRow = App.Cemetery.queryById('GridCemetery').selModel.getLastSelected();
        App.Cemetery.queryById('GridPieces').getStore().getProxy().setExtraParam("CemeteryId", SelectedRow.data.fldId);
        App.Cemetery.queryById('GridPieces').getStore().load();
    }

    function GotoRadif() {
        var SelectedRow = App.Cemetery.queryById('GridPieces').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Deceased/Radif_Shomare/Index',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا قطعه مورد نظر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function ActionsonPiece(grid, command, record, row) {
        if (command == 'EditPiece') {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Deceased/Cemetery/NewGhete',
                params: {
                    id: record.data.fldId,
                    VadiId: record.data.fldVadiSalamId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else if (command == 'DeletePiece') {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Deceased/Cemetery/DeleteGhete',
                            params: {
                                id: record.data.fldId
                            },
                            success: function (data) {
                                var ico = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ico = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ico,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.Cemetery.queryById('GridPieces').getStore().getProxy().setExtraParam("CemeteryId", record.data.fldVadiSalamId);
                                App.Cemetery.queryById('GridPieces').getStore().load();
                            }
                        });
                    }
                }
            });
        }
    }*/
    
    function ActionsonCemetery(grid, command, record, row) {
        if (command == 'EditCemetery') {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Deceased/Cemetery/New',
                params: {
                    Id: record.data.fldId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else if (command == 'DeleteCemetery') {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Deceased/Cemetery/Delete',
                            params: {
                                Id: record.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1) {
                                    ic = Ext.MessageBox.ERROR;
                                }
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.Cemetery.queryById('GridCemetery').store.load();
                                App.Cemetery.queryById('GridPieces').getStore().getProxy().setExtraParam("CemeteryId", 0);
                                App.Cemetery.queryById('GridPieces').getStore().load();
                            }
                        });
                    }
                }
            });
        }
    }
</script>