@model NewFMS.Models.SavabegheSanavateKHedmat
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<br />
@(Html.X().Panel()
        .ID("SavabegheSanavateKHedmat")
        .Title("سوابق سنوات خدمت")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
            .Border(false)
        .Listeners(li => li.AfterRender.Handler = "SavabegheSanavateKHedmatSetSize();")
       .Items(
    X.Panel().Border(false)//.Height(250)
        .Items(
                X.GridPanel()
                                .AutoScroll(true)
        //.Listeners(l => l.ItemClick.Handler = "ReloadGridDetail();")
        //.TopBar(
        //    Html.X().Toolbar()
        //        .Items(


                                //                )
        //        )
                                .ItemID("GridAshkhas")
                                .BottomBar(X.PagingToolbar())
                                .Flex(2)
                                .Store(
                                                   X.StoreFor(Model.PersonalInfo)
                                        .Proxy(Html.X().AjaxProxy()
                                                .Url(Url.Action("ReadAshkhas"))
                                            .Reader(Html.X().JsonReader().Root("data")))
                                .PageSize(9)
                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = "App.SavabegheSanavateKHedmat.queryById('GridAshkhas').selModel.refresh();")*/)
                                .View(
                                    Html.X().GridView()
                                        .LoadingText("در حال بارگذاری...")
                                        .RTL(true))
                                .ColumnModel(
                                    Html.X().RowNumbererColumn(),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldJensiyat).Text("جنسیت").Hidden(true).Flex(1),
                                        Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldName_FamilyEmployee).Text("نام و نام خانوادگی").Flex(1),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldCodemeli).Text("کدملی").Flex(2),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(2)
                                )
                                    .Plugins(X.FilterHeader().Remote(true))
                                .SelectionModel(
                                    Html.X().RowSelectionModel()
                                        .Mode(Ext.Net.SelectionMode.Single)
                                             .Listeners(l =>
                                        {
                                            l.Select.Handler = "ReloadAshkhasSavabegheSanavate();";
                                        })
                                        )
        ),
           X.Panel()
                                .ItemID("PnlGridDetail")
                                .Title("اطلاعات سوابق سنوات خدمت")
                                .Border(false)
                                .Layout(Ext.Net.LayoutType.Fit)
                                .Items(
                                        X.GridPanel()
                                            .TopBar(
                                        Html.X().Toolbar()
                                            .Items(
                                              X.Button().Text("جدید").Icon(Ext.Net.Icon.Add).ToolTip("کلید میانبر F8")
                                                .Listeners(li => li.Click.Handler = "NewSavabegheSanavate();"),
                                                     X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).ToolTip("کلید میانبر F2")
                                                        .Listeners(Li => Li.Click.Handler = "EditSavabegheSanavate();"),
                                                X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).ToolTip("کلید میانبر F9")
                                                    .Listeners(de =>
                                                    {
                                                        de.Click.Handler = "if (App.SavabegheSanavateKHedmat.queryById('GridSavabegheSanavate').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteSavabegheSanavate();";
                                                    })
                                            ))
                                              .BottomBar(X.PagingToolbar().HideRefresh(true))
                                        .AutoScroll(true)
                                        .ID("GridSavabegheSanavate")
                                        .Flex(2).Height(187)
                                        .Store(
                                                       X.StoreFor(Model._SavabegheSanavateKHedmat)
                                                .PageSize(9)
                                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = " App.SavabegheSanavateKHedmat.queryById('GridSavabegheSanavate').selModel.refresh();")*/
                        )
                                        .View(
                                            Html.X().GridView()
                                                .LoadingText("در حال بارگذاری...")
                                                .RTL(true)
                        )
                                            .ColumnModel(
                                                Html.X().RowNumbererColumn(),
                                                Html.X().Column().DataIndex(Model._SavabegheSanavateKHedmat, m => m.fldId).Hidden(true).Text("کد").Flex(1),
                                                        Html.X().Column().DataIndex(Model._SavabegheSanavateKHedmat, m => m.fldPersonalId).Text(" کد شخص").Flex(1).Hidden(true),
                                                    Html.X().Column().DataIndex(Model._SavabegheSanavateKHedmat, m => m.fldNoeSabegheName).Text("نوع استخدام").Flex(2),
                                                    Html.X().Column().DataIndex(Model._SavabegheSanavateKHedmat, m => m.fldAzTarikh).Text("تاریخ اجرا").Flex(2),
                                                    Html.X().Column().DataIndex(Model._SavabegheSanavateKHedmat, m => m.fldTaTarikh).Text("تاریخ صدور").Flex(2)
                                 )
                                        .Plugins(
                                            Html.X().CellEditing().ClicksToEdit(1)
                                            )
                                        .SelectionModel(
                                            Html.X().RowSelectionModel()
                                                .Mode(Ext.Net.SelectionMode.Single)
                                )
                    )
    )
)
)
<script type="text/javascript">
    var dadat;
    /*  App.PersoneliWin.addListener('resize', function () {
          App.SavabegheSanavateKHedmat.setWidth(App.PersoneliWin.getWidth());
      });
      App.PersoneliWin.addListener('resize', function () {
          var grid = App.SavabegheSanavateKHedmat.queryById('GridAshkhas');
          grid.setHeight(App.PersoneliWin.getHeight() - 120);
          var grid = App.SavabegheSanavateKHedmat.queryById('PnlGridDetail');
      });*/
    function SavabegheSanavateKHedmatSetSize() {
        var grid = App.SavabegheSanavateKHedmat.queryById('GridAshkhas');
        grid.setHeight(App.PersoneliWin.getHeight() - 387);
        var GridSavabegheSanavate = App.SavabegheSanavateKHedmat.queryById('GridSavabegheSanavate');
    }
    function ReloadAshkhasSavabegheSanavate() {
        var SelectedRow = App.SavabegheSanavateKHedmat.queryById('GridAshkhas').selModel.getLastSelected();

        Ext.net.DirectMethod.request({
            url: '/Personeli/SavabegheSanavateKHedmat/Rload?PersonalId=' + SelectedRow.data.fldId,

            success: function (result) {
                App.SavabegheSanavateKHedmat.queryById('GridSavabegheSanavate').getStore().loadData(result);

            }

        });
    }
 
    function EditSavabegheSanavate() {
        var SelectedRow = App.SavabegheSanavateKHedmat.queryById('GridSavabegheSanavate').selModel.getLastSelected();
        var SelectedRowHeader = App.SavabegheSanavateKHedmat.queryById('GridAshkhas').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Personeli/SavabegheSanavateKHedmat/new',
                params: {
                    id: SelectedRow.data.fldId,
                    containerId: "SavabegheSanavateTab",
                    PersonalId: SelectedRow.data.fldPersonalId,
                    Jensiyat: SelectedRowHeader.data.fldJensiyat
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewSavabegheSanavate() {
        var SelectedRow = App.SavabegheSanavateKHedmat.queryById('GridAshkhas').selModel.getLastSelected();
        var SelectedRowHeader = App.SavabegheSanavateKHedmat.queryById('GridAshkhas').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Personeli/SavabegheSanavateKHedmat/new',
                params: {
                    id: 0,
                    containerId: "SavabegheSanavateTab",
                    PersonalId: SelectedRow.data.fldId,
                    Jensiyat: SelectedRowHeader.data.fldJensiyat
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک شخص را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteSavabegheSanavate() {
        var SelectedHeaderRow = App.SavabegheSanavateKHedmat.queryById('GridSavabegheSanavate').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Personeli/SavabegheSanavateKHedmat/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId
                            },
                            success: function (data) {
                                var ico = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ico = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.INFO,
                                    buttons: Ext.MessageBox.OK
                                });
                                ReloadAshkhasSavabegheSanavate();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>