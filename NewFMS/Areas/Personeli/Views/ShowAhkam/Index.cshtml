@model IEnumerable<NewFMS.WCF_Personeli.OBJ_PersonalHokm>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();
 NewFMS.WCF_Common.CommonService servic = new NewFMS.WCF_Common.CommonService();
 NewFMS.WCF_Common.ClsError Err = new NewFMS.WCF_Common.ClsError();}
<br />
@(Html.X().Panel()
            .ID("ShowAhkam")
        .Title("مشاهده احکام")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
            .Border(false)
       // .Listeners(li => li.AfterRender.Handler = "PersonalHokmSetSize();")
       .Items(
    X.Panel().Border(false)//.Height(250)
        .Items(
                X.GridPanel()
                    .TopBar(
                            Html.X().Toolbar()
                                .Items(
                                    X.Button().Text("تایید").Icon(Ext.Net.Icon.Accept).Hidden(!servic.Permission(704, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                    .Listeners(de =>
                                    {
                                        de.Click.Handler = "if (App.ShowAhkam.queryById('GridShowAhkam').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else ConfirmShowAhkam();";
                                    }),
                                            X.Button().Text("چاپ").Icon(Ext.Net.Icon.Printer).Hidden(!servic.Permission(705, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                        .Listeners(li => li.Click.Handler = "PrintShowHokm();")
                                         , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                                            .Listeners(l => { l.Click.Handler = "HelpShowHokm();"; })   

                                ))
                        .AutoScroll(true)
                            .ItemID("GridShowAhkam")
                        .BottomBar(X.PagingToolbar())
                        .Flex(2)
                        .Store(
                                   X.StoreForModel()
                                .Proxy(Html.X().AjaxProxy()
                                        .Url(Url.Action("Read"))
                                    .Reader(Html.X().JsonReader().Root("data")))
                        .PageSize(24)
                        .RemotePaging(true)
/*.Listeners(l => l.DataChanged.Handler = "App.PersonalHokm.queryById('GridAshkhas').selModel.refresh();")*/)
                        .View(
                            Html.X().GridView()
                                .LoadingText("در حال بارگذاری...")
                                .RTL(true))
                        .ColumnModel(
                                Html.X().RowNumbererColumn(),
                                Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                                Html.X().Column().DataIndex(Model, m => m.fldNameEmployee).Text("نام و نام خانوادگی").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldCodemeli).Text("کدملی").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldNoeEstekhdamName).Text("نوع استخدام").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldTarikhEjra).Text("تاریخ اجرا").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldTarikhSodoor).Text("تاریخ صدور").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldShomareHokm).Text("شماره حکم").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldStatusHokmName).Text("وضعیت حکم").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldStatusHokm).Text("کد وضعیت حکم").Flex(2).Hidden(true),
                                Html.X().Column().DataIndex(Model, m => m.fldStatusTaaholName).Text("نوع تاهل").Flex(2),
                                Html.X().Column().DataIndex(Model, m => m.fldPrs_PersonalInfoId).Hidden(true),
                                Html.X().Column().DataIndex(Model, m => m.fldAnvaeEstekhdamId).Hidden(true),
                                Html.X().Column().DataIndex(Model, m => m.fldTypehokm).Text("نوع حکم").Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.fldSumItem).Text("مجموع").Flex(2)
                        )
                            .Plugins(X.FilterHeader().Remote(true))
                                .Listeners(l =>
                         {
                             l.AfterRender.Handler = "var grid = App.ShowAhkam.queryById('GridShowAhkam');grid.setHeight(App.PersoneliWin.getHeight() - 170); ";

                         })
                        .SelectionModel(
                            Html.X().RowSelectionModel()
                                .Mode(Ext.Net.SelectionMode.Single)
                                )
        )
    )
)
<script type="text/javascript">
    function HelpShowHokm() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Personeli/ShowAhkam/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function ConfirmShowAhkam() {
        var SelectedHeaderRow = App.ShowAhkam.queryById('GridShowAhkam').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            if (SelectedHeaderRow.data.fldStatusHokm) {
                Ext.MessageBox.show({
                    title: "",
                    msg: "کاربر گرامی؛ حکم مورد نظر تایید شده است، شما مجاز به تایید مجدد حکم نمی باشید.",
                    icon: Ext.MessageBox.INFO,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "هشدار",
                    msg: "کاربر گرامی؛ آیا برای انجام عملیات مطمئن هستید یا خیر؟",
                    icon: Ext.MessageBox.WARNING,
                    buttons: Ext.MessageBox.YESNO,
                    fn: function (btn) {
                        if (btn == 'yes') {
                            Ext.net.DirectMethod.request({
                                url: '/Personeli/PersonalHokm/ConfirmHokm',
                                params: {
                                    HokmId: SelectedHeaderRow.data.fldId,
                                    Prs_PersonalInfoId: SelectedHeaderRow.data.fldPrs_PersonalInfoId,
                                    AnvaeEstekhdamId: SelectedHeaderRow.data.fldAnvaeEstekhdamId,
                                    TarikhEjra: SelectedHeaderRow.data.fldTarikhSodoor
                                },
                                success: function (data) {
                                    var ico = Ext.MessageBox.INFO;
                                    if (data.Er == 1)
                                        ico = Ext.MessageBox.ERROR;
                                    Ext.MessageBox.show({
                                        title: data.MsgTitle,
                                        msg: data.Msg,
                                        icon: ico,
                                        buttons: Ext.MessageBox.OK
                                    });
                                    App.ShowAhkam.queryById('GridShowAhkam').getStore().load();
                                }
                            });
                        }
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function PrintShowHokm() {
        var SelectedRow = App.ShowAhkam.queryById('GridShowAhkam').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Personeli/PersonalHokm/Print',
                params: {
                    PersonalHokmId: SelectedRow.data.fldId,
                    containerId: "HokmTab",
                    PersonalId: SelectedRow.data.fldPrs_PersonalInfoId,
                    AnvaeEstekhdamId: SelectedRow.data.fldAnvaeEstekhdamId,
                    TarikhEjra: SelectedRow.data.fldTarikhSodoor,
                    Details: 0
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>
