@model IEnumerable<NewFMS.WCF_Personeli.OBJ_PatternSharhHokm>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net.Utilities
@using Ext.Net;
@{

    var X = Html.X();
}


@(Html.X().Window().Modal(true)
            .Width(600).Height(360)
            .Title("الگوی شرح حکم")
            .ID("SearchPatternSharhHokm")
            .Closable(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .Items(

                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                            Html.X().Toolbar()
                            .Items(
                                    X.Button().Text("انتخاب").Icon(Ext.Net.Icon.ArrowRedo)
                                    .Listeners(li => li.Click.Handler = "NextSearchPatternSharhHokm();")
                            )
                        )
                        .ItemID("GridSearsh").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(330)
                    .ColumnWidth(0.6)
                    .Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(10)
                        .RemoteFilter(true)
                        .RemotePaging(true)

                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                      Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                      Html.X().Column().DataIndex(Model, m => m.fldHokmType).Text("نوع حکم").Flex(2),
                      Html.X().Column().DataIndex(Model, m => m.fldPatternText).Text("شرح الگو").Flex(5)
                    )
                    .Listeners(a => a.CellDblClick.Handler = "NextSearchPatternSharhHokm();App.SearchPatternSharhHokm.destroy();")
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )
                            .Listeners(li => li.ItemDblClick.Handler = "NextSearchPatternSharhHokm();")



            )
        )
)

<script type="text/javascript">
    var State = '@ViewBag.State';
    function NextSearchPatternSharhHokm() {
        var SelectedRow = App.SearchPatternSharhHokm.queryById('GridSearsh').selModel.getLastSelected();

        if (SelectedRow != null) {
            if (State == 1) {
                App.NewPersonalHokm.queryById('txtDescriptionHokm').setValue(SelectedRow.data.fldPatternText);
                App.NewPersonalHokm.queryById('txtTypehokm').setValue(SelectedRow.data.fldHokmType);
            }
            else if (State == 2) {
                App.HokmGroup.queryById('txtDescriptionHokm').setValue(SelectedRow.data.fldPatternText);
                App.HokmGroup.queryById('txtTypehokm').setValue(SelectedRow.data.fldHokmType);
            }
                App.SearchPatternSharhHokm.destroy();
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

</script>
