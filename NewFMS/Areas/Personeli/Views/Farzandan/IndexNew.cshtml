@model NewFMS.Models.AfradTahtePooshesh
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<br />
@(Html.X().Panel()
        .ID("Farzandan")
        .Title("افراد تحت پوشش")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
            .Border(false)
        .Listeners(li => li.AfterRender.Handler = "FarzandanSetSize();")
       .Items(
    X.Panel().Border(false)//.Height(250)
        .Items(
                X.GridPanel()
                                .AutoScroll(true)
                                .Listeners(l => l.ItemClick.Handler = "ReloadGridDetail();")
                        //             .TopBar(
                        //    Html.X().Toolbar()
                        //    .Items(
                        //        X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)//.ToolTip("کلید میانبر F8")
                        //                .Listeners(li => li.Click.Handler = "NewFarzandan();")
                        //    )
                        //)
                                .ItemID("GridHeader")
                                .BottomBar(X.PagingToolbar())
                                .Flex(2)
                                .Store(
                                           X.StoreFor(Model.Personal)
                                        .Proxy(Html.X().AjaxProxy()
                                            .Url(Url.Action("Read"))
                                            .Reader(Html.X().JsonReader().Root("data")))
                                .PageSize(9)
                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = "App.Farzandan.queryById('GridHeader').selModel.refresh();")*/)
                                .View(
                                    Html.X().GridView()
                                        .LoadingText("در حال بارگذاری...")
                                        .RTL(true))
                                            .Plugins(X.FilterHeader().Remote(true))
                                    .ColumnModel(
                                        Html.X().RowNumbererColumn(),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldName_FamilyEmployee).Text("نام و نام خانوادگی").Flex(4),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldCodemeli).Text("کد ملی").Flex(4),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldName).Text("نام").Flex(4).Hidden(true),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldJensiyat).Text("جنسیت").Flex(4).Hidden(true),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldFamily).Text("نام خانوادگی").Flex(4).Hidden(true),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldFatherName).Text("نام پدر").Flex(4),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(10)
                                        )
                                .SelectionModel(
                                    Html.X().RowSelectionModel()
                                        .Mode(Ext.Net.SelectionMode.Single)
                                        )
        ),
           X.Panel()
                                .ItemID("PnlGridDetail")
                                .Title("افراد")
                                .Border(false)
                                .Layout(Ext.Net.LayoutType.Fit)
                                .Items(
                                        X.GridPanel()
                                                  .TopBar(
                                Html.X().Toolbar()
                                .Items(
                                 X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)//.ToolTip("کلید میانبر F8")
                                        .Listeners(li => li.Click.Handler = "NewFarzandan();"),
                                    X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)//.ToolTip("کلید میانبر F2")
                                            .Listeners(Li => Li.Click.Handler = "EditFarzandan();"),
                                    X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)//.ToolTip("کلید میانبر F9")
                                        .Listeners(de =>
                                        {
                                            de.Click.Handler = "if (App.Farzandan.queryById('GridHeader').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteFarzandan();";
                                        })
                                          , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                                                    .Listeners(l => { l.Click.Handler = "HelpFarzandan();"; })   
                                )
                            )
                                              .BottomBar(X.PagingToolbar())
                                        .AutoScroll(true)
                                        .ItemID("GridDetail")
                                        .Flex(2)//.Height(187)
                                        .Store(
                                               X.StoreFor(Model.Afrad)
                                                .PageSize(9)
                                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = " App.Farzandan.queryById('GridDetail').selModel.refresh();")*/
                        )
                                        .View(
                                            Html.X().GridView()
                                                .LoadingText("در حال بارگذاری...")
                                                .RTL(true)
                        )
                                        .ColumnModel(
                                            Html.X().RowNumbererColumn(),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldPersonalId).Text("کد").Hidden(true).Flex(1),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldName).Text("نام").Flex(4),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldFamily).Text("نام خانوادگی").Flex(4),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldFatherName).Text("نام پدر").Flex(4),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldBirthDate).Text("تاریخ تولد").Flex(4),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldNameNesbat).Text("نسبت").Flex(4),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldStatusName).Text("وضعیت").Flex(4),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldMashmulName).Text("مشمول حق اولاد").Flex(10)
                                                    )
                                        .SelectionModel(
                                            Html.X().RowSelectionModel()
                                                .Mode(Ext.Net.SelectionMode.Single)
                                )
                    )
    )
)
<script type="text/javascript">
    var dadat;
  /*  App.Win.addListener('resize', function () {
        App.Farzandan.setWidth(App.Win.getWidth());
    });
    App.Win.addListener('resize', function () {
        var grid = App.Farzandan.queryById('GridHeader');
        grid.setHeight(App.Win.getHeight() - 120);
        var grid = App.Farzandan.queryById('PnlGridDetail');
    });*/
    function HelpFarzandan() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Personeli/Farzandan/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function FarzandanSetSize() {
        var grid = App.Farzandan.queryById('GridHeader');
        grid.setHeight((App.PersoneliWin.getHeight()-200)/2);
        var GridDetail = App.Farzandan.queryById('GridDetail');
        GridDetail.setHeight((App.PersoneliWin.getHeight()-200) / 2);
    }
    function ReloadGridDetail() {
        var SelectedRow = App.Farzandan.queryById('GridHeader').selModel.getLastSelected();

        Ext.net.DirectMethod.request({
            url: '/Personeli/Farzandan/Rload?PersonalId=' + SelectedRow.data.fldId,

            success: function (result) {
                App.Farzandan.queryById('GridDetail').getStore().loadData(result);

            }

        });
    }

    function EditFarzandan() {
        var SelectedRow = App.Farzandan.queryById('GridDetail').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Personeli/Farzandan/new',
                params: {
                    id: SelectedRow.data.fldId,
                    PersonalId: SelectedRow.data.fldPersonalId,
                    Family: SelectedRow.data.fldFamily,
                    FatherName: SelectedRow.data.fldFatherName,
                    Name: SelectedRow.data.fldName,
                    Jensiyat: SelectedRow.data.fldJensiyat
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewFarzandan() {
        var SelectedRow = App.Farzandan.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Personeli/Farzandan/new',
                params: {
                    id: 0,
                    PersonalId: SelectedRow.data.fldId,
                    Family: SelectedRow.data.fldFamily,
                    FatherName: SelectedRow.data.fldFatherName,
                    Name: SelectedRow.data.fldName,
                    Jensiyat: SelectedRow.data.fldJensiyat
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک پرسنل را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteFarzandan() {
        var SelectedHeaderRow = App.Farzandan.queryById('GridDetail').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Personeli/Farzandan/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                ReloadGridDetail();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>