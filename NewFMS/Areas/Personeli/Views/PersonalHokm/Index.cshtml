@model IEnumerable<NewFMS.WCF_Personeli.OBJ_PersonalHokm>
@using Ext.Net.MVC;
@using Ext.Net.Utilities;
@using Hogaf;
@{

    var X = Html.X();
}


@(X.Panel().Title("تعریف حکم پرسنل").Border(false)
        .ID("Hokm")
            .Closable(true)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .KeyMap(Html.X().KeyMap()
                    .ID("HokmMap")
                    .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                    .Binding(b =>
                    {
                        b.Add(Html.X().KeyBinding()
                            .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                            .Handler("if(App.HokmTab.activeTab.itemId=='GridPanel')NewHokm(); ")
                        );
                        b.Add(Html.X().KeyBinding()
                            .KeysString(((int)Ext.Net.KeyCode.F2).ToString())
                            .Handler("EditHokm(); ")
                        );
                        b.Add(Html.X().KeyBinding()
                            .KeysString(((int)Ext.Net.KeyCode.F9).ToString())
                            .Handler("DeleteHokm(); ")
                        );

                    }))
                .Items(
                    X.TabPanel().ID("HokmTab")
                    .AutoScroll(true).Height(630).Items(
                    X.Panel().ItemID("GridPanel")
                        .Title("ثبت حکم پرسنلی")
                        .Items(
                                X.GridPanel().AutoScroll(true)
                                    .TopBar(
                                    Html.X().Toolbar()
                                    .Items(
                                        X.Button().Text("جدید").Icon(Ext.Net.Icon.Add).ToolTip("کلید میانبر F8")
                                                .Listeners(li => li.Click.Handler = "NewHokm();")
                                       
                                    )
                                )
                                .ItemID("GridAshkhas").Flex(2)
                                .BottomBar(X.PagingToolbar())
                                .Height(300)
                                .ColumnWidth(0.6)
                                .Layout(Ext.Net.LayoutType.Column)
                                .Store(
                                    X.StoreForModel()
                                    .Proxy(Html.X().AjaxProxy()
                                        .Url(Url.Action("ReadAshkhas"))
                                        .Reader(Html.X().JsonReader().Root("data"))

                                    )
                                    .PageSize(9)
                                    .RemoteFilter(true)
                                    .RemotePaging(true)

                                )
                                .View(
                                    Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                                )

                                .Plugins(X.FilterHeader().Remote(true))
                                .ColumnModel(
                                    Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                                    Html.X().Column().DataIndex(Model, m => m.fldNameEmployee).Text("نام و نام خانوادگی").Flex(1),
                                    Html.X().Column().DataIndex(Model, m => m.fldCodemeli).Text("کدملی").Flex(2)

                                    )
                                .SelectionModel(
                                    Html.X().RowSelectionModel()
                                    .Mode(Ext.Net.SelectionMode.Single)
                                    .Listeners(l =>
                                    {
                                        l.Select.Handler = "ReloadAshkhasHokm();";
                                    })
                                )
                                    , X.GridPanel().AutoScroll(true)
                                        .TopBar(
                                        Html.X().Toolbar()
                                        .Items(
                                            X.Button().Text("چاپ").Icon(Ext.Net.Icon.Printer).ToolTip("چاپ")
                                            .Listeners(li => li.Click.Handler = "PrintHokm();"),
                                             X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).ToolTip("کلید میانبر F2")
                                                .Listeners(Li => Li.Click.Handler = "EditHokm();"),
                                        X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).ToolTip("کلید میانبر F9")
                                            .Listeners(de =>
                                            {
                                                de.Click.Handler = "if (App.Hokm.queryById('Grid').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteHokm();";
                                            })
                                        )
                                    )
                                    .ItemID("Grid").Flex(2)
                                    .BottomBar(X.PagingToolbar())
                                    .Height(300)
                                    .ColumnWidth(0.6)
                                    .Layout(Ext.Net.LayoutType.Column)
                                    .Store(
                                        X.StoreForModel()
                                        .Proxy(Html.X().AjaxProxy()
                                            .Url(Url.Action("Read"))
                                            .Reader(Html.X().JsonReader().Root("data"))
                                        )
                                        .PageSize(8)
                                        .RemoteFilter(true)
                                        .RemotePaging(true)
                                    )
                                    .View(
                                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                                    )

                                    .Plugins(X.FilterHeader().Remote(true))
                                    .ColumnModel(
                                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                                        Html.X().Column().DataIndex(Model, m => m.fldNoeEstekhdamName).Text("نوع استخدام").Flex(2),
                                        Html.X().Column().DataIndex(Model, m => m.fldTarikhEjra).Text("تاریخ اجرا").Flex(2),
                                        Html.X().Column().DataIndex(Model, m => m.fldTarikhSodoor).Text("تاریخ صدور").Flex(2),
                                        Html.X().Column().DataIndex(Model, m => m.fldShomareHokm).Text("شماره حکم").Flex(2),
                                        Html.X().Column().DataIndex(Model, m => m.fldStatusHokm).Text("وضعیت حکم").Flex(2),
                                        Html.X().Column().DataIndex(Model, m => m.fldStatusTaaholName).Text("نوع تاهل").Flex(2),
                                        Html.X().Column().DataIndex(Model, m => m.fldPrs_PersonalInfoId).Hidden(true),
                                        Html.X().Column().DataIndex(Model, m => m.fldAnvaeEstekhdamId).Hidden(true)

                                            ).Plugins(
                                        Html.X().CellEditing().ClicksToEdit(1)
                                        )

                ))
            )
        )
)

<script type="text/javascript">
    function ReloadAshkhasHokm() {
        var SelectedRow = App.Hokm.queryById('GridAshkhas').selModel.getLastSelected();

        Ext.net.DirectMethod.request({
            url: 'PersonalHokm/Rload?PersonalId=' + SelectedRow.data.fldId,

            success: function (result) {
                App.Hokm.queryById('Grid').getStore().loadData(result);

            }

        });
    }
    function PrintHokm() {
        var SelectedRow = App.Hokm.queryById('Grid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PersonalHokm/Print',
                params: {
                    PersonalHokmId: SelectedRow.data.fldId,
                    containerId: "HokmTab",
                    PersonalId: SelectedRow.data.fldPersonalInfoKargoziniId,
                    AnvaeEstekhdamId: SelectedRow.data.fldAnvaeEstekhdamId,
                    TarikhEjra: SelectedRow.data.fldTarikhEjra
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EditHokm() {
        var SelectedRow = App.Hokm.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PersonalHokm/new',
                params: {
                    id: SelectedRow.data.fldId,
                    containerId: "HokmTab",
                    PersonalId: SelectedRow.data.fldPersonalInfoKargoziniId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewHokm() {
        var SelectedRow = App.Hokm.queryById('GridAshkhas').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PersonalHokm/new',
                params: {
                    id: 0,
                    containerId: "HokmTab",
                    PersonalId: SelectedRow.data.fldId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک شخص را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteHokm() {
        var SelectedHeaderRow = App.Hokm.queryById('Grid').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/PersonalHokm/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId
                            },
                            success: function (data) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.INFO,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.Hokm.queryById('Grid').store.load()
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }


</script>