@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window().Modal(true)
    .Width(300)
    .Title("انتخاب فایل")
                .ID("UploadFile")
                    .Resizable(false)
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel().Border(false)
        .Border(false).ButtonAlign(Ext.Net.Alignment.Center)

        .DefaultButton("btn")
        .TitleAlign(Ext.Net.TitleAlign.Center)
               .Buttons(X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ToolTip("کلید میانبر F8")
                           .Listeners(l =>
                           {
                               l.Click.Handler = "SaveFile()";

                           })
                           .ItemID("btnSave")
                            ,
                            X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                                                .OnClientClick("App.UploadFile.destroy();"))


                .Items(
                X.Panel().Border(false)

            .Items(
               
                        X.FieldSet().Border(false)
                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 3 })
                                .Defaults(new { Margin = 3 })
                            .Items(
                             X.FileUploadField()
                            .ID("FileUploadField1")
                            .ButtonOnly(true).ButtonText("انتخاب عکس")
                            .DirectEvents(l =>
                                    {
                                        l.Change.Action = "UploadContent";
                                    }
                                )
                            .Listeners(l => l.Change.Fn = "showFile")
                                    .Icon(Ext.Net.Icon.DiskUpload)
                                    , X.Container().Content(@<div id="fi-button-msg" style="display:none;"></div>).ColSpan(3)
                            
                            
                            )
                )
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
)
        )
)
<script type="text/javascript">
    var showFile = function (fb, v) {
        if (v) {
            var el = Ext.get('fi-button-msg');
            el.update('<b>فایل انتخاب شده:</b> ' + v);

            if (!el.isVisible()) {
                el.slideIn('t', {
                    duration: .2,
                    easing: 'easeIn',
                    callback: function () {
                        el.highlight();
                    }
                });
            } else {
                el.highlight();
            }
        }
    };
    function SaveFile() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Personeli/DigitalArchivePersonali/ContentSave',
            params: {
                PersonalId: 1,
                TreeId: '@ViewBag.TreeId'
            },
            success: function (data) {
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: Ext.MessageBox.INFO,
                    buttons: Ext.MessageBox.OK
                });
                Ext.net.Mask.hide();
            }

        });
    }
 </script>