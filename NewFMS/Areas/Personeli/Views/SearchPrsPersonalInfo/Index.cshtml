@model IEnumerable<NewFMS.WCF_Personeli.OBJ_PersonalInfo>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}
@(Html.X().Window().Modal(true)
            .Width(600).Height(350)
            .Title("پرسنل")
                        .ID("SearchPersonalInfo")
            .Closable(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .Items(

                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                            Html.X().Toolbar()
                            .Items(
                                    X.Button().Text("انتخاب").Icon(Ext.Net.Icon.ArrowRedo)
                                                        .Listeners(li => li.Click.Handler = "NextSearchPersonalInfo();")

                            )
                        )
                                    .ItemID("GridSearchPersonalInfo").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(320)
                    .ColumnWidth(0.6)
                    .Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))
                                    .ExtraParams(x => x.Add(new { OrganId = @ViewBag.OrganId }))
                        )
                        .PageSize(10)
                        .RemoteFilter(true)
                        .RemotePaging(true)

                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                                Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                Html.X().Column().DataIndex(Model, m => m.fldNameEmployee).Text("نام و نام خانوادگی").Flex(4),
                                Html.X().Column().DataIndex(Model, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.fldMadrakTahsiliTitle).Text("مدرک تحصیلی").Flex(3),
                                    Html.X().Column().DataIndex(Model, m => m.fldReshteTahsiliTitle).Text("رشته تحصیلی").Flex(3),
                                            Html.X().Column().DataIndex(Model, m => m.TitleNoeEstekhdam).Text("نوع استخدام").Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.fldNoeEstekhdam).Text("نوع استخدام").Flex(1).Hidden(true)
                               // Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(10)
                    )
                                .Listeners(a => a.CellDblClick.Handler = "NextSearchPersonalInfo();")
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )

            )
        )
)

<script type="text/javascript">
    var State = '@ViewBag.State';
    function NextSearchPersonalInfo() {
        var SelectedRow = App.SearchPersonalInfo.queryById('GridSearchPersonalInfo').selModel.getLastSelected();

        if (SelectedRow != null) {
            if (State == 1) {                
                App.NewPayPersonalInfo.queryById('PersonalInfoId').setValue(SelectedRow.data.fldId);
                App.NewPayPersonalInfo.queryById('txtPersonalInfoKargozini').setValue(SelectedRow.data.fldNameEmployee);
                
                var CboPasAndaz = App.NewPayPersonalInfo.queryById('CboPasAndaz');
                var CboMasuliyatPayanKhedmat = App.NewPayPersonalInfo.queryById('CboMasuliyatPayanKhedmat');
                if(SelectedRow.data.fldNoeEstekhdam<6)/*کارگری*/
                {
                    CboPasAndaz.setValue("0");
                    CboPasAndaz.setDisabled(true);
                    CboMasuliyatPayanKhedmat.setDisabled(false);
                }
                else {
                    CboPasAndaz.setDisabled(false);
                    CboMasuliyatPayanKhedmat.setValue("0");
                    CboMasuliyatPayanKhedmat.setDisabled(true);
                }
            }
            else if (State == 2) {
                App.SettingForm.queryById('txtName').setValue(SelectedRow.data.fldName);
                App.SettingForm.queryById('txtFamily').setValue(SelectedRow.data.fldFamily);
                App.SettingForm.queryById('txtCodeMeli').setValue(SelectedRow.data.fldCodemeli);
                App.SettingForm.queryById('txtSemat').setValue(SelectedRow.data.NamePostOran);
                App.SettingForm.queryById('fldPrs_PersonalId').setValue(SelectedRow.data.fldId);
            }

            App.SearchPersonalInfo.destroy();
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }


</script>