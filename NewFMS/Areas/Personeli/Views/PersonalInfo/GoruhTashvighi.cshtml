@model IEnumerable<NewFMS.WCF_Personeli.OBJ_SavabeghGroupTashvighi>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}


@(X.Panel().Title("سوابق گروه تشویقی").Border(false)
            .ID("GrohTashvighi")
            .Closable(true)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .KeyMap(Html.X().KeyMap()
                    .ID("GrohTashvighiMap")
                    .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                    .Binding(b =>
                    {
                        b.Add(Html.X().KeyBinding()
                            .Ctrl(true)
                            .KeysString("N")
                            .Handler("NewGrohTashvighi(); ")
                        );
                        b.Add(Html.X().KeyBinding()
                            .Ctrl(true)
                            .KeysString("E")
                            .Handler("EditGrohTashvighi(); ")
                        );
                        b.Add(Html.X().KeyBinding()
                            .Ctrl(true)
                            .KeysString("D")
                            .Handler("DeleteGrohTashvighi(); ")
                        );

                    }))
                .Items(
                    X.TabPanel().ID("GrohTashvighiTab")
                    .AutoScroll(true).Height(630).Items(
                    X.Panel().ItemID("GridPanel")
                        .Title("ثبت گروه")
                        .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button().Text("جدید").Icon(Ext.Net.Icon.Add).ToolTip("کلید میانبر N")
                                    .Listeners(li => li.Click.Handler = "NewGrohTashvighi();"),
                            X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).ToolTip("کلید میانبر E")
                                    .Listeners(Li => Li.Click.Handler = "EditGrohTashvighi();"),
                            X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).ToolTip("کلید میانبر D")
                                .Listeners(de =>
                                {
                                    de.Click.Handler = "if (App.GrohTashvighi.queryById('Grid').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteGrohTashvighi();";
                                })
                        )
                    )
                    .ItemID("Grid1").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(300)
                    .ColumnWidth(0.6)
                    .Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                        .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("ReadSaVabeghTashvighi"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)

                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )

                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldAnvaGroupTashvighiTitle).Text("نوع گروه تشویقی").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldTedadGroup).Text("تعداد").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldTarikh).Text("تاریخ").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(15)

                        )

                ))
            )
        )
)

<script type="text/javascript">
    function EditGrohTashvighi() {
        var SelectedRow = App.GrohTashvighi.queryById('Grid1').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Personeli/PersonalInfo/newGrohTashvighi',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewGrohTashvighi() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Personeli/PersonalInfo/newGrohTashvighi',
            params: {
                id: 0
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }


    function DeleteGrohTashvighi() {
        var SelectedHeaderRow = App.GrohTashvighi.queryById('Grid1').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Personeli/PersonalInfo/DeleteSavabeghTashvighi',
                            params: {
                                id: SelectedHeaderRow.data.fldId
                            },
                            success: function (data) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.INFO,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.GrohTashvighi.queryById('Grid1').store.load()
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }


</script>
