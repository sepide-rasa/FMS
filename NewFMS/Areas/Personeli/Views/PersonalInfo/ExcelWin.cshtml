@model IEnumerable<NewFMS.WCF_Personeli.OBJ_AnvaGroupTashvighi>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
@(Html.X().Window().Modal(true)
.Width(730)//.Height(220)
        .Title("خروجی اکسل")
    .ID("ExcelWin")
    
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)

    .Items(
                X.Panel()
                                    .Defaults(new { Margin = 10 })
                .Border(false)
                .Buttons(
                                X.Button().Text("خروجی اکسل").Icon(Ext.Net.Icon.Disk).Listeners(l => { l.Click.Handler = "CreatExcel();"; }),
                        X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).OnClientClick("App.ExcelWin.destroy()")
                    )
                .ButtonAlign(Ext.Net.Alignment.Center)
                .Items(
        //X.Panel()
        //    .Border(true)
        //        .Layout(Ext.Net.LayoutType.VBox)
        //    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
        //    .Items(
                            X.FieldSet()
                            .Title("فیلدها")
                                .Border(true)
                               // .Width(700)
                                .Defaults(new { Margin = 2 })
                                .Layout(LayoutType.Table)
                                .LayoutConfig(new TableLayoutConfig { Columns = 10 })
                            .Items(
                                  X.Checkbox()//.MarginSpec("0px 0px 0px 50px")
                                .ItemID("CheckedName")
                                ,X.Label("نام")
                                    //.FieldLabel("نام").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                        , X.Checkbox().PaddingSpec("0 20px 0 0")
                                .ItemID("CheckedFamily")
                                    , X.Label("نام خانوادگی")
                                        //    .FieldLabel("نام خانوادگی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                        , X.Checkbox().PaddingSpec("0 20px 0 0")
                                .ItemID("CheckedFather")
                                            , X.Label("نام پدر")
                                           // .FieldLabel("نام پدر").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                                    .ItemID("CheckedMeliCode")
                                                , X.Label("کدملی")
        // .FieldLabel("نام پدر").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                                     .ItemID("CheckedJensiyat")
                                            , X.Label("جنسیت")
                                      //  .FieldLabel("جنسیت").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox()
                                            .ItemID("CheckedShomareShenasname")
                                            , X.Label("شماره شناسنامه")
                                            //.FieldLabel("شماره شناسنامه").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedTarikhTavalod")
                                                  , X.Label("تاریخ تولد")
                                                  
                                                    , X.Checkbox().PaddingSpec("0 20px 0 0")
                                                    .ItemID("CheckedTarikhSodoor")
                                                  , X.Label("تاریخ صدور")
                                               //         .FieldLabel("تاریخ تولد").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox().PaddingSpec("0 20px 0 0")
                                                    .ItemID("CheckedCityTavalod")
                                               , X.Label("شهر محل تولد")
                                               
                                                    , X.Checkbox().PaddingSpec("0 20px 0 0")
                                                .ItemID("CheckedCity")
                                               , X.Label("شهر محل صدور")
                                          //          .FieldLabel("شهر محل صدور").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox()
                                            .ItemID("CheckedAddres")
                                                  , X.Label("آدرس")
                                                  //          .FieldLabel("آدرس").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckeCodePosti")
                                              , X.Label("کد پستی")
                                                 //        .FieldLabel("کد پستی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedStatusEsargari")
                                         , X.Label("وضعیت ایثارگری")
                                           //           .FieldLabel("وضعیت ایثارگری").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedShomarePersoneli")
                                             , X.Label("شماره پرسنلی")
                                               //          .FieldLabel("شماره پرسنلی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedReshteTahsili")
                                            , X.Label("رشته تحصیلی")
                                          //          .FieldLabel("رشته تحصیلی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox()
                                            .ItemID("CheckedStatusNezamVazife")
                                           , X.Label("وضعیت نظام وظیفه")
                                          //              .FieldLabel("وضعیت نظام وظیفه").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedOrganizationalPosts")
                                          , X.Label("پست سازمانی")
                                           //         .FieldLabel("پست سازمانی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedRasteShoghli")
                                            , X.Label("رسته شغلی")
                                           //          .FieldLabel("رسته شغلی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedReshteShoghli")
                                            , X.Label("رشته شغلی")
                                            //           .FieldLabel("رشته شغلی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")


                                                , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedTMojavezEstekhdam")
                                            , X.Label("تاریخ مجوز استخدام")
                                            //                 .FieldLabel("تاریخ مجوز استخدام").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")



                                                , X.Checkbox()
                                            .ItemID("CheckedTarikhEstekhdam")
                                            , X.Label("تاریخ استخدام")
                                            //          .FieldLabel("تاریخ استخدام").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedTabaghe")
                                             , X.Label("طبقه")
                                              //          .FieldLabel("طبقه").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedMeliyat")
                                          , X.Label("ملیت")
                                         //               .FieldLabel("ملیت").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")
                                                    , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedShMojavezEstekhdam")
                                            , X.Label("شماره مجوز استخدام")
                                            //                 .FieldLabel("شماره مجوز استخدام").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")
                                            
                                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedMadraka")
                                        , X.Label("مقطع تحصیلی")

                                            , X.Checkbox()
                                            .ItemID("CheckedEsargaria")
                                        , X.Label("شرح ایثارگری")

                                                , X.Checkbox().PaddingSpec("0 20px 0 0")
                                        .ItemID("CheckedNoeEstekhdama")
                                        , X.Label("نوع استخدام")

                                                    , X.Checkbox().PaddingSpec("0 20px 0 0")
                                        .ItemID("CheckedStatusPer")
                                        , X.Label("وضعیت")
                                             , X.Checkbox().PaddingSpec("0 20px 0 0")
                                            .ItemID("CheckedSanavat")
                                            , X.Label("سنوات خدمت")
                   )
                   ,
                    X.FieldSet()
                                    .Border(true)//.PaddingSpec("0 100px 0 0")
                                .Width(700)
                                .Title("فیلترینگ")
                                .Defaults(new { Margin = 2 })
                                .Layout(LayoutType.Table)
                                .LayoutConfig(new TableLayoutConfig { Columns = 5 })
                            .Items(
                                    X.FieldSet()
                                        .Border(false)
                                        .Width(210)
                                        .Defaults(new { Margin = 2 })
                                        .Layout(LayoutType.Table)
                                        .LayoutConfig(new TableLayoutConfig { Columns = 3 })
                                    .Items(
                                            X.Checkbox()
                                            .ItemID("CheckedStatus")
                                            .Listeners(l => l.Change.Handler = "CheckCheckedStatus()")
                                          , X.Label("وضعیت")
                                          ,X.ComboBox()
                                          .Width(120)
                                            .ItemID("CboStatus")
                                            .TypeAhead(true)
                                            .Disabled(true)
                                            .BlankText("لطفا وضعیت را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .AllowBlank(false)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldName")
                                            .ValueField("fldId")
                                            .Editable(false)
                                                .EmptyText("وضعیت ...")
                                            .SelectedItems(new { Value = "1" })
                                            .Store(X.Store()
                                                .Model(X.Model()
                                                    .IDProperty("fldId")
                                                    .Fields(
                                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                    )
                                                    )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetStatus"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    )
                                            )
                                            ,
                                            X.Checkbox()
                                            .ItemID("CheckedGender")
                                                .Listeners(l => l.Change.Handler = "CheckCheckedGender()")
                                            , X.Label("جنسیت")
                                            , X.ComboBox()
                                                .Width(120)
                                                .Disabled(true)
                                            .ItemID("CboGender")
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .BlankText("لطفا جنسیت را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                                .AllowBlank(false)
                                            .SelectedItems(new { Value = "1" })                                            
                                            .EmptyText("جنسیت...")
                                            .Items(
                                                new ListItem("مرد", "1"),
                                                new ListItem("زن", "0")
                                                )
                                                    ,
                                            X.Checkbox()
                                            .ItemID("CheckedEsargari")
                                                .Listeners(l => l.Change.Handler = "CheckCheckedEsargari()")
                                            , X.Label("ایثارگری")
                                            , X.ComboBox()
                                            .ItemID("CboEsargari")
                                                .Width(120)
                                                .Disabled(true)
                                            .TypeAhead(true)
                                            .Editable(false)
                                            .QueryMode(DataLoadMode.Local)
                                            .BlankText("لطفا ایثارگری را انتخاب کنید.")
                                            .ForceSelection(true)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldName")
                                            .ValueField("fldId")
                                            .EmptyText("ایثارگری ...")
                                            .SelectedItems(new { Value = "1" })
                                            .Store(X.Store()
                                                .Model(X.Model()
                                                    .IDProperty("fldId")
                                                    .Fields(
                                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                            )
                                                    )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetEsargari"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    )
                                                )
                                    )
                                    ,
                                    X.FieldSet()
                                            .Border(false)
                                        .Width(120)
                                       // .Defaults(new { Margin = 2 })
                                        .Layout(LayoutType.Table)
                                        .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                    .Items(
                                         X.Checkbox()
                                        .ItemID("CheckedMadrak")
                                            .Listeners(l => l.Change.Handler = "CheckCheckedMadrak()")
                                        , X.Label("مقطع تحصیلی")
                                        , X.ComboBox().ColSpan(2)
                                            .Width(100)
                                                .Disabled(true)
                                        .AllowBlank(false)
                                        .ItemID("CboMadrak")
                                        .TypeAhead(true)
                                        .BlankText("لطفا مقطع تحصیلی را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldName")
                                        .ValueField("fldId")
                                        .EmptyText("مقطع تحصیلی ...")
                                        .Editable(false)
                                        .SelectedItems(new { Value = "4" })
                                        .Store(X.Store()
                                            .Model(X.Model()
                                                .IDProperty("fldId")
                                                .Fields(
                                                    new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                )
                                                )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetMadrakTahsili"))
                                                .Reader(X.JsonReader().Root("data"))
                                                )
                                        )
                                        ,
                                                X.Button().Icon(Ext.Net.Icon.PreviousGreen)
                                                .ItemID("btnOk1")
                                                .Disabled(true)
                                                .Listeners(l=>l.Click.Handler="AddItem1()")
                                            ,
                                                        X.Button().Icon(Ext.Net.Icon.NextGreen)
                                                    .ItemID("btnCancle1")
                                                    .Disabled(true)
                                                        .Listeners(l => l.Click.Handler = "DelItem1()")
                                    )
                                    ,X.FieldSet()
                                        .Border(false)
                                        .Width(110)
                                       // .Defaults(new { Margin = 2 })
                                        .Layout(LayoutType.Table)
                                        .LayoutConfig(new TableLayoutConfig { Columns = 1 })
                                    .Items(
                                            X.GridPanel().AutoScroll(true)
                                                .ID("GridMadrakTahsili")
                                            .Height(100)
                                                 .Width(90)
                                        .Store(
                                            X.StoreForModel()
                                            ).HideHeaders(true)
                                             .ColumnModel(
                                                     Html.X().Column().DataIndex(Model, m => m.fldId).Hidden(true),
                                                     Html.X().Column().DataIndex(Model, m => m.fldTitle)
                                             )
                                //             X.TextArea()
                                //                    .Disabled(true)
                                //                    .ReadOnly(true)
                                //    .ItemID("txtDescMadrak")
                                //.Width(80)
                                    )
                                         ,
                                        X.FieldSet()
                                                .Border(false)
                                            .Width(120)
        // .Defaults(new { Margin = 2 })
                                            .Layout(LayoutType.Table)
                                            .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                        .Items(
                                             X.Checkbox()
                                            .ItemID("CheckedNoeEstekhdam")
                                                .Listeners(l => l.Change.Handler = "CheckCheckedNoeEstekhdam()")
                                            , X.Label("نوع استخدام")
                                            , X.ComboBox().ColSpan(2)
                                                .Width(100)
                                                .Disabled(true)
                                            .ItemID("CboNoeEstekhdam")
                                            .TypeAhead(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا نوع استخدام را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldName")
                                            .ValueField("fldId")
                                                .Editable(false)
                                            .SelectedItems(new { Value = "1" })
                                            .EmptyText("نوع استخدام ...")
                                            .Store(X.Store()
                                                .Model(X.Model()
                                                    .IDProperty("fldId")
                                                    .Fields(
                                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                    )
                                                    )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetNoeEstekhdam"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    )
                                            )
                                            ,
                                                        X.Button().Icon(Ext.Net.Icon.PreviousGreen)
                                                        .ItemID("btnOk2")
                                                    .Listeners(l => l.Click.Handler = "AddItem2()")
                                                .Disabled(true)
                                                ,
                                                            X.Button().Icon(Ext.Net.Icon.NextGreen)
                                                            .ItemID("btnCancle2")
                                                        .Listeners(l => l.Click.Handler = "DelItem2()")
                                                .Disabled(true)
                                        )
                                        , X.FieldSet()
                                            .Border(false)
                                            .Width(110)
        // .Defaults(new { Margin = 2 })
                                            .Layout(LayoutType.Table)
                                            .LayoutConfig(new TableLayoutConfig { Columns = 1 })
                                        .Items(
                             //                     X.TreePanel()
                             //               .ID("treeNoeEstekhdam")
                             //                   .AutoScroll(true)
                             //                   .Disabled(true)
                             //                   .Width(100)
                             //                       .Height(100)
                             //                   .UseArrows(true)                                      
                             //                   .Border(false)
                             //                       .Store(
                             //   Html.X().TreeStore()
                             //       //.Proxy(
                             //       //            Html.X().AjaxProxy().Url(Url.Action("Node"))
                             //       //)
                             //   )
                             //       .Listeners(a =>
                             //                   {
                             //                       a.ItemClick.Handler = "GetId(record)";
                             //                       a.AfterRender.Handler = "this.getRootNode().expand();";
                             //                   })
                             //          .Root(Html.X().Node().NodeID("0").Text(""))//.RootVisible(false)

                             //                   .View(
                             //                       X.TreeView()
                             //                   .Plugins(
                             //                   X.TreeViewDragDrop().AppendOnly(true).ContainerScroll(true)

                             //               )
                             //)
                                          X.GridPanel().AutoScroll(true)
                            .ID("GridNoeEstekhdam")                            
                            .Height(100)
                                 .Width(90)
                        .Store(
                            X.StoreForModel()
                            ).HideHeaders(true)
                                 .ColumnModel(
                                        Html.X().Column().DataIndex(Model, m => m.fldId).Hidden(true),
                                     Html.X().Column().DataIndex(Model, m => m.fldTitle)
                             )
                        
                        /////////
                        //,
                        //                     X.TextArea()
                        //                    .ItemID("txtDescNoeEstekhdam")
                        //                        .Disabled(true)
                        //                        .ReadOnly(true)
                        //            .Width(80)
                                        )
                            )
        //)
        )
            )
)

<script type="text/javascript">
    function CreatExcel() {
        App.ExcelWin.body.mask("در حال بارگذاری");
        var CheckedName = App.ExcelWin.queryById('CheckedName').getValue();
        var CheckedFamily = App.ExcelWin.queryById('CheckedFamily').getValue(); 
        var CheckedFather = App.ExcelWin.queryById('CheckedFather').getValue();
        var CheckedMeliCode = App.ExcelWin.queryById('CheckedMeliCode').getValue();
        var CheckedJensiyat = App.ExcelWin.queryById('CheckedJensiyat').getValue();
        var CheckedShomareShenasname = App.ExcelWin.queryById('CheckedShomareShenasname').getValue();
        var CheckedTarikhTavalod = App.ExcelWin.queryById('CheckedTarikhTavalod').getValue();
        var CheckedCity = App.ExcelWin.queryById('CheckedCity').getValue();
        var CheckedAddres = App.ExcelWin.queryById('CheckedAddres').getValue();
        var CheckeCodePosti = App.ExcelWin.queryById('CheckeCodePosti').getValue();
        var CheckedStatusEsargari = App.ExcelWin.queryById('CheckedStatusEsargari').getValue();
        var CheckedShomarePersoneli = App.ExcelWin.queryById('CheckedShomarePersoneli').getValue();
        var CheckedReshteTahsili = App.ExcelWin.queryById('CheckedReshteTahsili').getValue();
        var CheckedStatusNezamVazife = App.ExcelWin.queryById('CheckedStatusNezamVazife').getValue();
        var CheckedOrganizationalPosts = App.ExcelWin.queryById('CheckedOrganizationalPosts').getValue();
        var CheckedRasteShoghli = App.ExcelWin.queryById('CheckedRasteShoghli').getValue();
        var CheckedReshteShoghli = App.ExcelWin.queryById('CheckedReshteShoghli').getValue();
        var CheckedTarikhEstekhdam = App.ExcelWin.queryById('CheckedTarikhEstekhdam').getValue();
        var CheckedTabaghe = App.ExcelWin.queryById('CheckedTabaghe').getValue();
        var CheckedMeliyat = App.ExcelWin.queryById('CheckedMeliyat').getValue();
        var CheckedShMojavezEstekhdam = App.ExcelWin.queryById('CheckedShMojavezEstekhdam').getValue();
        var CheckedTMojavezEstekhdam = App.ExcelWin.queryById('CheckedTMojavezEstekhdam').getValue();
        var CheckedReshteShoghli = App.ExcelWin.queryById('CheckedReshteShoghli').getValue();
                
        var CheckedTarikhSodoor = App.ExcelWin.queryById('CheckedTarikhSodoor').getValue();
        var CheckedCityTavalod = App.ExcelWin.queryById('CheckedCityTavalod').getValue();
        var CheckedMadraka = App.ExcelWin.queryById('CheckedMadraka').getValue();
        var CheckedEsargaria = App.ExcelWin.queryById('CheckedEsargaria').getValue();
        var CheckedNoeEstekhdama = App.ExcelWin.queryById('CheckedNoeEstekhdama').getValue();
        var CheckedStatusPer = App.ExcelWin.queryById('CheckedStatusPer').getValue();
        var CheckedSanavat = App.ExcelWin.queryById('CheckedSanavat').getValue();

        var Checked = ""; 
        if (CheckedName == true)
            Checked = Checked + "Name" + ";";
        if (CheckedFamily == true)
            Checked = Checked + "Family" + ";";
        if (CheckedFather == true)
            Checked = Checked + "Father" + ";";
        if (CheckedMeliCode == true)
            Checked = Checked + "MeliCode" + ";";
        if (CheckedJensiyat == true)
            Checked = Checked + "Jensiyat" + ";";
        if (CheckedShomareShenasname == true)
            Checked = Checked + "ShomareShenasname" + ";";
        if (CheckedTarikhTavalod == true)
            Checked = Checked + "TarikhTavalod" + ";";
        if (CheckedCity == true)
            Checked = Checked + "City" + ";";
        if (CheckedAddres == true)
            Checked = Checked + "Addres" + ";";
        if (CheckeCodePosti == true)
            Checked = Checked + "CodePosti" + ";";
        if (CheckedStatusEsargari == true)
            Checked = Checked + "StatusEsargari" + ";";
        if (CheckedShomarePersoneli == true)
            Checked = Checked + "ShomarePersoneli" + ";";
        if (CheckedReshteTahsili == true)
            Checked = Checked + "ReshteTahsili" + ";";
        if (CheckedStatusNezamVazife == true)
            Checked = Checked + "StatusNezamVazife" + ";";
        if (CheckedOrganizationalPosts == true)
            Checked = Checked + "OrganizationalPosts" + ";";
        if (CheckedRasteShoghli == true)
            Checked = Checked + "RasteShoghli" + ";";
        if (CheckedReshteShoghli == true)
            Checked = Checked + "ReshteShoghli" + ";";
        if (CheckedTarikhEstekhdam == true)
            Checked = Checked + "TarikhEstekhdam" + ";";
        if (CheckedTabaghe == true)
            Checked = Checked + "Tabaghe" + ";";
        if (CheckedMeliyat == true)
            Checked = Checked + "Meliyat" + ";";
        if (CheckedShMojavezEstekhdam == true)
            Checked = Checked + "ShMojavezEstekhdam" + ";";
        if (CheckedTMojavezEstekhdam == true)
            Checked = Checked + "TMojavezEstekhdam" + ";";

        
        if (CheckedTarikhSodoor == true)
            Checked = Checked + "TarikhSodoor" + ";";
        if (CheckedCityTavalod == true)
            Checked = Checked + "CityTavalod" + ";";
        if (CheckedMadraka == true)
            Checked = Checked + "MadrakTitle" + ";";
        if (CheckedEsargaria == true)
            Checked = Checked + "SharhEsargari" + ";";
        if (CheckedNoeEstekhdama == true)
            Checked = Checked + "NoeEstekhdamTitle" + ";";
        if (CheckedStatusPer == true)
            Checked = Checked + "StatusTitle" + ";";
        if (CheckedSanavat == true)
            Checked = Checked + "Sanavat" + ";";

        var CheckedStatus = App.ExcelWin.queryById('CheckedStatus').getValue();
        var CheckedEsargari = App.ExcelWin.queryById('CheckedEsargari').getValue();
        var CheckedGender = App.ExcelWin.queryById('CheckedGender').getValue();
        var CheckedMadrak = App.ExcelWin.queryById('CheckedMadrak').getValue();
        var CheckedNoeEstekhdam = App.ExcelWin.queryById('CheckedNoeEstekhdam').getValue();

        
        var CboStatus = App.ExcelWin.queryById('CboStatus');
        var CboGender = App.ExcelWin.queryById('CboGender');
        var CboEsargari = App.ExcelWin.queryById('CboEsargari');
        
        var Status="";
        if (CheckedStatus == true) {
            Status = CboStatus.getValue();
        }
        var Gender="";
        if (CheckedGender == true) {
            Gender = CboGender.getValue();
        }
        var Esargari="";
        if (CheckedEsargari == true) {
            Esargari = CboEsargari.getValue();
        }

        var NoeEstekhdam = "";
        if (CheckedNoeEstekhdam == true){
            var Grid1=App.GridNoeEstekhdam;
            for (var i = 0; i < Grid1.selModel.store.count() ; i++) {
                row = Grid1.selModel.store.data.items[i];
                NoeEstekhdam=NoeEstekhdam+row.data.fldId+",";
            }
        }

        var Madrak = "";
        if (CheckedMadrak == true){
            var Grid2=App.GridMadrakTahsili;
            for (var i = 0; i < Grid2.selModel.store.count() ; i++) {
                row = Grid2.selModel.store.data.items[i];
                Madrak=Madrak+row.data.fldId+",";
                /*ListMadrak.push({
                    'fldId': row.data.fldId,
                    'fldTitle': row.data.fldTitle
                });*/
            }
        }


        window.location.href = '@Url.Content("~/Personeli/PersonalInfo/CreateExcel/")' + '?Checked=' + Checked+'&Status='+Status+'&Gender='+Gender+'&Esargari='+Esargari+'&Madrak='+Madrak+'&NoeEstekhdam='+NoeEstekhdam;
        App.ExcelWin.body.mask().hide();
    }
    function CheckCheckedStatus() {
        var CheckedStatus = App.ExcelWin.queryById('CheckedStatus').getValue();
        var CboStatus = App.ExcelWin.queryById('CboStatus');
        if (CheckedStatus == true)
            CboStatus.setDisabled(false);
        else
            CboStatus.setDisabled(true);
    }
    function CheckCheckedGender() {
        var CheckedGender = App.ExcelWin.queryById('CheckedGender').getValue();
        var CboGender = App.ExcelWin.queryById('CboGender');
        if (CheckedGender == true)
            CboGender.setDisabled(false);
        else
            CboGender.setDisabled(true);
    }
    function CheckCheckedEsargari() {
        var CheckedEsargari = App.ExcelWin.queryById('CheckedEsargari').getValue();
        var CboEsargari = App.ExcelWin.queryById('CboEsargari');
        if (CheckedEsargari == true)
            CboEsargari.setDisabled(false);
        else
            CboEsargari.setDisabled(true);
    }
    function CheckCheckedMadrak() {
        var CheckedMadrak = App.ExcelWin.queryById('CheckedMadrak').getValue();
        var CboMadrak = App.ExcelWin.queryById('CboMadrak');
        var btnCancle1 = App.ExcelWin.queryById('btnCancle1');
        var btnOk1 = App.ExcelWin.queryById('btnOk1');
        var GridMadrakTahsili = App.ExcelWin.queryById('GridMadrakTahsili');
        if (CheckedMadrak == true) {
            CboMadrak.setDisabled(false);
            btnCancle1.setDisabled(false);
            btnOk1.setDisabled(false);
            GridMadrakTahsili.setDisabled(false);
        }
        else {
            CboMadrak.setDisabled(true);
            btnCancle1.setDisabled(true);
            btnOk1.setDisabled(true);
            GridMadrakTahsili.setDisabled(true);
        }
    }
    function CheckCheckedNoeEstekhdam() {
        var CheckedNoeEstekhdam = App.ExcelWin.queryById('CheckedNoeEstekhdam').getValue();
        var CboNoeEstekhdam = App.ExcelWin.queryById('CboNoeEstekhdam');
        var btnCancle2 = App.ExcelWin.queryById('btnCancle2');
        var btnOk2 = App.ExcelWin.queryById('btnOk2');
        var GridNoeEstekhdam = App.ExcelWin.queryById('GridNoeEstekhdam');
        if (CheckedNoeEstekhdam == true) {
            CboNoeEstekhdam.setDisabled(false);
            btnCancle2.setDisabled(false);
            btnOk2.setDisabled(false);
            GridNoeEstekhdam.setDisabled(false);
         /*   var group1 = App.treeNoeEstekhdam.getRootNode().childNodes[0];
            group1.set('visible', false);*/
        }
        else {
            CboNoeEstekhdam.setDisabled(true);
            btnCancle2.setDisabled(true);
            btnOk2.setDisabled(true);
            GridNoeEstekhdam.setDisabled(true);
        }
    }
    function AddItem2() {
        var CboNoeEstekhdam = App.ExcelWin.queryById('CboNoeEstekhdam');
        /* var treeNoeEstekhdam = App.ExcelWin.queryById('treeNoeEstekhdam');
       var root = App.treeNoeEstekhdam.getRootNode();
        root.appendChild({ text: CboNoeEstekhdam.getDisplayValue(), itemId: CboNoeEstekhdam.getValue() });*/
        var tekrari = 0;
        var Grid1 = App.GridNoeEstekhdam;
        for (var i = 0; i < Grid1.selModel.store.count() ; i++) {
            row = Grid1.selModel.store.data.items[i];
            if (row.data.fldId == CboNoeEstekhdam.getValue())
                tekrari = 1;
        }
        if (tekrari == 0 && CboNoeEstekhdam.getDisplayValue()!="") {
            App.GridNoeEstekhdam.store.insert(App.GridNoeEstekhdam.getStore().count(), {
                fldTitle: CboNoeEstekhdam.getDisplayValue(),
                fldId: CboNoeEstekhdam.getValue()
            });
        }
    }
    function DelItem2() {
        App.GridNoeEstekhdam.deleteSelected();
    }
    function GetId(record) {
        NodeId = record.getId();
    };
    
    
    function AddItem1() {
        var CboMadrak = App.ExcelWin.queryById('CboMadrak');
        /* var treeNoeEstekhdam = App.ExcelWin.queryById('treeNoeEstekhdam');
       var root = App.treeNoeEstekhdam.getRootNode();
        root.appendChild({ text: CboNoeEstekhdam.getDisplayValue(), itemId: CboNoeEstekhdam.getValue() });*/
        var tekrari = 0;
        var Grid2 = App.GridMadrakTahsili;
        for (var i = 0; i < Grid2.selModel.store.count() ; i++) {
            row = Grid2.selModel.store.data.items[i];
            if (row.data.fldId == CboMadrak.getValue())
                tekrari = 1;
        }
        if (tekrari == 0 && CboMadrak.getDisplayValue() != "") {
            App.GridMadrakTahsili.store.insert(App.GridMadrakTahsili.getStore().count(), {
                fldTitle: CboMadrak.getDisplayValue(),
                fldId: CboMadrak.getValue()
            });
        }
    }
    function DelItem1() {
        App.GridMadrakTahsili.deleteSelected();
    }
</script>