@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
@model IEnumerable<NewFMS.WCF_Personeli.OBJ_HistoryNoeEstekhdam>
@(Html.X().Window().Modal(true)
.Width(450)//.Height(220)
    .Title("ثبت تسویه حساب")
    .ID("ChangeTasvieHesab")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel().Border(false)
        .KeyMap(Html.X().KeyMap()
            .ID("ChangeTasvieHesabMap")
            .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
            .Binding(b =>
            {
                b.Add(Html.X().KeyBinding()
                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                .Handler("SaveChangeTasvieHesab(); ")
                );

            }))

        .TitleAlign(Ext.Net.TitleAlign.Center)
        .Items(
                X.Panel().Border(false)
                    .Layout(Ext.Net.LayoutType.VBox)
                        .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                            .DefaultButton("btn")
            .Buttons(
                    X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ToolTip("کلید میانبر F8")
                   .Listeners(l =>
                   {
                       l.Click.Handler = "SaveChangeTasvieHesab();";

                   })
                       .ItemID("btnSave")
                ,
                    X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).Listeners(l => { l.Click.Handler = "EditTasvieHesab();"; }),
                    X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).Listeners(l => { l.Click.Handler = "DeleteChangeTasvieHesab();"; }),
                X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                    .OnClientClick("App.ChangeTasvieHesab.destroy()")
            ).Border(false).ButtonAlign(Ext.Net.Alignment.Center)
            .Items(
                    X.FieldSet().Border(true).Title("اطلاعات تسویه حساب")
                .Center()
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                                .Defaults(new { Margin = 2 })
                    .Items(
                         X.Hidden()
                                    .ItemID("fldId"),
                            X.Label("تاریخ تسویه:"),
                    X.PDateField()
                            .ItemID("txtTasvieHesabChangeDate")
                                     .MaskRe("/[0-9 /]/")
                    .AllowBlank(false)
                    .BlankText("لطفا تاریخ را وارد کنید.")
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                    .AutoFocus(true)
                   )
            ),X.GridPanel()
        
                                        .BottomBar(X.PagingToolbar())
                                .Height(290)
                                        .ItemID("GridTasvieHesab")
                                    .Store(
                                        X.StoreForModel().AutoLoad(true)
                                                        .Listeners(l => l.DataChanged.Handler = "App.ChangeTasvieHesab.queryById('GridTasvieHesab').selModel.refresh();")
                                        .Proxy(Html.X().AjaxProxy()
                                                .Url(Url.Action("ReadTasviehHesab"))
                                            .Reader(Html.X().JsonReader().Root("data"))
                                                .ExtraParams(ex =>
                                                {
                                                    ex.Add(new { PersonalId = @ViewBag.PrsPersonalInfoId });

                                                })
                                                )
                                        .PageSize(20)
                                        .RemotePaging(true)
                                        .RemoteFilter(true)
                                    )
                                .View(
                                    Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                                    )
                                        .Plugins(X.FilterHeader().Remote(true))
                                .ColumnModel(
                                        Html.X().RowNumbererColumn(),
                                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                        Html.X().Column().DataIndex(Model, m => m.fldTarikh).Text("تاریخ").Flex(1)
                        )
                                .SelectionModel(
                                    Html.X().RowSelectionModel()
                                        .Mode(Ext.Net.SelectionMode.Single)
                        )

            )
        )
)

<script type="text/javascript">

    function EditTasvieHesab() {
        var SelectedRow = App.ChangeTasvieHesab.queryById('GridTasvieHesab').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Personeli/PersonalInfo/TasviehHesabDetail',
                params: {
                    Id: SelectedRow.data.fldId
                },
                success: function (data) {
                    if (data.Err == 1) {
                        Ext.MessageBox.show({
                            title: "خطا",
                            msg: "اطلاعات شخص مورد نظر در حکم شخص استفاده شده است لذا شما اجازه ویرایش ندارید.",
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    else {
                        var txtTasvieHesabChangeDate = App.ChangeTasvieHesab.queryById('txtTasvieHesabChangeDate');
                        txtTasvieHesabChangeDate.setValue(data.fldTarikh);
                        var fldId = App.ChangeTasvieHesab.queryById('fldId');
                        fldId.setValue(data.fldId);
                    }
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function SaveChangeTasvieHesab() {
        if (!App.ChangeTasvieHesab.active) return false;

        var fldId = App.ChangeTasvieHesab.queryById('fldId');
        var txtStatusChangeDate = App.ChangeTasvieHesab.queryById('txtTasvieHesabChangeDate');

        Ext.net.DirectMethod.request({
            url: '/Personeli/PersonalInfo/SaveTasviehHesab',
            params: {
                fldId: fldId.getValue(),
                fldPrsPersonalInfoId: '@ViewBag.PrsPersonalInfoId',
                fldTarikh: txtStatusChangeDate.rawValue
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Err == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });

                App.PersonalInfo.queryById('PersonalInfoGrid').store.load();
                App.ChangeTasvieHesab.queryById('GridTasvieHesab').store.load();
            }

        });
    }

    function DeleteChangeTasvieHesab() {
        var SelectedRow = App.ChangeTasvieHesab.queryById('GridTasvieHesab').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                        Ext.net.DirectMethod.request({
                            url: '/Personeli/PersonalInfo/DeleteTasviehHesab',
                            params: {
                                id: SelectedRow.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.ChangeTasvieHesab.queryById('GridTasvieHesab').store.load()
                            }
                        });
                        Ext.net.Mask.hide();
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function EnterNext() {
        var keyfield = App.ChangeTasvieHesab.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }
</script>