@model IEnumerable<NewFMS.Models.ParamGrid>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
        //.Listeners(li => { li.AfterRender.Handler = "LoadSharheCodeDaramadWin();"; li.Render.Fn = "addKeyMapSharheCodeDaramadWin"; })
    .Width(250)
        //   .Height(300)
    .Resizable(false)
    .Title("مقادیر پارامترها")
    .ID("SharheCodeDaramadWin")
    .Closable(false)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .ButtonAlign(Ext.Net.Alignment.Center)
            .Border(false)
            .KeyMap(Html.X().KeyMap()
                .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                .Binding(b =>
                {
                    b.Add(Html.X().KeyBinding()
                    .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                    .Handler("checkSaveEydi(); ")
                    );

                }))
            .DefaultButton("btn")
            .Layout(Ext.Net.LayoutType.Fit)
            //.LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Buttons(
                X.Button()
                    .Text("ذخیره")
                    .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                        .Listeners(l => l.Click.Handler = "SaveParamsInSharh();")
                    .ItemID("btnSave")
                //    ,
                //X.Button()
                //    .Text("خروج")
                //    .Icon(Ext.Net.Icon.DoorOut)
                //    .ToolTip("کلید میانبر Esc")
                //    .OnClientClick("App.SharheCodeDaramadWin.destroy();")
                    )
            .Items(
                           X.GridPanel().AutoScroll(true)
                           .Listeners(l => l.AfterRender.Handler = "ReloadSharheCodeDaramadParam()")
                           //     .Title("مبلغ عوارض")
                                .Padding(5)
                                        .ItemID("GridParams").Flex(2)
                               // .Width(400)
                                    .Height(200)
                                .Store(
                                    X.StoreForModel().AutoLoad(false)
                                    .Proxy(Html.X().AjaxProxy()
                                                .Reader(Html.X().JsonReader().Root("data"))
                                    )
                                    .PageSize(2000)
                                    .RemoteFilter(true)
                                    .RemotePaging(true)

                                )
                                    .Plugins(Html.X().CellEditing().ClicksToEdit(1))
                                .View(
                                    Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                                )

                                .ColumnModel(
                                        Html.X().RowNumbererColumn(),
                                                Html.X().Column().DataIndex(Model, m => m.ParamId).Text("کد").Flex(1).Hidden(true),
                                                Html.X().Column().DataIndex(Model, m => m.ParamEn).Text("کد").Flex(1).Hidden(true),
                                            Html.X().Column().DataIndex(Model, m => m.ParamName).Text("نام پارامتر").Flex(3),
                                                Html.X().Column().DataIndex(Model, m => m.Value).Text("مقدار").Editor(Html.X().TextField()).Flex(4)
                                    )
    ))
)

<script type="text/javascript">
   
    function ReloadSharheCodeDaramadParam() {
        Ext.net.Mask.show({
            msg: 'در حال بارگذاری...'
        });
        Ext.net.DirectMethod.request({
            url: '/Daramad/AnnouncementComplications/ReloadSharheCodeDaramadParam',
            params: {
                ShomareHesabeCodeDaramad: 2
            },
            success: function (data) {
                Ext.net.Mask.hide();
                if (data.Er == 1) {
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
                else {
                    App.SharheCodeDaramadWin.queryById('GridParams').getStore().loadData(data.Griddata);
                    MatnSharhCode = data.SharhCodDaramd;
                }
            }
        });
    }
    function SaveParamsInSharh(){
        var SelectedRow = App.SharheCodeDaramadWin.queryById('GridParams');
        var khali = 0;
        for (var i = 0; i < SelectedRow.selModel.store.count() ; i++) {
            row = SelectedRow.selModel.store.data.items[i];
            if (row.data.Value == "") 
                khali = khali + 1;
        }
        if (khali == 0) {
            for (var i = 0; i < SelectedRow.selModel.store.count() ; i++) {
                row = SelectedRow.selModel.store.data.items[i];

                MatnSharhCode = MatnSharhCode.replace(row.data.ParamEn, row.data.Value);
                MatnSharhCode = MatnSharhCode.replace('|', '').replace('|', '');

            }
            App.BasePanel.queryById("txtsharheCodeDaramad").setValue(MatnSharhCode);
            App.SharheCodeDaramadWin.destroy();
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "مقادیر مربوط به پارامترها را وارد کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>
