@model IEnumerable<NewFMS.WCF_Daramad.OBJ_ElamAvarez>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using NewFMS.Models;

@{ 
    var X = Html.X();

    NewFMS.WCF_Common.CommonService servic = new NewFMS.WCF_Common.CommonService();
    string IP = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_HOST"];
    NewFMS.WCF_Common.ClsError Err = new NewFMS.WCF_Common.ClsError();
   }
<br />
@*<style>
        .x-rtl .x-textfield-icon {
            margin-right: 120px;
        }

        .x-rtl .x-textfield-icon-input {
            padding-right: 5px;
        }
     
        .rowheight {
            height: 40px;
        }
    </style>*@
<script>
    var ShowStatusFish = function (value, record) {
        var template1 = '<img src={0} alt="" title={1} />';
        if (value == 0) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/فیشصادرنشده.png")";
            var ToolTip = "هیچ" + '&nbsp;' + "فیشی" + '&nbsp;' + "ثبت" + '&nbsp;' + "نشده";
        }
        if (value == 1) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/کلیهفیشهایصادرشده.png")";
            var ToolTip = "کلیه" + '&nbsp;' + "فیشها" + '&nbsp;' + "صادر" + '&nbsp;' + "شده";
        }
        else if (value == 2) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/فیشصادرشده.png")";
            var ToolTip = "فیش" + '&nbsp;' + "صادر" + '&nbsp;' + "شده";
        }
        else if (value == 3) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/فیشابطالشده.png")";
            var ToolTip = "فیش" + '&nbsp;' + "باطل" + '&nbsp;' + "شده";
        }
        else if (value == 4) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/کلیهفیشهایباطلشده.png")";
            var ToolTip = "کلیه" + '&nbsp;' + "فیشها" + '&nbsp;' + "باطل" + '&nbsp;' + "شده";
        }
        return Ext.String.format(template1, Pic, ToolTip);
    };
    var ShowStatusTaghsit = function (value, record) {
        var template2 = '<img src={0} alt="" title={1} />';
        if (value == 0) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/درخواستتقسیطصادرنشده.png")";
            var ToolTip = "درخواست" + '&nbsp;' + "تقسیط" + '&nbsp;' + "صادر" + '&nbsp;' + "نشده";
        }
        if (value == 1) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/تقسیطموافقتشده.png")";
            var ToolTip = "با" + '&nbsp;' + "درخواست" + '&nbsp;' + "تقسیط" + '&nbsp;' + "موافقت" + '&nbsp;' + "شده";
        }
        else if (value == 2) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/عدمموافقتتقسیط.png")";
            var ToolTip = "با" + '&nbsp;' + "درخواست" + '&nbsp;' + "تقسیط" + '&nbsp;' + "موافقت" + '&nbsp;' + "نشده";
        }
        else if (value == 3) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/تقسیطابطالشده.png")";
            var ToolTip = "درخواست" + '&nbsp;' + "تقسیط" + '&nbsp;' + "ابطال" + '&nbsp;' + "شده";
        }
        else if (value == 4) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/درخواستتقسیط.png")";
            var ToolTip = "درخواست" + '&nbsp;' + "تقسیط" + '&nbsp;' + "ثبت" + '&nbsp;' + "شده";
        }
        return Ext.String.format(template2, Pic, ToolTip);
    };
    var ShowStatusTakhfif = function (value, record) {
        var template3 = '<img src={0} alt="" title={1} />';
        if (value == 0) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/درخواستتخفیفصادرنشده.png")";
            var ToolTip = "درخواست" + '&nbsp;' + "تخفیف" + '&nbsp;' + "صادر" + '&nbsp;' + "نشده";
        }
        if (value == 1) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/تخفیفموافقتشده.png")";
            var ToolTip = "با" + '&nbsp;' + "درخواست" + '&nbsp;' + "تخفیف" + '&nbsp;' + "موافقت" + '&nbsp;' + "شده";
        }
        else if (value == 2) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/عدمموافقتتخفیف.png")";
            var ToolTip = "با" + '&nbsp;' + "درخواست" + '&nbsp;' + "تخفیف" + '&nbsp;' + "موافقت" + '&nbsp;' + "نشده";
        }
        else if (value == 3) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/تخفیفابطالشده.png")";
            var ToolTip = "درخواست" + '&nbsp;' + "تخفیف" + '&nbsp;' + "ابطال" + '&nbsp;' + "شده";
        }
        else if (value == 4) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/درخواستتخفیف.png")";
            var ToolTip = "درخواست" + '&nbsp;' + "تخفیف" + '&nbsp;' + "ثبت" + '&nbsp;' + "شده";
        }
        return Ext.String.format(template3, Pic, ToolTip);
    };
    var ShowStatusKoli = function (value, record) {
        var template4 = '<img src={0} alt="" title={1} />';
        if (value == 0) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/تسویهنشده.png")";
            var ToolTip = "تسویه" + '&nbsp;' + "نشده";
        }
        if (value == 1) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/تسویهنقدی.png")";
            var ToolTip = "تسویه" + '&nbsp;' + "نقدی";
        }
        else if (value == 2) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/تسویهتقسیط.png")";
            var ToolTip = "تسویه" + '&nbsp;' + "تقسیط";
        }
        return Ext.String.format(template4, Pic, ToolTip);
    };
  
    
</script>
<script>
    Ext.net.FilterHeader.behaviour.string[0].match = function (recordValue, matchValue) {
        return (Ext.net.FilterHeader.behaviour.getStrValue(recordValue) || "").indexOf(matchValue) > -1;
    };

    Ext.net.FilterHeader.behaviour.string[0].getStrValue = function (value) {
        return value.toString();
    };


    Ext.net.FilterHeader.behaviour.string[0].serialize = function (value) {
        return {
            type: "string",
            op: "*",
            value: value
        };
    };
</script>

@(Html.X().Panel()
    .ID("MainAnnouncementComplication")
    .Title("عوارض")
   .Listeners(li => { li.AfterRender.Handler = "MainAnnouncementComplicationSetSize();"; })
    .Closable(true)
    .AutoScroll(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
   // .Listeners(l=>l.Destroy.Handler="CloseTab();")
    .Layout(LayoutType.Fit)
    //.LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
    .Border(false)
    .Items(
       /* X.TabPanel()//.Title("tab1").Width(400)
            .Border(false).Frame(true)
                    .Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                .Padding(5)
                .ID("MainAnnouncementComplicationTab").Listeners(l => l.AfterRender.Handler = "GotoAnnouncementComplications_Fish()")
        //.LayoutConfig(new TableLayoutConfig{Columns=4})
            .Items(*/
            X.Panel()//.Title("اعلام عوارض")
                         .Layout(LayoutType.VBox)
                              .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .ItemID("PnlElamAvarez")
                     .TopBar(
                     X.Toolbar()
                    .Border(false)//.Frame(true).Width(300).Height(50)
                    .Defaults(new { Margin = 5 })
                    .Items(
                            X.Button().Text("جدید").Width(50).IconCls("NewElameAvarez").Listeners(l => l.Click.Handler = "NewAnnouncementComplication()")
                            , X.Button().Text("صدور فیش").ItemID("btnSodurFish").Listeners(l => l.Click.Handler = "SodurFish(1)").IconCls("SodorFish")
                            , X.Button().Text("ابطال فیش").ItemID("btnEbtalFish").Listeners(l => l.Click.Handler = "SodurFish(2)").IconCls("CancelFish")
                            , X.Button().Text("تقسیط/تخفیف").ItemID("btnTaghsit").Listeners(l => l.Click.Handler = "Taghsit_Takhfif()").IconCls("DarkhasteTaKhfif")
                            , X.Button().Text("پاسخ تقسیط/تخفیف").Listeners(l => l.Click.Handler = "ReplyTaghsit_Takhfif()").IconCls("ReplyTaghsit")
                            //, X.Button().Text("ابطال تقسیط/تخفیف").ItemID("btnEbtalTaghsit").Listeners(l => l.Click.Handler = "EbtalTaghsit_Takhfif()").IconCls("EbtalDarkhasteTaKhfif")
                            //     .Hidden(!servic.Permission(747, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                            , X.Button().Text("تقسیط").IconCls("Taghsit").Listeners(l => l.Click.Handler = "Taghsit()")
                            , X.Button().Text("حذف اسناد تقسیط").Icon(Ext.Net.Icon.Decline)/*IconCls("DelTaghsit")*/.Listeners(l => l.Click.Handler = "DelTaghsit()")
                            .Hidden(!servic.Permission(725, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                            , X.Button().Text("مکاتبات").Icon(Ext.Net.Icon.EmailTransfer).Listeners(l => l.Click.Handler = "Mokatebat()")
                            , X.Button().Text("پرداخت گروهی").Icon(Ext.Net.Icon.Money).Listeners(l => l.Click.Handler = "GroupPayIndex()")
                            .Hidden(!servic.Permission(702, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                            , X.Button().Text("تاریخچه").Icon(Ext.Net.Icon.ApplicationSideTree).Listeners(l => l.Click.Handler = "History()")
                            .Hidden(!servic.Permission(931, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                            , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help).Listeners(l => { l.Click.Handler = "HelpAnnouncementComplications()"; })
    )
                    )
            .Items(
                   X.FieldSet()
                         //.Width(600)
                         .Border(false)
                                 .Layout(LayoutType.HBox)
                        //.LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                .Defaults(new { Margin = 5 })
                     .Items(
                     //X.FieldSet().Title("عملیات")
                     //       .Layout(LayoutType.Table)
                     //       .LayoutConfig(new TableLayoutConfig { Columns =6 })
                     //               .Defaults(new { Margin = 5 })
                     //               .Items(
                     //       X.Button().Text("جدید").Width(50).IconCls("NewElameAvarez").Listeners(l => l.Click.Handler = "NewAnnouncementComplication()")
                     //       , X.Button().Text("تقسیط/تخفیف").ItemID("btnTaghsit").Listeners(l => l.Click.Handler = "Taghsit_Takhfif()").IconCls("DarkhasteTaKhfif")
                     //       , X.Button().Text("پاسخ تقسیط/تخفیف").Listeners(l => l.Click.Handler = "ReplyTaghsit_Takhfif()").IconCls("ReplyTaghsit")
                     //   , X.Button().Text("صدور فیش").ItemID("btnSodurFish").Listeners(l => l.Click.Handler = "SodurFish(1)").IconCls("SodorFish")
                     //   , X.Button().Text("ابطال فیش").ItemID("btnEbtalFish").Listeners(l => l.Click.Handler = "SodurFish(2)").IconCls("CancelFish")
                     //   , X.Button().Text("تقسیط").IconCls("Taghsit").Listeners(l => l.Click.Handler = "Taghsit()")
                     //   )
                     //   ,
                            X.FieldSet().Title("فیلترها")//.Height(50)
                                .Layout(LayoutType.HBox)
                               // .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                                            .Defaults(new { Margin = 5 })
                                        .Items(
                                   X.Label("کد/شناسه ملی: "),
                                 X.TextField().MarginSpec("5px 5px 5px 0")
                                     .MaskRe("/[0-9]/")
                                    .MaxLength(11)
                                    .ReadOnly(true)
                                    .EnforceMaxLength(true)
                                     .ItemID("txtShenase_Code")
                                    .Icon(Icon.UserAdd)
                                       // .Listeners(l => l.AfterRender.Handler = "App.MainAnnouncementComplication.queryById('txtShenase_Code').icon.dom.classList.add('custom-BaratDar');")
                                            .DirectEvents(li =>
                                            {
                                                li.SpecialKey.Url = "/Daramad/SearchAshkhas/Index?State=6";
                                                li.SpecialKey.Before = "return e.getKey() == Ext.EventObject.INSERT;";
                                                li.SpecialKey.After="if(e.getKey() == Ext.EventObject.DELETE) App.MainAnnouncementComplication.queryById('txtShenase_Code').setValue('')";
                                                li.IconClick.Url = "/Daramad/SearchAshkhas/Index?State=6";
                                            })
                                     .Width(100),     
                                     //X.Button().Icon(Ext.Net.Icon.Delete) ,
                                 X.Label("از تاریخ: "),
                                 X.PDateField().MarginSpec("5px 5px 5px 0")
                                     .MaskRe("/[0-9 /]/")
                                    .MaxLength(10)
                                    .EnforceMaxLength(true)
                                     .ItemID("txtAzTarikh")
                                     .Width(87)
                                    .Listeners(l =>
                                    {
                                        l.Change.Handler = "setDateAz();";
                                    })
                                , X.Label("تا تاریخ: "),
                                    X.PDateField().Width(87).MarginSpec("5px 5px 5px 0")
                                    .MaskRe("/[0-9 /]/")
                                    .MaxLength(10)
                                    .EnforceMaxLength(true)
                                    .ItemID("txtTaTarikh")
                                .Listeners(l =>
                                {
                                    l.Change.Handler = "setDateTa();";
                                })
                                , X.Label("فیش: "), X.ComboBox().MarginSpec("5px 5px 5px 0")
                                    .ItemID("CboStatusFish")
                                    .Width(100)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .BlankText("لطفا نوع فیلتر را انتخاب نمایید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .AllowBlank(false)
                                    .Items(
                                        new ListItem("فیش صادر نشده", "0"),
                                        new ListItem("فیش صادر شده", "2"),
                                        new ListItem("کلیه فیش ها صادر شده", "1"),
                                        new ListItem("فیش باطل شده", "3"),
                                        new ListItem("کلیه فیش ها باطل شده", "4"),
                                        new ListItem("همه موارد", "11")
                                        )
                                    .SelectedItems(new { Value = "11" })
                                , X.Label("تخفیف: "), X.ComboBox().MarginSpec("5px 5px 5px 0")
                                    .ItemID("CboStatusTakhfif")
                                    .Width(100)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .BlankText("لطفا نوع فیلتر را انتخاب نمایید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .AllowBlank(false)
                                    .Items(
                                            new ListItem("صادر شده", "4"),
                                            new ListItem("صادر نشده", "0"),
                                            new ListItem("موافقت شده", "1"),
                                            new ListItem("مخالفت شده", "2"),
                                            new ListItem("ابطال شده", "3"),
                                        new ListItem("همه موارد", "11")
                                        )
                                    .SelectedItems(new { Value = "11" }),
                                X.Label("تقسیط: "), X.ComboBox().MarginSpec("5px 5px 5px 0")
                                    .ItemID("CboStatusTaghsit")
                                    .Width(100)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .BlankText("لطفا نوع فیلتر را انتخاب نمایید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .AllowBlank(false)
                                    .Items(
                                            new ListItem("صادر شده", "4"),
                                            new ListItem("صادر نشده", "0"),
                                            new ListItem("موافقت شده", "1"),
                                            new ListItem("مخالفت شده", "2"),
                                            new ListItem("ابطال شده", "3"),
                                        new ListItem("همه موارد", "11")
                                        )
                                    .SelectedItems(new { Value = "11" }),
                                X.Label("وضعیت کلی: "), X.ComboBox().MarginSpec("5px 5px 5px 0")
                                    .ItemID("CboStatusKoli")
                                    .Width(100)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .BlankText("لطفا نوع فیلتر را انتخاب نمایید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .AllowBlank(false)
                                    .Items(
                                        new ListItem("تسویه نشده", "0"),
                                        new ListItem("تسویه نقدی", "1"),
                                        new ListItem("تسویه تقسیط", "2"),
                                        new ListItem("همه موارد", "11")
                                        )
                                    .SelectedItems(new { Value = "11" }),
                            X.Button()
                                .Text("جستجو")
                                .Icon(Ext.Net.Icon.Find)
                                .Listeners(li => li.Click.Handler = "FullSearch()")
                            )
                        )
                        ,
                              X.GridPanel().AutoScroll(true)
                              .BottomBar(X.PagingToolbar())
                                .Title("عوارض ثبت شده")
                                .Padding(5)
                                .ItemID("AvarezGrid").Flex(2)
                                .Width(200)
                                .Store(
                                        X.StoreForModel()//.AutoLoad(false)
                                        .Proxy(Html.X().AjaxProxy()
                                            .Url(Url.Action("ReadElamAvarez"))
                                        .Reader(Html.X().JsonReader().Root("data"))
                                           
                                    )
                                    .PageSize(200000000)
                                    .RemoteFilter(true)
                                    .RemotePaging(true)

                                )
                                    .Listeners(l => l.ItemMouseEnter.Fn = "showmToolTipSharh")
                                .View(
                                    Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                                )
                                     .Plugins(X.FilterHeader().Remote(true))
                                .ColumnModel(
                                        Html.X().RowNumbererColumn()
                                      
                    ,
                                        //        Html.X().ImageCommandColumn().Hideable(false).Listeners(l => l.Command.Handler = "EditElamAvarez(record);")
                                        //.Flex(1).Commands(Html.X().ImageCommand().Icon(Ext.Net.Icon.Pencil).CommandName("EditCode").ToolTip(tt => tt.Text = "ویرایش")
                                        //),
                                        //        Html.X().ImageCommandColumn().Hideable(false).Listeners(l => l.Command.Handler = "DelElamAvarez(record);")
                                        //        .Flex(1).Commands(Html.X().ImageCommand().Icon(Ext.Net.Icon.Delete).CommandName("DelCode").ToolTip(tt => tt.Text = "حذف")
                                        //    ),
                                        
                                        //  Html.X().Column().DataIndex(Model, m => m.fldStatusKoli).Text("وضعیت کلی").Flex(1).Renderer("ShowStatuskoli").Filterable(false),
                                        Html.X().Column().DataIndex(Model, m => m.fldStatusFish).Text("فیش").Flex(1).Renderer("ShowStatusFish").Filterable(false),
                                        Html.X().Column().DataIndex(Model, m => m.fldStatusTaghsit).Text("تقسیط").Flex(1).Renderer("ShowStatusTaghsit").Filterable(false),
                                        Html.X().Column().DataIndex(Model, m => m.fldStatusTakhfif).Text("تخفیف").Flex(1).Renderer("ShowStatusTakhfif").Filterable(false),
                                        Html.X().Column().DataIndex(Model, m => m.fldStatusKoli).Text("وضعیت").Flex(1).Renderer("ShowStatusKoli").Filterable(false),
                                        Html.X().Column().DataIndex(Model, m => m.fldId).Flex(2).Text("کد شناسایی"),//.Hidden(true),
                                        Html.X().Column().DataIndex(Model, m => m.fldOrganId).Text("کد سازمان").Flex(1).Hidden(true),
                                        Html.X().Column().DataIndex(Model, m => m.fldIsExternal).Text("IsExternal").Flex(1).Hidden(true),
                                        Html.X().Column().DataIndex(Model, m => m.fldAshakhasID).Text("کد").Flex(1).Hidden(true),
                                        Html.X().Column().DataIndex(Model, m => m.Noe).Text("نوع درآمد").Flex(2),
                                        Html.X().Column().DataIndex(Model, m => m.fldNameShakhs).Text("نام").Flex(4),
                                        Html.X().Column().DataIndex(Model, m => m.fldShenaseMeli).Text("شناسه/کدملی").Flex(4),
                                        Html.X().Column().DataIndex(Model, m => m.fldTarikh).Text("تاریخ").Flex(3),
                                        Html.X().Column().DataIndex(Model, m => m.fldMablaghKoli).Text("مبلغ کلی").Renderer("LocalString").Flex(3),
                                        Html.X().Column().DataIndex(Model, m => m.fldMablaghTakhfif).Text("مبلغ تخفیف").Renderer("LocalString").Flex(3),
                                        Html.X().Column().DataIndex(Model, m => m.fldMablaghGHabelPardakht).Text("مبلغ قابل پرداخت").Renderer("LocalString").Flex(3),
                                        Html.X().Column().DataIndex(Model, m => m.SharhDesc).Text("شرح کددرآمد").Flex(5),
                                        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(3),
                                        Html.X().Column().DataIndex(Model, m => m.fldStatusFishName).Text("وضعیت فیش").Flex(1).Hidden(true),
                                        Html.X().Column().DataIndex(Model, m => m.fldStatusTaghsitName).Text("وضعیت تقسیط").Flex(1).Hidden(true),
                                        Html.X().Column().DataIndex(Model, m => m.fldStatusTakhfifName).Text("وضعیت تخفیف").Flex(1).Hidden(true)
                                            ,
                                        Html.X().ImageCommandColumn()//.PrepareCommand("prepareCommandElamAvarez")
                        .Listeners(l => l.Command.Fn = "ActionsInGrid")/*.Text("نمایش اطلاعات")*/
                        .Flex(2).Commands(
                                Html.X().ImageCommand().CommandName("InfoElamAvarez").Icon(Ext.Net.Icon.Information).ToolTip(tt => tt.Text = "مشاهده")
                                ,Html.X().ImageCommand().CommandName("EditElamAvarez").Icon(Ext.Net.Icon.PageEdit).ToolTip(tt => tt.Text = "ویرایش")
                              , Html.X().ImageCommand().CommandName("DelElamAvarez").Icon(Ext.Net.Icon.Delete).ToolTip(tt => tt.Text = "حذف")
                        )
                                    )
                )
        /* ,

         X.Panel().Title("اجرائیات")
                  .Layout(LayoutType.VBox)
                             .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
         .ItemID("PnlEjraiiat")
         .Items(
                          X.Label().Text("tab2")

                 ),

         X.Panel().Title("فیش های صادر شده")
                  .Layout(LayoutType.VBox)
                             .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
         .ItemID("PnlSodurFish")
             .Items(
                              X.Label().Text("tab3")

                 )*/

             /*   )*/



                )
)

<script type="text/javascript">
    
    var showmToolTipSharh = function (view, record, item) {
        var tip = record.data.SharhDesc;
        var target = item.cells[13];
        Ext.fly(target).set({ 'data-qtip': tip });
        var tip2 = record.data.fldDesc;
        var target2 = item.cells[14];
        Ext.fly(target2).set({ 'data-qtip': tip2 });
    };
    function GotoAnnouncementComplications_Fish() {
        Ext.net.DirectMethod.request({
            url: '/Daramad/AnnouncementComplications_Fish/Index?containerId=MainAnnouncementComplicationTab',
            success: function () {
            }
        });
    }
    var LocalString = function (value) {
        return value.toLocaleString();
    };
    function CloseTab() {
        alert();
        App.MainAnnouncementComplicationTab.destroy();
        /*App.AnnouncementComplication_Ejra.destroy();*/
    }
    function setDateAz() {
        var txtAzTarikh = App.MainAnnouncementComplication.queryById('txtAzTarikh');
        var txtTaTarikh = App.MainAnnouncementComplication.queryById('txtTaTarikh');
        txtTaTarikh.setMinValue(txtAzTarikh.getValue());
        txtTaTarikh.minText = "تاریخ شروع نباید بعداز تاریخ پایان باشد.";
    }
    function setDateTa() {
        var txtAzTarikh = App.MainAnnouncementComplication.queryById('txtAzTarikh');
        var txtTaTarikh = App.MainAnnouncementComplication.queryById('txtTaTarikh');
        txtAzTarikh.setMaxValue(txtTaTarikh.getValue());
        txtAzTarikh.maxText = "تاریخ شروع نباید بعداز تاریخ پایان باشد.";
    }
    function HelpAnnouncementComplications() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Daramad/AnnouncementComplications/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function MainAnnouncementComplicationSetSize() {
        App.MainAnnouncementComplication.setWidth(App.DaramadWin.getWidth());
        var PnlElamAvarez = App.MainAnnouncementComplication.queryById('PnlElamAvarez');
        PnlElamAvarez.setHeight(App.DaramadWin.getHeight() - 170);
        /*var PnlEjraiiat = App.MainAnnouncementComplication.queryById('PnlEjraiiat');
        PnlEjraiiat.setHeight(App.DaramadWin.getHeight() - 220);*/
        /*var PnlSodurFish = App.MainAnnouncementComplication.queryById('PnlSodurFish');
        PnlSodurFish.setHeight(App.DaramadWin.getHeight() - 220);*/

        var AvarezGrid = App.MainAnnouncementComplication.queryById('AvarezGrid');
        AvarezGrid.setWidth(App.DaramadWin.getWidth()-50);

        
    }

    function ActionsInGrid(grid, command, record, row) {
        /*var Id = record.data.fldId;*/
        if (command == 'InfoElamAvarez') {
            /*مشاهده */
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Daramad/AnnouncementComplications/Index',
                params: {
                    containerId: 'FirstTabDaramad',
                    Id: record.data.fldId,
                    Info: 1
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        if (command == 'EditElamAvarez') {
            if (record.data.fldIsExternal == true) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "برای فیش های متفرقه امکان ویرایش وجود ندارد.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/Daramad/AnnouncementComplications/ChecKHaveFish',
                    params: {
                        Id: record.data.fldId
                    },
                    success: function (data) {
                        if (data.HaveFish == 0) {
                            Ext.net.DirectMethod.request({
                                url: '/Daramad/AnnouncementComplications/Index',
                                params: {
                                    containerId: 'FirstTabDaramad',
                                    Id: record.data.fldId,
                                    Info: 0
                                },
                                success: function () {
                                    Ext.net.Mask.hide();
                                }
                            });
                        }
                        else {
                            Ext.net.Mask.hide();
                            Ext.MessageBox.show({
                                title: "خطا",
                                msg: "برای رکورد انتخاب شده فیش یا درخواست تخفیف/تقسیط ثبت شده و امکان ویرایش وجود ندارد.",
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                    }
                });
            }
        }
        else if (command == 'DelElamAvarez') {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                        Ext.net.DirectMethod.request({
                            url: '/Daramad/AnnouncementComplications/ChecKHaveFish',
                            params: {
                                Id: record.data.fldId
                            },
                            success: function (data) {
                                if (data.HaveFish == 0) {
                                    Ext.net.DirectMethod.request({
                                        url: '/Daramad/AnnouncementComplications/DelElamAvarez',
                                        params: {
                                            id: record.data.fldId
                                        },
                                        success: function (data) {
                                            var ic = Ext.MessageBox.INFO;
                                            if (data.Er == 1)
                                                ic = Ext.MessageBox.ERROR;
                                            Ext.MessageBox.show({
                                                title: data.MsgTitle,
                                                msg: data.Msg,
                                                icon: ic,
                                                buttons: Ext.MessageBox.OK
                                            });
                                            App.MainAnnouncementComplication.queryById('AvarezGrid').store.load();
                                        }
                                    });
                                    Ext.net.Mask.hide();
                                }
                                else {
                                    Ext.net.Mask.hide();
                                    Ext.MessageBox.show({
                                        title: "خطا",
                                        msg: "برای رکورد انتخاب شده فیش ثبت شده و امکان حذف وجود ندارد.",
                                        icon: Ext.MessageBox.ERROR,
                                        buttons: Ext.MessageBox.OK
                                    });
                                }
                            }
                        });
                    }
                }
            });
        }
    }
    function SodurFish(State) {
        var SelectedRow = App.MainAnnouncementComplication.queryById('AvarezGrid').selModel.getLastSelected();
        if (SelectedRow != null) {

            if (State == 1 && (SelectedRow.data.fldStatusTaghsit == "1" || SelectedRow.data.fldStatusTaghsit == "4" || SelectedRow.data.fldStatusTakhfif == "4" )) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "کاربر گرامی؛ برای عوارض مورد نظر امکان صدور فیش وجود ندارد.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else if (State == 2 && (SelectedRow.data.fldStatusTaghsit == "1" || SelectedRow.data.fldStatusTaghsit == "4" || SelectedRow.data.fldStatusTakhfif == "4")) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "کاربر گرامی؛ برای عوارض مورد نظر امکان ابطال فیش وجود ندارد.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.net.Mask.show({
                    msg: 'در حال بارگذاری...'
                });
                Ext.net.DirectMethod.request({
                    url: '/Daramad/SodurFish/Index',
                    params: {
                        Id: SelectedRow.data.fldId,
                        State: State
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function ReplyTaghsit_Takhfif() {
        var SelectedRow = App.MainAnnouncementComplication.queryById('AvarezGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            if (((SelectedRow.data.fldStatusTaghsit == "0" || SelectedRow.data.fldStatusTaghsit == "3") && (SelectedRow.data.fldStatusTakhfif == "0" || SelectedRow.data.fldStatusTakhfif == "3")) || (SelectedRow.data.fldStatusFish == "1" || SelectedRow.data.fldStatusFish == "2")) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "کاربر گرامی؛ برای عوارض مورد نظر درخواست جدیدی ثبت نشده است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else if ('@ViewBag.HaveSetting' == "0") {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "کاربر گرامی؛ نرخ کارمزد ثبت نشده است. لطفا ابتدا در قسمت تنظیمات درآمد، اطلاعات لازم را وارد کرده و سپس اقدام به ثبت پاسخ نمایید. ",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.net.Mask.show({
                    msg: 'در حال بارگذاری...'
                });
                Ext.net.DirectMethod.request({
                    url: '/Daramad/ReplyTaghsit_Takhfif/Index',
                    params: {
                        Id: SelectedRow.data.fldId,
                        OrganId: SelectedRow.data.fldOrganId
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function Mokatebat() {
        var HaveFish = 0;
        var SelectedRow = App.MainAnnouncementComplication.queryById('AvarezGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
          /*  if (SelectedRow.data.fldStatusKoli == 0) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "کاربر گرامی؛ امکان مکاتبه برای عوارض مورد نظر وجود ندارد.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {*/
                Ext.net.Mask.show({
                    msg: 'در حال بارگذاری...'
                });
                if ((SelectedRow.data.fldStatusKoli == 1 && SelectedRow.data.fldStatusTaghsit != 1))/*تسویه نقدی شده باشه و تقسیط نداشته باشه یعنی فیش داره حتما*/
                    HaveFish = 1;
                Ext.net.DirectMethod.request({
                    url: '/Daramad/Mokatebat/Index',
                    params: {
                        Id: SelectedRow.data.fldId,
                        HaveFish: HaveFish
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            /*}*/
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function Taghsit() {
        var SelectedRow = App.MainAnnouncementComplication.queryById('AvarezGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            if (SelectedRow.data.fldReplyTaghsitId == 0) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "کاربر گرامی؛ امکان تقسیط برای عوارض مورد نظر وجود ندارد.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.net.Mask.show({
                    msg: 'در حال بارگذاری...'
                });
                Ext.net.DirectMethod.request({
                    url: '/Daramad/instalments/Index',
                    params: {
                        ReplyTaghsitId: SelectedRow.data.fldReplyTaghsitId,
                        ElameAvarezId: SelectedRow.data.fldId,
                        OrganId: SelectedRow.data.fldOrganId
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function Taghsit_Takhfif() {
        var SelectedRow = App.MainAnnouncementComplication.queryById('AvarezGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            if (SelectedRow.data.fldStatusFish == "1" || SelectedRow.data.fldStatusFish == "2") {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "کاربر گرامی؛ برای عوارض مورد نظر فیش صادر شده است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.net.Mask.show({
                    msg: 'در حال بارگذاری...'
                });
                Ext.net.DirectMethod.request({
                    url: '/Daramad/RequestTaghsit_Takhfif/Index',
                    params: {
                        Id: SelectedRow.data.fldId
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function NewAnnouncementComplication() {
        Ext.net.Mask.show({
            msg: 'در حال بارگذاری...'
        });
        Ext.net.DirectMethod.request({
            url: '/Daramad/AnnouncementComplications/Index?containerId=FirstTabDaramad&Id=0&Info=0',
           /* url: '/Daramad/AnnouncementComplications/Formulator?ElamAvarezId=30',*/
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function FullSearch() {        
          var txtAzTarikh = App.MainAnnouncementComplication.queryById('txtAzTarikh');
          var txtTaTarikh = App.MainAnnouncementComplication.queryById('txtTaTarikh');
          var CboStatusFish = App.MainAnnouncementComplication.queryById('CboStatusFish');
          var CboStatusTakhfif = App.MainAnnouncementComplication.queryById('CboStatusTakhfif');
          var CboStatusTaghsit = App.MainAnnouncementComplication.queryById('CboStatusTaghsit');
          var CboStatusKoli = App.MainAnnouncementComplication.queryById('CboStatusKoli');
          var txtShenase_Code = App.MainAnnouncementComplication.queryById('txtShenase_Code');

          if (txtAzTarikh.getRawValue() == "" && txtTaTarikh.getRawValue() == "" && txtShenase_Code.getValue() == "" && CboStatusFish.getValue() == "11" && CboStatusTakhfif.getValue() == "11" && CboStatusTaghsit.getValue() == "11" && CboStatusKoli.getValue() == "11") {
              App.MainAnnouncementComplication.queryById('AvarezGrid').store.load();
          }
          else {
              Ext.net.Mask.show({ msg: 'در حال جستجو...' });
              Ext.net.DirectMethod.request({
                  url: '/Daramad/AnnouncementComplications/FullSearch',
                  params: {
                      Shenase_Code: txtShenase_Code.getValue(),
                      AzTarikh: txtAzTarikh.getRawValue(),
                      TaTarikh: txtTaTarikh.getRawValue(),
                      Fish: CboStatusFish.getValue(),
                      Takhfif: CboStatusTakhfif.getValue(),
                      Taghsit: CboStatusTaghsit.getValue(),
                      kol: CboStatusKoli.getValue()
                  },
                  success: function (data) {
                      App.MainAnnouncementComplication.queryById('AvarezGrid').getStore().loadData(data);
                      Ext.net.Mask.hide();
                  },
                  failure: function (data) {
                      Ext.net.Mask.hide();
                      Ext.MessageBox.show({
                          title: "خطا",
                          msg: "خطا در بارگذاری اطلاعات (لطفا بازه زمانی را کوچکتر انتخاب کنید.)",
                          icon: Ext.MessageBox.ERROR,
                          buttons: Ext.MessageBox.OK
                      });
                  }
              });
          }
    }
    function GroupPayIndex() {
        var SelectedRow = App.MainAnnouncementComplication.queryById('AvarezGrid').selModel.getLastSelected();
        if (SelectedRow != null) {

            if (SelectedRow.data.fldStatusFish == "1" || SelectedRow.data.fldStatusFish == "2") {
                Ext.net.Mask.show({
                    msg: 'در حال بارگذاری...'
                });
                Ext.net.DirectMethod.request({
                    url: '/Daramad/AnnouncementComplications_Fish/GroupPayIndex',
                    params: {
                        Id: SelectedRow.data.fldId
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "کاربر گرامی؛ برای عوارض مورد نظر فیشی صادر نشده است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function History() {
        var SelectedRow = App.MainAnnouncementComplication.queryById('AvarezGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({
                msg: 'در حال بارگذاری...'
            });
            Ext.net.DirectMethod.request({
                url: '/Daramad/AnnouncementComplications/History',
                params: {
                    ElameAvarezId: SelectedRow.data.fldId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DelTaghsit() {
        var SelectedRow = App.MainAnnouncementComplication.queryById('AvarezGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف اسناد مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                        Ext.net.DirectMethod.request({
                            url: '/Daramad/instalments/DelInstalments',
                            params: {
                                ElameAvarezId: SelectedRow.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                        });
                        Ext.net.Mask.hide();
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
   /* function EditElamAvarez(record) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Daramad/AnnouncementComplications/ChecKHaveFish',
                params: {
                    Id: record.data.fldId
                },
                success: function (data) {
                    if (data.HaveFish == 0) {
                        Ext.net.DirectMethod.request({
                            url: '/Daramad/AnnouncementComplications/Index',
                            params: {
                                containerId: 'FirstTabDaramad',
                                Id: record.data.fldId
                            },
                            success: function () {
                                Ext.net.Mask.hide();
                            }
                        });
                    }
                    else {
                        Ext.net.Mask.hide();
                        Ext.MessageBox.show({
                            title: "خطا",
                            msg: "برای رکورد انتخاب شده فیش ثبت شده و امکان ویرایش وجود ندارد.",
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                }
            });
    }
    function DelElamAvarez(record) {
        Ext.MessageBox.show({
            title: "هشدار",
            msg: "آیا برای حذف مطمئن هستید؟",
            icon: Ext.MessageBox.WARNING,
            buttons: Ext.MessageBox.YESNO,
            fn: function (btn) {
                if (btn == 'yes') {
                    Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                    Ext.net.DirectMethod.request({
                        url: '/Daramad/AnnouncementComplications/ChecKHaveFish',
                        params: {
                            Id: record.data.fldId
                        },
                        success: function (data) {
                            if (data.HaveFish == 0) {
                                Ext.net.DirectMethod.request({
                                    url: '/Daramad/AnnouncementComplications/DelElamAvarez',
                                    params: {
                                        id: record.data.fldId
                                    },
                                    success: function (data) {
                                        var ic = Ext.MessageBox.INFO;
                                        if (data.Er == 1)
                                            ic = Ext.MessageBox.ERROR;
                                        Ext.MessageBox.show({
                                            title: data.MsgTitle,
                                            msg: data.Msg,
                                            icon: ic,
                                            buttons: Ext.MessageBox.OK
                                        });
                                        App.MainAnnouncementComplication.queryById('AvarezGrid').store.load();
                                    }
                                });
                                Ext.net.Mask.hide();
                            }
                            else {
                                Ext.net.Mask.hide();
                                Ext.MessageBox.show({
                                    title: "خطا",
                                    msg: "برای رکورد انتخاب شده فیش ثبت شده و امکان حذف وجود ندارد.",
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                        }
                    });
                }
            }
        });
    }*/
    var addKeyMapMainAnnouncementComplication = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.MainAnnouncementComplication.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                   /* if (keyfield.itemId == "txtShSheba") {
                        nextfld = App.MainAnnouncementComplication.queryById('btnSaveShomareHesabeOmoomi');
                    }
                    else {*/
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                   /* }*/
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }
</script>