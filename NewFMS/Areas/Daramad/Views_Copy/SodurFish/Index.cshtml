@model NewFMS.Models.SodoorFish
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using Ext.Net.Utilities

@{var X = Html.X();
  NewFMS.WCF_Common.CommonService servic = new NewFMS.WCF_Common.CommonService();
  string IP = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_HOST"];
  NewFMS.WCF_Common.ClsError Err = new NewFMS.WCF_Common.ClsError();
  }
<br /> 
<script>
    var ShowStatus = function (value, record) {
        var fldRequestType = record.record.data.fldRequestType;
        var template = '<img src={0} alt="" title={1} />';
        if (value == 3 ) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/فیشصادرنشده.png")";
            var ToolTip = "فیش" + '&nbsp;' + "صادر" + '&nbsp;' + "نشده";

        }
        else if (value == 1 ) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/فیشابطالشده.png")";
            var ToolTip = "فیش" + '&nbsp;' + "باطل"+ '&nbsp;' +  "شده";
        }
        else if (value == 2 ) {
            var Pic = "@Url.Content("~/Content/icons/Daramad/mini/فیشصادرشده.png")";
            var ToolTip = "فیش" + '&nbsp;' + "صادر" + '&nbsp;' + "شده";
        }
        
        return Ext.String.format(template, Pic, ToolTip);
    };
</script>

@(Html.X().Window()
    .Modal(true)
    .Width(1150)
    //.Height(330)
    .ID("SodurFish")
    .Title("صدور فیش")
    .Listeners(li => { li.AfterRender.Handler = "LoadFish();LoadGridFish();"; li.Render.Fn = "addKeyMapSodurFish"; })
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(LayoutType.VBox)
    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
        .Border(false)
                    .Defaults(new { Margin = 2 })
    .Items(
        X.Panel()
            .Border(false)
                .Defaults(new { Margin = 5 })
                .Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.Hidden().ItemID("fldAshkhasId"),
                X.Hidden().ItemID("fldId"),
                     X.FieldSet()
                     .Title("مشخصات عمومی اعلام عوارض")
                     .Width(800).Border(true)
                     .Defaults(new { Margin = 5 })
                 .Items(
                    X.FieldSet()
                        .Layout(LayoutType.HBox)
                    .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle })
                    .Width(780)
                    .ColSpan(4)
                    .Border(false)
                    .ItemID("DetailMalek")
                    .Items(
                     X.Label("نام: ")
                     .ItemID("lblName")
                     ,X.Label("نام پدر: ").ItemID("lblFather")
                     .PaddingSpec("0 0 0 50px"),
                      X.Label("کد ملی:").ItemID("lblCode_ShenaseMelli")
                    .PaddingSpec("0 0 0 50px")
                     
                    )
                  //  ,
                  //   X.Panel()
                  //  .Width(770)
                  //  .ColSpan(4)
                  //  .ItemID("pnlMablagh")
                  //  .Title("مبلغ عوارض")
                  //  .Listeners(l => l.Expand.Handler = "CollapsPnl();")
                  //  .Listeners(l => l.Collapse.Handler = "CollapsPnl();")
                  //  .Frame(true)
                  //  .Collapsed(true)
                  //  .Collapsible(true)
                  //  .Items(
                  //X.GridPanel().AutoScroll(true)
                  //  .ItemID("AvarezGrid").Flex(2)
                  //  .Width(760)
                  //  .Height(150)
                  //          .Store(
                  //              X.StoreFor(Model.CodhayeDaramad).AutoLoad(true)
                  //              .Proxy(Html.X().AjaxProxy()
                  //                              .Url(Url.Action("ReadCodeDaramadAvarez"))
                  //                          .Reader(Html.X().JsonReader().Root("data"))
                  //                          .ExtraParams(l => l.Add(new { elamAvarez = @ViewBag.Id }))
                  //              )
                  //              .PageSize(2000)
                  //              .RemoteFilter(true)
                  //              .RemotePaging(true)

                  //          )
                  //          .View(
                  //              Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                  //          )
                  //        //      .BottomBar(X.PagingToolbar().HideRefresh(true))   
                  //          .ColumnModel(
                  //                  Html.X().RowNumbererColumn(),
                  //                  Html.X().Column().DataIndex(Model.CodhayeDaramad, m => m.fldID).Text("کد").Flex(1).Hidden(true),
                  //                  Html.X().Column().DataIndex(Model.CodhayeDaramad, m => m.fldElamAvarezId).Text("کد").Flex(1).Hidden(true),
                  //                  Html.X().Column().DataIndex(Model.CodhayeDaramad, m => m.fldShomareHesabCodeDaramadId).Text("کد").Flex(1).Hidden(true),
                  //                  Html.X().Column().DataIndex(Model.CodhayeDaramad, m => m.fldSharheCodeDaramad).Text("شرح کد درآمد").Flex(2),
                  //                  Html.X().Column().DataIndex(Model.CodhayeDaramad, m => m.fldAsliValue).Text("مبلغ").Renderer("LocalString").Flex(2),
                  //                  Html.X().Column().DataIndex(Model.CodhayeDaramad, m => m.fldMaliyatValue).Text("مالیات").Renderer("LocalString").Flex(2),
                  //                  Html.X().Column().DataIndex(Model.CodhayeDaramad, m => m.fldAvarezValue).Text("عوارض").Renderer("LocalString").Flex(2)
                  //              )
                  //          )
                            ),
                             X.Panel ()
                         .Width(1100).Border(false)
                 .Items(
                            X.GridPanel()
                            .ItemID("GridFish")
                            .Height(200)
              //                .TopBar(
              //                   X.Toolbar()
              //                  .Border(false)
              //                  .Items(
              //X.Button().Text("پرداخت گروهی").Icon(Ext.Net.Icon.Money).Listeners(l => l.Click.Handler = "GroupPay();")
              //                                                             )
              //                  )
                            .Icon(Icon.Table)
                            .Frame(true)
                            .AutoScroll(true)
                            .Title("فیش")
                            .Store(
                                        X.StoreFor(Model.SodurFish)
                                        .RemoteFilter(true)
                                                    .PageSize(200000)
                                            )
        /*.Plugins(Html.X().CellEditing().ClicksToEdit(1))
    .SelectionModel(
        Html.X().CheckboxSelectionModel().ShowHeaderCheckbox(false)
            .Mode(SelectionMode.Multi).PruneRemoved(false).CheckOnly(true))*/
              .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
            //         .SelectionModel(
            //Html.X().CheckboxSelectionModel().ShowHeaderCheckbox(true)
            //    .Mode(SelectionMode.Multi).PruneRemoved(false).CheckOnly(true))
        
                 //.Plugins(X.FilterHeader().Remote(true))
                 
                                .ColumnModel(
                                Html.X().RowNumbererColumn(),
                                        Html.X().Column().DataIndex(Model.SodurFish, m => m.PardakhtStatus).Text("fldPardakhtStatus").Flex(1).Hidden(true),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldElamAvarezId).Text("ID اعلام عوارض").Flex(1).Wrap(true).Hidden(true),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldOrganId).Text("ID سازمان").Flex(1).Wrap(true).Hidden(true),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldShomareHesabId).Text("ID شماره حساب").Flex(2).Wrap(true).Hidden(true),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldStatus).Text("وضعیت").Flex(2).Renderer("ShowStatus").Filterable(false),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldShomareHesab).Text("شماره حساب").Flex(4).Wrap(true),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldShorooShenaseGhabz).Text("کد شروع شناسه قبض").Flex(3).Wrap(true),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldItem).Text("تعداد آیتم ها").Flex(3),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldAsliValue).Text("مبلغ").Flex(3).Wrap(true).Renderer("LocalString"),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldMaliyat).Text("مالیات").Flex(3).Wrap(true).Renderer("LocalString"),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldAvarez).Text("عوارض").Flex(3).Wrap(true).Renderer("LocalString"),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldJamKol).Text("جمع کل").Flex(3).Wrap(true).Renderer("LocalString"),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldJamFish).Text("جمع فیش").Flex(3).Wrap(true).Renderer("LocalString"),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldShenaseGhabz).Text("شناسه قبض").Flex(4).Wrap(true),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldShenasePardakht).Text("شناسه پرداخت").Flex(4).Wrap(true),
                                Html.X().Column().DataIndex(Model.SodurFish, m => m.fldStatus).Text("وضعیت").Flex(1).Hidden(true),
                                Html.X().ImageCommandColumn()/*.PrepareCommand("prepareCommandSodur")*/
                                .Flex(3).Listeners(l => l.Command.Fn = "ShowInfoSodur").Commands(
                                    Html.X().ImageCommand().CommandName("PrintFish").Icon(Ext.Net.Icon.Printer).ToolTip(tt => tt.Text = "چاپ فیش").Hidden(!servic.Permission(743, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                , Html.X().ImageCommand().CommandName("EbtalFish").IconCls("CancelFish").ToolTip(tt => tt.Text = "ابطال فیش")
                                , Html.X().ImageCommand().CommandName("SodurFish").IconCls("SodorFish").ToolTip(tt => tt.Text = "صدور فیش")
                                , Html.X().ImageCommand().CommandName("FishDetail").Icon(Ext.Net.Icon.ApplicationViewDetail).ToolTip(tt => tt.Text = "جزئیات فیش"))

                    )
                    //       .SelectionModel(
                    //    Html.X().RowSelectionModel()
                    //        .Mode(Ext.Net.SelectionMode.Single)
                    //)
                    )
                //)






                )
)
)
<script type="text/javascript">
    function CollapsPnl() {
        var pnlMablagh = App.SodurFish.queryById('pnlMablagh');
        if (pnlMablagh.collapsed == false)
        {
            App.SodurFish.setHeight(490);
            App.SodurFish.center();
        }
        else
        {
            App.SodurFish.setHeight(330);
            App.SodurFish.center();
        }
    }

    var LocalString = function (value) {
        return value.toLocaleString();
    };
    
    function LoadGridFish() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Daramad/SodurFish/LoadAllData',
            params: {
                Id: '@ViewBag.Id'
            },
            success: function (result) {
                var store = App.SodurFish.queryById("GridFish").store;
                store.load({ start: 0, limit: store.count(), page: 1 });
                store.loadData(result.Data);
                Ext.net.Mask.hide();
		if('@ViewBag.State'=="3")
		App.AnnouncementComplication.destroy();
            }
        });
    }

    function LoadFish() {
        var lblCode_ShenaseMelli = App.SodurFish.queryById("lblCode_ShenaseMelli");
        var fldAshkhasId = App.SodurFish.queryById("fldAshkhasId");
        var txtCode_ShenaseMelli = App.SodurFish.queryById("txtCode_ShenaseMelli");
        var lblName = App.SodurFish.queryById('lblName');
        var lblFather = App.SodurFish.queryById("lblFather");
        var fldId = App.SodurFish.queryById('fldId');

        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Daramad/SodurFish/GetElamAvarez',
            params: {
                Id: '@ViewBag.Id'
            },
            success: function (data) {
                fldAshkhasId.setValue(data.fldAshakhasID);
                lblName.setText("نام: "+data.fldNameShakhs);
                if (data.fldNoeShakhs == "0") {
                    lblCode_ShenaseMelli.setText("کدملی: " + data.fldShenaseMeli);
                    lblFather.setText("نام پدر: " + data.fldFather_Sabt);
                    fldId.setValue(data.fldId);
                    /*App.SodurFish.queryById('AvarezGrid').store.load();*/
                    Ext.net.Mask.hide();
                }
                else {
                    lblCode_ShenaseMelli.setText("شناسه ملی: " + data.fldShenaseMeli);
                    lblFather.setText("شماره ثبت: " + data.fldFather_Sabt);
                   
                }

            }
        });

    }
    
 
    function ShowInfoSodur(grid, command, record, row) {
        if (command == 'PrintFish') {
            if (record.data.fldStatus == 2) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });

                Ext.net.DirectMethod.request({
                    url: '/Daramad/AnnouncementComplications_Fish/Print',
                    params: {
                        FishId: record.data.fldId,
                        ElamAvarezId: record.data.fldElamAvarezId
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "برای اعلام عوارض انتخاب شده فیش صادر نشده است .",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
        else if (command == 'SodurFish') {
            if (record.data.fldStatus != 2) {
                Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                Ext.net.DirectMethod.request({
                    url: '/Daramad/SodurFish/CheckTakhfif',
                    params: {
                        ElameAvarezId: '@ViewBag.Id',
                        fldShomareHesabId: record.data.fldShomareHesabId,
                        fldShorooShenaseGhabz: record.data.fldShorooShenaseGhabz
                    },
                    success: function (data) {
                        if (data.Er == 1) {
                            Ext.MessageBox.show({
                                title: data.MsgTitle,
                                msg: data.Msg,
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.MessageBox.OK
                            });
                            Ext.net.Mask.hide();
                        }
                        else {
                            if (data.haveTakhfif == null) {
                                Ext.MessageBox.show({
                                    title: "خطا",
                                    msg: "خطا در تخفیف",
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.MessageBox.OK
                                });
                                Ext.net.Mask.hide();
                            }
                            else if (data.haveTakhfif == false) {
                                Ext.net.DirectMethod.request({
                                    url: '/Daramad/SodurFish/Save',
                                    params: {
                                        fldElamAvarezId: record.data.fldElamAvarezId,
                                        fldShomareHesabId: record.data.fldShomareHesabId,
                                        fldMablaghAvarezGerdShode: record.data.fldJamFish,
                                        fldShorooShenaseGhabz: record.data.fldShorooShenaseGhabz,
                                        fldJamKol: record.data.fldJamKol,
                                        fldOrganId: record.data.fldOrganId,
                                        State: 1
                                    },
                                    success: function (data1) {
                                        LoadGridFish();
                                        App.MainAnnouncementComplication.queryById('AvarezGrid').store.load();
                                        if (App.AnnouncementComplication_Fish)
                                            App.AnnouncementComplication_Fish.queryById('FishGrid').store.load();
                                        Ext.net.Mask.hide();
                                        var ic = Ext.MessageBox.INFO;
                                        if (data1.Er == 1) {
                                            ic = Ext.MessageBox.ERROR;
                                            Ext.MessageBox.show({
                                                title: data1.MsgTitle,
                                                msg: data1.Msg,
                                                icon: ic,
                                                buttons: Ext.MessageBox.OK
                                            });
                                        }
                                        else {
                                            if (data1.PrintFish == 1) {
                                                Ext.MessageBox.show({
                                                    title: data1.MsgTitle,
                                                    msg: data1.Msg,
                                                    icon: Ext.MessageBox.INFO,
                                                    buttons: Ext.MessageBox.YESNO,
                                                    fn: function (btn) {
                                                        if (btn == 'yes') {
                                                            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                                                            Ext.net.DirectMethod.request({
                                                                url: '/Daramad/AnnouncementComplications_Fish/Print',
                                                                params: {
                                                                    FishId: data1.id,
                                                                    ElamAvarezId: record.data.fldElamAvarezId
                                                                },
                                                                success: function () {
                                                                    Ext.net.Mask.hide();
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            }
                                            else {
                                                Ext.MessageBox.show({
                                                    title: data1.MsgTitle,
                                                    msg: data1.Msg,
                                                    icon: Ext.MessageBox.INFO,
                                                    buttons: Ext.MessageBox.OK
                                                });
                                            }
                                        }
                                        Ext.net.Mask.hide();
                                    }
                                });
                            }
                            else {
                                Ext.net.Mask.hide();
                                Ext.MessageBox.show({
                                    title: "هشدار",
                                    msg: "فیش مورد نظر مشمول تخفیف می باشد.آیا مایل به ادامه عملیات هستید؟",
                                    icon: Ext.MessageBox.WARNING,
                                    buttons: Ext.MessageBox.YESNO,
                                    fn: function (btn) {
                                        if (btn == 'yes') {
                                            Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
                                            Ext.net.DirectMethod.request({
                                                url: '/Daramad/SodurFish/Save',
                                                params: {
                                                    fldElamAvarezId: record.data.fldElamAvarezId,
                                                    fldShomareHesabId: record.data.fldShomareHesabId,
                                                    fldMablaghAvarezGerdShode: record.data.fldJamFish,
                                                    fldShorooShenaseGhabz: record.data.fldShorooShenaseGhabz,
                                                    fldJamKol: record.data.fldJamKol,
                                                    fldOrganId: record.data.fldOrganId,
                                                    State: 1
                                                },
                                                success: function (data1) {
                                                    LoadGridFish();
                                                    App.MainAnnouncementComplication.queryById('AvarezGrid').store.load();
                                                    if (App.AnnouncementComplication_Fish)
                                                    App.AnnouncementComplication_Fish.queryById('FishGrid').store.load();
                                                    Ext.net.Mask.hide();
                                                    var ic = Ext.MessageBox.INFO;
                                                    Ext.net.Mask.hide();
                                                    if (data1.Er == 1) {
                                                        ic = Ext.MessageBox.ERROR;
                                                        Ext.MessageBox.show({
                                                            title: data1.MsgTitle,
                                                            msg: data1.Msg,
                                                            icon: ic,
                                                            buttons: Ext.MessageBox.OK
                                                        });
                                                    }
                                                    else {
                                                        Ext.MessageBox.show({
                                                            title: data1.MsgTitle,
                                                            msg: data1.Msg,
                                                            icon: Ext.MessageBox.INFO,
                                                            buttons: Ext.MessageBox.YESNO,
                                                            fn: function (btn) {
                                                                if (btn == 'yes') {
                                                                    Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                                                                    Ext.net.DirectMethod.request({
                                                                        url: '/Daramad/AnnouncementComplications_Fish/Print',
                                                                        params: {
                                                                            FishId: data1.id,
                                                                            ElamAvarezId: record.data.fldElamAvarezId
                                                                        },
                                                                        success: function () {
                                                                            Ext.net.Mask.hide();
                                                                        }
                                                                    });
                                                                }
                                                            }
                                                        });
                                                    }

                                                    Ext.net.Mask.hide();
                                                }
                                            });
                                        }
                                    }
                                });
                            }
                        }
                    }
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "برای اعلام عوارض انتخاب شده قبلا فیش صادر شده است .",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
        else if (command == 'EbtalFish') {
            if (record.data.fldStatus == 2) {
                if (record.data.PardakhtStatus == 0) {
                    var SelectedRow = App.MainAnnouncementComplication.queryById('AvarezGrid').selModel.getLastSelected();
                    Ext.MessageBox.show({
                        title: "هشدار",
                        msg: "آیا برای ابطال فیش مطمئن هستید؟",
                        icon: Ext.MessageBox.WARNING,
                        buttons: Ext.MessageBox.YESNO,
                        fn: function (btn) {
                            if (btn == 'yes') {
                                Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                                Ext.net.DirectMethod.request({
                                    url: '/Daramad/SodurFish/Save',
                                    params: {
                                        fldId: record.data.fldId,
                                        State: 2,
                                        IsExternal: SelectedRow.data.IsExternal
                                    },
                                    success: function (data1) {
                                        var ic = Ext.MessageBox.INFO;
                                        if (data1.Er == 1)
                                            ic = Ext.MessageBox.ERROR;
                                        Ext.MessageBox.show({
                                            title: data1.MsgTitle,
                                            msg: data1.Msg,
                                            icon: ic,
                                            buttons: Ext.MessageBox.OK
                                        });
                                        LoadGridFish();
                                        App.MainAnnouncementComplication.queryById('AvarezGrid').store.load();
                                        if (App.AnnouncementComplication_Fish)
                                            App.AnnouncementComplication_Fish.queryById('FishGrid').store.load();
                                        Ext.net.Mask.hide();
                                    }
                                });
                            }
                        }
                    });
                }
                else {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "برای اعلام عوارض انتخاب شده فیش صادر و پرداخت شده است و مجاز به ابطال آن نمی باشید .",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "برای اعلام عوارض انتخاب شده فیش صادر نشده است .",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }

        }
            /*else if (command == 'EbtalFish') {
                if (record.data.fldStatus == 2) {
                    Ext.MessageBox.show({
                        title: "هشدار",
                        msg: "آیا برای ابطال فیش مطمئن هستید؟",
                        icon: Ext.MessageBox.WARNING,
                        buttons: Ext.MessageBox.YESNO,
                        fn: function (btn) {
                            if (btn == 'yes') {
                                Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                                Ext.net.DirectMethod.request({
                                    url: '/Daramad/SodurFish/Save',
                                    params: {
                                        fldId: record.data.fldId,
                                        State: 2
                                    },
                                    success: function (data1) {
                                        var ic = Ext.MessageBox.INFO;
                                        if (data1.Er == 1)
                                            ic = Ext.MessageBox.ERROR;
                                        Ext.MessageBox.show({
                                            title: data1.MsgTitle,
                                            msg: data1.Msg,
                                            icon: ic,
                                            buttons: Ext.MessageBox.OK
                                        });
                                        LoadGridFish();
                                        App.MainAnnouncementComplication.queryById('AvarezGrid').store.load();
                                         if (App.AnnouncementComplication_Fish)
                                        App.AnnouncementComplication_Fish.queryById('FishGrid').store.load();
                                        Ext.net.Mask.hide();
                                    }
                                });
                            }
                        }
                    });
                }
                else {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "برای اعلام عوارض انتخاب شده فیشی صادر نشده است .",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
    
            }*/

        else if (command == 'FishDetail') {
            Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
            Ext.net.DirectMethod.request({
                url: '/Daramad/SodurFish/FishDetail',
                params: {
                    ElamAvarezId: record.data.fldElamAvarezId,
                    ShomareHesabId: record.data.fldShomareHesabId,
                    ShorooShenaseGhabz: record.data.fldShorooShenaseGhabz
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }

    }
   
    
    
        var addKeyMapSodurFish = function (cmp) {
            this.keyMap = new Ext.util.KeyMap({
                target: cmp.getEl(),
                binding: [{
                    key: [13, 9], /*Ext.EventObject.ENTER,*/
                    fn: function (key, e) {
                        if (e.getKey() == 9) {
                            e.stopEvent();
                        }
                        var keyfield = App.SodurFish.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;
                        /* if (keyfield.itemId == "txtShSheba") {
                             nextfld = App.SodurFish.queryById('btnSaveShomareHesabeOmoomi');
                         }
                         else {*/
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                        /* }*/
                        nextfld.focus();
                        nextfld.selectText();
                    }
                }]
            });
        };
</script>