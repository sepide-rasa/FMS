@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
                .Listeners(li => { li.Render.Fn = "addKeyMapNewHoghughi"; li.AfterRender.Handler = "SelectType()"; })
    .Width(290)
        //   .Height(300)
    .Resizable(false)
    .Title("ثبت شخص حقوقی جدید")
    .ID("NewHoghughi")
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .ButtonAlign(Ext.Net.Alignment.Center)
            .Border(false)
            .KeyMap(Html.X().KeyMap()
                .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                .Binding(b =>
                {
                    b.Add(Html.X().KeyBinding()
                    .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                    .Handler("SaveAshkhaseHoghoghi(); ")
                    );

                }))
            .DefaultButton("btn")
            .Layout(Ext.Net.LayoutType.VBox)
            .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Buttons(
                X.Button()
                    .Text("ذخیره")
                    .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                            .Listeners(l => l.Click.Handler = "SaveAshkhaseHoghoghi();")
                        .ItemID("btnSaveAshkhaseHoghoghi"),
                X.Button()
                    .Text("خروج")
                    .Icon(Ext.Net.Icon.DoorOut)
                    .ToolTip("کلید میانبر Esc")
                    .OnClientClick("App.NewHoghughi.destroy();")
                    )
            .Items(
                X.FieldSet()
                        .ItemID("Panel").Title("اطلاعات شخص حقوقی")
                    .Layout(Ext.Net.LayoutType.Table)
                    .Border(true)
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                    .Defaults(new { Margin = 2 })
                        .Items(
                            X.Hidden().ItemID("fldId"),
                                X.Label("نوع شخص:"),
                            X.ComboBox()
                            .ItemID("CboTypeShakhs")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .Editable(false)
                            .TypeAhead(true)
                            .BlankText("لطفا نوع شرکت را انتخاب کنید.")
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .EmptyText("شرکت")
                            .Items(
                                new ListItem("حقوقی", "1"),
                                new ListItem("سایر", "2")
                                )
                                .SelectedItems(new { Value = "1" }),
                                    X.Label("نوع شرکت:"),
                            X.ComboBox()
                            .ItemID("CboTypeSherkat")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .Editable(false)
                            .TypeAhead(true)
                            .BlankText("لطفا نوع شرکت را انتخاب کنید.")
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .EmptyText("شرکت")
                            .Items(
                                new ListItem("داخلی", "0"),
                                new ListItem("خارجی", "1")
                                )
                                .SelectedItems(new { Value = "0" })
                                .Listeners(l =>
                                {
                                     l.Select.Handler = "SelectType();";
                                     //l.Change.Handler="SelectType();";
                                }),
                               X.Label("نام:"),
                        X.TextField()
                        .ItemID("txtName")
                        .AllowBlank(false)
                        .BlankText("لطفا نام را وارد کنید.")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .MaxLength(250)
                        .EnforceMaxLength(true)
                        .MaskRe("[a-z,A-Z,آ-ی, ,_,-]")
                        .AutoFocus(true)
                            , X.Label("شناسه ملی:")
                        .ItemID("lblShenaseMelli")
                        , X.FieldSet()
                        .Border(false)
                        .ItemID("fidShenaseMelli")
                        .Padding(0)
                        .Layout(LayoutType.HBox)
                        .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle })
                           .Items(
                         X.TextField()
                            .ItemID("txtShenaseMelli").FieldStyle("direction:ltr;")
                        .AllowBlank(false)
                        .BlankText("لطفا شناسه ملی را وارد کنید.")
                        .MaxLength(11)
                        .EnforceMaxLength(true)
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .MaskRe("[0-9]")
                        , X.HyperLink()
                        .ItemID("lnkEstelam")
                        .Target("_blank")
                        .NavigateUrl("http://www.ilenc.ir/LegalPersonSearch.aspx")
                        .ImageUrl("/Content/icons/mini/استعلام.png")
                        .Text("استعلام شناسه ملی")
                        .Listeners(l => l.AfterRender.Fn = "linkEstelam")
                        )
                        , X.TextField()
                            .ItemID("txtCodeFaragir")
                        .FieldStyle("direction:ltr;")
                        .AllowBlank(false)
                        .BlankText("لطفا کد فراگیر را وارد کنید.")
                        .MaxLength(11)
                        .EnforceMaxLength(true)
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .MaskRe("[0-9]")
                        , X.Label("شماره ثبت:")
                        , X.TextField()
                        .ItemID("txtShomareSabt")
                        .FieldStyle("direction:ltr;")
                        .AllowBlank(false)
                        .BlankText("لطفا شماره ثبت را وارد کنید.")
                        .MaxLength(20)
                        .EnforceMaxLength(true)
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .MaskRe("[0-9]")
        )
    ))
)

<script type="text/javascript">
    function setValueType() {
        var CboTypeSherkat = App.NewHoghughi.queryById('CboTypeSherkat');
        CboTypeSherkat.setValue("0");
    }
    var linkEstelam = function (obj) {
        obj.tip = Ext.create('Ext.tip.ToolTip', {
            target: obj.getEl().getAttribute("id"),
            trackMouse: true,
            renderTo: document.body,
            html: this.htmlTip,
            width: 110,
            title: "استعلام شناسه ملی"
        });
    };
    function SelectType() {
        var CboTypeSherkat = App.NewHoghughi.queryById('CboTypeSherkat');
        var lblShenaseMelli = App.NewHoghughi.queryById('lblShenaseMelli');
        var txtShenaseMelli = App.NewHoghughi.queryById('txtShenaseMelli');
        var fidShenaseMelli = App.NewHoghughi.queryById('fidShenaseMelli');
        var txtCodeFaragir = App.NewHoghughi.queryById('txtCodeFaragir');
        if (CboTypeSherkat.getValue() == "1") {
            lblShenaseMelli.setText("کد فراگیر:");
            fidShenaseMelli.hide();
            txtCodeFaragir.show();
        }
        else {
            lblShenaseMelli.setText("شناسه ملی:");
            fidShenaseMelli.show();
            txtCodeFaragir.hide();
        }
    }
    function SaveAshkhaseHoghoghi() {
        var CboTypeSherkat = App.NewHoghughi.queryById('CboTypeSherkat');
        var txtName = App.NewHoghughi.queryById('txtName');
        var txtShenaseMelli = App.NewHoghughi.queryById('txtShenaseMelli');
        var txtShomareSabt = App.NewHoghughi.queryById('txtShomareSabt');
        var CboTypeShakhs = App.NewHoghughi.queryById('CboTypeShakhs');
        var txtCodeFaragir = App.NewHoghughi.queryById('txtCodeFaragir');
        var fldId = App.NewHoghughi.queryById('fldId');
        var er = false;

        if (txtName.validate() == false) {
            er = true;
        }
        
        if (CboTypeShakhs.getValue() == 1) {
            if (txtShenaseMelli.validate() == "" && CboTypeSherkat.getValue() == "0") {
                Ext.MessageBox.show({
                    Name: "خطا",
                    msg: "لطفا شناسه ملی را وارد نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                return;
            }
            else if (txtCodeFaragir.validate() == false && CboTypeSherkat.getValue() == "1") {
                Ext.MessageBox.show({
                    Name: "خطا",
                    msg: "لطفا کد فراگیر را وارد نمایید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                return;
            }
            if (txtShomareSabt.validate() == false) {
                er = true;
            }

            if (!checkShenaseMeli(txtShenaseMelli.getValue()) && CboTypeSherkat.getValue() == "0") {
                Ext.MessageBox.show({
                    Name: "خطا",
                    msg: "شناسه ملی نامعتبراست.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                er = true;
            }
        }
        if (er == true)
            return;
        var ShenaseMelli_code;
        if (CboTypeSherkat.getValue() == "0") {
            ShenaseMelli_code = txtShenaseMelli.getValue();
        }
        else {
            ShenaseMelli_code = txtCodeFaragir.getValue();
        }
        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        Ext.net.DirectMethod.request({
            url: '/Comon/AshkhaseHoghoghi/Save',
            params: {
                fldId: fldId.getValue(),
                fldName: txtName.getValue(),
                fldShenaseMelli: ShenaseMelli_code,
                fldShomareSabt: txtShomareSabt.getValue(),
                fldSayer: CboTypeShakhs.getValue(),
                fldDesc: ""
            },
            success: function (data) {
                Ext.net.Mask.hide();
                var ic = Ext.MessageBox.ERROR;
                if (data.Er == 0) {
                    ic = Ext.MessageBox.INFO;
                    if ('@ViewBag.State' == 2) {
                        var DetailMalek = App.AnnouncementComplication.queryById('DetailMalek');
                        DetailMalek.show();
                        App.AnnouncementComplication.queryById('txtCode_ShenaseMelli').setValue(txtShenaseMelli.getValue());
                        App.AnnouncementComplication.queryById('fldAshkhasId').setValue(data.AshkhasId);
                        App.AnnouncementComplication.queryById('NameMalek').setText(txtName.getValue());
                        App.AnnouncementComplication.queryById('NameFather').setText(txtShomareSabt.getValue());
                        var lblFather = App.AnnouncementComplication.queryById("lblFather");
                        lblFather.setText("شماره ثبت: ");
                    }
                    else if ('@ViewBag.State' == 5) {
                        App.AnnouncementComplication.queryById('txtCode_ShenaseMelli').setValue(txtShenaseMelli.getValue());
                        App.AnnouncementComplication.queryById('fldAshkhasId').setValue(data.AshkhasId);
                    }
                }
                Ext.MessageBox.show({
                    Name: data.MsgName,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK,
                    fn: function (btn) {
                        if (btn == 'ok') {
                            if (data.Er != 1)
                                App.NewHoghughi.destroy();
                        }
                    }
                });
                if ('@ViewBag.State' == 1)
                    App.SearchAshkhas.queryById('GridSearchAshkhas').store.load();
            }

        });
    }
    function checkShenaseMeli(code) {

        var L = code.length;

        if (L < 11 || parseInt(code) == 0) return false;

        if (parseInt(code.substr(3, 6)) == 0) return false;
        var c = parseInt(code.substr(10, 1));
        var d = parseInt(code.substr(9, 1)) + 2;
        var z = new Array(29, 27, 23, 19, 17);
        var s = 0;
        for (var i = 0; i < 10; i++)
            s += (d + parseInt(code.substr(i, 1))) * z[i % 5];
        s = s % 11; if (s == 10) s = 0;
        return (c == s);

    }
    var addKeyMapNewHoghughi = function (cmp) {
        if ('@ViewBag.State' == 2) {
            var txtShenaseMelli = App.NewHoghughi.queryById('txtShenaseMelli');
            txtShenaseMelli.setValue(App.AnnouncementComplication.queryById('txtCode_ShenaseMelli').getValue());
        }

        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.NewHoghughi.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtShomareSabt") {
                        nextfld = App.NewHoghughi.queryById('btnSaveAshkhaseHoghoghi');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }


</script>
