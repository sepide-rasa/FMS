@model IEnumerable<NewFMS.WCF_Daramad.OBJ_GozareshatFile>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<br />
@(Html.X().Panel()
            .ID("SabtGozareshatFile")
            .Title("طراحی گزارشات")
                .Listeners(li => { li.AfterRender.Handler = "GozareshatFileSetSize()"; li.Render.Fn = "addKeyMapSabtGozareshatFile"; })
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
        .Border(false)
       .Items(
    X.Panel().Border(false).Items(X.Label()),
        X.Panel().Border(false).Buttons(
            X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk)
                .Listeners(l => { l.Click.Handler = "SaveGozareshatFile();"; })
            , X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                .Listeners(l => { l.Click.Handler = "LoadGozareshatFile();"; })
            , X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)
                .Listeners(l => { l.Click.Handler = "DeleteGozareshatFile();"; })
            , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                .Listeners(l => { l.Click.Handler = "HelpGozareshatFile();"; })
            , X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)
                    .OnClientClick("App.SabtGozareshatFile.destroy()")
        ).ButtonAlign(Ext.Net.Alignment.Center)
        .Items(
                X.FormPanel().Border(false)
                              .Layout(LayoutType.VBox)
                                 .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                    X.FieldSet().Title("اطلاعات گزارش")
                                .Height(80)
                                .Border(true)
                     .Defaults(new { Margin = 2 })
                    .Layout(LayoutType.Table)
                    .LayoutConfig(new TableLayoutConfig { Columns = 6 })
                .Items(
                        X.Hidden().ItemID("fldId"),
                                X.Label("سازمان:"),
                        X.ComboBox()
                                .ItemID("CboSazman")
                                .TypeAhead(true)
                                .BlankText("لطفا سازمان را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .AllowBlank(false)
                                .ReadOnly(true)
                                .TriggerAction(TriggerAction.All)
                                .DisplayField("fldName")
                                .ValueField("fldId")
                                .Editable(true)
                                .EmptyText("سازمان ...")
                                .Store(X.Store()
                                    .Listeners(l => l.Load.Handler = "setDefaultOrg()")
                                    .Model(X.Model()
                                        .IDProperty("fldId")
                                        .Fields(
                                            new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                        )
                                        )
                                    .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetOrgan"))
                                        .Reader(X.JsonReader().Root("data"))
                                        )
                                ),
                                             X.Label("گزارش:"),
                                     X.ComboBox()
                                    .ItemID("CboGozaresh")
                                    .TypeAhead(true)
                                    .BlankText("لطفا گزارش را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .AllowBlank(false)
                                    .AutoFocus(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldName")
                                    .ValueField("fldId")
                                    .Editable(true)
                                    .EmptyText("...")
                                        .Store(X.Store()
                                        .Listeners(l => l.Load.Handler = "setDefaultG()")
                                        .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                            )
                                        .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetGozaresh"))
                                            .Reader(X.JsonReader().Root("data"))
                                            )
                                    )
                        //X.Label("عنوان:"),
                        //        X.TextField()
                        //            .ItemID("txtName")
                        //            .MsgTarget(Ext.Net.MessageTarget.Side)
                        //            .AllowBlank(false)
                        //            .BlankText("لطفا عنوان را وارد کنید.")
                        //            .LabelAlign(Ext.Net.LabelAlign.Top)
                        //            .AutoFocus(true)

                , X.FileUploadField()
                .ItemID("FileUploadFieldHokm")
                .ButtonOnly(true).ButtonText("انتخاب فایل")
                    .DirectEvents(l =>
                                    {
                                        l.Change.Action = "Upload";
                                        l.Change.Success = "hideprogress();";
                                    }
                                )
                            .Listeners(l => l.Change.Fn = "showFile")
                                    .Icon(Ext.Net.Icon.DiskUpload)
                                    .ColSpan(2)
                                  , X.Container().Content(@<div id="fi-button-msg" style="display:none;"></div>)
                                    .ColSpan(6)
                )
            )
        ),
        X.GridPanel()
        .ItemID("GozareshatFileGrid")
            .BottomBar(X.PagingToolbar())
                .TopBar(
                            Html.X().Toolbar()
                            .Items(
                                   X.Button().Text("طراحی").Icon(Ext.Net.Icon.Pencil)
                        .Listeners(l => { l.Click.Handler = "DesignGozareshatFile();"; }),
                                       X.Button().Text("دانلود").Icon(Ext.Net.Icon.ArrowDown)
                        .Listeners(l => { l.Click.Handler = "DownloadReport();"; })
                            )
                        )
            .Store(
                            X.StoreForModel()
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
                            )
                            .PageSize(20)
                            .RemoteFilter(true)
                            .RemotePaging(true)
                        )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                )
                    .Plugins(X.FilterHeader().Remote(true))
                     .Listeners(l =>
                     {
                         l.AfterRender.Handler = "var grid = App.SabtGozareshatFile.queryById('GozareshatFileGrid');grid.setHeight(App.DaramadWin.getHeight() - 240); ";

                     })
        .ColumnModel(
                        Html.X().RowNumbererColumn(),
                                 Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                 Html.X().Column().DataIndex(Model, m => m.fldReportFileId).Text("کد").Hidden(true).Flex(1),
                                Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("نام گزارش").Flex(10)
                                //Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(10)
    )
                .SelectionModel(
                    Html.X().RowSelectionModel()
                        .Mode(Ext.Net.SelectionMode.Single)
    )
    )
)
<script type="text/javascript">
    var FileId = 0;
    function HelpGozareshatFile() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Daramad/GozareshatFile/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function GozareshatFileSetSize() {
        App.SabtGozareshatFile.setWidth(App.DaramadWin.getWidth());
        var grid = App.SabtGozareshatFile.queryById('GozareshatFileGrid');
        grid.setHeight(App.DaramadWin.getHeight() - 260);
    }
    function setDefaultOrg() {
        var CboSazman = App.SabtGozareshatFile.queryById('CboSazman');
        CboSazman.select('@ViewBag.OrganId');
    }
    function setDefaultG() {
        var CboGozaresh = App.SabtGozareshatFile.queryById('CboGozaresh');
        CboGozaresh.setValue(CboGozaresh.store.data.items[0].data.fldId)
    }

    var Mojaz = 0;
    var EndUpload = false;

    var Check = setInterval(CheckEnd, 500);

    function CheckEnd() {
        if (EndUpload == true) {

            Ext.MessageBox.hide();
            Ext.Msg.alert('عملیات موفق', 'فایل با موفقیت آپلود شد.');
            clearInterval(CheckEnd);
            EndUpload = false;
        }
    }
    var showFile = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        var el = Ext.get('fi-button-msg');
        if (v) {
            if (v.split('.').pop().toLowerCase() == "frx") {
                showProgressBar();
                Mojaz = 1;
                    el.update('<b>فایل انتخاب شده:</b> ' + v);

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
            else {
                el.update('<b>فایل انتخاب شده:</b> ');
                Ext.Msg.alert('خطا', 'فایل مورد نظر نامعتبر است.');
            }
        }
    };

    function hideprogress() {
        if (Mojaz == 1 ) {
            EndUpload = true;
        }
        Mojaz = 0;
    }

    function showProgressBar() {
        Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال آپلود فایل...',
            width: 300,
            wait: true,
            waitConfig:
            {
                interval: 200,
                text: 'در حال آپلود فایل...',
                scope: this
            }
        });
    }
    function DownloadReport() {
        var SelectedRow = App.SabtGozareshatFile.queryById('GozareshatFileGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            window.location.href = '@Url.Content("~/Daramad/GozareshatFile/Download?FileId=")' + SelectedRow.data.fldReportFileId;
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }

    }
    function LoadGozareshatFile() {
        var SelectedRow = App.SabtGozareshatFile.queryById('GozareshatFileGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Daramad/GozareshatFile/Details',
                params: {
                    Id: SelectedRow.data.fldId
                },
                success: function (data) {
                    var CboSazman = App.SabtGozareshatFile.queryById('CboSazman');
                    CboSazman.setValue(data.fldOrganId);
                    var CboGozaresh = App.SabtGozareshatFile.queryById('CboGozaresh');
                    CboGozaresh.setValue(data.fldGozareshatId);
                    var fldId = App.SabtGozareshatFile.queryById('fldId');
                    fldId.setValue(data.fldId);
                    FileId = data.fldFileId;
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function SaveGozareshatFile() {
        var CboSazman = App.SabtGozareshatFile.queryById('CboSazman');
        var CboGozaresh = App.SabtGozareshatFile.queryById('CboGozaresh');
        var fldId = App.SabtGozareshatFile.queryById('fldId');
            var er = false;

            if (CboGozaresh.validate() == false) {
                er = true;
            }
            if (er == true)
                return;

            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Daramad/GozareshatFile/Save',
                params: {
                    fldId: fldId.getValue(),
                    fldReportFileId: FileId,
                    fldGozareshatId: CboGozaresh.getValue(),
                    fldOrganId: CboSazman.getValue()
                },
                success: function (data) {
                    Ext.net.Mask.hide();
                    var ic = Ext.MessageBox.INFO;
                    if (data.Err == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        Name: data.MsgName,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.SabtGozareshatFile.queryById('GozareshatFileGrid').store.load();
                    if (data.Err != 1)
                        ClearGozareshatFile();
                }

            });
    }
    function DeleteGozareshatFile() {
        var SelectedRow = App.SabtGozareshatFile.queryById('GozareshatFileGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                        Ext.net.DirectMethod.request({
                            url: '/Daramad/GozareshatFile/Delete',
                            params: {
                                id: SelectedRow.data.fldId
                            },
                            success: function (data) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.INFO,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.SabtGozareshatFile.queryById('GozareshatFileGrid').store.load()
                            }
                        });
                        Ext.net.Mask.hide();
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ClearGozareshatFile() {
        App.SabtGozareshatFile.queryById('fldId').setValue(0);
        App.SabtGozareshatFile.queryById('CboGozaresh').setValue("");
        Ext.get('fi-button-msg').update('');
        FileId = 0;
    }
    function DesignGozareshatFile() {
        var SelectedRow = App.SabtGozareshatFile.queryById('GozareshatFileGrid').selModel.getLastSelected();
        /*Ext.net.DirectMethod.request({
            url: '/SaveReport/ReportIndex',
            params: {
                containerId: "SaveReport"
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });*/
        if (SelectedRow != null)
            window.open("/Daramad/GozareshatFile/ReportIndex?Id=" + SelectedRow.data.fldId, "_blank");
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    var addKeyMapSabtGozareshatFile = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.SabtGozareshatFile.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "CboGozaresh") {
                        nextfld = App.SabtGozareshatFile.queryById('FileUploadFieldHokm');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }
</script>