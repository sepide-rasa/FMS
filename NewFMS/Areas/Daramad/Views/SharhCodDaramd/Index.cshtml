
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window().Modal(true)
.Width(530)//.Height(220)
        .Title("تعریف الگوی شرح کد درآمد")
        .ID("SharhCodDaramd")
                  .Listeners(li => { li.AfterRender.Fn = "addKeyMapSharhCodDaramd";  })
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)

    .Items(
            X.Panel()
                 .Defaults(new { Margin = 5 })
                 .Layout(Ext.Net.LayoutType.VBox)
                .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                .Border(false)
                .Buttons(
                    X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ItemID("btnSaveSharhCodDaramd")
                    .Listeners(l => { l.Click.Handler = "SaveSharhCodDaramd();"; })
                    , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                     .Listeners(l => { l.Click.Handler = "HelpSharhCodDaramd();"; })
                , X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)
                        .OnClientClick("App.SharhCodDaramd.destroy()")
                    )
                .ButtonAlign(Ext.Net.Alignment.Center)
                .Items(
        //X.Panel()
        //    .Border(true)
        //        .Layout(Ext.Net.LayoutType.VBox)
        //    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
        //    .Items(
                            X.FieldSet()
                            .Title("الگو شرح حکم")
                                .Border(true)
                                .Width(495)
         .Defaults(new { Margin = 2 })
                                .Layout(LayoutType.Table)
                                .LayoutConfig(new TableLayoutConfig { Columns = 6 })
                                .Items(
                        X.Hidden().ItemID("fldId"),
                        X.Label("کد درآمد:"),
                            X.TextField()
                                   //.Margin(10)
                                   .Width(388)
                            .ReadOnly(true)
                                .Text(@ViewBag.DaramadTitle).ColSpan(5)
                               , X.Label("پارامترها:"),
                                            X.ComboBox()
                                       .Width(146)
                                              // .MarginSpec("0px 0px 10px 10px")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                .ItemID("CboParam")
                                .TypeAhead(true)
                                .Editable(true)
                                .AutoFocus(true)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldTitle")
                                .ValueField("fldId")
                                .EmptyText("...")
                                .Store(X.Store()
                                .Model(X.Model()
                                .IDProperty("fldId")
                                .Fields(
                                    new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                            new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                        )
                                            )
                                .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetParameter"))
                                .Reader(X.JsonReader().Root("data"))
                                        )
                            .Parameters(ps => { ps.Add(new StoreParameter("Type", "0", ParameterMode.Raw));
                            ps.Add(new StoreParameter("ShomareHesabCodeDaramadId", @ViewBag.ShomareHesabCodeDaramadId, ParameterMode.Raw));
                                                })
                                  .Listeners(l => l.Load.Handler = "LoadSharhCodDaramd()")
                                        )
                                     ,
                            X.Button().MarginSpec("4px 40px 4px 0px")
    //  .Text("اضافه")
                        .Icon(Ext.Net.Icon.Add)
                                .ItemID("btnAddParam")
                                    .Listeners(l => l.Click.Handler = "AddParam()")
                       
                         , X.Label("متن:"),
                                    X.TextField()
                                           .Width(146)
                                            //   .MarginSpec("0px 0px 5px 10px")
                        .ItemID("txtMatn")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .MaxLength(100)
                        
                        .EnforceMaxLength(true)
                            ,
                                    X.Button()//.MarginSpec("0px 70px 10px 0px")
                              //  .Text("اضافه")
                                .Icon(Ext.Net.Icon.Add)
                                .ItemID("btnAddMatn")
                                .Listeners(l => l.Click.Handler = "AddMatn()")
                        , X.Label("الگو:"),
                            X.FieldSet().Width(420)
         .Border(false)
                                .MarginSpec("5px 0px 0px 0px")
                                .PaddingSpec("0px 0px 0px 0px")
                               .Layout(Ext.Net.LayoutType.HBox)
                            .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.Middle })
                    .Items(
                                X.TextArea()
        //     .MarginSpec("0px 2px 0px 0px")
                                    .ItemID("txtDescMinut")
                                .AllowBlank(false)
                                .ReadOnly(true)
                                .BlankText("لطفا متن الگو را وارد کنید.")
                            .Width(387)
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            ,
                                X.FieldSet()//.MarginSpec("0px 0px 0px 0px")
                                .Border(false)
                                    .Layout(Ext.Net.LayoutType.VBox)
                                .Items(
                                       X.Button()
                                       // .Text("Enter")
                                           .ToolTip("Enter")
                                           // .Icon(Ext.Net.Icon.ArrowSw)
                                                        .IconCls("EnterIco")
                                                .ItemID("btnEnter")
                                                .Listeners(l => l.Click.Handler = "EnterTxt()")
                                                ,
                                        X.Button()
        // .Text("Clear")
                                                       .ToolTip("Clear")
                                           // .Icon(Ext.Net.Icon.Erase)
                                                .IconCls("DelIco")
                                                .ItemID("btnClear")
                                                .Listeners(l => l.Click.Handler = "ClearTxt()")
                            )
                            )
                                .ColSpan(6)

                                   // .ColSpan(4)
                        )
        //)
        )
            )
)

<script type="text/javascript">
    function HelpSharhCodDaramd() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Daramad/SharhCodDaramd/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function AddParam() {
        var txtDescMinut = App.SharhCodDaramd.queryById('txtDescMinut');
        var CboParam = App.SharhCodDaramd.queryById('CboParam');
        var d = txtDescMinut.getValue();
        if (CboParam.getValue() != null)
            txtDescMinut.setValue(d + CboParam.getValue() + "|");

    }
    function AddMatn() {
        var txtDescMinut = App.SharhCodDaramd.queryById('txtDescMinut');
        var txtMatn = App.SharhCodDaramd.queryById('txtMatn');
        var d = txtDescMinut.getValue();
        if (txtMatn.getValue() != null && txtMatn.getValue() != "")
            txtDescMinut.setValue(d + txtMatn.getValue() + "|");
        txtMatn.setValue("");
    }
    function EnterTxt() {
        var txtDescMinut = App.SharhCodDaramd.queryById('txtDescMinut');
        var d = txtDescMinut.getValue();
        txtDescMinut.setValue(d + "\n");
    }
    function ClearTxt() {
        var txtDescMinut = App.SharhCodDaramd.queryById('txtDescMinut');
        var d = txtDescMinut.getValue();
        txtDescMinut.setValue("");
    }

    function LoadSharhCodDaramd() {
        var CboParam = App.SharhCodDaramd.queryById('CboParam');
        CboParam.select(CboParam.store.getAt(0));


            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Daramad/SharhCodDaramd/Details',
                params: {
                    Id: '@ViewBag.ShomareHesabCodeDaramadId',
                    FiscalYearId:'@ViewBag.FiscalYearId'
                },
                success: function (data) {
                    var txtDescMinut = App.SharhCodDaramd.queryById('txtDescMinut');
                    txtDescMinut.setValue(data.fldSharhCodDaramd);
                    Ext.net.Mask.hide();
                }
            });
    }

    function SaveSharhCodDaramd() {
        var txtDescMinut = App.SharhCodDaramd.queryById('txtDescMinut');
        var er = false;


        if (txtDescMinut.validate() == false) {
            er = true;
        }

        if (er == true)
            return;

        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        Ext.net.DirectMethod.request({
            url: '/Daramad/SharhCodDaramd/Save',
            params: {
                id: '@ViewBag.ShomareHesabCodeDaramadId',
                SharhCodDaramd: txtDescMinut.getValue()
            },
            success: function (data) {
                Ext.net.Mask.hide();
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    Name: data.MsgName,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
            }
        });
    }
    var addKeyMapSharhCodDaramd = function (cmp) {

        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    if (Ext.getCmp((Ext.Element.getActiveElement()).name) != undefined) {
                        var keyfield = App.SharhCodDaramd.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;
                        /* if (keyfield.itemId == "CboLetterParam") {
                             nextfld = App.SharhCodDaramd.queryById('btnAddLetterParam');
                         }
                         else if (keyfield.itemId == "CboParam") {
                             nextfld = App.SharhCodDaramd.queryById('btnAddParam');
                         }
                         else if (keyfield.itemId == "CboEtelaat") {
                             nextfld = App.SharhCodDaramd.queryById('btnAddEtelaat');
                         }
                         else if (keyfield.itemId == "txtMatn") {
                             nextfld = App.SharhCodDaramd.queryById('btnAddMatn');
                         }
                         else {*/
                        nextfld = keyfield.nextSibling();
                        /* nextfld.selectText();
                        }*/
                        nextfld.focus();
                        nextfld.selectText();
                    }
                }
            }]
        });
    };
</script>