@model IEnumerable<NewFMS.WCF_Daramad.OBJ_ParametreSabet>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window().Modal(true)
.Width(720)//.Height(220)
        .Title("تقسیط")
        .ID("Instalments")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)

    .Items(
            X.Panel()
                 .Layout(Ext.Net.LayoutType.VBox)
                .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                .Border(false)
                .Buttons(
                            X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ItemID("btnSaveParametreSabetWin")
                    .Listeners(l => { l.Click.Handler = "SaveParametreSabetWin();"; })
                , X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                    .Listeners(l => { l.Click.Handler = "LoadParametreSabetWin();"; })
                , X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)
                            .Listeners(l => { l.Click.Handler = "DeleteParametreSabetWin();"; })
                , X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)
                        .OnClientClick("App.Instalments.destroy()")
                    )
                .ButtonAlign(Ext.Net.Alignment.Center)
                .Items(
        //X.Panel()
        //    .Border(true)
        //        .Layout(Ext.Net.LayoutType.VBox)
        //    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
        //    .Items(
              X.FieldSet()
                        .Border(false)
                        .Margin(0)
                        .Layout(LayoutType.HBox)
                        .Items(
                            X.Label("نوع سند"),
                            X.ComboBox()
                                .ItemID("CboDocType")
                                .Editable(false)
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .ForceSelection(true)
                                .BlankText("لطفا کد خدمت را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .EmptyText("کد خدمت...")
                                .Listeners(l =>
                                {
                                    l.Change.Handler = "showhideFieldset()";
                                    l.AfterRender.Handler = "App.Instalments.queryById('CboDocType').setValue('2');";
                                })
                                .Items(
                                    new ListItem("نقدی", "1"),
                                    new ListItem("چک", "2"),
                                    new ListItem("سفته", "3"),
                                    new ListItem("برات", "4"),
                                    new ListItem("چک ضمانت", "5"),
                                    new ListItem("طلب", "6")
                                    )
                                    ),
                        X.FieldSet()
                        .Border(true)
                        .Title("اطلاعات سند")
                        .Layout(LayoutType.VBox)
                        .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = VBoxAlign.Center })
                        .Defaults(new { Margin = 2 })
                        .Items(
                            X.FieldSet()
                                .Layout(LayoutType.Table)
                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                                        .Defaults(new { Margin = 2 })
                                .Border(false)
                                .ItemID("FieldSetCheck")
                                    .Items(
                                    X.Hidden().ItemID("fldShomareHesabId"),
                                     X.Label("تاریخ سررسید:")
                                        , X.PDateField()
                                            .ItemID("txtTarikhSarResidCh")
                                            .AllowBlank(false)
                                            .Editable(true)
                                            .MaskRe("/[0-9 /]/")
                                            .BlankText("لطفا تاریخ را وارد کنید.")
                                            .MaxLength(10)
                                            .EnforceMaxLength(true)
                                        , X.Label("شماره سند:")
                                        , X.TextField()
                                            .ItemID("txtShomareSanadCh")
                                            .AllowBlank(false)
                                            .BlankText("لطفا شماره سند را وارد کنید.")
                                            .MaxLength(50)
                                            .EnforceMaxLength(true)
                                        , X.Label("مبلغ:"),
                                        X.TextField()
                                            .ItemID("TxtMablaghSanadCh")
                                            .Listeners(l => l.Change.Handler = "App.Instalments.queryById(TxtMablaghSanadCh).setValue(accounting.formatNumber(App.Instalments.queryById(TxtMablaghSanadCh).getValue()));")
                                            .AllowBlank(false)
                                            .BlankText("لطفا مبلغ را وارد کنید.")
                                        ,X.Label().Text("شماره حساب(INS):"),
                                        X.TextField()
                                            .ItemID("txtShomareHesab")
                                            .Width(145)
                                            .Icon(Icon.CoinsAdd)
                                            .EnableKeyEvents(true)
                                            .AllowBlank(false)
                                            .ReadOnly(true)
                                            .BlankText("لطفا شماره حساب را انتخاب کنید.")
                                            .DirectEvents(li =>
                                            {
                                                li.SpecialKey.Url = "/Comon/SearchShomareHesab/Index?State=8&AshkhasId=";
                                                li.SpecialKey.Before = "return e.getKey() == Ext.EventObject.INSERT;";
                                                li.IconClick.Url = "/Comon/SearchShomareHesab/Index?State=8&AshkhasId=";
                                            })
                                        , X.Label("بانک:")
                                        , X.TextField()
                                            .ItemID("txtBank")
                                            .ReadOnly(true)
                                        , X.Label("شعبه:")
                                        , X.TextField()
                                            .ItemID("txtShobe")
                                        , X.Label("نوع سند:")
                                        , X.ComboBox()
                                            .ItemID("CboTypeSanadCh")
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .AllowBlank(false)
                                            .ForceSelection(true)
                                            .BlankText("لطفا نوع سند را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .EmptyText("نوع سند...")
                                            .Listeners(l =>
                                            {
                                                l.AfterRender.Handler = "App.Instalments.queryById('CboTypeSanadCh').setValue('0');";
                                                l.Change.Handler = "ChangeCboTypeSanadCh()";
                                            })
                                            .Items(
                                                new ListItem("عادی", "0"),
                                                new ListItem("ضمانتی", "1")
                                                    )
                                        , X.Label("وضعیت:")
                                        , X.ComboBox()
                                            .ItemID("CboStatusCh")
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .AllowBlank(false)
                                            .ForceSelection(true)
                                            .BlankText("لطفا وضعیت را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .EmptyText("وضعیت...")
                                            .Listeners(l =>
                                            {
                                                l.AfterRender.Handler = "App.Instalments.queryById('CboStatusS').setValue('1');";
                                            })
                                            .Items(
                                                new ListItem("در انتظار وصول", "1"),
                                                new ListItem("وصول شده", "2"),
                                                new ListItem("برگشت خورده", "3"),
                                                new ListItem("حقوقی شده", "4")
                                                )
                                ),
                            X.FieldSet()
                                .Layout(LayoutType.Table)
                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                                    .Defaults(new { Margin = 2 })
                                .ItemID("FieldSetSafteh")
                                .Border(false)
                                .Items(
                                     X.Label("تاریخ سررسید:")
                                    , X.PDateField()
                                        .Width(145)
                                        .ItemID("txtTarikhSarResidS")
                                        .AllowBlank(false)
                                        .Editable(true)
                                        .MaskRe("/[0-9 /]/")
                                        .BlankText("لطفا تاریخ را وارد کنید.")
                                        .MaxLength(10)
                                        .EnforceMaxLength(true)
                                    ,X.Label("شماره سند:")
                                    , X.TextField()
                                        .Width(145)
                                        .ItemID("txtShomareSanadS")
                                        .AllowBlank(false)
                                        .BlankText("لطفا شماره سند را وارد کنید.")
                                        .MaxLength(50)
                                        .EnforceMaxLength(true)
                                    ,X.Label("مبلغ:"),
                                    X.TextField()
                                        .Width(145)
                                        .ItemID("TxtMablaghSanadS")
                                        .Listeners(l => l.Change.Handler = "App.Instalments.queryById(TxtMablaghSanadS).setValue(accounting.formatNumber(App.Instalments.queryById(TxtMablaghSanadS).getValue()));")
                                        .AllowBlank(false)     
                                        .BlankText("لطفا مبلغ را وارد کنید.")
                                    ,X.Label("وضعیت:")
                                    , X.ComboBox()
                                        .Width(145)
                                        .ItemID("CboStatusS")
                                        .Editable(false)
                                        .TypeAhead(true)
                                        .AllowBlank(false)
                                        .ForceSelection(true)
                                        .BlankText("لطفا وضعیت را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .EmptyText("وضعیت...")
                                        .Listeners(l =>
                                        {
                                            l.AfterRender.Handler = "App.Instalments.queryById('CboStatusS').setValue('1');";
                                        })
                                        .Items(
                                            new ListItem("در انتظار وصول", "1"),
                                            new ListItem("وصول شده", "2"),
                                            new ListItem("برگشت خورده", "3"),
                                            new ListItem("حقوقی شده", "4")
                                            )
                                    ),
                            X.FieldSet()
                                .Layout(LayoutType.Table)
                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                                .Defaults(new { Margin = 2 })
                                .ItemID("FieldSetBarat")
                                .Border(false)
                                .Items(
                                        X.Hidden().ItemID("fldBaratDarId"),
                                        X.Label("تاریخ سررسید:")
                                        , X.PDateField()
                                            .Width(145)
                                            .ItemID("txtTarikhSarResidB")
                                            .AllowBlank(false)
                                            .Editable(true)
                                            .MaskRe("/[0-9 /]/")
                                            .BlankText("لطفا تاریخ را وارد کنید.")
                                            .MaxLength(10)
                                            .EnforceMaxLength(true)
                                        , X.Label("شماره سند:")
                                        , X.TextField()
                                            .Width(145)
                                            .ItemID("txtShomareSanadB")
                                            .AllowBlank(false)
                                            .BlankText("لطفا شماره سند را وارد کنید.")
                                            .MaxLength(50)
                                            .EnforceMaxLength(true)
                                         , X.Label("مبلغ:"),
                                            X.TextField()
                                            .Width(145)
                                            .ItemID("TxtMablaghSanadB")
                                            .Listeners(l => l.Change.Handler = "App.Instalments.queryById(TxtMablaghSanadB).setValue(accounting.formatNumber(App.Instalments.queryById(TxtMablaghSanadB).getValue()));")
                                            .AllowBlank(false)
                                            .BlankText("لطفا مبلغ را وارد کنید.")
                                        ,X.Label().Text("برات دار(INS):").ItemID("lblName")
                                        ,X.TextField()
                                            .Width(145)
                                            .ItemID("txtBaratDar")
                                            .Icon(Icon.UserAdd)
                                            .EnableKeyEvents(true)
                                            .LabelAlign(Ext.Net.LabelAlign.Right)
                                            .AllowBlank(false)
                                            .ReadOnly(true)
                                            .BlankText("لطفا شخص برات دار را انتخاب کنید.")
                                            .DirectEvents(li =>
                                            {
                                                li.SpecialKey.Url = "/Daramad/SearchAshkhas/Index?State=3";
                                                li.SpecialKey.Before = "return e.getKey() == Ext.EventObject.INSERT;";
                                                li.IconClick.Url = "/Daramad/SearchAshkhas/Index?State=3";
                                            })
                                        , X.Label("مکان پرداخت:")
                                        , X.TextField()
                                            .Width(145)
                                            .ItemID("txtMakanPardakhtB")
                                            .AllowBlank(false)
                                            .BlankText("لطفا مکان پرداخت را وارد کنید.")
                                        , X.Label("وضعیت:")
                                        , X.ComboBox()
                                            .Width(145)
                                            .ItemID("CboStatusB")
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .AllowBlank(false)
                                            .ForceSelection(true)
                                            .BlankText("لطفا وضعیت را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .EmptyText("وضعیت...")
                                            .Listeners(l =>
                                            {
                                                l.AfterRender.Handler = "App.Instalments.queryById('CboStatusB').setValue('1');";
                                            })
                                            .Items(
                                                new ListItem("در انتظار وصول", "1"),
                                                new ListItem("وصول شده", "2"),
                                                new ListItem("برگشت خورده", "3"),
                                                new ListItem("حقوقی شده", "4")
                                                )
                                )
                            )
        //)
        ),
                  X.GridPanel().AutoScroll(true)
                                    .ItemID("InstalmentsGrid").Flex(2)
                        .BottomBar(X.PagingToolbar())
                        .Height(200)
        //.ColumnWidth(0.6)
        //.Layout(Ext.Net.LayoutType.Column)
                        .Store(
                            X.StoreForModel().AutoLoad(false)
                                 .Listeners(l => l.DataChanged.Handler = "App.Instalments.queryById('ParametreSabetWinGrid').selModel.refresh();")
                            .Proxy(Html.X().AjaxProxy()
                                            .Url(Url.Action("Read"))
                                    .Reader(Html.X().JsonReader().Root("data"))
                                    .ExtraParams(p => p.Add(new { DaramadID = @ViewBag.DaramadId }))
                            )
                            .PageSize(20)
                            .RemoteFilter(true)
                            .RemotePaging(true)

                        )
                        .View(
                            Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                        )

                        .Plugins(X.FilterHeader().Remote(true))
                        .ColumnModel(
                                Html.X().RowNumbererColumn(),
                                    Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldFormulId).Text("فرمول").Flex(1).Hidden(true),
                                Html.X().Column().DataIndex(Model, m => m.fldDaramadTitle).Text("کد درآمد").Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.fldNameParametreFa).Text("نام پارامتر").Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.NoeName).Text("نوع").Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.NoeFieldName).Text("نوع فیلد").Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.VaziyatName).Text("وضعیت").Flex(3),
                                Html.X().ComponentColumn().Flex(1).ItemID("buttonFormula")
                                    .Component(Html.X().Button().ItemID("btnbindFormula").Text("فرمول").Listeners(l => l.Click.Handler = "GotoFormula()")).Filterable(false)

                            )
        //.Layout(Ext.Net.LayoutType.VBox)
        //.LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
            )
)

<script type="text/javascript">
    function showhideFieldset() {
        var DocType = App.Instalments.queryById('CboDocType').getValue();
         if (DocType == "2" || DocType == "5") {
            App.Instalments.queryById('FieldSetBarat').hide();
            App.Instalments.queryById('FieldSetSafteh').hide();
            App.Instalments.queryById('FieldSetCheck').show();
        }
        else if (DocType == "3") {
            App.Instalments.queryById('FieldSetBarat').hide();
            App.Instalments.queryById('FieldSetSafteh').show();
            App.Instalments.queryById('FieldSetCheck').hide();
        }
        else if (DocType == "4") {
            App.Instalments.queryById('FieldSetBarat').show();
            App.Instalments.queryById('FieldSetSafteh').hide();
            App.Instalments.queryById('FieldSetCheck').hide();
        }
    }
    function ChangeCboTypeSanadCh() {
        var CboTypeSanadCh = App.Instalments.queryById('CboTypeSanadCh').getValue();
        var txtTarikhSarResidCh = App.Instalments.queryById('txtTarikhSarResidCh');
        if (CboTypeSanadCh == 0) {
            txtTarikhSarResidCh.allowBlank = false;
            txtTarikhSarResidCh.validate();
        }
        else {
            txtTarikhSarResidCh.allowBlank = true;
            txtTarikhSarResidCh.validate();
        }
    }

</script>