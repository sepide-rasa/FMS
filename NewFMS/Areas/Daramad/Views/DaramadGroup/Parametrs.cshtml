@model IEnumerable<NewFMS.WCF_Daramad.OBJ_DaramadGroup_Parametr>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window().Modal(true)
.Width(620)//.Height(220)
        .Title("پارامترهای گروه درآمد")
    .ID("DaramadGroupParametrWin")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)

    .Items(
                X.Panel()
                                    .Defaults(new { Margin = 5 })
                 .Layout(Ext.Net.LayoutType.VBox)
                .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                .Border(false)
                .Buttons(
                        X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).Listeners(l => { l.Click.Handler = "SaveDaramadGroupParametrWin();"; }),
                        X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).Listeners(l => { l.Click.Handler = "LoadDaramadGroupParametrWin();"; }),
                        X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).Listeners(l => { l.Click.Handler = "DeleteDaramadGroupParametrWin();"; }),
                        X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).OnClientClick("App.DaramadGroupParametrWin.destroy()")
                    )
                .ButtonAlign(Ext.Net.Alignment.Center)
                .Items(
        //X.Panel()
        //    .Border(true)
        //        .Layout(Ext.Net.LayoutType.VBox)
        //    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
        //    .Items(
                            X.FieldSet()
                                .Border(false)
                                .Width(500)
                                .Defaults(new { Margin = 2 })
                                .Layout(LayoutType.Table)
                                .LayoutConfig(new TableLayoutConfig { Columns = 4 })
                            .Items(
                                X.Hidden().ItemID("fldId"),
                                   X.Label("نام فارسی:"),
                                X.TextField()
                                    .ItemID("txtFnName")
                                .AllowBlank(false)
                                .AutoFocus(true)
                                .BlankText("لطفا نام فارسی را وارد کنید.")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .MaxLength(100).EnforceMaxLength(true)
                                .EnforceMaxLength(true)
                                .MaskRe("[آ-ی, ,_,-,0-9]")
                                , X.Label("نام انگلیسی:"),
                                X.TextField()
                                .ItemID("txtEnName")
                                .AllowBlank(false)
                                .FieldStyle("direction:ltr;")
                                .BlankText("لطفا نام انگلیسی را وارد کنید.")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .MaxLength(100).EnforceMaxLength(true)
                                .EnforceMaxLength(true)
                                .MaskRe("[a-z,A-Z, ,_,-,0-9]")
                                    , X.Label("نوع فیلد:")
                                , X.ComboBox()
                                   // .Width(120)
                            .ItemID("CboNoeField")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .Editable(true)
                            .ForceSelection(true)
                            .TypeAhead(true)
                            .BlankText("لطفا نوع فیلد را انتخاب کنید.")
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .EmptyText("...")
        //  .FieldLabel("جنسیت")
                            .Items(
                                new ListItem("عدد صحیح", "1"),
                                new ListItem("عدد اعشاری", "2"),
                                new ListItem("رشته", "3"),
                                new ListItem("تاریخ", "4"),
                                new ListItem("ComboBox", "5")
                                    )
                                    .Listeners(l => l.Select.Handler = "ChangeNoeField()")
                            .SelectedItems(new { Value = "1" })
                            , X.Label("نام :").ItemID("lblComboBox"),
                                X.ComboBox()
                            //.Width(120)
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .ItemID("CboComboBox")
                            .TypeAhead(true)
                            .Editable(true)
                            .QueryMode(DataLoadMode.Local)
                            .BlankText("لطفا نام ComboBox را انتخاب کنید.")
                            .ForceSelection(true)
                            .TriggerAction(TriggerAction.All)
                                .DisplayField("fldName")
                            .ValueField("fldId")
                            .EmptyText("...")
                            .Store(X.Store()
                            .Model(X.Model()
                            .IDProperty("fldId")
                            .Fields(
                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                    )
                                        )
                            .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetComboBox"))
                            .Reader(X.JsonReader().Root("data"))
                                            ).Listeners(l => l.Load.Handler = "DefaultCboComboBox()")
                                    )
                                .AllowBlank(false)
                                    ,
                                X.Label("وضعیت:"),
                                    X.ComboBox()
                                .ItemID("CboStatus")
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                .Editable(false)
                                .TypeAhead(true)
                                    .AllowBlank(false)
                                .BlankText("لطفا وضعیت را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .EmptyText("وضعیت")
            // .FieldLabel("نوع سابقه")
                                .SelectedItems(new { Value = "1" })
                                .Items(
                                    new ListItem("فعال", "1"),
                                    new ListItem("غیرفعال", "0")
                                    )
                                , X.Label("توضیحات:"),
                                X.TextField().ColSpan(3)
                                .ItemID("txtDesc")
                                    .AllowBlank(true)
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                   )
        //)
        ),
                  X.GridPanel().AutoScroll(true)
                            .ItemID("GridDaramadGroupParametrWin").Flex(2)
                        .BottomBar(X.PagingToolbar())
                        .Height(300)
        //.ColumnWidth(0.6)
        //.Layout(Ext.Net.LayoutType.Column)
                        .Store(
                            X.StoreForModel()

                            .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("ReadDaramadGroupParametr"))
                            .Reader(Html.X().JsonReader().Root("data"))
                            .ExtraParams(ex => ex.Add(new { DaramadGroupId = @ViewBag.DaramadGroupId }))

                            )
                            .PageSize(20)
                            .RemoteFilter(true)
                            .RemotePaging(true)

                        )
                        .View(
                            Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                        )

                        .Plugins(X.FilterHeader().Remote(true))
                        .ColumnModel(
                            Html.X().RowNumbererColumn(),
                                Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                Html.X().Column().DataIndex(Model, m => m.fldFormuleId).Text("فرمول").Hidden(true).Flex(1),
                            Html.X().Column().DataIndex(Model, m => m.fldFnName).Text("نام فارسی").Flex(3),
                                    Html.X().Column().DataIndex(Model, m => m.fldEnName).Text("نام انگلیسی").Flex(3),
                                    Html.X().Column().DataIndex(Model, m => m.NoeFieldName).Text("نوع فیلد").Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.fldStatusName).Text("وضعیت").Flex(3),
                                //Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(5),
                                    Html.X().ComponentColumn().Flex(1).ItemID("buttonFormula")
                                        .Component(Html.X().Button().ItemID("btnbindFormula").Text("فرمول").Listeners(l => l.Click.Handler = "GotoFormula()")).Filterable(false)

                            )
        //.Layout(Ext.Net.LayoutType.VBox)
        //.LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
            )
)

<script type="text/javascript">
    function DefaultCboComboBox() {
        var CboComboBox = App.DaramadGroupParametrWin.queryById('CboComboBox');
        CboComboBox.select(CboComboBox.store.getAt(0));
        ChangeNoeField();
    }
    function ChangeNoeField() {
        var CboNoeField = App.DaramadGroupParametrWin.queryById('CboNoeField');
        var CboComboBox = App.DaramadGroupParametrWin.queryById('CboComboBox');
        var lblComboBox = App.DaramadGroupParametrWin.queryById('lblComboBox');

        /*     var grid = App.DaramadGroupParametrWin.queryById('GridDaramadGroupParametrWin');*/

        var txtDesc = App.DaramadGroupParametrWin.queryById('txtDesc');

        if (CboNoeField.getValue() == "5") {
            CboComboBox.show();
            lblComboBox.show();
            txtDesc.setWidth(150);
        }
        else {
            CboComboBox.hide();
            lblComboBox.hide();
            txtDesc.setWidth(375);
        }
    }
    function LoadDaramadGroupParametrWin() {
        var SelectedRow = App.DaramadGroupParametrWin.queryById('GridDaramadGroupParametrWin').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Daramad/DaramadGroup/DaramadGroupParametrDetails',
                params: {
                    Id: SelectedRow.data.fldId
                },
                success: function (data) {
                    var CboStatus = App.DaramadGroupParametrWin.queryById('CboStatus');
                    CboStatus.setValue(data.fldStatus);
                    var txtEnName = App.DaramadGroupParametrWin.queryById('txtEnName');
                    txtEnName.setValue(data.fldEnName);
                    var txtFnName = App.DaramadGroupParametrWin.queryById('txtFnName');
                    txtFnName.setValue(data.fldFnName);
                    var txtDesc = App.DaramadGroupParametrWin.queryById('txtDesc');
                    txtDesc.setValue(data.fldDesc);
                    var fldId = App.DaramadGroupParametrWin.queryById('fldId');
                    fldId.setValue(data.fldId);
                    var CboNoeField = App.DaramadGroupParametrWin.queryById('CboNoeField');
                    CboNoeField.setValue(data.fldNoeField);
                    ChangeNoeField();
                    var CboComboBox = App.DaramadGroupParametrWin.queryById('CboComboBox');
                    CboComboBox.setValue(data.fldComboBoxId);
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function SaveDaramadGroupParametrWin() {
        var CboStatus = App.DaramadGroupParametrWin.queryById('CboStatus');
        var txtEnName = App.DaramadGroupParametrWin.queryById('txtEnName');
        var txtFnName = App.DaramadGroupParametrWin.queryById('txtFnName');
        var txtDesc = App.DaramadGroupParametrWin.queryById('txtDesc');
        var CboNoeField = App.DaramadGroupParametrWin.queryById('CboNoeField');
        var CboComboBox = App.DaramadGroupParametrWin.queryById('CboComboBox');
        var fldId = App.DaramadGroupParametrWin.queryById('fldId');
        var er = false;

        if (CboStatus.validate() == false) {
            er = true;
        }
        if (txtEnName.validate() == false) {
            er = true;
        }
        if (txtFnName.validate() == false) {
            er = true;
        }
        if (CboNoeField.validate() == false) {
            er = true;
        }
        if (CboNoeField.getValue() == "5") {
            if (CboComboBox.validate() == false) {
                er = true;
            }
        }

        if (er == true)
            return;

        var St = false;
        if (CboStatus.getValue() == "1")
            St = true;

        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Daramad/DaramadGroup/SaveDaramadGroupParametr',
            params: {
                fldId: fldId.getValue(),
                fldEnName: txtEnName.getValue(),
                fldFnName: txtFnName.getValue(),
                fldStatus: St,
                fldDaramadGroupId: '@ViewBag.DaramadGroupId',
                fldDesc: txtDesc.getValue(),
                fldNoeField: CboNoeField.getValue(),
                fldComboBoxId: CboComboBox.getValue()
            },
            success: function (data) {
                Ext.net.Mask.hide();
                var ic = Ext.MessageBox.INFO;
                if (data.Err == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.DaramadGroupParametrWin.queryById('GridDaramadGroupParametrWin').store.load();
                if (data.Err != 1)
                    ClearDaramadGroupParametrWin();
            }

        });
    }
    function DeleteDaramadGroupParametrWin() {
        var SelectedRow = App.DaramadGroupParametrWin.queryById('GridDaramadGroupParametrWin').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                        Ext.net.DirectMethod.request({
                            url: '/Daramad/DaramadGroup/DeleteDaramadGroupParametr',
                            params: {
                                id: SelectedRow.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.DaramadGroupParametrWin.queryById('GridDaramadGroupParametrWin').store.load()
                            }
                        });
                        Ext.net.Mask.hide();
                        ClearDaramadGroupParametrWin();
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function GotoFormula() {
        var ParamId = "";
        var grid = App.DaramadGroupParametrWin.queryById("GridDaramadGroupParametrWin");
        var column = App.DaramadGroupParametrWin.queryById("GridDaramadGroupParametrWin").columnManager.columns[2];
        var record = App.DaramadGroupParametrWin.queryById("buttonFormula").activeRecord.record;
        ParamId = record.data.fldId;

        openWindowWithPost("/WritingFormula/Formula", {
            ID: ParamId,
            FieldName: "FormulDarmadGroup",
            FormulId: record.data.fldFormuleId,
            RankingType: null,
            OrganId: null,
            OrganName: "پارامتر گروه درآمد(" + record.data.fldFnName + ")",
            AzTarikh: ""
        });
    }
    function openWindowWithPost(url, data) {
        var form = document.createElement("form");
        form.target = "_blank";
        form.method = "POST";
        form.action = url;
        form.style.display = "none";

        for (var key in data) {
            var input = document.createElement("input");
            input.type = "hidden";
            input.name = key;
            input.value = data[key];
            form.appendChild(input);
        }

        document.body.appendChild(form);
        form.submit();
        document.body.removeChild(form);
    }
    function ClearDaramadGroupParametrWin() {
        App.DaramadGroupParametrWin.queryById('fldId').setValue(0);
        App.DaramadGroupParametrWin.queryById('CboStatus').setValue("1");
        App.DaramadGroupParametrWin.queryById('txtEnName').setValue("");
        App.DaramadGroupParametrWin.queryById('txtFnName').setValue("");
        App.DaramadGroupParametrWin.queryById('txtDesc').setValue("");
    }
</script>