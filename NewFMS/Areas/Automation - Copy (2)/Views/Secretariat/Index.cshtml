@model IEnumerable<NewFMS.WCF_Common.OBJ_ChartOrganEjraee>

@using Ext.Net.MVC;
@{

    var X = Html.X();
}



@(X.Panel().Border(false).Listeners(li => { li.AfterRender.Handler = "Chart_OrganSetSize();"; })
.Title("چارت سازمانی")
            .ID("Chart_Organ")
            .Closable(true)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                           /* X.Button().Text("ادامه").Icon(Ext.Net.Icon.ArrowRight)
                                .Listeners(li => li.Click.Handler = "NewChart_Organ();"),*/
                            X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                                .Listeners(de =>
                                    {
                                        de.Click.Handler = "HelpChart_Organ();";
                                    })
                        )
                    )
                    .ItemID("GridChart_Organ").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .ColumnWidth(0.6)
                    .Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                        .Proxy(Html.X().AjaxProxy()
                                        .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                        .Listeners(l => l.DataChanged.Handler = "App.Chart_Organ.queryById('GridChart_Organ').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                         .Listeners(l =>
                         {
                             l.AfterRender.Handler = "var grid = App.Chart_Organ.queryById('GridChart_Organ');grid.setHeight(App.AutomationWin.getHeight() - 170); ";

                         })
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("نام دبیرخانه").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(5),
                                Html.X().ComponentColumn().ItemID("Edame").Width(130).Component(Html.X().Button().ItemID("btnEdame").Icon(Ext.Net.Icon.ArrowLeft).Text("ادامه").Listeners(l => l.Click.Fn = "GotoSecretariat")).Filterable(false)
                       
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )
            )
        )
)
<script type="text/javascript">
    function Chart_OrganSetSize() {
        App.Chart_Organ.setWidth(App.AutomationWin.getWidth());
        var grid = App.Chart_Organ.queryById('GridChart_Organ');
        grid.setHeight(App.AutomationWin.getHeight() - 170);
    }
    var GotoSecretariat = function (btnn, optt) {
        var SelectedRow = btnn.record;
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Automation/Secretariat/New',
            params: {
                ChartOrganEjraeeId: SelectedRow.data.fldId,
                Name: SelectedRow.data.fldTitle
            },
            success: function (data) {

                Ext.net.Mask.hide();
            }
        });
    };
</script>