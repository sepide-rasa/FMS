@model IEnumerable<NewFMS.WCF_Automation.OBJ_TabagheBandi>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}


@(Html.X().Window().Modal(true)//.Listeners(li => { li.Render.Fn = "addKeyMapTabagheBandi"; })
.Width(400)//.Height(300)

    .Title("مدیریت طبقه بندی شخصی")
    .ID("NewTabagheBandi")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
     
    .Items(
            X.Panel().Border(false)

            .Items(
                X.FieldSet().Border(true).Title("طبقه بندی شخصی")
                .Center()
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                .Defaults(new { Margin = 1 }).Height(50)
                .Items(
                X.Hidden().ItemID("fldId").Value(0),
                    X.Hidden().ItemID("PId"),
                 X.Label("نام:"),
                        X.TextField()
                        .ItemID("txtName")
                            .MaxLength(100)
                            .EnforceMaxLength(true)
                            .AllowBlank(false)
                            .BlankText("لطفا نام را وارد کنید.")
                            .AutoFocus(true),
                X.Label("پست:"),
                         X.ComboBox()
                            .ItemID("CboCommision")
                                    .EmptyText("...")
                                .AllowBlank(false)
                                    .BlankText("لطفا پست را انتخاب نمایید.")
                                .TypeAhead(true)
                                .Editable(false)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldName")
                                .ValueField("fldId")
                                .Listeners(l => l.Change.Handler = "ChangeComision_T()")
                                .Store(
                                 X.Store()

                                        .Listeners(l => l.Load.Handler = "setDefaultCboCommision_T();")
                                        .Model(X.Model()
                                        .IDProperty("fldId")
                                        .Fields(
                                            new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
                                        )
                                        .Proxy(X.AjaxProxy()
                                                            .Url(Url.Action("GetCommision"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                )
                                )
                                , X.FieldSet().Border(false)
                               .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                .Defaults(new { Margin = 1 })
                                .Items(
                                X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).Listeners(l => { l.Click.Handler = "SaveTabagheBandi();"; })
                            .ItemID("btnSaveTabagheBandi")
                            , X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).Listeners(l => { l.Click.Handler = "EditTabagheBandi();"; }).ItemID("btnEditTabagheBandi")
                            , X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).Listeners(l => { l.Click.Handler = "DeleteTabagheBandi();"; }).ItemID("btnDeleteTabagheBandi")
                            , X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                                .OnClientClick("App.NewTabagheBandi.hide();")
                                )
                                ,
                                        X.TreePanel().ColSpan(4)
                                        .ID("TreeTabagheBandi")
                                        .Width(300)
                                        .Height(200)
                                        .AutoScroll(true)
                                    .UseArrows(true)
                                    .Border(false)
                                    .Store(
                                        X.TreeStore()//.AutoLoad(false)
                                            .Proxy(
                                                    X.AjaxProxy().Url(Url.Action("NodeLoad"))
                                                .ActionMethods(l => l.Read = HttpMethod.POST)
                                            )
                                                .Model(
                                                Html.X().Model()
                                                    .Fields(
                                                        X.ModelField().Name(Model, m => m.fldID).Type(ModelFieldType.String),
                                                            X.ModelField().Name(Model, m => m.fldName).Type(ModelFieldType.String)
                                                    )
                                            )
                                        .Listeners(l =>
                                        {
                                            l.BeforeLoad.Fn = "GetParamTreeTabagheBandi";
                                        })
                                    )
                                    .Listeners(a =>
                                    {
                                        a.ItemClick.Handler = "GetIdTreeTabagheBandi(record)";
                                        a.AfterRender.Handler = "App.TreeTabagheBandi.expandAll();";
                                        //a.Load.Handler = "App.TreeTabagheBandi.expandAll();";
                                    })

                                    .Root(Html.X().Node().NodeID("0").Text("طبقه بندی شخصی"))


                )
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
        )
)
<script type="text/javascript">
    var TreeId_T;
    var fldPId_T;
    var GetParamTreeTabagheBandi = function (store, operation, eOpts) {
        var nodeId = operation.node.getId();
        operation.params.nod = nodeId;
        operation.params.ComisionID = App.NewTabagheBandi.queryById('CboCommision').getValue();
    };
    function ChangeComision_T() {

        App.TreeTabagheBandi.store.load();

    }
    function GetIdTreeTabagheBandi(record) {
        TreeId_T = record.getId();
       
    };
    
    function setDefaultCboCommision_T() {
        if (App.NewTabagheBandi.queryById('fldId').getValue() == 0) {
            App.NewTabagheBandi.queryById("CboCommision").setValue(App.NewTabagheBandi.queryById("CboCommision").store.getAt(0));
        }
    }
    function EditTabagheBandi() {
        if (TreeId_T != null && TreeId_T != 0) {
            App.NewTabagheBandi.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/Automation/TabagheBandi/Details',
                params: {
                    Id: TreeId_T
                },
                success: function (data) {
                    var txtName = App.NewTabagheBandi.queryById('txtName');
                    txtName.setValue(data.fldName);
                    var CboCommision = App.NewTabagheBandi.queryById('CboCommision');
                    CboCommision.setValue(data.fldComisionID);
                    var PId = App.NewTabagheBandi.queryById('PId');
                    PId.setValue(data.fldPID);
                    var Id = App.NewTabagheBandi.queryById('fldId');
                    Id.setValue(data.fldID);





                    App.NewTabagheBandi.body.mask().hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک مورد از ساختار درختی را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteTabagheBandi() {
        if (TreeId_T != null && TreeId_T != 0) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Automation/TabagheBandi/Delete',
                            params: {
                                id: TreeId_T
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1) {
                                    ic = Ext.MessageBox.ERROR;
                                }
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.TreeTabagheBandi.store.load();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک مورد از ساختار درختی را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function SaveTabagheBandi() {
        var txtName = App.NewTabagheBandi.queryById('txtName');
        var CboCommision = App.NewTabagheBandi.queryById('CboCommision');
        var Id = App.NewTabagheBandi.queryById('fldId');
        var PId = App.NewTabagheBandi.queryById('PId');
        var er = false;
        if (txtName.validate() == false) {
            er = true;
        }
        if (CboCommision.validate() == false) {
            er = true;
        }

        if (Id.getValue() == '' || Id.getValue() == 0) {
            fldPId_T = TreeId_T;
            fldId = Id.getValue();
        }
        else {
            fldPId_T = PId.getValue();
            fldId = Id.getValue();
        }
        if (TreeId_T == null) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک گزینه از ساختار درختی را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK,
            });
            er = true;
        }

        if (er == true)
            return;

        if (TreeId_T == 0)
            fldPId_T = null;

        App.NewTabagheBandi.body.mask("در حال ذخیره سازی");

        $.ajax({
            type: "POST",
            url: '/Automation/TabagheBandi/Save',
            datatype: "json",

            /*contentType: 'application/json',*/
            data: {
                fldId: Id.getValue(),
                fldComisionID: CboCommision.getValue(),
                fldName: txtName.getValue(),
                fldPID: fldPId_T,
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1) {
                    ic = Ext.MessageBox.ERROR;
                }
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK,
                });
                App.TreeTabagheBandi.store.load();
                if (data.Er != 1)
                    ClearTabagheBandi();
                App.NewTabagheBandi.body.mask().hide();
            },
            failure: function (data) {
                alert(data.data);
            }

        });
    }
    function ClearTabagheBandi() {
        App.NewTabagheBandi.queryById('fldId').setValue(0);
        App.NewTabagheBandi.queryById('txtName').setValue("");
       App.NewTabagheBandi.queryById('PId').setValue(0);
    }
    var addKeyMapTabagheBandi = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.NewTabagheBandi.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "CboCommision") {
                        nextfld = App.NewTabagheBandi.queryById('btnSaveTabagheBandi');
                        SaveTabagheBandi();
                        return;
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }
</script>
