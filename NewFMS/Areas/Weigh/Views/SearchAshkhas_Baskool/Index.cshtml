@model IEnumerable<NewFMS.WCF_Common.OBJ_Ashkhas>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{

    var X = Html.X();
}
@(Html.X().Window().Modal(true).Listeners(l => l.AfterRender.Handler = "LoadCboTypeShakhs_B()")
            .Width(700).Height(360)
            .Title("اشخاص")
                        .ID("SearchAshkhas")
            .Closable(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Listeners(l => l.Destroy.Handler = "setfocustext()")
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .Items(

                        X.GridPanel().AutoScroll(true).Border(false)
                        .TopBar(
                            Html.X().Toolbar()
                            .Items(
                            X.ComboBox().ColSpan(5)
                        .ItemID("CboTypeShakhs")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                        .Editable(false).Width(120)
                        .ForceSelection(true)
                        .TypeAhead(true)
                        .BlankText("لطفا نوع شخص را انتخاب کنید.")
                        .QueryMode(DataLoadMode.Local)
                        .TriggerAction(TriggerAction.All)
                        .EmptyText("...")
        //  .FieldLabel("جنسیت")
                        .Items(
                            new ListItem("حقوقی", "1"),
                            new ListItem("حقیقی", "0"),
                            new ListItem("هردو", "2")
                            )
                                .Listeners(l => l.Change.Handler = "ChangeTypeShakhs()")
        // .SelectedItems(new { Value = "2" })
                            ,
                            X.Button().Text("جدید").Icon(Ext.Net.Icon.Add).ItemID("btnNew")
                                                    .Listeners(li => li.Click.Handler = "NewSearchAshkhas();"),
                            X.Button().Text("انتخاب").Icon(Ext.Net.Icon.ArrowRedo)
                                                        .Listeners(li => li.Click.Handler = "NextSearchAshkhas();")

                            )
                        )
                                    .ItemID("GridSearchAshkhas").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(330)
                    .ColumnWidth(0.6)
                    .Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))
        //.ExtraParams(x => x.Add(new { Value = "2" }))
                        )
                        .PageSize(10)
                        .RemoteFilter(true)
                        .RemotePaging(true)

                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                                    Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),//.Hideable(false),
                                        Html.X().Column().DataIndex(Model, m => m.fldHoghoghiId).Text("کد").Flex(1).Hidden(true).Hideable(false),
                                            Html.X().Column().DataIndex(Model, m => m.fldHaghighiId).Text("کد").Flex(1).Hidden(true).Hideable(false),
                                Html.X().Column().DataIndex(Model, m => m.fldName).Text("نام").Flex(5),
                                     Html.X().Column().DataIndex(Model, m => m.fldFamily).Text("نام خانوادگی").Flex(5),
                                Html.X().Column().DataIndex(Model, m => m.fldShenase_CodeMeli).Text("شناسه/کد ملی").Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.shomareshabt_father).Text("شماره ثبت/نام پدر").Flex(3),//.Hidden(true)
                                Html.X().Column().DataIndex(Model, m => m.NoeShakhs).Text("نوع شخص").Flex(2)
                    )
                                .Listeners(a => a.CellDblClick.Handler = "NextSearchAshkhas();")
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )

            )
        )
)

<script type="text/javascript">
    var _State = '@ViewBag.State';
    function setfocustext() {
        if (_State == 1) {
            App.Vazn_Baskool.queryById('txtRananade').focus();
        }
        if (_State == 2) {
            App.Vazn_Baskool.queryById('txtAshkhas').focus();
        }
    }
    function LoadCboTypeShakhs_B() {
        if (_State == 1) {
            var CboTypeShakhs = App.SearchAshkhas.queryById('CboTypeShakhs');
            CboTypeShakhs.setValue("0");
            CboTypeShakhs.disable(true);
        }
        else {
            var CboTypeShakhs = App.SearchAshkhas.queryById('CboTypeShakhs');
            CboTypeShakhs.setValue("2");
        }

    }
    function ChangeTypeShakhs() {
        var CboTypeShakhs = App.SearchAshkhas.queryById('CboTypeShakhs');
        App.SearchAshkhas.queryById('GridSearchAshkhas').getStore().getProxy().setExtraParam("Value", CboTypeShakhs.getValue());
        App.SearchAshkhas.queryById('GridSearchAshkhas').getStore().load();
    }
    function NextSearchAshkhas() {
        var SelectedRow = App.SearchAshkhas.queryById('GridSearchAshkhas').selModel.getLastSelected();

        if (SelectedRow != null) {
            
             if (_State == 1) {
                App.Vazn_Baskool.queryById('RananadeId').setValue(SelectedRow.data.fldHaghighiId);
                App.Vazn_Baskool.queryById('txtRananade').setValue(SelectedRow.data.Name + "(" + SelectedRow.data.fldShenase_CodeMeli + ")");


            }
            else if (_State == 2) {
                App.Vazn_Baskool.queryById('AshkhasId').setValue(SelectedRow.data.fldId);
                App.Vazn_Baskool.queryById('txtAshkhas').setValue(SelectedRow.data.Name + "(" + SelectedRow.data.fldShenase_CodeMeli + ")");
            }
            App.SearchAshkhas.destroy();
        }

        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewSearchAshkhas() {
        var typePerson;
       
            typePerson = App.SearchAshkhas.queryById('CboTypeShakhs').getValue();

        if (typePerson == 2)
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یکی از موارد حقیقی یا حقوقی را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        else {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            if (typePerson == 1)
                Ext.net.DirectMethod.request({
                    url: '/Daramad/SearchAshkhas/NewHoghughi',
                    params: {
                        State: 1
                    },
                    success: function (data) {
                        Ext.net.Mask.hide();
                    }
                });
            else if (typePerson == 0)
                Ext.net.DirectMethod.request({
                    url: '/Daramad/SearchAshkhas/NewHaghighi',
                    params: {
                        State: 1
                    },
                    success: function (data) {
                        Ext.net.Mask.hide();
                    }
                });
        }
    }
    
</script>