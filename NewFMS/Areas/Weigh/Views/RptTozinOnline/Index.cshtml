@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Panel()
    .Closable(true)
    .AutoScroll(true)
    .Border(false)
    .Title("گزارش توزین آنلاین")
    .CloseAction(CloseAction.Destroy)
    .Listeners(li => { li.AfterRender.Handler = "setSizePnlRptTozinOnline()"; li.Render.Fn = "addKeyMapRptTozinOnline"; })
    .Layout(LayoutType.Fit)
    .ID("RptTozinOnline")
    .Items(
        X.Panel()
            .AutoScroll(true)
            .Border(false)
        //.Layout(LayoutType.VBox)
        //.LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.Panel()
                    .AutoScroll(true)
                    .Border(false)
                    .ButtonAlign(Alignment.Center)
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Buttons(
                        Html.X().Button()
                            .Text("چاپ")
                            .Icon(Ext.Net.Icon.Printer)
                            .Listeners(l => l.Click.Handler = "PrintRptTozinOnline()"),
                        Html.X().Button()
                            .Text("خروج")
                            .Icon(Ext.Net.Icon.DoorOut)
                            .Listeners(l => l.Click.Handler = "App.RptTozinOnline.destroy()")
                    )
                    .Items(
                        X.FieldSet()
                            .Border(false)
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                            .Defaults(new { Margin = 2 })
                            .Items(
                             X.Label("سازمان:"),
                                X.ComboBox()
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .ItemID("CboOrgan")
                                        .Width(300)
                                    .TypeAhead(true)
                                    .AutoFocus(true)
                                    .Editable(false)
                                    .ForceSelection(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .BlankText("لطفا سازمان را وارد کنید.")
                                  .AllowBlank(false)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                    .Store(
                                        X.Store()
                                            
                                        .Model(
                                            X.Model()
                                                    .IDProperty("ID")
                                                .Fields(
                                                    new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                    new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                        )
                                            )
                                        .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetOrganization"))
                                        .Reader(X.JsonReader().Root("data"))
                                            )
                .Listeners(l => l.Load.Handler = "setdefaultOrgan()")
        
                                     ),
                                     X.Label("نوع مصرف:"),
                                                X.ComboBox().Width(90)
                                                    .ItemID("CboNoeMasraf")
                                                .TypeAhead(true)
                                                    .AllowBlank(false)
                                                    .BlankText("لطفا نوع مصرف را وارد کنید.")
                                                .Editable(false)
                                                .ForceSelection(true)
                                                .QueryMode(DataLoadMode.Local)
                                                .TriggerAction(TriggerAction.All)
                                                    .DisplayField("fldName")
                                                        .ValueField("fldId")
                                                .Store(
                                                    X.Store()
                                                    .Model(
                                                        X.Model()
                                                            .IDProperty("fldId")
                                                            .Fields(
                                                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                                    )
                                                        )
                                                    .Proxy(X.AjaxProxy()
                                                                .Url(Url.Action("GetNoeMasraf"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                        )
                    .Listeners(l => l.Load.Handler = "setdefaultValueNoeMasrafRpt()")
                                                 ),
                                X.Label("از تاریخ:"),
                                    X.PDateField().Width(90)
                                    .ItemID("txtAzTarikh")
                                    .Listeners(l => l.Change.Handler = "setDateAzTarikhRptTozinOnline()")
                                    .Listeners(l => l.AfterRender.Handler = "App.RptTozinOnline.queryById('txtAzTarikh').validate();")
                                    .AllowBlank(false)
                                    .BlankText("لطفا تاریخ را وارد کنید.")
                                    .Editable(true)
                                    .MaskRe("/[0-9/]/")
                                    .MaxLength(10)
                                    .MinLength(10)
                                    .EnforceMaxLength(true),
                                X.Label("تا تاریخ:"),
                                    X.PDateField().Width(90)
                                    .ItemID("txtTaTarikh")
                                    .Listeners(l => l.Change.Handler = "setDateTaTarikhRptTozinOnline()")
                                    .Listeners(l => l.AfterRender.Handler = "App.RptTozinOnline.queryById('txtTaTarikh').validate();")
                                    .AllowBlank(false)
                                    .BlankText("لطفا تاریخ را وارد کنید.")
                                    .Editable(true)
                                    .MaskRe("/[0-9/]/")
                                    .MaxLength(10)
                                    .MinLength(10)
                                    .EnforceMaxLength(true)
                            )
                    ),
                Html.X().Panel()
                    .Border(true)
                    .Listeners(L => L.AfterRender.Handler = "setSizePnlRptTozinOnline2()")
                    .AutoScroll(true)
                    .ItemID("RptPanel2")
            )
    )
)

<script type="text/javascript">
    function setdefaultValueNoeMasrafRpt() {
        App.RptTozinOnline.queryById('CboNoeMasraf').select(App.RptTozinOnline.queryById('CboNoeMasraf').store.getAt(0));
        App.RptTozinOnline.queryById('CboNoeMasraf').store.add({ 'fldId': '0', 'fldName': 'همه موارد' });
    }
    function setDateAzTarikhRptTozinOnline() {
        var txtAzTarikh = App.RptTozinOnline.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptTozinOnline.queryById('txtTaTarikh');
        txtTaTarikh.setMinValue(txtAzTarikh.getValue());
        txtTaTarikh.minText = "فیلد تا تاریخ نباید قبل از فیلد از تاریخ باشد.";
    }
    function setdefaultOrgan() {
        var CboOrgan = App.RptTozinOnline.queryById('CboOrgan');
        CboOrgan.setValue(CboOrgan.store.getAt(0));
    }
    function setDateTaTarikhRptTozinOnline() {
        var txtAzTarikh = App.RptTozinOnline.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptTozinOnline.queryById('txtTaTarikh');
        txtAzTarikh.setMaxValue(txtTaTarikh.getValue());
        txtAzTarikh.maxText = "فیلد از تاریخ نباید بعد از فیلد تا تاریخ باشد.";
    }

    function setSizePnlRptTozinOnline2() {
        App.RptTozinOnline.queryById('RptPanel2').setSize(App.TasisatWin.getWidth() - 20, App.TasisatWin.getHeight() - 240);
    }

    function setSizePnlRptTozinOnline() {
        App.RptTozinOnline.setSize(App.TasisatWin.getWidth() - 20, App.TasisatWin.getHeight() - 170);
    }

    function PrintRptTozinOnline() {
        var txtAzTarikh = App.RptTozinOnline.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptTozinOnline.queryById('txtTaTarikh'); 
        var CboOrgan = App.RptTozinOnline.queryById('CboOrgan');
        var CboNoeMasraf = App.RptTozinOnline.queryById('CboNoeMasraf');

        var height = App.TasisatWin.getHeight() - 245;

        if (txtAzTarikh.validate() == true && txtTaTarikh.validate() == true && CboOrgan.validate() == true && CboNoeMasraf.validate() == true) {
            App.RptTozinOnline.queryById('RptPanel2').update("<center><object class='se-pre-con' style='width:100%;height:" + height +
                "px;border: 1px solid #ccc;' type='application/pdf' data='/Weigh/RptTozinOnline/GeneratePdfRptTozinOnline?AzTarikh="
                + txtAzTarikh.getRawValue() + "&TaTarikh=" + txtTaTarikh.getRawValue() + "&OrganId=" + CboOrgan.getValue() + "&NoeMasrafId=" + CboNoeMasraf.getValue() +
                "'></object></center>");
        }
    }

    var addKeyMapRptTozinOnline = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.RptTozinOnline.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "txtTaTarikh") {
                            PrintRptTozinOnline();
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                            nextfld.focus();

                        }
                }
            }]
        });
    };
</script>
