@model IEnumerable<NewFMS.WCF_Budget.OBJ_Pishbini_Daramad>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net

@{
    var X = Html.X();
}
<style>
    #PishbiniDaramadiGrid .x-column-header-text {
        white-space: pre-wrap;
        height: 30px !important;
    }
    .ColoringL3 .x-grid-cell, .x-grid-rowwrap-div {
        background-color: #B2E4F4 !important; /*CEF55E*/
    }

    .ColoringL2 .x-grid-cell, .x-grid-rowwrap-div {
        background-color: #95D3E6 !important; /*CEF55E*/
    }

    .ColoringL1 .x-grid-cell, .x-grid-rowwrap-div {
        background-color: #6DC9E5 !important; /*CEF55E*/
    }
    .ColoringL4 .x-grid-cell, .x-grid-rowwrap-div {
        background-color: #D1EBF4 !important; /*CEF55E*/
    }
    
</style>
<script>
    function SumAmalkardha(value, metaData, record, rowIndex, colIndex, store) {
        return (record.data.fldCol5 + record.data.fldCol3).toLocaleString();
    }
</script>
@(Html.X().Panel()
    .ID("PishbiniDaramadi")
    .Title("پیش بینی درآمدها")
    .Closable(true)
    .Listeners(li => li.AfterRender.Handler = "PishbiniDaramadiSetSize();")
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Border(false)
    .Layout(LayoutType.Fit)
    .Items(
        X.GridPanel()
            .ID("PishbiniDaramadiGrid")
            .Listeners(l => l.AfterRender.Handler = "SetHeader()")
            .BottomBar(X.PagingToolbar().Listeners(l => l.BeforeChange.Fn = "CheckModifiedPishbiniDaramadi"))
            .TopBar(
                Html.X().Toolbar()
                    .Items(
                    //    X.Button()
                    //.Text("بارگزاری از سنوات قبل").Listeners(l=>l.Click.Handler="GetFromGhabl()")
                    //    .Hidden(@ViewBag.NoeAmaliat == 2)
                    //,
                                    X.ComboBox()
                                    .ItemID("CboMotamam")
                                    .DisplayField("fldName")
                                    .ValueField("fldId")
                                    .AutoFocus(true)
                                    .TypeAhead(true)
                                    .Editable(false)
                                    .AllowBlank(false)
                                    .BlankText("لطفا متمم را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                        .Listeners(l => l.Change.Handler = "LoadGridDaramadi()")
                                                    .Hidden(@ViewBag.NoeAmaliat == 1)
                                    .Store(X.Store()
                                                            .Listeners(l => l.Load.Handler = "if(App.PishbiniDaramadi.queryById('CboMotamam').store.count()==0){LoadGridDaramadi();}else{App.PishbiniDaramadi.queryById('CboMotamam').setValue(App.PishbiniDaramadi.queryById('CboMotamam').store.getAt(0));}")
                                        .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetMotamam"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                    )   
                    ,
                        X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).Listeners(li => li.Click.Handler = "SavePishbiniDaramadi();")
                    )
            )
                .Store(
                    X.StoreForModel()
         .AutoLoad(false)
                                .Listeners(l => l.DataChanged.Handler = "App.PishbiniDaramadi.queryById('PishbiniDaramadiGrid').selModel.refresh();")
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))
                                 //   .ExtraParams(l => l.Add(new { Year = ViewBag.Year, MotamamId=0 }))
                        )
                        .PageSize(50)
                        .RemoteFilter(false)
                        .RemotePaging(false)
                    )
                    .View(
                                Html.X().GridView().PreserveScrollOnRefresh(true)
                                    .GetRowClass(l => l.Fn = "SetColorRowDaramadi")
                            .LoadingText("در حال بارگذاری...").RTL(true)
                        )
         .Plugins(X.FilterHeader().Remote(false),
                    Html.X().CellEditing().ClicksToEdit(1)
                    .Listeners(l => { l.Edit.Fn = "nextcellRowPishbiniDaramadi";
                    l.BeforeEdit.Fn = "LockGridD";
                    }))
                .ColumnModel(
                        Html.X().RowNumbererColumn(),
                                Html.X().Column().DataIndex(Model, m => m.fldCodingId).Text("کد ").Flex(2).Hidden(true),
                        Html.X().Column().DataIndex(Model, m => m.fldCode).Text("کد حساب").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("عنوان حساب").Flex(5).Wrap(true),
                            Html.X().Column().DataIndex(Model, m => m.fldCol4).Text("عملکرد دو سال قبل").Flex(3).Renderer("return value.toLocaleString();")
                            .Editor(Html.X().TextField().ID("txtCol4")
                                .MaskRe("[0-9]").EnableKeyEvents(true).Listeners(l =>
                                {
                                    l.Change.Handler = "checkValidateandseperate_4()";
                                   l.Focus.Handler = "checkValidateandseperate_4()";
                                   l.SpecialKey.Handler = "checkhintkey_Paid(e.getKey())";
                                })).Hidden(@ViewBag.NoeAmaliat == 2),
                                Html.X().Column().DataIndex(Model, m => m.fldCol2).Text("مصوب سال قبل").Flex(3).Renderer("return value.toLocaleString();")
                                .Editor(Html.X().TextField().ID("txtCol2")
                                    .MaskRe("[0-9]").EnableKeyEvents(true).Listeners(l =>
                                    {
                                        l.Change.Handler = "checkValidateandseperate_2()";
                                        l.Focus.Handler = "checkValidateandseperate_2()";
                                        l.SpecialKey.Handler = "checkhintkey_Paid(e.getKey())";
                                    })).Hidden(@ViewBag.NoeAmaliat == 2),
                                    Html.X().Column().DataIndex(Model, m => m.fldCol7).Text("نرخ رشد پنج ساله").Flex(3).Renderer("return value.toLocaleString();")
                                    .Editor(Html.X().TextField().ID("txtCol7")
                                   .MaskRe("[0-9]").EnableKeyEvents(true).Listeners(l =>
                                    {
                                        l.Change.Handler = "checkValidateandseperate_7()";
                                        l.Focus.Handler = "checkValidateandseperate_7()";
                                        l.SpecialKey.Handler = "checkhintkey_Paid(e.getKey())";
                                    })).Hidden(@ViewBag.NoeAmaliat == 2),
                                Html.X().Column().DataIndex(Model, m => m.fldCol5).Text("عملکرد سه ماهه آخر دو سال قبل").Flex(3).Renderer("return value.toLocaleString();")
                                .Editor(Html.X().TextField().ID("txtCol5")
                                    .MaskRe("[0-9]").EnableKeyEvents(true).Listeners(l =>
                                    {
                                        l.Change.Handler = "checkValidateandseperate_5()";
                                        l.Focus.Handler = "checkValidateandseperate_5()";
                                        l.SpecialKey.Handler = "checkhintkey_Paid(e.getKey())";
                                    })).Hidden(@ViewBag.NoeAmaliat == 2),
                                    Html.X().Column().DataIndex(Model, m => m.fldCol3).Text("عملکرد 9 ماهه اول سال قبل").Flex(3).Renderer("return value.toLocaleString();")
                                    .Editor(Html.X().TextField().ID("txtCol3")
                                    .AutoFocus(true).MaskRe("[0-9]").EnableKeyEvents(true).Listeners(l =>
                                    {
                                        l.Change.Handler = "checkValidateandseperate_3()";
                                        l.Focus.Handler = "checkValidateandseperate_3()";
                                        l.SpecialKey.Handler = "checkhintkey_Paid(e.getKey())";
                                    })).Hidden(@ViewBag.NoeAmaliat == 2),
                                Html.X().Column().Text("عملکرد 12 ماهه اخیر").DataIndex("").Flex(3).Renderer("SumAmalkardha").Hidden(@ViewBag.NoeAmaliat == 2),
                                Html.X().Column().DataIndex(Model, m => m.fldCol1).Text("مبلغ پیشنهادی").Flex(3).Renderer("return value.toLocaleString();")
                                .Editor(Html.X().TextField().ID("txtCol1")
                                    .MaskRe("[0-9]").EnableKeyEvents(true).Listeners(l =>
                                    {
                                        l.Change.Handler = "checkValidateandseperate_1()";
                                        l.Focus.Handler = "checkValidateandseperate_1()";
                                        l.SpecialKey.Handler = "checkhintkey_Paid(e.getKey())";
                                    })).Hidden(@ViewBag.NoeAmaliat == 2),
                                //Html.X().Column().DataIndex(Model, m => m.fldCol6).Text("مصوب").Flex(3).Renderer("return value.toLocaleString();")
                                //    .Editor(Html.X().TextField().ID("txtCol6")
                                //    .AutoFocus(true).MaskRe("[0-9]").EnableKeyEvents(true).Listeners(l =>
                                //    {
                                //        l.Change.Handler = "checkValidateandseperate_6()";
                                //        l.Focus.Handler = "checkValidateandseperate_6()";
                                //        l.SpecialKey.Handler = "checkhintkey_Paid(e.getKey())";
                                //    }))
                                //    .Hidden(@ViewBag.NoeAmaliat == 1),
                                Html.X().Column().DataIndex(Model, m => m.fldCol9).Text("افزایش").Flex(3).Renderer("return value.toLocaleString();")
                                    .Editor(Html.X().TextField().ID("txtCol9")
                                    .MaskRe("[0-9]").EnableKeyEvents(true).Listeners(l =>
                                    {
                                        l.Change.Handler = "checkValidateandseperate_9()";
                                        l.Focus.Handler = "checkValidateandseperate_9()";
                                        l.SpecialKey.Handler = "checkhintkey_Paid(e.getKey())";
                                    })).Hidden(@ViewBag.NoeAmaliat == 1),
                                Html.X().Column().DataIndex(Model, m => m.fldCol10).Text("کاهش").Flex(3).Renderer("return value.toLocaleString();")
                                    .Editor(Html.X().TextField().ID("txtCol10")
                                    .MaskRe("[0-9]").EnableKeyEvents(true).Listeners(l =>
                                    {
                                        l.Change.Handler = "checkValidateandseperate_10()";
                                        l.Focus.Handler = "checkValidateandseperate_10()";
                                        l.SpecialKey.Handler = "checkhintkey_Paid(e.getKey())";
                                    })).Hidden(@ViewBag.NoeAmaliat == 1),
                                        Html.X().Column().DataIndex(Model, m => m.last).Text("last").Flex(2).Hidden(true)
                )
                .SelectionModel(
                    Html.X().RowSelectionModel()
                        .Mode(Ext.Net.SelectionMode.Single)
                )

        )
)

<script type="text/javascript">
    var HintEnter_Paid = 0;
    var SetColorRowDaramadi = function (record, rowIndex, rowParams, store) {
        if (record.data.fldLevelId == 1) {
            return "ColoringL1";
        }
        else if (record.data.fldLevelId == 2) {
            return "ColoringL2";
        }
        else if (record.data.fldLevelId == 3) {
            return "ColoringL3";
        }
        else if (record.data.fldLevelId == 4) {
            return "ColoringL4";
        }
    };
    var SetColorForParent = function (record, rowIndex, rowParams, store) {
        if (record.data.last != 0) {
            /*return "ColorF";*/
        }
    };
    function GetFromGhabl() {
        App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").getStore().getProxy().setExtraParam('Year', '@ViewBag.Year');
        App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").getStore().getProxy().setExtraParam('MotamamId', 0);
        App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").getStore().getProxy().setExtraParam('state', 2);
        App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").store.load();
    }
    function LoadGridDaramadi() {
        var MotamamId=0;
        if('@ViewBag.NoeAmaliat' != 1)
            MotamamId=App.PishbiniDaramadi.queryById('CboMotamam').getValue();
       
        App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").getStore().getProxy().setExtraParam('Year', '@ViewBag.Year'); 
        App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").getStore().getProxy().setExtraParam('MotamamId', MotamamId);
        App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").getStore().getProxy().setExtraParam('state', 1);
        App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").store.load();
    }

    function checkValidateandseperate_1() {
        App.txtCol1.setValue(accounting.formatNumber(App.txtCol1.getValue()));
    }
    function checkValidateandseperate_2() {
        App.txtCol2.setValue(accounting.formatNumber(App.txtCol2.getValue()));
    }
    function checkValidateandseperate_3() {
        App.txtCol3.setValue(accounting.formatNumber(App.txtCol3.getValue()));
    }
    function checkValidateandseperate_4() {
        App.txtCol4.setValue(accounting.formatNumber(App.txtCol4.getValue()));
    }
    function checkValidateandseperate_5() {
        App.txtCol5.setValue(accounting.formatNumber(App.txtCol5.getValue()));
    }
    function checkValidateandseperate_7() {
        App.txtCol7.setValue(accounting.formatNumber(App.txtCol7.getValue()));
    }
    function checkValidateandseperate_6() {
        App.txtCol6.setValue(accounting.formatNumber(App.txtCol6.getValue()));
    }
    function checkValidateandseperate_9() {
        App.txtCol9.setValue(accounting.formatNumber(App.txtCol9.getValue()));
    }
    function checkValidateandseperate_10() {
        App.txtCol10.setValue(accounting.formatNumber(App.txtCol10.getValue()));
    }

    function checkhintkey_Paid(e) {
        if (e == 13) {
            HintEnter_Paid = 1;
        }
    };

    function SetHeader() {
        var k = App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid");
        var kk = k.getView().getHeaderCt().getGridColumns();
        var sal = parseInt('@ViewBag.Year');
        var salGhabl = sal - 1;
        var salGhabl2 = sal - 2;
        kk[4].setText("عملکرد سال " + salGhabl2);
        kk[5].setText("مصوب سال " + salGhabl);
        kk[7].setText("عملکرد سه ماهه آخر سال " + salGhabl2);
        kk[8].setText("عملکرد 9 ماهه اول سال " + salGhabl);
    }
    var CheckModifiedPishbiniDaramadi = function (pagetoolbar, page, eOpts) {
        var MotamamId = null;
        if ('@ViewBag.NoeAmaliat' != 1)
            MotamamId = App.PishbiniDaramadi.queryById('CboMotamam').getValue();

        var changedRow = App.PishbiniDaramadi.queryById('PishbiniDaramadiGrid').store.getModifiedRecords();
        var Mablah_Columns = App.PishbiniDaramadi.queryById('PishbiniDaramadiGrid').columnManager.columns.filter(function (col) { return col.dataIndex.substring(0, 6) === "fldCol" });
        if (changedRow.length > 0) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا تمایل دارید اطلاعات ویرایش شده ذخیره شود؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        App.PishbiniDaramadi.body.mask('در حال ذخیره سازی...');
                        var DaramadiVal = new Array();

                        for (var i = 0; i < changedRow.length ; i++) {
                            var MablaghHa = new Array();
                            for (var j = 0; j < Mablah_Columns.length; j++) {
                                MablaghHa.push({
                                    Mablagh: changedRow[i].get(Mablah_Columns[j].dataIndex),
                                    BudgetTypeId: Mablah_Columns[j].dataIndex.substring(6),
                                    MotammamId: MotamamId
                                });
                            }
                            DaramadiVal.push({
                                fldAccCodingId: changedRow[i].data.fldCodingId,
                                Mablagh: MablaghHa
                            });
                        }
                        @*var SelectedRow = App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid");
                        for (var i = 0; i < SelectedRow.selModel.store.count() ; i++) {
                            row = SelectedRow.selModel.store.data.items[i];
                            if (row.data.last == 1) {
                                if ('@ViewBag.NoeAmaliat' == 1) {
                                    if (row.data.fldCol1 > 0)
                                        DaramadiVal.push({
                                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                                            'fldMablagh': row.data.fldCol1,
                                            'fldBudgetTypeId': 1
                                        });
                                    if (row.data.fldCol2 > 0)
                                        DaramadiVal.push({
                                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                                            'fldMablagh': row.data.fldCol2,
                                            'fldBudgetTypeId': 2
                                        });
                                    if (row.data.fldCol3 > 0)
                                        DaramadiVal.push({
                                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                                            'fldMablagh': row.data.fldCol3,
                                            'fldBudgetTypeId': 3
                                        });
                                    if (row.data.fldCol4 > 0)
                                        DaramadiVal.push({
                                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                                            'fldMablagh': row.data.fldCol4,
                                            'fldBudgetTypeId': 4
                                        });
                                    if (row.data.fldCol5 > 0)
                                        DaramadiVal.push({
                                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                                            'fldMablagh': row.data.fldCol5,
                                            'fldBudgetTypeId': 5
                                        });
                                    if (row.data.fldCol7 > 0)
                                        DaramadiVal.push({
                                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                                            'fldMablagh': row.data.fldCol7,
                                            'fldBudgetTypeId': 7
                                        });
                                }
                                else {
                                    if (row.data.fldCol6 > 0)
                                        DaramadiVal.push({
                                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                                            'fldMablagh': row.data.fldCol6,
                                            'fldBudgetTypeId':6
                                        });
                                    if (row.data.fldCol9 > 0)
                                        DaramadiVal.push({
                                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                                            'fldMablagh': row.data.fldCol9,
                                            'fldBudgetTypeId': 9
                                        });
                                    if (row.data.fldCol10 > 0)
                                        DaramadiVal.push({
                                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                                            'fldMablagh': row.data.fldCol10,
                                            'fldBudgetTypeId': 10
                                        });
                                }
                            }
                        }*@
                        var data = {
                            Mablagh_Coding: DaramadiVal
                            @*Year: '@ViewBag.Year',
                            MotamamId: MotamamId*@
                        };

                        $.ajax({
                            type: "POST",
                            url: '/Budget/Pishbini/SaveDaramadi',
                            datatype: "json",
                            data: JSON.stringify(data),
                            contentType: 'application/json',
                            success: function (result) {
                                App.PishbiniDaramadi.body.mask().hide();
                                if (result.Er == 1) {
                                    Ext.MessageBox.show({
                                        title: result.MsgTitle,
                                        msg: result.Msg,
                                        icon: Ext.MessageBox.ERROR,
                                        buttons: Ext.MessageBox.OK
                                    });
                                }
                                else {
                                    App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").store.load();
                                    pagetoolbar.getStore().loadPage(page);
                                }
                            },
                            failure: function (data) {
                                alert(data.data);
                            }
                        });
                    }
                    else {
                        pagetoolbar.getStore().loadPage(page);
                    }
                }
            });
            return false;
        }
    };
  
    var nextcellRowPishbiniDaramadi = function (a, b) {
     
        if (HintEnter_Paid == 1) {
            HintEnter_Paid = 0;
            App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").editingPlugin.startEdit(b.rowIdx + 1, b.colIdx);
            a.getEditor(b.row, b.column).field.selectText();
            /*  if (s.record.data.last==0)
                  App.PishbiniDaramadi.queryById("txtCol4").setReadOnly(true);
              else
                  App.PishbiniDaramadi.queryById("txtCol4").setReadOnly(false);*/
        }

        /*    App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid").editingPlugin.startEdit(b.rowIdx + 1, b.colIdx);
         a.getEditor(b.row, b.column).field.selectText();

         var Grid = App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid");

        var row = Grid.selModel.store.data.items[b.rowIdx];
        row.set(a.context.field, "111");*/

    };

    var LockGridD = function (a, b) {
        if (b.record.data.last == 0) {
            return false;
            /*App.txtCol1.setReadOnly(true);
            App.txtCol2.setReadOnly(true);
            App.txtCol3.setReadOnly(true);
            App.txtCol4.setReadOnly(true);
            App.txtCol5.setReadOnly(true);
            App.txtCol7.setReadOnly(true);
            App.txtCol6.setReadOnly(true);
            App.txtCol9.setReadOnly(true);
            App.txtCol10.setReadOnly(true);*/
        }
        /*else {
            App.txtCol1.setReadOnly(false);
            App.txtCol2.setReadOnly(false);
            App.txtCol3.setReadOnly(false);
            App.txtCol4.setReadOnly(false);
            App.txtCol5.setReadOnly(false);
            App.txtCol7.setReadOnly(false);
            App.txtCol6.setReadOnly(false);
            App.txtCol9.setReadOnly(false);
            App.txtCol10.setReadOnly(false);
        }*/
    };
    function PishbiniDaramadiSetSize() {
        App.PishbiniDaramadi.setWidth(App.BudjeWin.getWidth());
        App.PishbiniDaramadi.queryById('PishbiniDaramadiGrid').setHeight(App.BudjeWin.getHeight() - 170);
    }
    function SavePishbiniDaramadi() {
        var DaramadiVal = new Array();
        var grid = App.PishbiniDaramadi.queryById("PishbiniDaramadiGrid");

        var MotamamId = null;
        if ('@ViewBag.NoeAmaliat' != 1)
            MotamamId = App.PishbiniDaramadi.queryById('CboMotamam').getValue();

        var cc = grid.store.currentPage;
        var changedRow = grid.store.getModifiedRecords();
        var Mablah_Columns = grid.columnManager.columns.filter(function (col) { return col.dataIndex.substring(0, 6) === "fldCol" });
        if (changedRow.length > 0) {
            for (var i = 0; i < changedRow.length ; i++) {
                var MablaghHa = new Array();
                for (var j = 0; j < Mablah_Columns.length; j++) {
                    MablaghHa.push({
                        Mablagh: changedRow[i].get(Mablah_Columns[j].dataIndex),
                        BudgetTypeId: Mablah_Columns[j].dataIndex.substring(6),
                        MotammamId: MotamamId
                    });
                }
                DaramadiVal.push({
                    fldAccCodingId: changedRow[i].data.fldCodingId,
                    Mablagh: MablaghHa
                });
            }
            @*for (var i = 0; i < grid.selModel.store.count() ; i++) {
            row = grid.selModel.store.data.items[i];
            if (row.data.last == 1) {
                if ('@ViewBag.NoeAmaliat' == 1) {
                    if (row.data.fldCol1 > 0)
                        DaramadiVal.push({
                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                            'fldMablagh': row.data.fldCol1,
                            'fldBudgetTypeId': 1
                        });
                    if (row.data.fldCol2 > 0)
                        DaramadiVal.push({
                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                            'fldMablagh': row.data.fldCol2,
                            'fldBudgetTypeId': 2
                        });
                    if (row.data.fldCol3 > 0)
                        DaramadiVal.push({
                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                            'fldMablagh': row.data.fldCol3,
                            'fldBudgetTypeId': 3
                        });
                    if (row.data.fldCol4 > 0)
                        DaramadiVal.push({
                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                            'fldMablagh': row.data.fldCol4,
                            'fldBudgetTypeId': 4
                        });
                    if (row.data.fldCol5 > 0)
                        DaramadiVal.push({
                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                            'fldMablagh': row.data.fldCol5,
                            'fldBudgetTypeId': 5
                        });
                    if (row.data.fldCol7 > 0)
                        DaramadiVal.push({
                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                            'fldMablagh': row.data.fldCol7,
                            'fldBudgetTypeId': 7
                        });
                }
                else {
                    if (row.data.fldCol6 > 0)
                        DaramadiVal.push({
                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                            'fldMablagh': row.data.fldCol6,
                            'fldBudgetTypeId': 6
                        });
                    if (row.data.fldCol9 > 0)
                        DaramadiVal.push({
                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                            'fldMablagh': row.data.fldCol9,
                            'fldBudgetTypeId': 9
                        });
                    if (row.data.fldCol10 > 0)
                        DaramadiVal.push({
                            'fldCodingAcc_DetailsId': row.data.fldCodingId,
                            'fldMablagh': row.data.fldCol10,
                            'fldBudgetTypeId': 10
                        });
                }
            }
        }*@
            var data = {
                Mablagh_Coding: DaramadiVal
                @*Year: '@ViewBag.Year',
            MotamamId: MotamamId*@
            };
            App.PishbiniDaramadi.body.mask('در حال ذخیره سازی...');

            $.ajax({
                type: "POST",
                url: '/Budget/Pishbini/SaveDaramadi',
                datatype: "json",
                data: JSON.stringify(data),
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    App.PishbiniDaramadi.body.mask().hide();
                    var ico = Ext.MessageBox.INFO;
                    if (result.Er == 1)
                        ico = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: result.MsgTitle,
                        msg: result.Msg,
                        icon: ico,
                        buttons: Ext.MessageBox.OK
                    });

                    grid.store.load();
                    /*grid.store.loadPage(cc);*/
                },
                failure: function (data1) {
                    alert(data.data1);
                }
            });

        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "تغییری در اطلاعات جهت ثبت آن، اعمال نگردیده است.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }


</script>
