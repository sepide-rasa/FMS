@model IEnumerable<NewFMS.Models.FishDetails>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{
    var X = Html.X();
}
<script>
    Ext.net.FilterHeader.behaviour.string[0].match = function (recordValue, matchValue) {
        return (Ext.net.FilterHeader.behaviour.getStrValue(recordValue) || "").indexOf(matchValue) > -1;
    };

    Ext.net.FilterHeader.behaviour.string[0].getStrValue = function (value) {
        return value.toString();
    };

    Ext.net.FilterHeader.behaviour.string[0].serialize = function (value) {
        return {
            type: "string",
            op: "*",
            value: value
        };
    };

    var LinkHokmDetails = function (val, metaData, record, rowIndex, colIndex, store) {
        return "<a href='javascript:GotoShowHokm(" + val + ");'>" + val + "</a>";
    };

    /*var GroupedColor = function (val, metaData, record, rowIndex, colIndex, store) {
        if (record.data.fldGrouped == 1) {
            metaData.tdAttr = "style='background-color:#e36b6b;vertical-align: middle;'";
            metaData.style = "text-align: center";
        }
        else if (record.data.fldGrouped == 2) {
            metaData.tdAttr = "style='background-color:#89c998;vertical-align: middle;'";
            metaData.style = "text-align: center";
        }
        else if (record.data.fldGrouped == 3) {
            metaData.tdAttr = "style='background-color:#edf261;vertical-align: middle;'";
            metaData.style = "text-align: center";
        }
        else if (record.data.fldGrouped == 4) {
            metaData.tdAttr = "style='background-color:#9ac6f5;vertical-align: middle;'";
            metaData.style = "text-align: center";
        }
        else if (record.data.fldGrouped == 5) {
            metaData.tdAttr = "style='background-color:#FEC372;vertical-align: middle;'";
            metaData.style = "text-align: center";
        }
        else {
            metaData.tdAttr = "style='vertical-align: middle;'";
            metaData.style = "text-align: center";
        }        
        return val;
    };*/
</script>    

<style>
    /*.x-grid-group-hd-collapsed-no-image .x-grid-group-title {
        background: none;
        background-image: none;
    }
    .x-grid-group-hd-collapsible-no-image .x-grid-group-title {
        background: none;
        background-image: none;
        padding:0px !important;
        cursor:default;
    }*/

    .legend { list-style: none; direction:rtl; text-align:right; padding-right:0px;margin-top:7px;}
    .legend li { float: right; margin-right: 10px; }
    .legend span { border: 1px solid #ccc; float: right; width: 12px; height: 14px; margin: 2px; }
    .legend .red { background-color: #f7a1a1;}
    .legend .yellow { background-color: #f6fa87; }
    .legend .orange { background-color: #facb89; }
    .legend .blue { background-color: #b9d8fa; }
    .legend .green { background-color: #acfabf; }
    .legend .green1 { background-color: #a2f2dd; }


    .greenRow .x-grid-cell, .x-grid-rowwrap-div{
        background-color:#acfabf !important;
    }
    .yellowRow .x-grid-cell, .x-grid-rowwrap-div{
        background-color:#f6fa87 !important;
    }
    .orangeRow .x-grid-cell, .x-grid-rowwrap-div{
        background-color:#facb89 !important;
    }
    .blueRow .x-grid-cell, .x-grid-rowwrap-div{
        background-color:#b9d8fa !important;
    }
    .redRow .x-grid-cell, .x-grid-rowwrap-div{
        background-color:#f7a1a1 !important;
    }
    .greenRow1 .x-grid-cell, .x-grid-rowwrap-div{
        background-color:#a2f2dd !important;
    }

    .x-grid-body .x-grid-cell-Cost {
        background-color: #f1f2f4;
    }
    .x-grid-row-summary .x-grid-cell-Cost .x-grid-cell-inner {
        background-color: #e1e2e4;
    }
    .task .x-grid-cell-inner {
        padding-left: 15px;
    }
    .x-grid-row-summary .x-grid-cell-inner {
        font-weight: bold;
        font-size: 14px;
        background-color: #f1f2f4;
    }
    .x-grid-group-title {
        text-align: right !important;
    }
    #FishHoghoughi_DetailsGrid .x-column-header-text {
        white-space: pre-wrap;
        height: 30px !important;
    }
</style>
@(Html.X().Panel()
    .ID("FishHoghoughi_Details")
    .Title("جزئیات فیش حقوقی")
    .Closable(true)
    .Listeners(li => { li.AfterRender.Handler = "FishHoghoughi_DetailsSetSize();"; li.Render.Fn = "addKeyMapFishHoghoughi_Details"; })
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Border(false)
    .Items(
        X.Panel()
            .Border(false)
            .Items(
                X.Panel()
                    .Border(false)
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.FieldSet()
                            .Border(false)
                            .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                            .Items(
                                X.Hidden().ItemID("fldPersonalId"),
                                X.Hidden().ItemID("RptPersonalId"),
                                X.Hidden().ItemID("RptMonth"),
                                X.Hidden().ItemID("RptYear"),
                                X.Hidden().ItemID("RptTaYear"),
                                X.Hidden().ItemID("RptTaMonth"),
                                X.Hidden().ItemID("RptFilter"),
                                X.Hidden().ItemID("RptNobat"),
                                X.Hidden().ItemID("RptTypeHesab"),                                
                                X.Label("سازمان:"),
                                X.ComboBox()
                                    .ItemID("CboOrgan")
                                    .TypeAhead(true)
                                    .ColSpan(3)
                                    .AutoFocus(true)
                                    .Editable(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .AllowBlank(false)
                                    .BlankText("لطفا سازمان را انتخاب کنید.")
                                    .Listeners(l => l.Change.Handler = "ChangeCboOrganFishHoghoughi_Details()")
                                    .ForceSelection(true)
                                    .DisplayField("fldTitle")
                                    .ValueField("fldId")
                                    .EmptyText("سازمان ...")
                                    .Width(235)
                                    .Store(X.Store()
                                        .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetOrgan"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                        .Listeners(l => l.Load.Handler = "setdefaultValueOrganFishDetails()")
                                    ),
                                X.Label().Text("شخص(INS):").ItemID("lblName"),
                                X.TextField()
                                    .ItemID("txtName")
                                    .Icon(Icon.UserAdd)
                                    .EnableKeyEvents(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا شخص را وارد کنید.")
                                    .FieldStyle("padding-right:18px;")
                                    .ColSpan(3)
                                    .ReadOnly(true)
                                    .Width(263)
                                    .Listeners(l =>
                                    {
                                        l.SpecialKey.Fn = "SelectPersonFishDetails";
                                        l.IconClick.Handler = "SearchPayPersonFishDetails();";
                                    }),
                                X.Label("سال:").ItemID("lblYear"),
                                X.ComboBox()
                                    .ItemID("CboYear")
                                    .Width(100)
                                    .ForceSelection(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا سال را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldYear")
                                    .ValueField("fldYear")
                                    .Listeners(l =>
                                    {
                                        l.Select.Handler = "setYearClassFishDetails()";
                                        l.Change.Handler = "App.FishHoghoughi_Details.queryById('CboTaYear').store.load();";
                                    })
                                    .Store(X.Store()
                                        .Model(X.Model()
                                            .IDProperty("fldYear")
                                            .Fields(
                                                new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" },
                                                new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetYear"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                        .Listeners(l => l.Load.Handler = "setdefaultValueYearFishDetails()")
                                    ),
                                X.Label("مــاه:").ItemID("lblMonth"),
                                X.ComboBox()
                                    .ItemID("CboMonth")
                                    .ForceSelection(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .DisplayField("fldMonthName")
                                    .ValueField("fldMonth")
                                    .Width(100)
                                    .BlankText("لطفا ماه را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.Select.Handler = "setMonthClassFishDetails()";
                                        l.Change.Handler = "FilterCboTaMonth()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Store(X.Store()
                                        .Model(X.Model()
                                            .IDProperty("fldMonth")
                                            .Fields(
                                                new ModelField("fldMonth", ModelFieldType.String) { Mapping = "fldMonth" },
                                                new ModelField("fldMonthName", ModelFieldType.String) { Mapping = "fldMonthName" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetMonth"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                        .Listeners(l => l.Load.Handler = "setdefaultValueMonthFishDetails()")
                                    ),
                                X.Label("تا سال:").ItemID("lblTaYear"),
                                X.ComboBox()
                                    .ItemID("CboTaYear")
                                    .Editable(true)
                                    .ForceSelection(true)
                                    .Width(100)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا سال را انتخاب کنید.")
                                    .DisplayField("fldYear")
                                    .ValueField("fldYear")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Listeners(l => l.Change.Handler = "FilterCboTaMonth();")
                                    .Store(X.Store()
                                        .AutoLoad(false)
                                        .Model(X.Model()
                                            .IDProperty("fldYear")
                                            .Fields(
                                                new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" },
                                                new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetYear"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                        .Parameters(ps => ps.Add(new StoreParameter("Year", "App.FishHoghoughi_Details.queryById('CboYear').getValue()", ParameterMode.Raw)))
                                        .Listeners(l => l.Load.Handler = "setdefaultValueTaYearFishDetails()")
                                    ),
                                X.Label("تا ماه:").ItemID("lblTaMonth"),
                                X.ComboBox()
                                    .ItemID("CboTaMonth")
                                    .ForceSelection(true)
                                    .Width(100)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .DisplayField("fldMonthName")
                                    .ValueField("fldMonth")
                                    .BlankText("لطفا ماه را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Store(X.Store()
                                        .AutoLoad(false)
                                        .Model(X.Model()
                                            .IDProperty("fldMonth")
                                            .Fields(
                                                new ModelField("fldMonth", ModelFieldType.String) { Mapping = "fldMonth" },
                                                new ModelField("fldMonthName", ModelFieldType.String) { Mapping = "fldMonthName" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetMonth"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                        .Listeners(l => l.Load.Handler = "setdefaultValueTaMonthFishDetails()")
                                    ),
                                X.Label("نوبت پرداخت:").ItemID("lblNobatePardakht"),
                                X.ComboBox()
                                    .ItemID("CboNobatePardakht")
                                    .Editable(true)
                                    .ForceSelection(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(100)
                                    .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setdefaultValueNobatePardakhtFishDetails()";
                                        l.Select.Handler = "setNobatePardakhtCalssFishDetails()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("یک", "1"),
                                        new ListItem("دو", "2"),
                                        new ListItem("سه", "3"),
                                        new ListItem("چهار", "4"),
                                        new ListItem("پنج", "5")
                                    ),
                                X.Label("فیلتر:"),
                                X.ComboBox()
                                    .ItemID("CboFilterType")
                                    .ForceSelection(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(100)
                                    .BlankText("لطفا نوع  فیلتر را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("جاری", "1"),
                                        new ListItem("معوقه", "2"),
                                        new ListItem("هردو", "0")
                                    )
                                    .SelectedItems(new { value = "0" }),
                                X.Label("نوع حساب:"),
                                X.ComboBox()
                                    .ItemID("CboTypeHesab")
                                    .ForceSelection(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(100)
                                    .BlankText("لطفا نوع  حساب را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldTitle")
                                    .ValueField("fldId")
                                    .Store(X.Store()
                                        .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetTypeHesab"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                        .Listeners(l => l.Load.Handler = "setdefaultValueTypeHesabFishDetails()")
                                    ),
                                X.Label("نوع گزارش:"),
                                X.ComboBox()
                                    .ItemID("CboReportType")
                                    .ForceSelection(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(100)
                                    .BlankText("لطفا نوع  گزارش را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .Listeners(l=>l.Select.Handler="ShowHideGrids()")
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("محاسبه", "1"),
                                        new ListItem("پرداخت", "2")
                                    )
                                    .SelectedItems(new { value = "1" }),                                    
                                X.FieldSet()
                                    .Border(false)
                                    .ColSpan(8)
                                    .ItemID("FieldsetSearch")
                                    .Padding(0)
                                    .Margin(0)
                                    .Listeners(l => l.AfterRender.Handler = "App.FishHoghoughi_Details.queryById('FieldsetSearch').setWidth(Ext.getBody().getWidth() - 720);")
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Left })
                                    .Items(
                                        Html.X().Button()
                                            .Text("جستجو")
                                            .Icon(Ext.Net.Icon.Magnifier)
                                            .Listeners(l => l.Click.Handler = "SearchFishDetails()")
                                    )
                        )
                    )
        ),
        X.GridPanel()
            .ID("FishHoghoughi_DetailsGrid2")
            .BottomBar(X.PagingToolbar())
            .Border(true)
            .TopBar(Html.X().Toolbar().Items(
                Html.X().Button()
                    .Text("خروجی اکسل")
                    .Icon(Ext.Net.Icon.PageExcel)
                    .Listeners(l => l.Click.Handler = "CreateExcelFishDetails();"),
                X.ToolbarSeparator(),
                Html.X().Container().Html("<ul class='legend'><li><span class='red'></span> حقوق</li>"+
                    "<li><span class='green'></span>فوق العاده جذب</li><li><span class='yellow'></span>فوق العاده ویژه</li>"+
                    "<li><span class='green1'></span>تجمیع تفاوت بند ی و جزء 1</li>" +
                    "<li><span class='blue'></span>فوق العاده مخصوص</li><li><span class='orange'></span>فوق العاده خاص</li><li></ul>"))
            )
        //.Cls("x-grid-group-hd-collapsible-no-image")
        //.TopBar(
        //    Html.X().Toolbar()
        //        .Items(
        //            Html.X().Button()
        //                .Text("افزودن سطر جدید")
        //                .Icon(Ext.Net.Icon.BulletPlus)
        //                .Listeners(l => l.Click.Handler = "AddFishHoghoughi_Details();"),
        //            Html.X().Button()
        //                .Text("ذخیره")
        //                .Icon(Ext.Net.Icon.Disk)
        //                .Listeners(l => l.Click.Handler = "SaveFishHoghoughi_Details();")
        //        )
        //)
            .Store(
                X.StoreForModel()
                    .AutoLoad(false)
                    .GroupField("fldOrder").GroupDir(Ext.Net.SortDirection.ASC)
                    .Sorters(
                        Html.X().DataSorter().Property("fldOrder").Direction(Ext.Net.SortDirection.ASC)
                    )
                    .Listeners(l => l.DataChanged.Handler = "App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid2').selModel.refresh();")
                    .Proxy(Html.X().AjaxProxy()
                        .Url(Url.Action("ReadMoavagheDetails"))
                        .Reader(Html.X().JsonReader().Root("data"))
                    )
                    .PageSize(2000)
                    .RemoteFilter(false)
                    .RemotePaging(false)
            )
            .ViewConfig(
                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    .GetRowClass(l => l.Fn = "SetColorRowFD")
            )
            .Plugins(X.FilterHeader().Remote(false))
            .Features(
                Html.X().Summary().Dock(SummaryDock.Bottom),
                Html.X().GroupingSummary().StartCollapsed(false).GroupHeaderTplString("{[values.rows[0].data.fldCalcTypeName]}")
            )
            .ColumnModel(
                Html.X().RowNumbererColumn(),
                //Html.X().Column()/*.DataIndex(Model, m => m.fldGroupedTitle)*/.Text("عنوان در فیش حقوقی").Filterable(false)
                //    .Sortable(false).Flex(5).Wrap(true).Renderer("GroupedColor"),
                Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("عنوان آیتم").Flex(5).Wrap(true).Sortable(false)
                    .CustomSummaryType("Remain").SummaryRenderer(new Renderer { Handler = "ShowRemain" }),
                Html.X().SummaryColumn().DataIndex(Model, m => m.fldBed).Text("بدهکار").Groupable(false).Flex(3)
                    .Sortable(false).Renderer("return value.toLocaleString()").SummaryType(SummaryType.Sum).SummaryRenderer(new Renderer { Fn = "setSize_Color" }),
                Html.X().SummaryColumn().DataIndex(Model, m => m.fldBes).Text("بستانکار").Sortable(false).Flex(3).Renderer("return value.toLocaleString()")
                    .SummaryType(SummaryType.Sum).SummaryRenderer(new Renderer { Handler = "setSize_Color2" }),
                Html.X().Column().DataIndex(Model, m => m.fldMablaghHokm).Text("مبلغ حکم").Sortable(false).Flex(2)
                    .Renderer("return value.toLocaleString()"),
                Html.X().Column().DataIndex(Model, m => m.fldBimeMashmool).Text("مشمول بیمه").Sortable(false).Flex(3)
                    .CustomSummaryType("SumMashmoolBime").SummaryRenderer(new Renderer { Handler = "setSize_Color" }),
                Html.X().Column().DataIndex(Model, m => m.fldMaliyatMashmool).Text("مشمول مالیات").Sortable(false).Flex(3)
                    .CustomSummaryType("SumMashmoolMaliat").SummaryRenderer(new Renderer { Handler = "setSize_Color" }),
                Html.X().Column().DataIndex(Model, m => m.fldKarkard).Text("روز کارکرد").Sortable(false).Flex(1),
                Html.X().Column().DataIndex(Model, m => m.fldYearPardakht).Text("سال پرداخت").Sortable(false).Flex(1),
                Html.X().Column().DataIndex(Model, m => m.fldMonthPardakhtName).Text("ماه پرداخت").Sortable(false).Flex(2),
                Html.X().Column().DataIndex(Model, m => m.fldHokmId).Text("شماره حکم").Sortable(false).Flex(2).Renderer("LinkHokmDetails"),
                Html.X().ComponentColumn().Flex(1).Component(Html.X().Button().Icon(Icon.Printer).Text("چاپ حکم")
                     .Listeners(l => l.Click.Handler = "GotoPrintHokm();")).Filterable(false)
            )
            .SelectionModel(
                Html.X().RowSelectionModel()
                    .Mode(Ext.Net.SelectionMode.Single)
            ),
        X.GridPanel()
            .ID("FishHoghoughi_DetailsGrid")
            .BottomBar(X.PagingToolbar())
            .Border(true)
            .TopBar(Html.X().Toolbar().Items(
                Html.X().Button()
                    .Text("خروجی اکسل")
                    .Icon(Ext.Net.Icon.PageExcel)
                    .Listeners(l => l.Click.Handler = "CreateExcelFishDetails();"),
                X.ToolbarSeparator(),
                Html.X().Container().Html("<ul class='legend'><li><span class='red'></span> حقوق</li>"+
                    "<li><span class='green'></span>فوق العاده جذب</li><li><span class='yellow'></span>فوق العاده ویژه</li>"+
                    "<li><span class='green1'></span>تجمیع تفاوت بند ی و جزء 1</li>"+
                    "<li><span class='blue'></span>فوق العاده مخصوص</li><li><span class='orange'></span>فوق العاده خاص</li><li></ul>")
                )
            )
            //.Cls("x-grid-group-hd-collapsible-no-image")
            .Store(
                X.StoreForModel()
                    .AutoLoad(false)
                    .GroupField("fldOrder").GroupDir(Ext.Net.SortDirection.ASC)
                    .Sorters(
                        Html.X().DataSorter().Property("fldOrder").Direction(Ext.Net.SortDirection.ASC)
                    )
                    .Listeners(l => l.DataChanged.Handler = "App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid').selModel.refresh();")
                    .Proxy(Html.X().AjaxProxy()
                        .Url(Url.Action("Read"))
                        .Reader(Html.X().JsonReader().Root("data"))
                    )
                    .PageSize(2000)
                    .RemoteFilter(false)
                    .RemotePaging(false)
            )
            .ViewConfig(
                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    .GetRowClass(l => l.Fn = "SetColorRowFD")
                    //.Listeners(l => l.Refresh.Handler = "testview()")
            )
            .Plugins(X.FilterHeader().Remote(false))
            .Features(
                Html.X().Summary().ID("summaryFishDetails").Dock(SummaryDock.Bottom),
                Html.X().GroupingSummary().StartCollapsed(false).ID("summaryFishDetails2").GroupHeaderTplString("{[values.rows[0].data.fldCalcTypeName]}")
            )
            .ColumnModel(
                Html.X().RowNumbererColumn(),
                //Html.X().Column()/*.DataIndex(Model, m => m.fldGroupedTitle)*/.Text("عنوان در فیش حقوقی").Filterable(false)
                //    .Sortable(false).Flex(5).Wrap(true).Renderer("GroupedColor"),
                Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("عنوان آیتم").Flex(5).Wrap(true).Sortable(false)
                    .CustomSummaryType("Remain").SummaryRenderer(new Renderer { Handler = "ShowRemain" }),
                Html.X().SummaryColumn().DataIndex(Model, m => m.fldBed).Text("بدهکار").Groupable(false).Flex(3)
                    .Sortable(false).Renderer("return value.toLocaleString()").SummaryType(SummaryType.Sum).SummaryRenderer(new Renderer { Fn = "setSize_Color" }),
                Html.X().SummaryColumn().DataIndex(Model, m => m.fldBes).Text("بستانکار").Sortable(false).Flex(3).Renderer("return value.toLocaleString()")
                    .SummaryType(SummaryType.Sum).SummaryRenderer(new Renderer { Handler = "setSize_Color2" }),
                Html.X().Column().DataIndex(Model, m => m.fldMablaghHokm).Text("مبلغ حکم").Sortable(false).Flex(2)
                    .Renderer("return value.toLocaleString()"),
                Html.X().Column().DataIndex(Model, m => m.fldBimeMashmool).Text("مشمول بیمه").Sortable(false).Flex(3)
                    .CustomSummaryType("SumMashmoolBime").SummaryRenderer(new Renderer { Handler = "setSize_Color" }),
                Html.X().Column().DataIndex(Model, m => m.fldMaliyatMashmool).Text("مشمول مالیات").Sortable(false).Flex(3)
                    .CustomSummaryType("SumMashmoolMaliat").SummaryRenderer(new Renderer { Handler = "setSize_Color" }),
                Html.X().Column().DataIndex(Model, m => m.fldKarkard).Text("روز کارکرد").Sortable(false).Flex(1),
                Html.X().Column().DataIndex(Model, m => m.fldYearPardakht).Text("سال پرداخت").Sortable(false).Flex(1),
                Html.X().Column().DataIndex(Model, m => m.fldMonthPardakhtName).Text("ماه پرداخت").Sortable(false).Flex(2),
                Html.X().Column().DataIndex(Model, m => m.fldHokmId).Text("شماره حکم").Sortable(false).Flex(2).Renderer("LinkHokmDetails")
                    .CustomSummaryType("GroupDataa").SummaryRenderer(new Renderer { Handler = "DetailsMoavaghee" }),
                Html.X().ComponentColumn().Flex(1).ID("ColPrintFishh").Component(Html.X().Button().Icon(Icon.Printer).Text("چاپ حکم")
                     .Listeners(l => l.Click.Handler = "GotoPrintHokm();")).Filterable(false)
            )
            .SelectionModel(
                Html.X().RowSelectionModel()
                    .Mode(Ext.Net.SelectionMode.Single)
            )
    )
)
<script type="text/javascript">
    function ShowHideGrids() {
        var CboReportType = App.FishHoghoughi_Details.queryById('CboReportType');
        if (CboReportType.getValue() == "1") {
            App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid').show();
            App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid2').hide();
            App.FishHoghoughi_Details.queryById('CboTaMonth').show();
            App.FishHoghoughi_Details.queryById('lblTaMonth').show();
            App.FishHoghoughi_Details.queryById('CboTaYear').show();
            App.FishHoghoughi_Details.queryById('lblTaYear').show();
            App.FishHoghoughi_Details.queryById('FieldsetSearch').setWidth(Ext.getBody().getWidth() - 720);
            App.FishHoghoughi_Details.queryById('txtName').setWidth(263);
            App.FishHoghoughi_Details.queryById('CboOrgan').setWidth(235);
        }
        else {
            App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid2').show();
            App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid').hide();
            App.FishHoghoughi_Details.queryById('CboTaMonth').hide();
            App.FishHoghoughi_Details.queryById('lblTaMonth').hide();
            App.FishHoghoughi_Details.queryById('CboTaYear').hide();
            App.FishHoghoughi_Details.queryById('lblTaYear').hide();
            App.FishHoghoughi_Details.queryById('FieldsetSearch').setWidth(Ext.getBody().getWidth() - 1058);
            App.FishHoghoughi_Details.queryById('txtName').setWidth(233);
            App.FishHoghoughi_Details.queryById('CboOrgan').setWidth(263);
        }
        SearchFishDetails();
    }

    function CreateExcelFishDetails() {
        var grid = App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid');
        var grid2 = App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid2');

        var TypeReport = 1;
        if (grid.isHidden()) {
            TypeReport = 2;
        }
        if (grid.isHidden() && grid2.store.count() == 0 || grid2.isHidden() && grid.store.count() == 0) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "اطلاعاتی جهت گرفتن خروجی اکسل موجود نیست.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
        else {
            window.location.href = '@Url.Content("~/PayRoll/FishHoghughiDetails/CreateExcelFishDetails/")' + '?PersonalId=' + App.FishHoghoughi_Details.queryById('RptPersonalId').getValue() +
                '&Nobat=' + App.FishHoghoughi_Details.queryById('RptNobat').getValue() + '&Year=' + App.FishHoghoughi_Details.queryById('RptYear').getValue()
                + '&Month=' + App.FishHoghoughi_Details.queryById('RptMonth').getValue() + '&TaYear=' +
                App.FishHoghoughi_Details.queryById('RptTaYear').getValue() + '&TaMonth=' + App.FishHoghoughi_Details.queryById('RptTaMonth').getValue()
                + '&FilterType=' + App.FishHoghoughi_Details.queryById('RptFilter').getValue() + '&TypeReport=' + TypeReport + '&TypeHesab=' + App.FishHoghoughi_Details.queryById("RptTypeHesab").getValue();
        }
        
    }

    function GotoPrintHokm() {
        var record = App.ColPrintFishh.activeRecord.record;
        Ext.net.DirectMethod.request({
            url: '/Personeli/PersonalHokm/Print',
            params: {
                PersonalHokmId: record.data.fldHokmId,
                PersonalId: App.FishHoghoughi_Details.queryById('RptPersonalId').getValue(),
                AnvaeEstekhdamId: 0,
                TarikhEjra: "",
                Details: 1
            }
        });
    }

    function SumMashmoolBime(records) {
        var s = App.FishHoghoughi_Details.queryById("FishHoghoughi_DetailsGrid").store;
        if (records[0] != undefined) {
            if (records.length == s.count()) {
                var sumMashmolBime = 0;
                s.getGroups().forEach(function (rec) {
                    sumMashmolBime += rec.children[0].data.fldMashmolBime;
                });
                return sumMashmolBime.toLocaleString();
            }
            return records[0].data.fldMashmolBime.toLocaleString();
        }
        else {
            return "0";
        }
    }

    function Remain(records) {
        var sumBed = 0;
        var sumBes = 0;
        records.forEach(function (rec) {
            sumBed += rec.get('fldBed');
            sumBes += rec.get('fldBes');
        });
        return (sumBed - sumBes).toLocaleString();
    }

    function GroupDataa(records) {
        if (records[0] != undefined && records[0].data.fldCalcType == 2) {
            return records[0].data.fldYear.toString() + records[0].data.fldMonth.toString().padStart(2, 0) + records[0].data.fldYearPardakht.toString()
                + records[0].data.fldMonthPardakht.toString().padStart(2, 0);
        }
        else {
            return "0";
        }
    }

    function DetailsMoavaghee(value) {
        if (value == "0") {
            return "";
        }
        else {
            return "<a href='javascript:GotoMoavagheDetails(" + value + ");'><div style='display:inline;font-weight: normal;font-size:10px;'>جزئیات</div></a>";
        }
    }

    var SetColorRowFD = function (record, rowIndex, rowParams, store) {
        if (record.data.fldGrouped == 1) {
            return "redRow";
        }
        else if (record.data.fldGrouped == 2) {
            return "greenRow";
        }
        else if (record.data.fldGrouped == 3) {
            return "yellowRow";
        }
        else if (record.data.fldGrouped == 4) {
            return "blueRow";
        }
        else if (record.data.fldGrouped == 5) {
            return "orangeRow";
        }
        else if (record.data.fldGrouped == 6) {
            return "greenRow1";
        }
    };

    function GotoMoavagheDetails(Year_Month) {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/FishHoghughiDetails/Moavaghe',
            params: {
                PersonalId: App.FishHoghoughi_Details.queryById('RptPersonalId').getValue(),
                Nobat: App.FishHoghoughi_Details.queryById('RptNobat').getValue(),
                Year: Year_Month.toString().substr(0, 4),
                Month: Year_Month.toString().substr(4, 2),
                YearPardakht: Year_Month.toString().substr(6, 4),
                MonthPardakht: Year_Month.toString().substr(10),
                TypeHesab:App.FishHoghoughi_Details.queryById("RptTypeHesab").getValue()
            }
        });
    }

    function SumMashmoolMaliat(records) {
        var s = App.FishHoghoughi_Details.queryById("FishHoghoughi_DetailsGrid").store;
        if (records[0] != undefined) {
            if (records.length == s.count()) {
                var sumMashmolMaliyat = 0;
                s.getGroups().forEach(function (rec) {
                    sumMashmolMaliyat += rec.children[0].data.fldMashmolMaliyat;
                });
                return sumMashmolMaliyat.toLocaleString();
            }
            return records[0].data.fldMashmolMaliyat.toLocaleString();
        }
        else {
            return "0";
        }
    }

    /*function testview() {
        var columns = App.FishHoghoughi_Details.queryById("FishHoghoughi_DetailsGrid").columns,
                view = App.FishHoghoughi_Details.queryById("FishHoghoughi_DetailsGrid").getView(),
                store = App.FishHoghoughi_Details.queryById("FishHoghoughi_DetailsGrid").getStore(),
                rowCount = store.getCount(),
                column = columns[0],
                dataIndex = column.dataIndex,
                spanCell = null,
                spanCount = null;
        spanValue = null;

        for (var row = 0; row < rowCount; ++row) {
            var cell = view.getCellByPosition({ row: row, column: 0 }).dom,
                record = store.getAt(row),
                value = record.get("fldGrouped");

            if (spanValue != value || value == 0) {
                if (spanCell !== null) {
                    spanCell.rowSpan = spanCount;
                }
                if (Ext.fly(cell) != null) {

                    Ext.fly(cell).setStyle('display', '');

                    spanCell = cell;
                }
                spanCount = 1;
                spanValue = value;
            }
            else {
                spanCount++;
                if (Ext.fly(cell) != null) {
                    Ext.fly(cell).setStyle('display', 'none');
                }
            }
        }
        if (spanCell !== null) {
            spanCell.rowSpan = spanCount;
        }
    }*/

    function GotoShowHokm(value) {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/FishHoghughiDetails/Hokm',
            params: {
                HokmId: value
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    var setSize_Color = function (sum) {
        return "<div style='display:inline;font-weight: bold;font-size:13px;color:green;'>" + sum.toLocaleString() + "</div>";
    };

    function setSize_Color2(sum) {
        return "<div style='display:inline;font-weight: bold;font-size:13px;color:red;'>" + sum.toLocaleString() + "</div>";
    }

    function ShowRemain(value) {
        return "<div style='display:inline;font-weight: bold;font-size:13px;color:#167747;'>مانده: " + value + "</div>";
    }

    function setdefaultValueOrganFishDetails() {
        App.FishHoghoughi_Details.queryById('CboOrgan').select(App.FishHoghoughi_Details.queryById('CboOrgan').store.getAt(0));
    }

    function setdefaultValueYearFishDetails() {
        App.FishHoghoughi_Details.queryById('CboYear').setValue(App.FishHoghoughi_Details.queryById('CboYear').store.getAt(0));
    }

    function setdefaultValueTaYearFishDetails() {
        App.FishHoghoughi_Details.queryById('CboTaYear').setValue(App.FishHoghoughi_Details.queryById('CboTaYear').store.getAt(0));
    }

    function setdefaultValueMonthFishDetails() {
        App.FishHoghoughi_Details.queryById('CboMonth').setValue(App.FishHoghoughi_Details.queryById('CboMonth').store.getAt(0));
    }

    function setdefaultValueTaMonthFishDetails() {
        App.FishHoghoughi_Details.queryById('CboTaMonth').setValue(App.FishHoghoughi_Details.queryById('CboTaMonth').store.getAt(0));
    } 

    function setdefaultValueTypeHesabFishDetails() {
        App.FishHoghoughi_Details.queryById('CboTypeHesab').setValue("2");
    } 

    function setdefaultValueNobatePardakhtFishDetails() {
        App.FishHoghoughi_Details.queryById('CboNobatePardakht').setValue(App.FishHoghoughi_Details.queryById('CboNobatePardakht').store.getAt(0));
    }

    function setYearClassFishDetails() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetYearClass',
            params: {
                Year: App.FishHoghoughi_Details.queryById("CboYear").getValue()
            }
        });
    }

    function setMonthClassFishDetails() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetMonthClass',
            params: {
                Month: App.FishHoghoughi_Details.queryById("CboMonth").getValue()
            }
        });
    }

    function setNobatePardakhtCalssFishDetails() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/setNobatePardakhtCalss',
            params: {
                NobatePardakht: App.FishHoghoughi_Details.queryById("CboNobatePardakht").getValue()
            }
        });
    }

    function FilterCboTaMonth() {
        var Year = App.FishHoghoughi_Details.queryById('CboYear').getValue();
        var TaYear = App.FishHoghoughi_Details.queryById('CboTaYear').getValue();
        if (Year == TaYear) {
            App.FishHoghoughi_Details.queryById('CboTaMonth').getStore().getProxy().setExtraParam("Month", App.FishHoghoughi_Details.queryById('CboMonth').getValue());
            App.FishHoghoughi_Details.queryById('CboTaMonth').getStore().load();
        }
        else {
            App.FishHoghoughi_Details.queryById('CboTaMonth').getStore().getProxy().setExtraParam("Month", null);
            App.FishHoghoughi_Details.queryById('CboTaMonth').getStore().load();
        }
    }

    var SelectPersonFishDetails = function (Fieldd, Eventt) {
        if (Eventt.keyCode == 45) {
            Ext.net.DirectMethod.request({
                url: '/PayRoll/SearchPayPersonal/Index',
                params: {
                    State: 3,
                    organId: App.FishHoghoughi_Details.queryById('CboOrgan').getValue()
                }
            });
        }
    };

    function SearchPayPersonFishDetails() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/SearchPayPersonal/Index',
            params: {
                State: 3,
                organId: App.FishHoghoughi_Details.queryById('CboOrgan').getValue()
            }
        });
    }

    function ChangeCboOrganFishHoghoughi_Details() {
        App.FishHoghoughi_Details.queryById('fldPersonalId').setValue(0);
        App.FishHoghoughi_Details.queryById('txtName').setValue("");
    }

    function FishHoghoughi_DetailsSetSize() {
        App.FishHoghoughi_Details.setWidth(App.PayWin.getWidth());
        App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid').setHeight(App.PayWin.getHeight() - 280);
        App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid').show();
        App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid2').setHeight(App.PayWin.getHeight() - 260);
        App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid2').hide();
    }

    function SearchFishDetails() {
        var grid = App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid');
        var grid2 = App.FishHoghoughi_Details.queryById('FishHoghoughi_DetailsGrid2');
        var txtName = App.FishHoghoughi_Details.queryById('txtName');
        var CboNobatePardakht = App.FishHoghoughi_Details.queryById('CboNobatePardakht');
        var CboYear = App.FishHoghoughi_Details.queryById('CboYear');
        var CboMonth = App.FishHoghoughi_Details.queryById('CboMonth');
        var CboTaYear = App.FishHoghoughi_Details.queryById('CboTaYear');
        var CboTaMonth = App.FishHoghoughi_Details.queryById('CboTaMonth');
        var CboFilterType = App.FishHoghoughi_Details.queryById('CboFilterType');
        var CboTypeHesab = App.FishHoghoughi_Details.queryById('CboTypeHesab');

        if (grid2.isHidden()) {
            if (txtName.validate() && CboNobatePardakht.validate() && CboYear.validate() && CboMonth.validate()
                && CboTaYear.validate() && CboTaMonth.validate() && CboFilterType.validate() && CboTypeHesab.validate()) {
                App.FishHoghoughi_Details.queryById("RptPersonalId").setValue(App.FishHoghoughi_Details.queryById('fldPersonalId').getValue());
                App.FishHoghoughi_Details.queryById("RptMonth").setValue(App.FishHoghoughi_Details.queryById('CboMonth').getValue());
                App.FishHoghoughi_Details.queryById("RptYear").setValue(App.FishHoghoughi_Details.queryById('CboYear').getValue());
                App.FishHoghoughi_Details.queryById("RptTaYear").setValue(App.FishHoghoughi_Details.queryById('CboTaYear').getValue());
                App.FishHoghoughi_Details.queryById("RptTaMonth").setValue(App.FishHoghoughi_Details.queryById('CboTaMonth').getValue());
                App.FishHoghoughi_Details.queryById("RptFilter").setValue(App.FishHoghoughi_Details.queryById('CboFilterType').getValue());
                App.FishHoghoughi_Details.queryById("RptNobat").setValue(App.FishHoghoughi_Details.queryById('CboNobatePardakht').getValue());
                App.FishHoghoughi_Details.queryById("RptTypeHesab").setValue(App.FishHoghoughi_Details.queryById('CboTypeHesab').getValue());

                grid.getStore().getProxy().setExtraParam("PersonalId",
                    App.FishHoghoughi_Details.queryById('fldPersonalId').getValue());

                grid.getStore().getProxy().setExtraParam("Nobat",
                    App.FishHoghoughi_Details.queryById('CboNobatePardakht').getValue());

                grid.getStore().getProxy().setExtraParam("Year",
                    App.FishHoghoughi_Details.queryById('CboYear').getValue());

                grid.getStore().getProxy().setExtraParam("Month",
                    App.FishHoghoughi_Details.queryById('CboMonth').getValue());

                grid.getStore().getProxy().setExtraParam("TaYear",
                    App.FishHoghoughi_Details.queryById('CboTaYear').getValue());

                grid.getStore().getProxy().setExtraParam("TaMonth",
                    App.FishHoghoughi_Details.queryById('CboTaMonth').getValue());

                grid.getStore().getProxy().setExtraParam("FilterType",
                    App.FishHoghoughi_Details.queryById('CboFilterType').getValue());

                grid.getStore().getProxy().setExtraParam("TypeHesab",
                    App.FishHoghoughi_Details.queryById('CboTypeHesab').getValue());

                grid.getStore().load();
            }
        }
        else {
            if (txtName.validate() && CboNobatePardakht.validate() && CboYear.validate() && CboMonth.validate()
                && CboFilterType.validate() && CboTypeHesab.validate()) {
                App.FishHoghoughi_Details.queryById("RptPersonalId").setValue(App.FishHoghoughi_Details.queryById('fldPersonalId').getValue());
                App.FishHoghoughi_Details.queryById("RptMonth").setValue(App.FishHoghoughi_Details.queryById('CboMonth').getValue());
                App.FishHoghoughi_Details.queryById("RptYear").setValue(App.FishHoghoughi_Details.queryById('CboYear').getValue());
                App.FishHoghoughi_Details.queryById("RptFilter").setValue(App.FishHoghoughi_Details.queryById('CboFilterType').getValue());
                App.FishHoghoughi_Details.queryById("RptNobat").setValue(App.FishHoghoughi_Details.queryById('CboNobatePardakht').getValue());
                App.FishHoghoughi_Details.queryById("RptTypeHesab").setValue(App.FishHoghoughi_Details.queryById('CboTypeHesab').getValue());

                grid2.getStore().getProxy().setExtraParam("PersonalId",
                    App.FishHoghoughi_Details.queryById('fldPersonalId').getValue());

                grid2.getStore().getProxy().setExtraParam("Nobat",
                    App.FishHoghoughi_Details.queryById('CboNobatePardakht').getValue());

                grid2.getStore().getProxy().setExtraParam("Year",
                    App.FishHoghoughi_Details.queryById('CboYear').getValue());

                grid2.getStore().getProxy().setExtraParam("Month",
                    App.FishHoghoughi_Details.queryById('CboMonth').getValue());

                grid2.getStore().getProxy().setExtraParam("FilterType",
                    App.FishHoghoughi_Details.queryById('CboFilterType').getValue());

                grid2.getStore().getProxy().setExtraParam("TypeHesab",
                    App.FishHoghoughi_Details.queryById('CboTypeHesab').getValue());

                grid2.getStore().load();
            }
        }
    }

    var addKeyMapFishHoghoughi_Details = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var CboReportType = App.FishHoghoughi_Details.queryById('CboReportType');
                    var keyfield = App.FishHoghoughi_Details.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "CboReportType") {
                        SearchFishDetails();
                        return;
                    }
                    else if (keyfield.itemId == "CboMonth") {
                        if (CboReportType.getValue() == "1") {
                            nextfld = App.FishHoghoughi_Details.queryById('CboTaYear');
                        }
                        else {
                            nextfld = App.FishHoghoughi_Details.queryById('CboNobatePardakht');
                        }
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    };
</script>