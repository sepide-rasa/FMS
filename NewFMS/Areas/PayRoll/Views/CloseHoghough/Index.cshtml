@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Closable(true)
    .Border(false)
    .CloseAction(CloseAction.Destroy)
    .Title("بستن حقوق")
    .Width(450)
    .Layout(LayoutType.Fit)
    .ID("CloseHoghoughWin")
    .Modal(true)
    .ButtonAlign(Alignment.Center)
    .Buttons(
        Html.X().Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Printer)
                .Listeners(l => l.Click.Handler = "MessageBime();"),
            X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help).Listeners(l => { l.Click.Handler = "HelpCloseHoghough();"; }),

        Html.X().Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .OnClientClick("App.CloseHoghoughWin.destroy()")
                )
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.Panel()
                    .Border(false)
                    .Items(
                        X.FieldSet()
                            .Border(true)
                            //.PaddingSpec("10px 0 0 0")
                            .Title("مشخصات بستن حقوق")
                            .Height(75)
                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                            .Defaults(new { Margin = 2 })
                            .Items(
                                X.Label("سال:").ItemID("lblYear"),
                                X.ComboBox()
                                    .ItemID("CboYear")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .AutoFocus(true)
                                    .BlankText("لطفا سال را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueYearHo()";
                                        l.Select.Handler = "setYearClassHo()";
                                    })
                                    .Items(
                                        new ListItem("1387", "1387"),
                                        new ListItem("1388", "1388"),
                                        new ListItem("1389", "1389"),
                                        new ListItem("1390", "1390"),
                                        new ListItem("1391", "1391"),
                                        new ListItem("1392", "1392"),
                                        new ListItem("1393", "1393"),
                                        new ListItem("1394", "1394"),
                                        new ListItem("1395", "1395"),
                                        new ListItem("1396", "1396"),
                                        new ListItem("1397", "1397"),
                                        new ListItem("1398", "1398"),
                                        new ListItem("1399", "1399"),
                                        new ListItem("1400", "1400"),
                                        new ListItem("1401", "1401"),
                                            new ListItem("1402", "1402"),
                                        new ListItem("1403", "1403")
                                ),
                                X.Label("ماه:").ItemID("lblMonth"),
                                X.ComboBox()
                                    .ItemID("CboMonth")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا ماه را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueMonthHo()";
                                        l.Select.Handler = "setMonthClassHo()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("فروردین", "01"),
                                        new ListItem("اردیبهشت", "02"),
                                        new ListItem("خرداد", "03"),
                                        new ListItem("تیر", "04"),
                                        new ListItem("مرداد", "05"),
                                        new ListItem("شهریور", "06"),
                                        new ListItem("مهر", "07"),
                                        new ListItem("آبان", "08"),
                                        new ListItem("آذر", "09"),
                                        new ListItem("دی", "10"),
                                        new ListItem("بهمن", "11"),
                                        new ListItem("اسفند", "12")
                                    ),
                                X.Label("نوبت پرداخت:").ItemID("lblNobatePardakht"),
                                X.ComboBox()
                                    .ItemID("CboNobatePardakht")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueNobatePardakhtHo()";
                                        l.Select.Handler = "setNobatePardakhtCalssHo()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("یک", "1"),
                                        new ListItem("دو", "2"),
                                        new ListItem("سه", "3"),
                                        new ListItem("چهار", "4"),
                                        new ListItem("پنج", "5")
                                    )
                )
                )
                )
            )
    )

<script type="text/javascript">
    function setValueYearHo() {
        var CboYear = App.CloseHoghoughWin.queryById('CboYear');
        CboYear.setValue('@ViewBag.Year');
    }

    function setValueMonthHo() {
        var CboMonth = App.CloseHoghoughWin.queryById('CboMonth');
        CboMonth.setValue('@ViewBag.Month');
    }

    function setValueNobatePardakhtHo() {
        var CboNobatePardakht = App.CloseHoghoughWin.queryById('CboNobatePardakht');
        CboNobatePardakht.setValue('@ViewBag.nobatePardakht');
    }

    function setYearClassHo() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetYearClass',
            params: {
                Year: App.CloseHoghoughWin.queryById("CboYear").getValue()
            }
        });
    }
    function HelpCloseHoghough() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/CloseHoghough/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function setMonthClassHo() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetMonthClass',
            params: {
                Month: App.CloseHoghoughWin.queryById("CboMonth").getValue()
            }
        });
    }

    function setNobatePardakhtCalssHo() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/setNobatePardakhtCalss',
            params: {
                NobatePardakht: App.CloseHoghoughWin.queryById("CboNobatePardakht").getValue()
            }
        });
    }
    function MessageBime() {
        var CboYear = App.CloseHoghoughWin.queryById('CboYear').getDisplayValue();
        var CboMonth = App.CloseHoghoughWin.queryById('CboMonth').getDisplayValue();
        Ext.MessageBox.show({
            title: "هشدار",
            msg: "پس از بستن حقوق، اجازه تغییر در " +CboMonth+" ماه سال " +CboYear+" را نخواهید داشت. آیا برای بستن حقوق مطمئن هستید؟",
            icon: Ext.MessageBox.WARNING,
            buttons: Ext.MessageBox.YESNO,
            fn: function (btn) {
                if (btn == 'yes') {
                    SaveCloseH();
                }
            }
        });

    }
    function SaveCloseH() {
        var CboYear = App.CloseHoghoughWin.queryById('CboYear');
        var CboMonth = App.CloseHoghoughWin.queryById('CboMonth');
        var CboNobatePardakht = App.CloseHoghoughWin.queryById('CboNobatePardakht');
        
        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/CloseHoghough/UpdateFlag',
            params: {
                Year: CboYear.getValue(),
                Month: CboMonth.getValue(),
                NobatePardakht: CboNobatePardakht.getValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1) {
                    ic = Ext.MessageBox.ERROR;
                }
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                Ext.net.Mask.hide();
            }
        });
    }

</script>