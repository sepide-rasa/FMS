@model NewFMS.Models.MandehPasAndaz
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}

@(Html.X().Panel()
        .ID("MandehPasAndaz")
        .Title("مانده پس انداز")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
            .Border(false)
        .Listeners(li => li.AfterRender.Handler = "MandehPasAndazSetSize();")
       .Items(
    X.Panel().Border(false)//.Height(250)
        .Items(
                X.GridPanel()
                                .AutoScroll(true)
                                    .Listeners(l => l.ItemClick.Handler = "ReloadGridDetailPasAndaz();")
                                         .TopBar(
                                Html.X().Toolbar()
                                .Items(
                                X.ComboBox()
                                    .ItemID("CboOrgan")
                                    .TypeAhead(true)
                                    .AutoFocus(true)
                                    .Editable(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .BlankText("لطفا سازمان را انتخاب کنید.")
.Listeners(l => l.Change.Handler = "App.MandehPasAndaz.queryById('GridHeader').store.load();App.MandehPasAndaz.queryById('GridHeader').getSelectionModel().clearSelections();App.MandehPasAndaz.queryById('GridDetailMandehPasAndaz').store.loadData('');App.MandehPasAndaz.queryById('GridDetailMandehPasAndaz').getSelectionModel().clearSelections();")
                                    .AllowBlank(false)
                                    .ForceSelection(true)
                                    .DisplayField("fldTitle")
                                    .ValueField("fldId")
                                    .EmptyText("سازمان ...")
                                    .Width(250)
                                    .Store(X.Store()
                                        .Model(X.Model()
                                            .IDProperty("fldId")                                    
                                            .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetOrgan"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                            .Listeners(l => l.Load.Handler = "setdefaultValueMandehPasAndaz()")
                                        )
                                )
                            )
                                .ItemID("GridHeader")
                                .BottomBar(X.PagingToolbar())
                                .Flex(2)
                                .Store(
                                           X.StoreFor(Model.Personal)
                                           .AutoLoad(false)
                                        .Proxy(Html.X().AjaxProxy()
                                            .Url(Url.Action("Read"))
                                            .Reader(Html.X().JsonReader().Root("data")))
                                                            .Parameters(ps => ps.Add(new StoreParameter("OrganId", "App.MandehPasAndaz.queryById('CboOrgan').getValue()", ParameterMode.Raw)))
    
                                .PageSize(9)
                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = "App.MandehPasAndaz.queryById('GridHeader').selModel.refresh();")*/)
                                .View(
                                    Html.X().GridView()
                                        .LoadingText("در حال بارگذاری...")
                                        .RTL(true))
                                            .Plugins(X.FilterHeader().Remote(true))
                                    .ColumnModel(
                                        Html.X().RowNumbererColumn(),
                                                     Html.X().Column().DataIndex(Model.Personal, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldName_Father).Text("نام و نام خانوادگی").Flex(5).Wrap(true),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldCodemeli).Text("کد ملی").Flex(2),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(2),
                                                    Html.X().Column().DataIndex(Model.Personal, m => m.fldJobeCode).Text("کد شغلی بیمه").Flex(2),
                                            Html.X().Column().DataIndex(Model.Personal, m => m.fldStatusId).Text("وضعیت").Hidden(true).Flex(1),/*فعال1:   2:غیرفعال  3:بازنشسته*/
                                            Html.X().Column().DataIndex(Model.Personal, m => m.fldStatusTitle).Text("وضعیت").Hidden(true).Flex(1)
                                        )
                                .SelectionModel(
                                    Html.X().RowSelectionModel()
                                        .Mode(Ext.Net.SelectionMode.Single)
                                        )
        ),
           X.Panel()
                                .ItemID("PnlGridDetail")
                                .Title("پس انداز")
                                .Border(false)
                                .Layout(Ext.Net.LayoutType.Fit)
                                .Items(
                                        X.GridPanel()
                                                  .TopBar(
                                Html.X().Toolbar()
                                .Items(
                                X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)//.ToolTip("کلید میانبر F8")
                                        .Listeners(li => li.Click.Handler = "NewMandehPasAndaz();"),
                                    X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)//.ToolTip("کلید میانبر F2")
                                            .Listeners(Li => Li.Click.Handler = "EditMandehPasAndaz();"),
                                    X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)//.ToolTip("کلید میانبر F9")
                                        .Listeners(de =>
                                        {
                                            de.Click.Handler = "if (App.MandehPasAndaz.queryById('GridHeader').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteMandehPasAndaz();";
                                        })
                                    , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                                        .Listeners(l => { l.Click.Handler = "HelpMandehPasAndaz();"; }) 
                                )
                            )
                                              .BottomBar(X.PagingToolbar())
                                        .AutoScroll(true)
                                            .ID("GridDetailMandehPasAndaz")
                                        .Flex(2)//.Height(187)
                                        .Store(
                                                       X.StoreFor(Model.PasAndaz)
                                                .PageSize(9)
                                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = " App.MandehPasAndaz.queryById('GridDetail').selModel.refresh();")*/
                        )
                                        .View(
                                            Html.X().GridView()
                                                .LoadingText("در حال بارگذاری...")
                                                .RTL(true)
                        )
                                        .ColumnModel(
                                            Html.X().RowNumbererColumn(),
                                                    Html.X().Column().DataIndex(Model.PasAndaz, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                                    Html.X().Column().DataIndex(Model.PasAndaz, m => m.fldPersonalId).Text("کد").Hidden(true).Flex(1),
                                                    Html.X().Column().DataIndex(Model.PasAndaz, m => m.fldTarikhSabt).Text("تاریخ ثبت").Flex(4),
                                                    Html.X().Column().DataIndex(Model.PasAndaz, m => m.FldMablagh).Text("مبلغ").Renderer("Rial").Flex(10)
                                                    )
                                        .SelectionModel(
                                            Html.X().RowSelectionModel()
                                                .Mode(Ext.Net.SelectionMode.Single)
                                )
                    )
    )
)
<script type="text/javascript">
    var dadat;
    function setdefaultValueMandehPasAndaz() {
        App.MandehPasAndaz.queryById('CboOrgan').select(App.MandehPasAndaz.queryById('CboOrgan').store.getAt(0));
    }
    function HelpMandehPasAndaz() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/MandehPasAndaz/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function MandehPasAndazSetSize() {
        var grid = App.MandehPasAndaz.queryById('GridHeader');
        grid.setHeight((App.PayWin.getHeight() - 200) / 2);
        var GridDetail = App.MandehPasAndaz.queryById('GridDetailMandehPasAndaz');
        GridDetail.setHeight((App.PayWin.getHeight() - 200) / 2);
    }
    function ReloadGridDetailPasAndaz() {
        var SelectedRow = App.MandehPasAndaz.queryById('GridHeader').selModel.getLastSelected();

        Ext.net.DirectMethod.request({
            url: '/PayRoll/MandehPasAndaz/Rload?PersonalId=' + SelectedRow.data.fldId + "&OrganId=" + App.MandehPasAndaz.queryById('CboOrgan').getValue(),

            success: function (result) {
                App.MandehPasAndaz.queryById('GridDetailMandehPasAndaz').getStore().loadData(result);
            }
        });
    }

    function EditMandehPasAndaz() {
        var SelectedRow = App.MandehPasAndaz.queryById('GridDetailMandehPasAndaz').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/MandehPasAndaz/new',
                params: {
                    id: SelectedRow.data.fldId,
                    PersonalId: SelectedRow.data.fldPersonalId,
                    OrganId:App.MandehPasAndaz.queryById('CboOrgan').getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewMandehPasAndaz() {
        var SelectedRow = App.MandehPasAndaz.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            if (SelectedRow.data.fldStatusId == 1) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/MandehPasAndaz/new',
                    params: {
                        id: 0,
                        PersonalId: SelectedRow.data.fldId,
                        OrganId: App.MandehPasAndaz.queryById('CboOrgan').getValue()

                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "وضعیت فرد مورد نظر " + SelectedRow.data.fldStatusTitle + " است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک پرسنل را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteMandehPasAndaz() {
        var SelectedHeaderRow = App.MandehPasAndaz.queryById('GridDetailMandehPasAndaz').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/PayRoll/MandehPasAndaz/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId,
                                OrganId: App.MandehPasAndaz.queryById('CboOrgan').getValue()

                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                ReloadGridDetailPasAndaz();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>