@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}

<style>
    .tooltip {
        position: relative;
    }
    /*text-decoration-line:underline;*/
    .tooltip .tooltiptext {
        visibility: hidden;
        width: 50px;
        background-color: #577c50;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        font-size: 11px;
        padding: 5px 0;
        position: absolute;
        bottom: 125%;
        left: 50%;
        margin-left: -30px;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .tooltip .tooltiptext::after {
        content: "";
        position: absolute;
        top: 100%;
        left: 50%;
        border-width: 5px;
        border-style: solid;
        border-color: #577c50 transparent transparent transparent;
    }

    .tooltip:hover .tooltiptext {
        visibility: visible;
        opacity: 1;
    }

    .SpecialDay {
        background-image: radial-gradient(circle, green, white);
    }

    .SpecialDay2 {
        background-image: radial-gradient(circle, gray, white);
    }

    .Fridayy {
        background-image: radial-gradient(circle, red, white);
    }

    /*.OrdinaryPik {
        background-image: radial-gradient(circle, orange, white);
    }*/

    .Springg {
        /*background-image: linear-gradient(to left, #ffccee,white );*/
    }

    .Summer {
        /*background-image: linear-gradient(to left, #85e085,white );*/
    }

    .Automm {
        /*background-image: linear-gradient(to left, #ffad33,white );*/
    }

    .Winter {
        /*background-image: linear-gradient(to left, #80dfff,white );*/
    }

    .bahar {
        background-image: url(../../Content/icons/BasicInf/بهار2.jpg) !important;
        background-size: cover  !important;
        background-repeat: no-repeat !important;
        /*opacity:0.4;*/
    }
    /*.bahar:after{
        opacity:0.4;
    }*/
    .tabestan {
        background-image: url('../../Content/icons/BasicInf/تابستان2.jpg') !important;
        background-size: cover  !important;
        background-repeat: no-repeat !important;
        /*opacity:0.4;*/
    }
    /*.tabestan:after{
        background-image:url(../../Content/icons/BasicInf/تابستان.jpg);
        background-size:contain;
        background-repeat: no-repeat !important;
        opacity:0.4;
    }*/
    .paeez {
        background-image: url(../../Content/icons/BasicInf/پاییز2.jpg) !important;
        background-size: cover !important;
        background-repeat: no-repeat !important;
        /*opacity:0.4;*/
    }
    /*.paeez:after{
        background-image:url(../../Content/icons/BasicInf/پاییز.jpg);
        background-size:contain;
        background-repeat: no-repeat !important;
        opacity:0.4;
    }*/
    .zemestan {
        background-image: url(../../Content/icons/BasicInf/زمستان2.jpg) !important;
        background-size: cover !important;
        background-repeat: no-repeat !important;
        /*opacity:0.4;*/
    }
    /*.zemestan:after{
        background-image:url(../../Content/icons/BasicInf/زمستان.jpg);
        background-size:contain;
        background-repeat: no-repeat !important;
        opacity:0.4;
    }*/
    .bahar2 {
        background-image: url(../../Content/icons/BasicInf/1.png) !important;
        background-size: contain !important;
        background-repeat: no-repeat !important;
        background-position: center !important;
    }

    .tabestan2 {
        background-image: url(../../Content/icons/BasicInf/2.png) !important;
        background-size: contain  !important;
        background-repeat: no-repeat !important;
        background-position: center !important;
    }

    .paeez2 {
        background-image: url(../../Content/icons/BasicInf/3.png) !important;
        background-size: contain  !important;
        background-repeat: no-repeat !important;
        background-position: center !important;
    }

    .zemestan2 {
        background-image: url(../../Content/icons/BasicInf/4.png) !important;
        background-size: contain  !important;
        background-repeat: no-repeat !important;
        background-position: center !important;
    }
</style>

@(Html.X().Panel()
    .ID("Calendar")
    .Title("ثبت تعطیلات")
    .Listeners(li => { li.AfterRender.Handler = "CalendarSetSize();"; })
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(LayoutType.VBox)
    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
    .Border(false)
    .AutoScroll(true)
    .TopBar(
        Html.X().Toolbar().Items(Html.X().Button().Text("ذخیره").Icon(Icon.Disk).Listeners(l => l.Click.Handler = "SaveOtherHoliday()")
        //Html.X().Button().Text("راهنما").Icon(Icon.Help).Listeners(l => l.Click.Handler = "HelpOtherHoliday()")
        )
    )
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.Panel()
                    .Border(false)
                    .Layout(LayoutType.Table)
                    .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                    .PaddingSpec("5px 0 0 0")
                    .Items(
                        X.Label("سال:"),
                        X.ComboBox()
                            .ItemID("CboYear")
                            .DisplayField("fldYear")
                            .ValueField("fldYear")
                            .TypeAhead(true)
                            .Editable(false)
                            .AllowBlank(false)
                            .BlankText("لطفا سال را انتخاب کنید.")
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .TriggerAction(TriggerAction.All)
                            .Listeners(l => l.Change.Handler = "showCalendar()")
                            .Store(
                                X.Store()
                                    .Listeners(l => l.Load.Handler = "SetDefultYearCalendar();")
                                    .Model(X.Model()
                                        .IDProperty("fldYear")
                                        .Fields(
                                            new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" }
                                        )
                                    )
                                    .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetYears"))
                                        .Reader(X.JsonReader().Root("data"))
                                    )
                            )
                    )
            ),
        Html.X().Panel()
            .Border(false)
            .Layout(LayoutType.Table)
            .LayoutConfig(new TableLayoutConfig { Columns = 2 })
            .Items(
                Html.X().Panel()
                    .ItemID("SpringTree")
                    .Border(false)
                    .BodyCls("bahar2"),
                Html.X().Panel()
                    .ItemID("Spring")
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Border(false)
                    .Frame(true)
                    .BodyCls("bahar")
                    .Items(
                        X.Panel()
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 3 })
                            .Defaults(new { margin = 20 })
                            .Border(false)
                            .BodyStyle("background-image:none;background-color:transparent;")
                            .Items(
                                X.Panel()
                                    .ItemID("Pnl0")
                                    .Border(false)
                                    .AutoScroll(true)
                                    .BodyStyle("opacity: 0.7;filter: alpha(opacity=60);border-radius:5px;")
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center }),
                                X.Panel()
                                    .ItemID("Pnl1")
                                    .Border(false)
                                    .AutoScroll(true)
                                    .BodyStyle("opacity: 0.7;filter: alpha(opacity=60);border-radius:5px;")
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center }),
                                X.Panel()
                                    .ItemID("Pnl2")
                                    .Border(false)
                                    .AutoScroll(true)
                                    .BodyStyle("opacity: 0.7;filter: alpha(opacity=60);border-radius:5px;")
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                                )
                            )
            ),
        Html.X().Panel()
            .Border(false)
            .Layout(LayoutType.Table)
            .LayoutConfig(new TableLayoutConfig { Columns = 2 })
            .Items(
                Html.X().Panel()
                    .Border(false)
                    .ItemID("SummerTree")
                    .BodyCls("tabestan2"),
                Html.X().Panel()
                    .ItemID("Summer")
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Border(false)
                    .Frame(true)
                    .BodyCls("tabestan")
                    .Items(
                        X.Panel()
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 3 })
                            .Defaults(new { margin = 20 })
                            .Border(false)
                            .BodyStyle("background-image:none;background-color:transparent;")
                            .Items(
                                X.Panel()
                                    .ItemID("Pnl3")
                                    .AutoScroll(true)
                                    .BodyStyle("opacity: 0.7;filter: alpha(opacity=60);border-radius:5px;")
                                    .AutoScroll(true)
                                    .Border(false)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center }),
                                X.Panel()
                                    .ItemID("Pnl4")
                                    .BodyStyle("opacity: 0.7;filter: alpha(opacity=60);border-radius:5px;")
                                    .Border(false)
                                    .AutoScroll(true)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center }),
                                X.Panel()
                                    .ItemID("Pnl5")
                                    .BodyStyle("opacity: 0.7;filter: alpha(opacity=60);border-radius:5px;border-radius:5px;")
                                    .AutoScroll(true)
                                    .Border(false)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                                    )
                            )
            ),
        Html.X().Panel()
            .Border(false)
            .Layout(LayoutType.Table)
            .LayoutConfig(new TableLayoutConfig { Columns = 2 })
            .Items(
                Html.X().Panel()
                    .Border(false)
                    .ItemID("AuttomTree")
                    .BodyCls("paeez2"),
                Html.X().Panel()
                    .ItemID("Auttom")
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Border(false)
                    .Frame(true)
                    .BodyCls("paeez")
                    .Items(
                        X.Panel()
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 3 })
                            .Defaults(new { margin = 20 })
                            .Border(false)
                            .BodyStyle("background-image:none;background-color:transparent;")
                            .Items(
                                X.Panel()
                                    .ItemID("Pnl6")
                                    .BodyStyle("opacity: 0.7;filter: alpha(opacity=60);border-radius:5px;")
                                    .Border(false)
                                    .AutoScroll(true)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center }),
                                X.Panel()
                                    .ItemID("Pnl7")
                                    .BodyStyle("opacity: 0.7;filter: alpha(opacity=60);border-radius:5px;")
                                    .Border(false)
                                    .AutoScroll(true)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center }),
                                X.Panel()
                                    .ItemID("Pnl8")
                                    .BodyStyle("opacity: 0.7;filter: alpha(opacity=60);border-radius:5px;")
                                    .Border(false)
                                    .AutoScroll(true)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                                    )
                                )),
        Html.X().Panel()
            .Border(false)
            .Layout(LayoutType.Table)
            .LayoutConfig(new TableLayoutConfig { Columns = 2 })
            .Items(
                Html.X().Panel()
                    .Border(false)
                    .ItemID("WinterTree")
                    .BodyCls("zemestan2"),
                Html.X().Panel()
                    .ItemID("Winter")
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Border(false)
                    .BodyCls("zemestan")
                    .Frame(true)
                    .Items(
                        X.Panel()
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 3 })
                            .Defaults(new { margin = 20 })
                            .Border(false)
                            .BodyStyle("background-image:none;background-color:transparent;")
                            .Items(
                                X.Panel()
                                    .BodyStyle("opacity: 0.6;filter: alpha(opacity=60);border-radius:5px;")
                                    .ItemID("Pnl9")
                                    .Border(false)
                                    .AutoScroll(true)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center }),
                                X.Panel()
                                    .BodyStyle("opacity: 0.6;filter: alpha(opacity=60);border-radius:5px;")
                                    .ItemID("Pnl10")
                                    .Border(false)
                                    .AutoScroll(true)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center }),
                                X.Panel()
                                    .ItemID("Pnl11")
                                    .BodyStyle("opacity: 0.6;filter: alpha(opacity=60);border-radius:5px;")
                                    .Border(false)
                                    .AutoScroll(true)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                            )
                    )
            )
        )
)
<script type="text/javascript">

    function SetDefultYearCalendar() {
        var CboYear = App.Calendar.queryById('CboYear');
        CboYear.setValue('@ViewBag.CurYear');
    }

    function showCalendar() {
        for (var i = 0; i < 12; i++) {
            var name = "Pnl" + i;
            calendar(i, name);
        }
    }

    function CalendarSetSize()
    {
        App.Calendar.setSize(App.PayWin.getWidth() - 10, App.PayWin.getHeight() - 180);
        App.Calendar.queryById("Spring").setWidth(App.PayWin.getWidth() - 150);
        App.Calendar.queryById("Summer").setWidth(App.PayWin.getWidth() - 150);
        App.Calendar.queryById("Auttom").setWidth(App.PayWin.getWidth() - 150);
        App.Calendar.queryById("Winter").setWidth(App.PayWin.getWidth() - 150);
        App.Calendar.queryById("SpringTree").setSize((App.PayWin.getWidth() - (App.PayWin.getWidth() - 120)), App.PayWin.getHeight() - 440);
        App.Calendar.queryById("SummerTree").setSize((App.PayWin.getWidth() - (App.PayWin.getWidth() - 120)), App.PayWin.getHeight() - 440);
        App.Calendar.queryById("AuttomTree").setSize((App.PayWin.getWidth() - (App.PayWin.getWidth() - 120)), App.PayWin.getHeight() - 440);
        App.Calendar.queryById("WinterTree").setSize((App.PayWin.getWidth() - (App.PayWin.getWidth() - 120)), App.PayWin.getHeight() - 440);

        for (var i = 0; i < 12; i++) {
            var name = "Pnl" + i;
            App.Calendar.queryById(name).setSize((App.PayWin.getWidth() - 330) / 3, App.PayWin.getHeight() - 490);
        }
    }

    function calendar(month, itemId) {
        var count = 0;
        var padding = "";
        var totalEsfand = "";
        var i = 1;
        /*var testing = "";
        var borderspacingg=App.Calendar.queryById(itemId).getHeight()*0.00144;*/
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Holidays/GetInfMonth',
            params: {
                month: month + 1,
                Year: App.Calendar.queryById('CboYear').getValue()
            },
            success: function (data) {
                var cmonth = data.cmonth;
                var day = data.day;
                var year = data.year;
                var tempMonth = month + 1;
                if (data.IsKabise == true) {
                    totalEsfand = 30;
                }
                else {
                    totalEsfand = 29;
                }

                var monthNames = ["فـــــروردین", "اردیــــبهشت", "خـــــرداد", "تـــــیر", "مـــــرداد", "شهریـــــور", "مـــــهر", "آبـــــــان",
                    "آذر", "دی", "بــــهمن", "اسفـــــند"];
                var totalDays = ["31", "31", "31", "31", "31", "31", "30", "30", "30", "30", "30", totalEsfand];
                var tempweekday = data.tempweekday;
                var tempweekday2 = tempweekday;
                var dayAmount = totalDays[month];

                while (tempweekday > 0) {
                    padding += "<td class='premonth'></td>";
                    tempweekday--;
                }
                while (i <= dayAmount) {
                    var iddfortd = String(month + 1) + ";" + String(i);
                    if (tempweekday2 > 6) {
                        if (count <= 4) {
                            padding += "</tr><tr>";
                        }
                        tempweekday2 = 0;
                        count += 1;
                    }

                    if (count > 4) {
                        var indexx = padding.search("<td class='premonth'></td>");
                        var tagg = padding.substr(indexx, 26);
                        var newtagg = "";
                        if (data.DayMon.length > 0 && data.DayMon.indexOf(String(i)) != -1) {
                            if (data.HasMazaya[data.DayMon.indexOf(String(i))]) {/*دارای مزایا*/
                                newtagg = "<td id=" + iddfortd + " style='font-weight:bold;text-align:center; onmouseover='setCursor(this.id)' onclick='GotoSetMonasebat(this.id)' class='tooltip holiday SpecialDay'>" + i + '<span id="' + data.MonasebatIds[data.DayMon.indexOf(String(i))] + '" class="tooltiptext">' + data.MonasebatDesc[data.DayMon.indexOf(String(i))] + '</span>' + "</td>";
                            }
                            else {
                                newtagg = "<td id=" + iddfortd + " style='font-weight:bold;text-align:center; onmouseover='setCursor(this.id)' onclick='GotoSetMonasebat(this.id)' class='tooltip holiday SpecialDay2'>" + i + '<span id="' + data.MonasebatIds[data.DayMon.indexOf(String(i))] + '" class="tooltiptext">' + data.MonasebatDesc[data.DayMon.indexOf(String(i))] + '</span>' + "</td>";
                            }
                        }
                        else {
                            if (tempweekday2 == 6) {
                                newtagg = "<td id=" + iddfortd + " style='font-weight:bold;text-align:center;' onmouseover='setCursor(this.id)' onclick='GotoSetMonasebat(this.id)' class='tooltip Fridayy'>" + i + "</td>";
                            }
                            else {
                                newtagg = "<td id=" + iddfortd + " style='font-weight:bold;text-align:center;' onmouseover='setCursor(this.id)' onclick='GotoSetMonasebat(this.id)'>" + i + "</td>";
                            }
                        }
                        padding = padding.replace(padding.substr(indexx, 26), newtagg);
                    }
                    else {
                        if (data.DayMon.length > 0 && data.DayMon.indexOf(String(i)) != -1) {
                            if (data.HasMazaya[data.DayMon.indexOf(String(i))]) {/*دارای مزایا*/
                                padding += "<td id=" + iddfortd + " style='font-weight:bold;text-align:center;' onmouseover='setCursor(this.id)' onclick='GotoSetMonasebat(this.id)' class='tooltip holiday SpecialDay'>" + i + '<span id="' + data.MonasebatIds[data.DayMon.indexOf(String(i))] + '" class="tooltiptext">' + data.MonasebatDesc[data.DayMon.indexOf(String(i))] + '</span>' + "</td>";
                            }
                            else {
                                padding += "<td id=" + iddfortd + " style='font-weight:bold;text-align:center;' onmouseover='setCursor(this.id)' onclick='GotoSetMonasebat(this.id)' class='tooltip holiday SpecialDay2'>" + i + '<span id="' + data.MonasebatIds[data.DayMon.indexOf(String(i))] + '" class="tooltiptext">' + data.MonasebatDesc[data.DayMon.indexOf(String(i))] + '</span>' + "</td>";
                            }
                        }
                        else {
                            if (tempweekday2 == 6) {
                                padding += "<td id=" + iddfortd + " style='font-weight:bold;text-align:center;' onmouseover='setCursor(this.id)' onclick='GotoSetMonasebat(this.id)' class='tooltip Fridayy'>" + i + "</td>";
                            }
                            else {
                                padding += "<td id=" + iddfortd + " style='font-weight:bold;text-align:center;' onmouseover='setCursor(this.id)' onclick='GotoSetMonasebat(this.id)'>" + i + "</td>";
                            }
                        }
                    }
                    tempweekday2++;
                    i++;
                }

                var calendarTable = "<center><table style=' border-spacing:0.1 0.2em;'> <tr><th style='text-align:center;font-size:17px;' colspan='7'>" + monthNames[month] + "</th></tr>";
                calendarTable += "<tr>  <td style='text-align:center;' >شـنبــــه</td>  <td style='text-align:center;'>یکشنبـه</td> <td style='text-align:center;'>دوشنبـه</td> <td style='text-align:center;'>سه شنبه</td> <td style='text-align:center;'>چهارشنبه</td> <td style='text-align:center;'>پنجشنبه</td> <td style='text-align:center;'>جــمعـــه</td> </tr>";
                calendarTable += "<tr>";
                calendarTable += padding;
                calendarTable += "</tr></table></center>";
                App.Calendar.queryById(itemId).getBody().update(calendarTable);
                if (month == 11) {
                    Ext.net.Mask.hide();
                }
            }
        });
    }

    function setCursor(id) {
        document.getElementById(id).style.cursor = "pointer";
    }

    function GotoSetMonasebat(value) {
        var MonasebatId = 0;
        if (document.getElementById(value).getElementsByTagName("span").length > 0) {
            MonasebatId = document.getElementById(value).lastChild.id;
        }
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Holidays/setMonasebat',
            params: {
                Year:App.Calendar.queryById('CboYear').getValue(),
                Month:value.split(';')[0],
                Day: value.split(';')[1],
                Id: value,
                MonasebatId: MonasebatId
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function SaveOtherHoliday() {
        var MonthArray = new Array();
        var DayArray = new Array();
        var MonasebatIdArray = new Array();

        if (!String.prototype.padStart) {
            String.prototype.padStart = function padStart(targetLength, padString) {
                targetLength = targetLength >> 0;
                padString = String(typeof padString !== 'undefined' ? padString : ' ');
                if (this.length >= targetLength) {
                    return String(this);
                } else {
                    targetLength = targetLength - this.length;
                    if (targetLength > padString.length) {
                        padString += padString.repeat(targetLength / padString.length);
                    }
                    return padString.slice(0, targetLength) + String(this);
                }
            };
        }

        var holidayss = document.getElementsByClassName("holiday");/*گرفتن تاریخ ها*/
        for (var i = 0; i < holidayss.length; i++) {
            MonthArray.push(holidayss[i].id.split(';')[0]);
            DayArray.push(holidayss[i].id.split(';')[1]);
            MonasebatIdArray.push(holidayss[i].lastChild.id);
        }

        var data1 = {
            Months: MonthArray,
            Days: DayArray,
            MonasebatIds:MonasebatIdArray,
            year: App.Calendar.queryById('CboYear').getValue()
        };

        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        $.ajax({
            type: "POST",
            url: '/PayRoll/Holidays/Save',
            datatype: "json",
            data: JSON.stringify(data1),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                /*var result = JSON.parse(data);*/
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1) {
                    ic = Ext.MessageBox.ERROR;
                }
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                Ext.net.Mask.hide();
            },
            failure: function (data) {
                alert(data.data);
            }
        });
    }

    /*function HelpOtherHoliday() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/OtherHoliday/Help',
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }*/
</script>
