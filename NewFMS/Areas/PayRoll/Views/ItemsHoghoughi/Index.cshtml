@model IEnumerable<NewFMS.WCF_Common_Pay.OBJ_ItemsHoghughi>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net

@{
    var X = Html.X();
}

@(Html.X().Panel()
    .ID("ItemHoghoughi_TypeHesab")
    .Title("تعیین نوع حساب")
    .Closable(true)
    .Listeners(li => li.AfterRender.Handler = "ItemHoghoughi_TypeHesabSetSize();")
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Border(false)
    .Layout(LayoutType.Fit)
    .Items(
        X.GridPanel()
            .ID("ItemHoghoughi_TypeHesabGrid")
            .TopBar(
                Html.X().Toolbar()
                    .Items(
                        X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).Listeners(li => li.Click.Handler = "SaveItemHoghoughi_TypeHesab();")
                    )
            )
            .Store(
                X.StoreForModel()
                    .Proxy(Html.X().AjaxProxy()
                        .Url(Url.Action("Read"))
                        .Reader(Html.X().JsonReader().Root("data"))
                    )
                    .PageSize(2000)
                    .RemoteFilter(false)
                    .RemotePaging(false)
            )
            .View(
                Html.X().GridView()
                    .PreserveScrollOnRefresh(true)
                    .LoadingText("در حال بارگذاری...").RTL(true)
            )
            .BottomBar(X.PagingToolbar())
            .ColumnModel(
                Html.X().RowNumbererColumn(),
                Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد ").Flex(1).Hidden(true).Hideable(false),
                Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("عنوان حساب").Flex(10).Wrap(true),
                Html.X().ComponentColumn().ID("ColTypeHesab_Item").Flex(2).Editor(true).Sortable(false).Text("نوع حساب")
                    .Listeners(l => l.Bind.Fn = "setValueCboHesabType")
                    .Component(
                        X.ComboBox()
                            .ItemID("CboHesabType")
                            .TypeAhead(true)
                            .QueryMode(DataLoadMode.Local)
                            .AllowBlank(false)
                            .BlankText("لطفا نوع حساب را انتخاب کنید.")
                            .TriggerAction(TriggerAction.All)
                            .DisplayField("fldName")
                            .ValueField("fldId")
                            .EmptyText("نوع حساب...")
                            .Store(X.Store()
                                .Model(X.Model()
                                    .IDProperty("fldId")
                                    .Fields(
                                        new ModelField("fldId", ModelFieldType.Int) { Mapping = "fldId" },
                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                    )
                                )
                                .Proxy(X.AjaxProxy()
                                    .Timeout(200000000)
                                    .Url(Url.Action("GetHesabType"))
                                    .Reader(X.JsonReader().Root("data"))
                                )
                            )
                    ), Html.X().ComponentColumn().ID("ColMostamar_Item").Flex(2).Editor(true).Sortable(false).Text("نوع پرداختی")
                            .Listeners(l => l.Bind.Fn = "setValueMostamar")
                        .Component(
                            X.ComboBox()
                                    .ItemID("CboMostamar")
                                .TypeAhead(true)
                                .QueryMode(DataLoadMode.Local)
                                .AllowBlank(false)
                                .BlankText("لطفا نوع پرداختی را انتخاب کنید.")
                                .TriggerAction(TriggerAction.All)
                                .DisplayField("fldName")
                                .ValueField("fldId")
                                .EmptyText("نوع حساب...")
                                 //  .SelectedItems(new { Value = "2" })
                            .Items(
                                new ListItem("مستمر", 1),
                                new ListItem("غیرمستمر", 2)
                                )    
                    )
            )
            .SelectionModel(
                Html.X().RowSelectionModel()
                    .Mode(Ext.Net.SelectionMode.Single)
            )
        )
)

<script type="text/javascript">

    var setValueCboHesabType = function (columnn, component, record, rowIndex) {
        component.setValue(record.data.fldTypeHesabId);
    };
    var setValueMostamar = function (columnn, component, record, rowIndex) {
        component.setValue(record.data.fldMostamar);
    };
    
    function ItemHoghoughi_TypeHesabSetSize() {
        App.ItemHoghoughi_TypeHesab.setWidth(App.PayWin.getWidth());
        App.ItemHoghoughi_TypeHesab.queryById('ItemHoghoughi_TypeHesabGrid').setHeight(App.PayWin.getHeight() - 170);
    }

    function SaveItemHoghoughi_TypeHesab() {
        var ItemsHoghughiArray = new Array();
        var grid = App.ItemHoghoughi_TypeHesab.queryById("ItemHoghoughi_TypeHesabGrid");

        for (var i = 0; i < grid.store.count() ; i++) {
            if(App.ColTypeHesab_Item.getComponent(i).validate())
            {
                ItemsHoghughiArray.push({
                    fldId: grid.store.getAt(i).data.fldId,
                    fldTypeHesabId: App.ColTypeHesab_Item.getComponent(i).getValue(),
                    fldMostamar: App.ColMostamar_Item.getComponent(i).getValue()
                });
            }
            else{
                continue;
            }
        }

        var data = {
            ItemsHoghughi: ItemsHoghughiArray
        };

        App.ItemHoghoughi_TypeHesab.body.mask('در حال ذخیره سازی...');
        $.ajax({
            type: "POST",
            url: '/PayRoll/ItemsHoghoughi/Save',
            datatype: "json",
            data: JSON.stringify(data),
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                App.ItemHoghoughi_TypeHesab.body.mask().hide();
                var ico = Ext.MessageBox.INFO;
                if (result.Er == 1)
                    ico = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: result.MsgTitle,
                    msg: result.Msg,
                    icon: ico,
                    buttons: Ext.MessageBox.OK
                });
                grid.store.load();
            },
            failure: function (data1) {
                alert(data.data1);
            }
        });
    }
</script>
