@model IEnumerable<NewFMS.WCF_PayRoll.OBJ_MoteghayerhayeHoghoghi>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
<script src="~/Scripts/accounting.js"></script>
@*<script>
    var template = '<span>{0}</span>';

    var Rial = function (value) {
        return Ext.String.format(template, accounting.formatNumber(value));
    };
</script>*@
@(X.Panel()
    .Title("متغیرهای حقوقی")
    .Border(false)
    .ID("MoteghayerhaHoghoghi")
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Listeners(l => l.AfterRender.Handler = "App.MoteghayerhaHoghoghi.setHeight(App.PayWin.getHeight() - 170);")
    .Layout(LayoutType.Fit)
    .Border(false)
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.Fit)            
            .Height(270)
            .AutoScroll(true)
            .ButtonAlign(Ext.Net.Alignment.Center)
            .Items(
                X.GridPanel()
                    .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button()
                                .Text("جدید")
                                .Icon(Ext.Net.Icon.Add)
                                //.ToolTip("کلید میانبر F8")
                                .Listeners(li => li.Click.Handler = "NewDetailHoghoghi();"),
                            X.Button()
                                .Text("ویرایش")
                                .Icon(Ext.Net.Icon.Pencil)
                                //.ToolTip("کلید میانبر F2")
                                .Listeners(Li => Li.Click.Handler = "EditHeaderHoghoghi();"),
                            X.Button()
                                .Text("حذف")
                                .Icon(Ext.Net.Icon.Delete)
                                //.ToolTip("کلید میانبر F9")
                                .Listeners(de =>de.Click.Handler = "DeleteHeaderHoghoghi();"),
                            X.Button()
                                .Text("کپی متغیرهای حقوقی")
                                .Icon(Ext.Net.Icon.ArrowRedo)
                                .Listeners(Li => Li.Click.Handler = "CopyMoteghayerhaHoghoghi();"),
                            X.Button()
                                .Text("راهنما")
                                .Icon(Ext.Net.Icon.Help)
                                .Listeners(Li => Li.Click.Handler = "HelpMoteghayerhaHoghoghi();")
                        )
                    )
                    .ItemID("GridHeader")
                    .BottomBar(X.PagingToolbar())
                    //.Height(600)
                    .Store(
                        X.StoreForModel()
                            .Listeners(l => l.DataChanged.Handler = "App.MoteghayerhaHoghoghi.queryById('GridHeader').selModel.refresh();")
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("ReadHeader"))
                                .Reader(Html.X().JsonReader().Root("data"))
                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                        Html.X().Column().DataIndex(Model, m => m.fldTarikhEjra).Text("تاریخ اجرا").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldTarikhSodur).Text("تاریخ صدور").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldAnvaeEstekhdamTitle).Text("نوع استخدام").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldTypeBimeName).Text("نوع بیمه").Flex(15)
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )
                    )
        )
)

<script type="text/javascript">
    function HelpMoteghayerhaHoghoghi() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/MoteghayerhaHoghoghi/Help',
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function NewDetailHoghoghi() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/MoteghayerhaHoghoghi/New',
            params: {
                id: 0
            },
            success: function () {
                /*Ext.net.Mask.hide();*/
            }
        });
    }

    function EditHeaderHoghoghi() {
        var SelectedRow = App.MoteghayerhaHoghoghi.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/MoteghayerhaHoghoghi/New',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function (data) {
                    /*Ext.net.Mask.hide();*/
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteHeaderHoghoghi() {
        var SelectedHeaderRow = App.MoteghayerhaHoghoghi.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                        Ext.net.DirectMethod.request({
                            url: '/PayRoll/MoteghayerhaHoghoghi/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.MoteghayerhaHoghoghi.queryById('GridHeader').store.load();
                                Ext.net.Mask.hide();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function CopyMoteghayerhaHoghoghi() {
        var SelectedRow = App.MoteghayerhaHoghoghi.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/MoteghayerhaHoghoghi/MoteghayerhaHoghoghiCopy',
                params: {
                    Id: SelectedRow.data.fldId
                },
                success: function (data) {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>