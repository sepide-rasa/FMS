@model NewFMS.Models.KosuratBank
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();
   NewFMS.WCF_Common.CommonService servic = new NewFMS.WCF_Common.CommonService();
   NewFMS.WCF_Common.ClsError Err = new NewFMS.WCF_Common.ClsError();}
<br />
@(Html.X().Panel()
        .ID("KosuratBank")
        .Title("کسورات بانک ها")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
            .Border(false)
        .Listeners(li => li.AfterRender.Handler = "KosuratBankSetSize();")
       .Items(
    X.Panel().Border(false)//.Height(250)
        .Items(
                X.GridPanel()
                                .AutoScroll(true)
        //.Listeners(l => l.ItemClick.Handler = "ReloadGridDetail();")
            .TopBar(
                Html.X().Toolbar()
                    .Items(
                                X.ComboBox()
                                    .ItemID("CboOrgan")
                                    .TypeAhead(true)
                                    .AutoFocus(true)
                                    .Editable(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .BlankText("لطفا سازمان را انتخاب کنید.")
                .Listeners(l => l.Change.Handler = "App.KosuratBank.queryById('GridAshkhas').store.load();App.KosuratBank.queryById('GridAshkhas').getSelectionModel().clearSelections();App.KosuratBank.queryById('GridKosuratBank').store.loadData('');App.KosuratBank.queryById('GridKosuratBank').getSelectionModel().clearSelections();")
                                    .AllowBlank(false)
                                    .ForceSelection(true)
                                    .DisplayField("fldTitle")
                                    .ValueField("fldId")
                                    .EmptyText("سازمان ...")
                                    .Width(250)
                                    .Store(X.Store()
                                        .Model(X.Model()
                                            .IDProperty("fldId")                                    
                                            .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetOrgan"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                            .Listeners(l => l.Load.Handler = "setdefaultValueKosuratBank()")
                                        )
                                )


                                                    
                    )
                                .ItemID("GridAshkhas")
                                .BottomBar(X.PagingToolbar())
                                .Flex(2)
                                .Store(
                                                   X.StoreFor(Model.PersonalInfo)
                                                   .AutoLoad(false)
                                        .Proxy(Html.X().AjaxProxy()
                                                    .Url(Url.Action("ReadHeader"))
                                            .Reader(Html.X().JsonReader().Root("data")))
                                                    .Parameters(ps => ps.Add(new StoreParameter("OrganId", "App.KosuratBank.queryById('CboOrgan').getValue()", ParameterMode.Raw)))
                                .PageSize(9)
                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = "App.KosuratBank.queryById('GridAshkhas').selModel.refresh();")*/)
                                .View(
                                    Html.X().GridView()
                                        .LoadingText("در حال بارگذاری...")
                                        .RTL(true))
                                .ColumnModel(
                                    Html.X().RowNumbererColumn(),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldName_Father).Text("نام و نام خانوادگی").Flex(5).Wrap(true),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldCodemeli).Text("کد ملی").Flex(2),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(2),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldJobeCode).Text("کد شغلی بیمه").Flex(2),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldStatusId).Text("وضعیت").Hidden(true).Flex(1),/*فعال1:   2:غیرفعال  3:بازنشسته*/
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldStatusTitle).Text("وضعیت").Hidden(true).Flex(1)
                                )
                                .Plugins(X.FilterHeader().Remote(true))
                                .SelectionModel(
                                    Html.X().RowSelectionModel()
                                        .Mode(Ext.Net.SelectionMode.Single)
                                             .Listeners(l =>
                                        {
                                            l.Select.Handler = "ReloadKosuratBank();";
                                        })
                                        )
        ),
           X.Panel()
                                .ItemID("PnlGridDetail")
                                .Title("کسورات بانک")
                                .Border(false)
                                .Layout(Ext.Net.LayoutType.Fit)
                                .Items(
                                        X.GridPanel()
                                            .TopBar(
                                        Html.X().Toolbar()
                                            .Items(
        // X.Button().Text("چاپ").Icon(Ext.Net.Icon.Printer).ToolTip("چاپ")
        //.Listeners(li => li.Click.Handler = "PrintKarkard();"),
                                                    X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)
                                                .Listeners(li => li.Click.Handler = "NewKosuratBank();"),
                                                     X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                                                        .Listeners(Li => Li.Click.Handler = "EditKosuratBank();"),
                                                X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)
                                                    .Listeners(de =>
                                                    {
                                                        de.Click.Handler = "if (App.KosuratBank.queryById('GridKosuratBank').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteKosuratBank();";
                                                    }),
                                    X.Button()
                                        .Text("تغییر وضعیت")
                                        .Icon(Ext.Net.Icon.Reload)
                                            .Listeners(li => li.Click.Handler = "ChangeStatusKosuratBank();")
                                            , X.Button().Text("ویرایش توضیحات").Icon(Ext.Net.Icon.Pencil)
                                            .Listeners(Li => Li.Click.Handler = "EditDesc();")
                                                    , X.Button().Hidden(!servic.Permission(708, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                            .Text("صورتحساب")
                                            .IconCls("SooratHesab")
                                            .Listeners(li => li.Click.Handler = "RptSooratHesabKosuratBank();")
                                                , X.Button().Hidden(!servic.Permission(709, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                            .Text("صورتحساب کلی")
                                            .IconCls("SooratHesabKoli")
                                            .Listeners(li => li.Click.Handler = "RptSooratHesabKoliKosuratBank();")
                                            , X.Button()
                                            .Text("راهنما")
                                            .IconCls("SooratHesabKoli")
                                            .Listeners(li => li.Click.Handler = "HelpSooratHesabKoliKosuratBank();")
                                            ))
                                        .BottomBar(X.PagingToolbar().HideRefresh(true))
                                        .AutoScroll(true)
                                        .ID("GridKosuratBank")
                                        .Flex(2).Height(187)
                                        .Store(
                                                     X.StoreFor(Model._KosuratBank).AutoLoad(false)
                                                        .Proxy(Html.X().AjaxProxy()
                                                            .Url(Url.Action("ReadKosuratBank"))
                                                    .Reader(Html.X().JsonReader().Root("data")))
                                                .PageSize(9)
                                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = " App.KosuratBank.queryById('GridKosuratBank').selModel.refresh();")*/
                        )
                                        .View(
                                            Html.X().GridView()
                                                .LoadingText("در حال بارگذاری...")
                                                .RTL(true)
                            )
                                .Plugins(X.FilterHeader().Remote(true))
                                            .ColumnModel(
                                                Html.X().RowNumbererColumn(),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldPersonalId).Text("کد شخص").Flex(1).Hidden(true),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldBankName).Text("بانک").Flex(2),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.ShobeName).Text("شعبه").Flex(2),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldMablagh).Text("مبلغ").Flex(2),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldCount).Text("تعداد").Flex(2),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldTarikhPardakht).Text("تاریخ پرداخت").Flex(2),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldShomareHesab).Text("شماره حساب").Flex(2),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldShomareSheba).Text("شماره شبا").Flex(2),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldStatusName).Text("وضعیت").Flex(2),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldStatus).Text("وضعیت").Flex(1).Hidden(true),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldDeactiveDate).Text("تاریخ غیرفعالی").Flex(2),
                                                Html.X().Column().DataIndex(Model._KosuratBank, m => m.fldDesc).Text("توضیحات").Flex(3)
                                 )
                                            .Plugins(
                                                Html.X().CellEditing().ClicksToEdit(1)

                                                )

                                        .SelectionModel(
                                            Html.X().RowSelectionModel()
                                                .Mode(Ext.Net.SelectionMode.Single)
                                )
                    )
    )
)
)
<script type="text/javascript">
    var dadat;
    function setdefaultValueKosuratBank() {
        App.KosuratBank.queryById('CboOrgan').select(App.KosuratBank.queryById('CboOrgan').store.getAt(0));
    }
  /*  App.PayWin.addListener('resize', function () {
        App.KosuratBank.setWidth(App.PayWin.getWidth());
    });
    App.PayWin.addListener('resize', function () {
        var grid = App.KosuratBank.queryById('GridAshkhas');
        grid.setHeight(App.PayWin.getHeight() - 120);
        var grid = App.KosuratBank.queryById('PnlGridDetail');
    });*/
    function HelpSooratHesabKoliKosuratBank() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/KosuratBank/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function KosuratBankSetSize() {
        var grid = App.KosuratBank.queryById('GridAshkhas');
        grid.setHeight((App.PayWin.getHeight() - 200) / 2);
       var GridKosuratBank = App.KosuratBank.queryById('GridKosuratBank');
       GridKosuratBank.setHeight((App.PayWin.getHeight() - 200) / 2);
    }
    function ReloadKosuratBank() {
        var SelectedRow = App.KosuratBank.queryById('GridAshkhas').selModel.getLastSelected();

      /*  Ext.net.DirectMethod.request({
            url: '/PayRoll/KosuratBank/Reload?PersonalId=' + SelectedRow.data.fldId,

            success: function (result) {
                App.KosuratBank.queryById('GridKosuratBank').getStore().loadData(result);
            }
        });*/

        App.KosuratBank.queryById('GridKosuratBank').getStore().getProxy().setExtraParam("PersonalId", SelectedRow.data.fldId);
        App.KosuratBank.queryById('GridKosuratBank').getStore().getProxy().setExtraParam("OrganId", App.KosuratBank.queryById('CboOrgan').getValue());
        App.KosuratBank.queryById('GridKosuratBank').getStore().load();
    }
    function RptSooratHesabKosuratBank() {
        var SelectedRow = App.KosuratBank.queryById('GridKosuratBank').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratBank/PrintSooratHesabKosuratBank',
                params: {
                    KosouratId: SelectedRow.data.fldId,
                    PersonalId: 0,
                    OrganId: App.KosuratBank.queryById('CboOrgan').getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function RptSooratHesabKoliKosuratBank() {
        var SelectedRow = App.KosuratBank.queryById('GridAshkhas').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratBank/PrintSooratHesabKosuratBank',
                params: {
                    PersonalId: SelectedRow.data.fldId,
                    KosouratId: 0,
                    OrganId: App.KosuratBank.queryById('CboOrgan').getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function PrintKosuratBank() {
        var SelectedRow = App.KosuratBank.queryById('GridKosuratBank').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratBank/Print',
                params: {
                    KosuratBankId: SelectedRow.data.fldId,
                    containerId: "KosuratBankTab",
                    PersonalId: SelectedRow.data.fldPersonalId,
                    AnvaeEstekhdamId: SelectedRow.data.fldAnvaeEstekhdamId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EditDesc() {
        var SelectedRow = App.KosuratBank.queryById('GridKosuratBank').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratBank/EditDesc',
                params: {
                    Id: SelectedRow.data.fldId,
                    OrganId: App.KosuratBank.queryById('CboOrgan').getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EditKosuratBank() {
        var SelectedRow = App.KosuratBank.queryById('GridKosuratBank').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratBank/new',
                params: {
                    id: SelectedRow.data.fldId,
                    containerId: "KosuratBankTab",
                    PersonalId: SelectedRow.data.fldPersonalId,
                    OrganId: App.KosuratBank.queryById('CboOrgan').getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function ChangeStatusKosuratBank() {
        var SelectedRow = App.KosuratBank.queryById('GridKosuratBank').selModel.getLastSelected();

        if (SelectedRow != null) {
            var Last = "1";
            if (SelectedRow.data.fldStatus)
                Last = "0";
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratBank/ChangeStatus',
                params: {
                    id: SelectedRow.data.fldId,
                    LastStatus: Last,
                    OrganId: App.KosuratBank.queryById('CboOrgan').getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewKosuratBank() {
        var SelectedRow = App.KosuratBank.queryById('GridAshkhas').selModel.getLastSelected();
        if (SelectedRow != null) {
            if (SelectedRow.data.fldStatusId == 1) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/KosuratBank/new',
                    params: {
                        id: 0,
                        containerId: "KosuratBankTab",
                        PersonalId: SelectedRow.data.fldId,
                        OrganId: App.KosuratBank.queryById('CboOrgan').getValue()
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "وضعیت فرد مورد نظر " + SelectedRow.data.fldStatusTitle + " است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک شخص را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteKosuratBank() {
        var SelectedHeaderRow = App.KosuratBank.queryById('GridKosuratBank').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/PayRoll/KosuratBank/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId,
                                OrganId: App.KosuratBank.queryById('CboOrgan').getValue()
                            },
                            success: function (data) {
                                var ico = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ico = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ico,
                                    buttons: Ext.MessageBox.OK
                                });
                                ReloadKosuratBank();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>