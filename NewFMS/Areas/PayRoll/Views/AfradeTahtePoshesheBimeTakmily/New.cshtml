@model IEnumerable<NewFMS.WCF_PayRoll.OBJ_AfradeTahtePoshesheBimeTakmily_Details>
@using Ext.Net.MVC
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
                .Listeners(li => { li.Render.Handler = "LoadAfrad();ReloadItem();"; li.AfterRender.Fn = "addKeyMapNewAfrad"; })
    .Width(550)
        //   .Height(300)
    .Resizable(false)
    .Title("ثبت فرد تحت پوشش جدید")
    .ID("NewAfrad")
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
             //.PaddingSpec("5 5 5 5")
            .ButtonAlign(Ext.Net.Alignment.Center)
            .Border(false)
            .KeyMap(Html.X().KeyMap()
                .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                .Binding(b =>
                {
                    b.Add(Html.X().KeyBinding()
                    .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                    .Handler("SaveAfrad(); ")
                    );

                }))
            .DefaultButton("btn")
            //.Layout(Ext.Net.LayoutType.VBox)
            //.LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Buttons(
                X.Button()
                    .Text("ذخیره")
                    .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                    .Listeners(l => l.Click.Handler = "SaveAfrad();")
                    .ItemID("btnSave"),
                X.Button()
                    .Text("خروج")
                    .Icon(Ext.Net.Icon.DoorOut)
                    .ToolTip("کلید میانبر Esc")
                    .OnClientClick("App.NewAfrad.destroy();")
                    )
            .Items(
            
            X.Panel().Border(false)//.Width(500)
                .Items(
                    X.GridPanel().AutoScroll(true)
                        .Icon(Icon.Table)
                        .Frame(true)
                        .Title("افراد تحت پوشش")
                    .ItemID("Grid")
                    .Height(305)
                    .ColumnWidth(0.6)
                    .Store(
                           X.StoreForModel()
                           .AutoLoad(false)
                            //.Proxy(Html.X().AjaxProxy()
                            ////.Url(Url.Action("RloadAfrad"))
                            //.Reader(Html.X().JsonReader().Root("data"))
                            //    .ExtraParams(p => p.Add(new { PersonalId = @ViewBag.PersonalId }))

                            //    )
                    )
                    .View(
                            Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)

                    )

                    .ColumnModel(
                            Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                            Html.X().Column().DataIndex(Model, m => m.fldAfradTahtePoshehsId).Text("افراد تحت پوشش").Flex(1).Hidden(true),
                            Html.X().Column().DataIndex(Model, m => m.fldName).Text("نام").Flex(2),
                            Html.X().Column().DataIndex(Model, m => m.fldFamily).Text("نام خانوادگی").Flex(2),
                            Html.X().Column().DataIndex(Model, m => m.fldCodeMeli).Text("کدملی").Flex(2),
                            Html.X().Column().DataIndex(Model, m => m.fldAge).Text("سن").Flex(2),
                            Html.X().Column().DataIndex(Model, m => m.fldNameNesbatShakhs).Text("نسبت").Flex(2),
                            Html.X().Column().DataIndex(Model, m => m.fldBirthDate).Text("تاریخ تولد").Flex(2)
                           // Html.X().ComponentColumn().HeaderItems(X.Checkbox().Listeners(k => k.Change.Handler = "SelectAllFiscalTitle();").ItemID("SelectAll")).Align(Alignment.Center).DataIndex(Model, m => m.fldMashmul).Flex(1).Editor(true).Component(X.Checkbox())
                    )
                   
                            .Plugins(
                                    Html.X().CellEditing().ClicksToEdit(1)
                                    )
                                        .Listeners(l => { l.Select.Handler = "ClickGrid();"; l.Deselect.Handler = "ClickGrid();"; })
                    .SelectionModel(
                            Html.X().CheckboxSelectionModel().CheckOnly(true)
                            .Mode(Ext.Net.SelectionMode.Multi)
                                
                    )
                ),
                 X.Panel().Border(false)
            .Items(
                X.FieldSet()
                        .ItemID("Panel").Title("اطلاعات افراد")
                    .Layout(Ext.Net.LayoutType.Table)
                    .Border(true)
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                    .Defaults(new { Margin = 2 })
                        .Items(
                            X.Hidden().ItemID("fldId"),
                                X.Hidden().ItemID("fldPersonalId"),
                         X.Hidden().ItemID("GHarardadBimeId"),
                    X.Label("تعداد اصلی:"),
                    X.TextField()
                    .ItemID("txtTedadAsli")
                        .AllowBlank(false)
                        .ReadOnly(false)
                        .MaxLength(10)
                        .EnforceMaxLength(true)
                        .Listeners(l => l.Change.Handler = "CheckInt(App.NewAfrad.queryById('txtTedadAsli'))")
                        .AutoFocus(true)
                        .Text("1")
                    .MaskRe("/[0-9]/")
                    .BlankText("لطفا تعداد اصلی را وارد کنید.")
                    , X.Label("تعداد 60 سال:")
                    , X.TextField()
                    .ItemID("txtTedadTakalof60Sal")
                .MaxLength(10)
                    .EnforceMaxLength(true)
                        .ReadOnly(false)
                    .Listeners(l => l.Change.Handler = "CheckInt(App.NewAfrad.queryById('txtTedadTakalof60Sal'))")
                    .Text("0")
                    .MaskRe("/[0-9]/")
                    .AllowBlank(false)
                    .BlankText("لطفا تحت تکفل 60 سال را وارد کنید.")
                    , X.Label("تعداد 70 سال:")
                    , X.TextField()
                    .ItemID("txtTedadTakalof70Sal")
                    .Text("0")
                    .MaxLength(10)
                        .ReadOnly(false)
                    .EnforceMaxLength(true)
                                .Listeners(l => l.Change.Handler = "CheckInt(App.NewAfrad.queryById('txtTedadTakalof70Sal'))")
                    .MaskRe("/[0-9]/")
                    .AllowBlank(false)
                    .BlankText("لطفا تحت تکفل 70 سال را وارد کنید.")

                            , X.Label("قرار داد بیمه (Ins):")
                            , X.TextField()
                            .ItemID("txtGHarardadBime")
                            .AllowBlank(false)
                            .BlankText("لطفا قرار داد بیمه را انتخاب کنید.")
                                .ReadOnly(true)
                            .Listeners(l =>
                            {
                                l.SpecialKey.Handler = "SelectGharardadBime(e.getKey());";
                            })
        )
        )
            .Layout(Ext.Net.LayoutType.VBox)
            .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
    ))
)

<script type="text/javascript">
    function ClickGrid() {
        var txtTedadAsli = App.NewAfrad.queryById('txtTedadAsli');
        var txtTedadTakalof60Sal = App.NewAfrad.queryById('txtTedadTakalof60Sal');
        var txtTedadTakalof70Sal = App.NewAfrad.queryById('txtTedadTakalof70Sal');
        txtTedadAsli.setValue(1);
        txtTedadTakalof60Sal.setValue('0');
        txtTedadTakalof70Sal.setValue('0');
        var asli = 0,Shast=0,Haftad=0;
        var SelectedRow = App.NewAfrad.queryById('Grid').getSelectionModel().getSelection();
        for (var i = 0; i < SelectedRow.length ; i++) {
           
            if(SelectedRow[i].data.fldAge<60)
            {
                asli = asli + 1;
            }
             if (SelectedRow[i].data.fldAge >= 60 && SelectedRow[i].data.fldAge<70) {
                 Shast = Shast + 1;
             }
             if (SelectedRow[i].data.fldAge >= 70) {
                 Haftad = Haftad + 1;
                 
             }
        }
        txtTedadAsli.setValue(asli+1);
        txtTedadTakalof60Sal.setValue(Shast);
        txtTedadTakalof70Sal.setValue(Haftad);
        
    }
    function SelectGharardadBime(Code) {
        if (Code == 45) {
            Ext.net.DirectMethod.request({
                url: '/PayRoll/SearchGharardadBime/Index',
                params: {
                    State: 1
                }
            });
        }
    }
    function LoadAfrad() {
        if ('@ViewBag.Id' != '0') {
            /*Edit*/
            Ext.net.DirectMethod.request({
                url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/Details',
                params: {
                    id: '@ViewBag.Id',
                    OrganId: '@ViewBag.OrganId'
                },
                success: function (data) {
                    var txtTedadAsli = App.NewAfrad.queryById('txtTedadAsli');
                    txtTedadAsli.setValue(data.fldTedadAsli);
                    var txtTedadTakalof60Sal = App.NewAfrad.queryById('txtTedadTakalof60Sal');
                    txtTedadTakalof60Sal.setValue(data.fldTedadTakafol60Sal);
                    var txtTedadTakalof70Sal = App.NewAfrad.queryById('txtTedadTakalof70Sal');
                    txtTedadTakalof70Sal.setValue(data.fldTedadTakafol70Sal);
                    var txtGHarardadBime = App.NewAfrad.queryById('txtGHarardadBime');
                    txtGHarardadBime.setValue(data.fldNameBime);
                    var GHarardadBimeId = App.NewAfrad.queryById('GHarardadBimeId');
                    GHarardadBimeId.setValue(data.fldGHarardadBimeId);
                    var fldPersonalId = App.NewAfrad.queryById('fldPersonalId');
                    fldPersonalId.setValue(data.fldPersonalId);
                    var Id = App.NewAfrad.queryById('fldId');
                    Id.setValue(data.fldId);

                }
            });
        }
        else {
            var fldPersonalId = App.NewAfrad.queryById('fldPersonalId');
            fldPersonalId.setValue('@ViewBag.PersonalId');
            var txtTedadAsli = App.NewAfrad.queryById('txtTedadAsli');
            txtTedadAsli.setValue("1");
            
        }
    }

    function SaveAfrad() {
        var txtTedadAsli = App.NewAfrad.queryById('txtTedadAsli');
        var txtTedadTakalof60Sal = App.NewAfrad.queryById('txtTedadTakalof60Sal');
        var txtTedadTakalof70Sal = App.NewAfrad.queryById('txtTedadTakalof70Sal');
        var GHarardadBimeId = App.NewAfrad.queryById('GHarardadBimeId');
        var txtGHarardadBime = App.NewAfrad.queryById('txtGHarardadBime');
        var Id = App.NewAfrad.queryById('fldId');
        var PersonalId = App.NewAfrad.queryById('fldPersonalId');
        var SelectedRow = App.NewAfrad.queryById('Grid').getSelectionModel().getSelection();
        var AfradTahtePoshehsId="";
        for (var i = 0; i < SelectedRow.length ; i++) {
            AfradTahtePoshehsId = AfradTahtePoshehsId+SelectedRow[i].data.fldAfradTahtePoshehsId + ";";
        }
        var er = false;

        if (txtTedadAsli.validate() == false) {
            er = true;
        }
        if (txtTedadTakalof60Sal.validate() == false) {
            er = true;
        }
        if (txtTedadTakalof70Sal.validate() == false) {
            er = true;
        }
        if (txtGHarardadBime.validate() == false) {
            er = true;
        }
        
        if (parseInt(txtTedadAsli.getValue()) <= 0)
        {
            Ext.MessageBox.show({
                title: "خطا",
                msg:"تعداد افراد اصلی وارد کنید.",
                icon: Ext.MessageBox.INFO,
                buttons: Ext.MessageBox.OK
            });
            return;
        }
        if (parseInt(txtTedadTakalof60Sal.getValue()) < 0) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "تعداد افراد تحت تکفل 60 سال معتبر نیست.",
                icon: Ext.MessageBox.INFO,
                buttons: Ext.MessageBox.OK
            });
            return;
        }
        if (parseInt(txtTedadTakalof70Sal.getValue()) < 0) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "تعداد افراد تحت تکفل 70 سال معتبر نیست.",
                icon: Ext.MessageBox.INFO,
                buttons: Ext.MessageBox.OK
            });
            return;
        }
        if (er == true)
            return;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/Save',
            params: {
                fldId: Id.getValue(),
                fldTedadAsli: txtTedadAsli.getValue(),
                fldTedadTakafol60Sal: txtTedadTakalof60Sal.getValue(),
                fldTedadTakafol70Sal: txtTedadTakalof70Sal.getValue(),
                fldGHarardadBimeId: GHarardadBimeId.getValue(),
                fldPersonalId: PersonalId.getValue()
                , fldAfradTahtePoshehsId: AfradTahtePoshehsId,
                OrganId: '@ViewBag.OrganId'
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Err == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                /*ClearAfrad();*/
                ReloadGridDetail();
             /*   App.Takmili.queryById('GridHeader').store.load();
                App.Takmili.queryById('GridDetail').getStore().loadData("");*/

            }

        });
    }
    function ReloadItem() {

        Ext.net.DirectMethod.request({
            url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/RloadAfrad',
            params: {
                PersonalId: '@ViewBag.PrsPersonalId',
                OrganId: '@ViewBag.OrganId',
                Id: '@ViewBag.Id'
            },
            success: function (data) {
                var store = App.NewAfrad.queryById("Grid").store;
                store.load({ start: 0, limit: store.count(), page: 1 });
                store.loadData(data.data);
                if (data.checkId.length != 0) {
                    for (var j = 0; j < data.checkId.length; j++) {
                        var index = App.NewAfrad.queryById('Grid').getStore().findExact("fldId", data.checkId[j]);
                        App.NewAfrad.queryById('Grid').getSelectionModel().select(index, true);
                    }
                }
            }
        });

    }
    function ClearAfrad() {
        App.NewAfrad.queryById('txtTedadAsli').setValue("1");
        App.NewAfrad.queryById('txtTedadTakalof70Sal').setValue("");
        App.NewAfrad.queryById('txtTedadTakalof60Sal').setValue("");
        App.NewAfrad.queryById('txtGHarardadBime').setValue("");
        App.NewAfrad.queryById('GHarardadBimeId').setValue(0);
        App.NewAfrad.queryById('fldId').setValue(0);
    }

    var addKeyMapNewAfrad = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
        var keyfield = App.NewAfrad.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld;
        if (keyfield.itemId == "txtGHarardadBime") {
            nextfld = App.NewAfrad.queryById('btnSave');
        }
        else {
            nextfld = keyfield.nextSibling().nextSibling();
            nextfld.selectText();
        }
        nextfld.focus();
                }
            }]
        });
    }


</script>
