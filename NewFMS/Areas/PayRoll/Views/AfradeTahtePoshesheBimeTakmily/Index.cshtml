@model NewFMS.Models.AfradTahtePoosheshTakmili
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();
   NewFMS.WCF_Common.CommonService servic = new NewFMS.WCF_Common.CommonService();
   NewFMS.WCF_Common.ClsError Err = new NewFMS.WCF_Common.ClsError();}
<br />
@(Html.X().Panel()
        .ID("Takmili")
        .Title("افراد تحت پوشش تکمیلی")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
            .Border(false)
        .Listeners(li => li.AfterRender.Handler = "TakmiliSetSize();")
       .Items(
    X.Panel().Border(false)//.Height(250)
        .Items(
                X.GridPanel()
                                  .TopBar(
                                    Html.X().Toolbar()
                                    .Items(X.Button().Text("بارگذاری از اکسل").Icon(Ext.Net.Icon.Add)//.ToolTip("کلید میانبر F8")
                                        .Listeners(li => li.Click.Handler = "UploadExcel();"),
                                        X.Button().Text("کپی بیمه تکمیلی").Icon(Ext.Net.Icon.DatabaseCopy)//.ToolTip("کلید میانبر F2")
                                                .Listeners(Li => Li.Click.Handler = "CopyTakmili();") 
                                                ,X.Label("سازمان:"),
                         X.ComboBox()
                                .ItemID("CboOrgan")
                                .TypeAhead(true)
                                .ColSpan(3)
                                .AutoFocus(true)
                                .Editable(true)
                                     .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                    .BlankText("لطفا سازمان را انتخاب کنید.")
                                                .Listeners(l => l.Change.Handler = "ChangeCboOrgan()")
                                    .AllowBlank(false)
                                .ForceSelection(true)
                                    .DisplayField("fldTitle")
                                .ValueField("fldId")
                                    .EmptyText("سازمان ...")
                                .Width(250)
                                .Store(X.Store()
                                .Model(X.Model()
                                .IDProperty("fldId")
                                .Fields(
                                    new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                    new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                        )
                                            )
                                .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetOrgan"))
                                .Reader(X.JsonReader().Root("data"))
                                                )
                        .Listeners(l => l.Load.Handler = "setdefaultValueAfrad()")
                                        )

                                        ))
                                        
                                .AutoScroll(true)
                                .Listeners(l => l.ItemClick.Handler = "ReloadGridDetail();")
                        //             .TopBar(
                        //    Html.X().Toolbar()
                        //    .Items(
                        //        X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)//.ToolTip("کلید میانبر F8")
                        //                .Listeners(li => li.Click.Handler = "NewTakmili();")
                        //    )
                        //)
                                .ItemID("GridHeader")
                                .BottomBar(X.PagingToolbar())
                                .Flex(2)
                                .Store(
                                           X.StoreFor(Model.Personal)
                                           .AutoLoad(false)
                                            .Proxy(Html.X().AjaxProxy()
                                            .Url(Url.Action("Read"))
                                            .Reader(Html.X().JsonReader().Root("data")))
                                            .Parameters(ps => ps.Add(new StoreParameter("OrganId", "App.Takmili.queryById('CboOrgan').getValue()", ParameterMode.Raw)))
                                .PageSize(9)
                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = "App.Takmili.queryById('GridHeader').selModel.refresh();")*/)
                                .View(
                                    Html.X().GridView()
                                        .LoadingText("در حال بارگذاری...")
                                        .RTL(true))
                                            .Plugins(X.FilterHeader().Remote(true))
                                    .ColumnModel(
                                        Html.X().RowNumbererColumn(),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldPrs_PersonalInfoId).Text("کد پرسنلی").Hidden(true).Flex(1),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldName_Father).Text("نام و نام خانوادگی").Flex(4),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldCodemeli).Text("کد ملی").Flex(4),
                                                Html.X().Column().DataIndex(Model.Personal, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(10)
                                        )
                                .SelectionModel(
                                    Html.X().RowSelectionModel()
                                        .Mode(Ext.Net.SelectionMode.Single)
                                        )
                                             
        ),
           X.Panel()
                                .ItemID("PnlGridDetail")
                                .Title("افراد")
                                .Border(false)
                                .Layout(Ext.Net.LayoutType.Fit)
                                .Items(
                                        X.GridPanel()
                                                  .TopBar(
                                Html.X().Toolbar()
                                .Items(
                                 X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)//.ToolTip("کلید میانبر F8")
                                        .Listeners(li => li.Click.Handler = "NewTakmili();"),
                                    X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)//.ToolTip("کلید میانبر F2")
                                            .Listeners(Li => Li.Click.Handler = "EditTakmili();"),
                                    X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)//.ToolTip("کلید میانبر F9")
                                        .Listeners(de =>
                                        {
                                            de.Click.Handler = "if (App.Takmili.queryById('GridHeader').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteTakmili();";
                                        })
                                            , X.Button().Text("تاریخچه").IconCls("HistoryTahtePoshesh").Hidden(!servic.Permission(710, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                        .Listeners(l => { l.Click.Handler = "HistoryAfradTahtePoshesh();"; })
                                            , X.Button().Text("چاپ تاریخچه").IconCls("PrintHistoryTahtePoshesh").Hidden(!servic.Permission(711, Convert.ToInt32(Session["OrganId"]), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                        .Listeners(l => { l.Click.Handler = "PrintHistoryAfradTahtePoshesh();"; })
                                   
                                        ,X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help).Listeners(l => { l.Click.Handler = "HelpTakmili();"; })

                                )
                            )
                                              .BottomBar(X.PagingToolbar())
                                        .AutoScroll(true)
                                            .ID("GridDetailTakmili")
                                        .Flex(2)//.Height(187)
                                        .Store(
                                               X.StoreFor(Model.Afrad)
                                                .PageSize(9)
                                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = " App.Takmili.queryById('GridDetail').selModel.refresh();")*/
                        )
                                        .View(
                                            Html.X().GridView()
                                                .LoadingText("در حال بارگذاری...")
                                                .RTL(true)
                        )
                                        .ColumnModel(
                                            Html.X().RowNumbererColumn(),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldPersonalId).Text("کد").Hidden(true).Flex(1),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldTedadAsli).Text("تعداد اصلی").Flex(4),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldTedadTakafol60Sal).Text("تعداد تحت تکفل 60 سال").Flex(4),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldTedadTakafol70Sal).Text("تعداد تحت تکفل 70 سال").Flex(4),
                                                        Html.X().Column().DataIndex(Model.Afrad, m => m.fldNameBime).Text("قرارداد بیمه").Flex(10)
                                                    )
                                        .SelectionModel(
                                            Html.X().RowSelectionModel()
                                                .Mode(Ext.Net.SelectionMode.Single)
                                )
                    )
    )
)
<script type="text/javascript">
    function setdefaultValueAfrad() {
        App.Takmili.queryById('CboOrgan').select(App.Takmili.queryById('CboOrgan').store.getAt(0));
    }
    function ChangeCboOrgan() {
        if (App.Takmili.queryById('CboOrgan').getValue() != null) {
            App.Takmili.queryById('GridHeader').store.load();
        }
    }
    var dadat;
    function TakmiliSetSize() {
        var grid = App.Takmili.queryById('GridHeader');
        grid.setHeight((App.PayWin.getHeight() - 200) / 2);
        var GridDetail = App.Takmili.queryById('GridDetailTakmili');
        GridDetail.setHeight((App.PayWin.getHeight() - 200) / 2);
    }
    function ReloadGridDetail() {
        var SelectedRow = App.Takmili.queryById('GridHeader').selModel.getLastSelected();
        var CboOrgan = App.Takmili.queryById('CboOrgan');
        Ext.net.DirectMethod.request({
            url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/Rload?PersonalId=' + SelectedRow.data.fldId+"&OrganId="+CboOrgan.getValue(),

            success: function (result) {
                App.Takmili.queryById('GridDetailTakmili').getStore().loadData(result);
            }
        });
    }
    function HistoryAfradTahtePoshesh() {
        var SelectedRow = App.Takmili.queryById('GridHeader').selModel.getLastSelected();
        var CboOrgan = App.Takmili.queryById('CboOrgan');
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/HistoryAfradeTahtePoshesh',
                params: {
                    PersonalId: SelectedRow.data.fldId,
                    OrganId:CboOrgan.getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا شخص مورد نظر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function PrintHistoryAfradTahtePoshesh() {
        var SelectedRow = App.Takmili.queryById('GridHeader').selModel.getLastSelected();
        var CboOrgan = App.Takmili.queryById('CboOrgan');
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/PrintHistoryAfradeTahtePoshesh',
                params: {
                    PersonalId: SelectedRow.data.fldId,
                    OrganId: CboOrgan.getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا شخص مورد نظر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EditTakmili() {
        var SelectedRow = App.Takmili.queryById('GridDetailTakmili').selModel.getLastSelected();
        var h = App.Takmili.queryById('GridHeader').selModel.getLastSelected();
        var CboOrgan = App.Takmili.queryById('CboOrgan');
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/new',
                params: {
                    id: SelectedRow.data.fldId,
                    PersonalId: SelectedRow.data.fldPersonalId,
                    PrsPersonalId: h.data.fldPrs_PersonalInfoId,
                    OrganId:CboOrgan.getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function CopyTakmili() {
        var CboOrgan = App.Takmili.queryById('CboOrgan');
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/CheckCopy',
            params: {
            },
            success: function (data) {
                if (data.Flag == 1)
                {
                    Ext.net.DirectMethod.request({
                        url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/CopyTakmili',
                        params: {
                        },
                        success: function () {
                        }
                    });
                }
                else {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "لطفا ابتدا قرارداد بیمه مورد نظر را تعریف نموده، سپس برای کپی اطلاعات اقدام نمایید.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
                Ext.net.Mask.hide();
            }
        });;

        }
    function HelpTakmili() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function UploadExcel() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/UploadExcel',
           success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function NewTakmili() {
        var SelectedRow = App.Takmili.queryById('GridHeader').selModel.getLastSelected();
        var CboOrgan = App.Takmili.queryById('CboOrgan');
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/new',
                params: {
                    id: 0,
                    PersonalId: SelectedRow.data.fldId,
                    PrsPersonalId: SelectedRow.data.fldPrs_PersonalInfoId,
                    OrganId:CboOrgan.getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک پرسنل را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteTakmili() {
        var SelectedHeaderRow = App.Takmili.queryById('GridDetailTakmili').selModel.getLastSelected();
        var CboOrgan = App.Takmili.queryById('CboOrgan');
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/PayRoll/AfradeTahtePoshesheBimeTakmily/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId,
                                OrganId: CboOrgan.getValue()
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Err == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                ReloadGridDetail();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>