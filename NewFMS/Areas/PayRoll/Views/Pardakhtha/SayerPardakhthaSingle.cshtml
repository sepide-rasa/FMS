@model NewFMS.Models.SayerPardakhts
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{

    var X = Html.X();
}
<script src="~/Scripts/accounting.js"></script>

@(X.Panel()
    .Title("سایر پرداخت ها")
    .Border(false)
    .ID("SayerPardakhthaSingle")
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Listeners(l=>l.AfterRender.Handler="setHeightGrid()")
    .Items(
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(Ext.Net.LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .ItemID("GridHeader")
                    .BottomBar(X.PagingToolbar())
                    .Listeners(l =>
                    {
                        
                        l.ItemClick.Handler = "ReloadSayerPardakhthaSingle();";
                    })
                    .Store(
                            X.StoreFor(Model.Personal)
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("ReadHeader"))
                                .Reader(Html.X().JsonReader().Root("data"))
                                .ExtraParams(l => l.Add(new { OrganId = ViewBag.OrganId }))
                        )
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                            Html.X().Column().DataIndex(Model.Personal, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                            Html.X().Column().DataIndex(Model.Personal, m => m.fldName_Father).Text("نام و نام خانوادگی").Flex(5).Wrap(true),
                            Html.X().Column().DataIndex(Model.Personal, m => m.fldCodemeli).Text("کد ملی").Flex(2),
                            Html.X().Column().DataIndex(Model.Personal, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(2),
                            Html.X().Column().DataIndex(Model.Personal, m => m.fldJobeCode).Text("کد شغلی بیمه").Flex(2),
                            Html.X().Column().DataIndex(Model.Personal, m => m.fldStatusId).Text("وضعیت").Hidden(true).Flex(1),/*فعال1:   2:غیرفعال  3:بازنشسته*/
                            Html.X().Column().DataIndex(Model.Personal, m => m.fldStatusTitle).Text("وضعیت").Hidden(true).Flex(1)
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    ),
                X.GridPanel()
                    .AutoScroll(true)
                        .TopBar(
                            Html.X().Toolbar()
                                .Items(
                                    X.Button()
                                        .Text("جدید")
                                        .Icon(Ext.Net.Icon.Add)
        //.ToolTip("کلید میانبر F8")
                                        .Listeners(li => li.Click.Handler = "NewSayerPardakhthaSingle();"),
                                    X.Button()
                                        .Text("ویرایش")
                                        .Icon(Ext.Net.Icon.Pencil)
        //.ToolTip("کلید میانبر F2")
                                        .Listeners(li => li.Click.Handler = "EditSayerPardakhthaSingle();"),
                                    X.Button()
                                        .Text("حذف")
                                        .Icon(Ext.Net.Icon.Delete)
        //.ToolTip("کلید میانبر F9")
                                        .Listeners(de =>
                                        {
                                            de.Click.Handler = "DeleteSayerPardakhthaSingle();";
                                        })
                            )
                        )
                    .ItemID("GridDetailSayer")
                    .Store(
                                    X.StoreFor(Model.Pardakht).AutoLoad(false)
                                                        .Proxy(Html.X().AjaxProxy()
                                                            .Url(Url.Action("ReadSayerPardakhts"))
                                                    .Reader(Html.X().JsonReader().Root("data"))
                                                            .ExtraParams(l => l.Add(new { OrganId = ViewBag.OrganId }))
                                                    
                                                    )
                    .Listeners(l => l.DataChanged.Handler = "App.SayerPardakhthaSingle.queryById('GridDetailSayer').selModel.refresh();"))
                    .Title("سایر پرداخت ها")
                    .BottomBar(X.PagingToolbar().HideRefresh(true))
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                        )
                                .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                            Html.X().Column().DataIndex(Model.Pardakht, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                            Html.X().Column().DataIndex(Model.Pardakht, m => m.fldYear).Text("سال").Flex(1),
                            Html.X().Column().DataIndex(Model.Pardakht, m => m.fldMonthName).Text("ماه").Flex(1),
                            Html.X().Column().DataIndex(Model.Pardakht, m => m.fldTitle).Text("عنوان").Wrap(true).Flex(4),
                            Html.X().Column().DataIndex(Model.Pardakht, m => m.fldNameNoeMostamar).Text("مستمر").Flex(2),
                            Html.X().Column().DataIndex(Model.Pardakht, m => m.fldAmount).Text("مبلغ").Renderer("seperate").Flex(2),
                            Html.X().Column().DataIndex(Model.Pardakht, m => m.fldMaliyat).Text("مالیات").Renderer("seperate").Flex(2),
                            Html.X().Column().DataIndex(Model.Pardakht, m => m.fldKhalesPardakhti).Text("خالص پرداختی").Renderer("seperate").Flex(2),
                            Html.X().Column().DataIndex(Model.Pardakht, m => m.fldNobatePardakt).Text("نوبت پرداخت").Flex(2),
                            Html.X().Column().DataIndex(Model.Pardakht, m => m.fldMarhalePardakht).Text("مرحله پرداخت").Flex(2)
                        )
                )
            )
        )

<script type="text/javascript">

    var seperate = function (value, metadata, record, rowIndex, colIndex, store) {
        return value.toLocaleString();
    };
    function setHeightGrid() {
        App.SayerPardakhthaSingle.queryById('GridHeader').setHeight(((App.PayWin.getHeight() - 170) / 2) - 10);
        App.SayerPardakhthaSingle.queryById('GridDetailSayer').setHeight(((App.PayWin.getHeight() - 170) / 2) + 10);
        Ext.net.Mask.hide();
    }


    function ReloadSayerPardakhthaSingle() {
        var SelectedRow = App.SayerPardakhthaSingle.queryById('GridHeader').selModel.getLastSelected();
        /* Ext.net.DirectMethod.request({
             url: '/PayRoll/Pardakhtha/Reload',
             params:{
                 PersonalId:SelectedRow.data.fldId
             },
             success: function (result) {
                 App.SayerPardakhthaSingle.queryById('GridDetailSayer').getStore().loadData(result);
             }
         });*/

        App.SayerPardakhthaSingle.queryById('GridDetailSayer').getStore().getProxy().setExtraParam("PersonalId", SelectedRow.data.fldId);
        App.SayerPardakhthaSingle.queryById('GridDetailSayer').getStore().load();
    }

    function EditSayerPardakhthaSingle() {
        var SelectedRow = App.SayerPardakhthaSingle.queryById('GridDetailSayer').selModel.getLastSelected();
        var SelectedRowHeader = App.SayerPardakhthaSingle.queryById('GridHeader').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/Pardakhtha/CheckPardakht',
                params: {
                    PersonalId: SelectedRowHeader.data.fldId,
                    Year: '@ViewBag.Year',
                    Month: '@ViewBag.Month',
                    OrganId: '@ViewBag.OrganId',
                    NobatPardakht: SelectedRow.data.fldNobatePardakt,
                    MarhalePardakht: SelectedRow.data.fldMarhalePardakht,

                },
                success: function (data) {

                    if(data.AllowGenerate==1)
                    {
                        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                        Ext.net.DirectMethod.request({
                            url: '/PayRoll/Pardakhtha/NewSayerPardakhtSingle',
                            params: {
                                PersonalId: SelectedRowHeader.data.fldId,
                                Id: SelectedRow.data.fldId,
                                Year: '@ViewBag.Year',
                                Month: '@ViewBag.Month',
                                OrganId: '@ViewBag.OrganId'
                            },
                            success: function () {
                                /*Ext.net.Mask.hide();*/
                            }
                        });
                    }
                    else {
                        Ext.net.Mask.hide();
                        Ext.MessageBox.show({
                            title: "خطا",
                            msg: "رکورد مورد نظر پرداخت شده است، ویرایش مجاز نیست",
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                }
            });
      

        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function NewSayerPardakhthaSingle() {
        var SelectedRow = App.SayerPardakhthaSingle.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
           
                       Ext.net.DirectMethod.request({
                    url: '/PayRoll/Pardakhtha/NewSayerPardakhtSingle',
                    params: {
                        PersonalId: SelectedRow.data.fldId,
                        Id: 0,
                        Year: '@ViewBag.Year',
                        Month: '@ViewBag.Month',
                        OrganId: '@ViewBag.OrganId'
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
                
            

        }
    else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک شخص را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
    }
    }


    function DeleteSayerPardakhthaSingle() {
        var SelectedRow = App.SayerPardakhthaSingle.queryById('GridDetailSayer').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes')
                    {
                        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                        Ext.net.DirectMethod.request({
                            url: '/PayRoll/Pardakhtha/CheckPardakht',
                            params: {
                                PersonalId: SelectedRowHeader.data.fldId,
                                Year: '@ViewBag.Year',
                                Month: '@ViewBag.Month',
                                OrganId: '@ViewBag.OrganId',
                                NobatPardakht: SelectedRow.data.fldNobatePardakt,
                                MarhalePardakht: SelectedRow.data.fldMarhalePardakht,

                            },
                            success: function (data) {

                                if (data.AllowGenerate == 1) {
                                    Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                                    Ext.net.DirectMethod.request({
                                        url: '/PayRoll/Pardakhtha/DeleteSingle',
                                        params: {
                                            Id: SelectedRow.data.fldId,
                                            OrganId: '@ViewBag.OrganId'
                                        },
                                        success: function (data) {
                                            var ic = Ext.MessageBox.INFO;
                                            if (data.Er == 1) {
                                                ic = Ext.MessageBox.ERROR;
                                            }
                                            Ext.MessageBox.show({
                                                title: data.MsgTitle,
                                                msg: data.Msg,
                                                icon: ic,
                                                buttons: Ext.MessageBox.OK
                                            });
                                            ReloadSayerPardakhthaSingle();
                                            for (var i = 0; i < App.FirstTabPay.items.length; i++) {
                                                if (App.FirstTabPay.items.items[i].id == "NewSayerPardakhthaGroup") {
                                                    ReloadPardakht();
                                                }
                                            }
                                            Ext.net.Mask.hide();
                                        }
                                    });
                                }
                                else {
                                    Ext.net.Mask.hide();
                                    Ext.MessageBox.show({
                                        title: "خطا",
                                        msg: "رکورد مورد نظر پرداخت شده است، حذف مجاز نیست",
                                        icon: Ext.MessageBox.ERROR,
                                        buttons: Ext.MessageBox.OK
                                    });
                                }
                            }
                        });
                    

                    }
                    
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

</script>
