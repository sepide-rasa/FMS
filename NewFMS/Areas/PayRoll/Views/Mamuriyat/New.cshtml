@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
    .Listeners(li => { li.AfterRender.Handler = "LoadMamuriyat();"; li.Render.Fn = "addKeyMapNewMamuriyat"; })
    .Width(560)
        //   .Height(300)
    .Resizable(false)
    .Title("ثبت ماموریت جدید")
    .ID("NewMamuriyat")
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .ButtonAlign(Ext.Net.Alignment.Center)
            .Border(false)
            .KeyMap(Html.X().KeyMap()
                .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                .Binding(b =>
                {
                    b.Add(Html.X().KeyBinding()
                    .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                    .Handler("checkSaveMamuriyat(); ")
                    );

                }))
            .DefaultButton("btn")
            .Layout(Ext.Net.LayoutType.VBox)
            .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Buttons(
                X.Button()
                    .Text("ذخیره")
                    .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                        .Listeners(l => l.Click.Handler = "checkSaveMamuriyat();")
                    .ItemID("btnSave"),
                X.Button()
                    .Text("خروج")
                    .Icon(Ext.Net.Icon.DoorOut)
                    .ToolTip("کلید میانبر Esc")
                    .OnClientClick("App.NewMamuriyat.destroy();")
                    )
            .Items(
                X.FieldSet()
                        .ItemID("Panel").Title("اطلاعات ماموریت")
                    .Layout(Ext.Net.LayoutType.Table)
                    .Border(true)
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                    .Defaults(new { Margin = 2 })
                        .Items(
                            X.Hidden().ItemID("fldId"),
                            X.Hidden().ItemID("fldPersonalId"),
                             X.Label("نام و نام خانوادگی:"),
                            X.TextField()
                                .ItemID("txtName")
                                    .FieldStyle("background-image:none;background-color:#dfe8f6")
                                .ReadOnly(true)
                                .AllowBlank(false),
                            X.Label("کد ملی:"),
                            X.TextField()
                                    .ItemID("txtNationalCode")
                                        .FieldStyle("background-image:none;background-color:#dfe8f6")
                                    .ReadOnly(true)
                                .AllowBlank(false),
                            X.Label("شماره پرسنلی:"),
                            X.TextField()
                                    .ItemID("txtShomarePersoneli")
                                        .FieldStyle("background-image:none;background-color:#dfe8f6")
                                    .ReadOnly(true)
                                .AllowBlank(false),
                             X.Label("نوبت پرداخت:"),
                    X.ComboBox()
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                        .ItemID("CboNobatePardakht")
                  //  .Width(80)
                    .AutoFocus(true)
                    .Editable(false)
                    .TypeAhead(true)
                        .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                    .QueryMode(DataLoadMode.Local)
                    .TriggerAction(TriggerAction.All)
                    .Items(
                        new ListItem("یک", "1"),
                        new ListItem("دو", "2"),
                        new ListItem("سه", "3"),
                        new ListItem("چهار", "4"),
                        new ListItem("پنج", "5")
                    ).ColSpan(3)
                    .SelectedItems(new { Value = "1" })
                    , X.Label("ماموریت با بیتوته:")
                     , X.TextField()
                        .ItemID("txtBaBeytute")
                        .Text("0")
                        //.Width(80)
                        .MaskRe("/[0-9-.]/")
                        .MaxLength(3)
                        .EnforceMaxLength(true)
                        .AllowBlank(false)
                        .BlankText("لطفا ماموریت با بیتوته را وارد کنید.")
                        .Listeners(l => { l.Change.Handler = "CheckByte(App.NewMamuriyat.queryById('txtBaBeytute'))"; })

                                , X.Label("ماموریت بدون بیتوته:")
                                    , X.TextField()
                                //    .Width(80)
                                .ItemID("txtBeduneBeytute")
                                .Text("0")
                                .MaskRe("/[0-9-.]/")
                                    .AllowBlank(false)
                            .MaxLength(3)
                            .EnforceMaxLength(true)
                                .BlankText("لطفا ماموریت بدون بیتوته را وارد کنید.")
                                .Listeners(l => { l.Change.Handler = "CheckByte(App.NewMamuriyat.queryById('txtBeduneBeytute'))"; })
                                
                        , X.Label(" با بیتوته 10 درصد:")
                            , X.TextField()
                        //    .Width(80)
                        .ItemID("txtBa10")
                        .Text("0")
                        .MaskRe("/[0-9-.]/")
                        .AllowBlank(false)
                            .BlankText("لطفا با بیتوته 10 درصد را وارد کنید.")
                            .MaxLength(3)
                            .EnforceMaxLength(true)
                        .Listeners(l => { l.Change.Handler = "CheckByte(App.NewMamuriyat.queryById('txtBa10'))"; })
                        
                            , X.Label(" بدون بیتوته 10 درصد:")
                                , X.TextField()
                              //  .Width(80)
                            .ItemID("txtBe10")
                            .Text("0")
                            .MaskRe("/[0-9-.]/")
                            .AllowBlank(false)
                                .BlankText("لطفا بدون بیتوته 10 درصد را وارد کنید.")
                            .MaxLength(3)
                            .EnforceMaxLength(true)
                            .Listeners(l => { l.Change.Handler = "CheckByte(App.NewMamuriyat.queryById('txtBe10'))"; })
                            
                        , X.Label(" با بیتوته 20 درصد:")
                            , X.TextField()
                           // .Width(80)
                        .ItemID("txtBa20")
                        .Text("0")
                        .MaskRe("/[0-9-.]/")
                        .AllowBlank(false)
                            .BlankText("لطفا با بیتوته 20 درصد را وارد کنید.")
                            .MaxLength(3)
                            .EnforceMaxLength(true)
                        .Listeners(l => { l.Change.Handler = "CheckByte(App.NewMamuriyat.queryById('txtBa20'))"; })

                    , X.Label(" بدون بیتوته 20 درصد:")
                        , X.TextField()
                    //    .Width(80)
                    .ItemID("txtBe20")
                    .Text("0")
                    .MaskRe("/[0-9-.]/")
                    .AllowBlank(false)
                        .BlankText("لطفا بدون بیتوته 20 درصد را وارد کنید.")
                            .MaxLength(3)
                            .EnforceMaxLength(true)
                    .Listeners(l => { l.Change.Handler = "CheckByte(App.NewMamuriyat.queryById('txtBe20'))"; })
                            
                        , X.Label(" با بیتوته 30 درصد:")
                            , X.TextField()
                          //  .Width(80)
                        .ItemID("txtBa30")
                        .Text("0")
                        .MaskRe("/[0-9-.]/")
                        .AllowBlank(false)
                            .BlankText("لطفا با بیتوته 30 درصد را وارد کنید.")
                            .MaxLength(3)
                            .EnforceMaxLength(true)
                        .Listeners(l => { l.Change.Handler = "CheckByte(App.NewMamuriyat.queryById('txtBa30'))"; })      

                        , X.Label(" بدون بیتوته 30 درصد:")
                            , X.TextField()
                            //.Width(80)
                        .ItemID("txtBe30")
                        .Text("0")
                        .MaskRe("/[0-9-.]/")
                        .AllowBlank(false)
                            .BlankText("لطفا بدون بیتوته 30 درصد را وارد کنید.")
                            .MaxLength(3)
                            .EnforceMaxLength(true)
                        .Listeners(l => { l.Change.Handler = "CheckByte(App.NewMamuriyat.queryById('txtBe30'))"; })
        )
    ))
)

<script type="text/javascript">
    var Year = '@ViewBag.Year';
    var Month = '@ViewBag.Month';

    function LoadMamuriyat() {
        var txtBaBeytute = App.NewMamuriyat.queryById('txtBaBeytute');
        var txtBeduneBeytute = App.NewMamuriyat.queryById('txtBeduneBeytute');
        var CboNobatePardakht = App.NewMamuriyat.queryById('CboNobatePardakht');
        var txtBa10 = App.NewMamuriyat.queryById('txtBa10');
        var txtBa20 = App.NewMamuriyat.queryById('txtBa20');
        var txtBa30 = App.NewMamuriyat.queryById('txtBa30');
        var txtBe10 = App.NewMamuriyat.queryById('txtBe10');
        var txtBe20 = App.NewMamuriyat.queryById('txtBe20');
        var txtBe30 = App.NewMamuriyat.queryById('txtBe30');
        if ('@ViewBag.IsKargar' == 1) {
            txtBaBeytute.setReadOnly(false);
            txtBeduneBeytute.setReadOnly(true);
            txtBa10.setReadOnly(true);
            txtBa20.setReadOnly(true);
            txtBa30.setReadOnly(true);
            txtBe10.setReadOnly(true);
            txtBe20.setReadOnly(true);
            txtBe30.setReadOnly(true);
        }
        else {
            txtBaBeytute.setReadOnly(false);
            txtBeduneBeytute.setReadOnly(false);
            txtBa10.setReadOnly(false);
            txtBa20.setReadOnly(false);
            txtBa30.setReadOnly(false);
            txtBe10.setReadOnly(false);
            txtBe20.setReadOnly(false);
            txtBe30.setReadOnly(false);
        }
        if ('@ViewBag.Id' != '0') {
            /*Edit*/
            Ext.net.DirectMethod.request({
                url: '/PayRoll/Mamuriyat/Details',
                params: {
                    id: '@ViewBag.Id',
                    OrganId:'@ViewBag.OrganId'
                },
                success: function (data) {
                    var txtName = App.NewMamuriyat.queryById('txtName');
                    txtName.setValue(data.fldName);
                    var txtNationalCode = App.NewMamuriyat.queryById('txtNationalCode');
                    txtNationalCode.setValue(data.fldCodemeli);
                    var txtShomarePersoneli = App.NewMamuriyat.queryById('txtShomarePersoneli');
                    txtShomarePersoneli.setValue(data.fldSh_Personali);

                    txtBaBeytute.setValue(data.fldBaBeytute);
                    txtBeduneBeytute.setValue(data.fldBeduneBeytute);
                    CboNobatePardakht.setValue(data.fldNobatePardakht);
                    txtBa10.setValue(data.fldBa10);
                    txtBa20.setValue(data.fldBa20);
                    txtBa30.setValue(data.fldBa30);
                    txtBe10.setValue(data.fldBe10);
                    txtBe20.setValue(data.fldBe20);
                    txtBe30.setValue(data.fldBe30);
                    var fldPersonalId = App.NewMamuriyat.queryById('fldPersonalId');
                    fldPersonalId.setValue(data.fldPersonalId);
                    var Id = App.NewMamuriyat.queryById('fldId');
                    Id.setValue(data.fldId);
                    Month = data.fldMonth;
                    Year = data.fldYear;
                }
            });
        }
        else {
            var fldPersonalId = App.NewMamuriyat.queryById('fldPersonalId');
            fldPersonalId.setValue('@ViewBag.PersonalId');
            Ext.net.DirectMethod.request({
                url: '/PayRoll/EzafeKari_TatilKari/DetailsHeader',
                params: {
                    Id: '@ViewBag.PersonalId',
                    OrganId: '@ViewBag.OrganId'
                },
                success: function (data) {
                    var txtName = App.NewMamuriyat.queryById('txtName');
                    txtName.setValue(data.fldName);
                    var txtNationalCode = App.NewMamuriyat.queryById('txtNationalCode');
                    txtNationalCode.setValue(data.fldNationalCode);
                    var txtShomarePersoneli = App.NewMamuriyat.queryById('txtShomarePersoneli');
                    txtShomarePersoneli.setValue(data.fldShomarePersoneli);
                    Ext.net.Mask.hide();
                }
            });
        }
    }
    function checkSaveMamuriyat(){
        var SelectedRow = App.Mamuriyat.queryById('GridHeader').selModel.getLastSelected();
            if (SelectedRow.data.fldStatusId == 1) {
                SaveMamuriyat();
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "وضعیت فرد مورد نظر " + SelectedRow.data.fldStatusTitle + " است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
        function SaveMamuriyat() {
            var txtBaBeytute = App.NewMamuriyat.queryById('txtBaBeytute');
            var CboNobatePardakht = App.NewMamuriyat.queryById('CboNobatePardakht');
            var txtBeduneBeytute = App.NewMamuriyat.queryById('txtBeduneBeytute');
            var txtBa10 = App.NewMamuriyat.queryById('txtBa10');
            var txtBa20 = App.NewMamuriyat.queryById('txtBa20');
            var txtBa30 = App.NewMamuriyat.queryById('txtBa30');
            var txtBe10 = App.NewMamuriyat.queryById('txtBe10');
            var txtBe20 = App.NewMamuriyat.queryById('txtBe20');
            var txtBe30 = App.NewMamuriyat.queryById('txtBe30');
            var Id = App.NewMamuriyat.queryById('fldId');
            var PersonalId = App.NewMamuriyat.queryById('fldPersonalId');

            var er = false;

            if (txtBaBeytute.validate() == false) {
                er = true;
            }
            if (CboNobatePardakht.validate() == false) {
                er = true;
            }
            if (txtBeduneBeytute.validate() == false) {
                er = true;
            }
            if (txtBa10.validate() == false) {
                er = true;
            }
            if (txtBa20.validate() == false) {
                er = true;
            }
            if (txtBa30.validate() == false) {
                er = true;
            }
            if (txtBe10.validate() == false) {
                er = true;
            }
            if (txtBe20.validate() == false) {
                er = true;
            }
            if (txtBe30.validate() == false) {
                er = true;
            }


            if (er == true)
                return;
            Ext.net.DirectMethod.request({
                url: '/PayRoll/Mamuriyat/Save',
                params: {
                    fldId: Id.getValue(),
                    fldBaBeytute: txtBaBeytute.getValue(),
                    fldNobatePardakht: CboNobatePardakht.getValue(),
                    fldBeduneBeytute: txtBeduneBeytute.getValue(),
                    fldBa10: txtBa10.getValue(),
                    fldBa20: txtBa20.getValue(),
                    fldBa30: txtBa30.getValue(),
                    fldBe10: txtBe10.getValue(),
                    fldBe20: txtBe20.getValue(),
                    fldBe30: txtBe30.getValue(),
                    fldPersonalId: PersonalId.getValue(),
                    fldMonth: Month,
                    fldYear: Year,
                    OrganId: '@ViewBag.OrganId'
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Er == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    ClearMamuriyat();
                    ReloadGridDetailMamuriyat();
                    /* App.Mamuriyat.queryById('GridHeader').store.load();
                     App.Mamuriyat.queryById('GridDetail').getStore().loadData("");*/
                }

            });
        }
        function ClearMamuriyat() {
            App.NewMamuriyat.queryById('txtBaBeytute').setValue("");
            App.NewMamuriyat.queryById('CboNobatePardakht').setValue("1");
            App.NewMamuriyat.queryById('txtBeduneBeytute').setValue("");
            App.NewMamuriyat.queryById('txtBa10').setValue("");
            App.NewMamuriyat.queryById('txtBa20').setValue("");
            App.NewMamuriyat.queryById('txtBa30').setValue("");
            App.NewMamuriyat.queryById('txtBe10').setValue("");
            App.NewMamuriyat.queryById('txtBe20').setValue("");
            App.NewMamuriyat.queryById('txtBe30').setValue("");
            /*App.NewMamuriyat.queryById('fldPersonalId').setValue(0);*/
            App.NewMamuriyat.queryById('fldId').setValue(0);
            Year = '@ViewBag.Year';
            Month = '@ViewBag.Month';
        }

        var addKeyMapNewMamuriyat = function (cmp) {
            this.keyMap = new Ext.util.KeyMap({
                target: cmp.getEl(),
                binding: [{
                    key: [13, 9], /*Ext.EventObject.ENTER,*/
                    fn: function (key, e) {
                        if (e.getKey() == 9) {
                            e.stopEvent();
                        }
                        var keyfield = App.NewMamuriyat.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;
                        if ('@ViewBag.IsKargar' == 1) {
                            if (keyfield.itemId == "txtBaBeytute") {
                                nextfld = App.NewMamuriyat.queryById('btnSave');
                            }
                            else {
                                nextfld = keyfield.nextSibling().nextSibling();
                                nextfld.selectText();
                            }
                        }
                        else {
                            if (keyfield.itemId == "txtBe30") {
                                nextfld = App.NewMamuriyat.queryById('btnSave');
                            }
                            else {
                                nextfld = keyfield.nextSibling().nextSibling();
                                nextfld.selectText();
                            }
                        }
                        nextfld.focus();
                    }
                }]
            });
        }


</script>
