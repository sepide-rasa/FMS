@model IEnumerable<NewFMS.WCF_PayRoll.OBJ_Mamuriyat>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
@*<style>
        #test legend{
            text-align:right!important;
        }
    </style>*@
<br />
@(Html.X().Panel()
        .ID("GroupMamuriyat")
            .Title("ثبت گروهی ماموریت")
                    //.Listeners(l =>
                    //                {
                    //                    l.AfterLayout.Handler = "ReloadMamuriyatGroup();";
                    //                })
        // .Listeners(li => li.AfterRender.Handler = "GroupMamuriyatSetSize();")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
        .Border(false)
       .Items(
        X.GridPanel()
                          .TopBar(
                                    Html.X().Toolbar()
                                    .Items(
                                        X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk)//.ToolTip("کلید میانبر F2")
                                                    .Listeners(Li => Li.Click.Handler = "SaveGroupMamuriyat();"),
                                        X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)//.ToolTip("کلید میانبر F9")
                                                    .Listeners(Li => Li.Click.Handler = "DeleteGroupMamuriyat();")

                                    )
                                )
        .ItemID("GroupMamuriyatGrid")
        .AutoScroll(true)
              //  .BottomBar(X.PagingToolbar().HideRefresh(true))
            .Store(
                            X.StoreForModel()
                                        .Listeners(l => l.DataChanged.Handler = "App.GroupMamuriyat.queryById('GroupMamuriyatGrid').selModel.refresh();")
        //.Proxy(Html.X().AjaxProxy()
        //    .Url(Url.Action("Read"))
        //    .Reader(Html.X().JsonReader().Root("data"))
        //)
                            .PageSize(200000)
                            .RemoteFilter(true)
                            .RemotePaging(true)
                        )
                    .View(
                                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)//.GetRowClass(l => l.Fn = "getRowClassMamuriyatGroup")
                )
        //    .Plugins(X.FilterHeader().Remote(true)) 
                     .Listeners(l =>
                     {
                         l.AfterRender.Handler = "var grid = App.GroupMamuriyat.queryById('GroupMamuriyatGrid');grid.setHeight(App.PayWin.getHeight() - 170); ";

                     })
        .ColumnModel(
        Html.X().RowNumbererColumn(),
                            Html.X().Column().DataIndex(Model, m => m.fldPersonalInfoId).Hidden(true).Flex(3),
                            Html.X().Column().DataIndex(Model, m => m.fldNoeEstekhdamId).Hidden(true).Text("نوع استخدام").Flex(3),
                            Html.X().Column().DataIndex(Model, m => m.fldMamuriyatId).Hidden(true).Flex(3),
                            Html.X().Column().DataIndex(Model, m => m.fldName_Father).Text("نام و نام خانوادگی").Flex(4),
                            Html.X().Column().DataIndex(Model, m => m.fldCodemeli).Text("کدملی").Flex(4),
                            Html.X().Column().DataIndex(Model, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(4),
                            Html.X().Column().DataIndex(Model, m => m.fldBaBeytute).Text("ماموریت با بیتوته").Flex(3).Editor(
                                Html.X().TextField().MaskRe("/[0-9-.]/").ID("BaBeytute")
                                    .Listeners(l => { l.Change.Handler = "CheckByte(App.BaBeytute)"; })),
                        Html.X().Column().DataIndex(Model, m => m.fldBa10).Text(" با بیتوته 10 درصد").Flex(3).Editor(
                                    Html.X().TextField().MaskRe("/[0-9-.]/").ID("Ba10")
                                            .Listeners(l => { l.Change.Handler = "CheckByte(App.Ba10)"; l.Focus.Handler = "CheckReadonly(App.Ba10)"; })),
                        Html.X().Column().DataIndex(Model, m => m.fldBa20).Text(" با بیتوته 20 درصد").Flex(3).Editor(
                                    Html.X().TextField().MaskRe("/[0-9-.]/").ID("Ba20")
                                        .Listeners(l => { l.Change.Handler = "CheckByte(App.Ba20)"; l.Focus.Handler = "CheckReadonly(App.Ba20)"; })),
                        Html.X().Column().DataIndex(Model, m => m.fldBa30).Text(" با بیتوته 30 درصد").Flex(3).Editor(
                                    Html.X().TextField().MaskRe("/[0-9-.]/").ID("Ba30")
                                        .Listeners(l => { l.Change.Handler = "CheckByte(App.Ba30)"; l.Focus.Handler = "CheckReadonly(App.Ba30)"; })),
                        Html.X().Column().DataIndex(Model, m => m.fldBeduneBeytute).Text("ماموریت بدون بیتوته").Flex(3).Editor(
                                    Html.X().TextField().MaskRe("/[0-9-.]/").ID("BeduneBeytute")
                                        .Listeners(l => { l.Change.Handler = "CheckByte(App.BeduneBeytute)"; l.Focus.Handler = "CheckReadonly(App.BeduneBeytute)"; })),
                        Html.X().Column().DataIndex(Model, m => m.fldBe10).Text(" بدون بیتوته 10 درصد").Flex(3).Editor(
                                    Html.X().TextField().MaskRe("/[0-9-.]/").ID("Be10")
                                        .Listeners(l => { l.Change.Handler = "CheckByte(App.Be10)"; l.Focus.Handler = "CheckReadonly(App.Be10)"; })),
                        Html.X().Column().DataIndex(Model, m => m.fldBe20).Text(" بدون بیتوته 20 درصد").Flex(3).Editor(
                                    Html.X().TextField().MaskRe("/[0-9-.]/").ID("Be20")
                                        .Listeners(l => { l.Change.Handler = "CheckByte(App.Be20)"; l.Focus.Handler = "CheckReadonly(App.Be20)"; })),
                        Html.X().Column().DataIndex(Model, m => m.fldBe30).Text(" بدون بیتوته 30 درصد").Flex(3).Editor(
                                    Html.X().TextField().MaskRe("/[0-9-.]/").ID("Be30")
                                        .Listeners(l => { l.Change.Handler = "CheckByte(App.Be30)"; l.Focus.Handler = "CheckReadonly(App.Be30)"; }))
    )
              .Listeners(l =>
                                        {
                                            l.ViewReady.Handler = "ReloadMamuriyatGroup();";
                                        })
              .SelectionModel(
              Html.X().CellSelectionModel()
                         /*   Html.X().CheckboxSelectionModel().PruneRemoved(false).ShowHeaderCheckbox(false)
                                .Mode(SelectionMode.Multi).CheckOnly(true)*/
                         )
                        .Plugins(
                        Html.X().CellEditing().ClicksToEdit(1)
                       /* .Listeners(l =>
                                {
                                    l.Edit.Fn = "LockOff";
                                    l.BeforeEdit.Fn = "LockOn";
                                })*/)
    )
)
<script type="text/javascript">

    var getRowClassMamuriyatGroup = function (record, rowIndex, rowParams, store) {
        var color = 'white';
        if (rowIndex % 2 == 1)
            color = '#dfe8f6';
        var clsName = "row" + rowIndex,
            clsStyle = Ext.String.format(".{0} .x-grid-cell, .{0} .x-grid-rowwrap-div { background-color: {1} !important; })", clsName, color);
        Ext.net.ResourceMgr.registerCssClass(clsName, clsStyle);
        return clsName;
    };

    var LockOn = function (editor, e) {
        App.GroupMamuriyat.queryById('GroupMamuriyatGrid').getSelectionModel().setLocked(true);
        App.GroupMamuriyat.queryById('GroupMamuriyatGrid').getView().focusRow(e.rowIdx);
    };

    var LockOff = function (a, b) {
       App.GroupMamuriyat.queryById('GroupMamuriyatGrid').getSelectionModel().setLocked(false);
        App.GroupMamuriyat.queryById('GroupMamuriyatGrid').getView().focusRow(b.rowIdx);
    };
    function CheckByte(TxT) {
        if (parseInt(TxT.getValue()) > 255)
            TxT.setValue("");
    }
    function ReloadMamuriyatGroup() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Mamuriyat/ReloadMamuriyatGroup',
            params: {
                FieldName: '@ViewBag.FieldName',
                CostCenter_ChartId: '@ViewBag.CostCenter_ChartId',
                OrganId:'@ViewBag.OrganId'
            },
            success: function (result) {
                App.GroupMamuriyat.queryById('GroupMamuriyatGrid').getStore().loadData(result);
                SellectAllMamuriyat();
            }
        });
    }
    function SellectAllMamuriyat() {
        App.GroupMamuriyat.queryById('GroupMamuriyatGrid').getSelectionModel().selectAll();
        App.GroupMamuriyat.queryById('GroupMamuriyatGrid').getView().focusRow(0);
    }
    function CheckReadonly(TxT) {
        var SelectedRow = App.GroupMamuriyat.queryById('GroupMamuriyatGrid').selModel.getLastSelected();
        if (SelectedRow.data.fldNoeEstekhdamId == 1) {
            TxT.setReadOnly(true);
        }
        else
            TxT.setReadOnly(false);
    }
    function SaveGroupMamuriyat() {
        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        var SelectItems = new Array();
        var SelectedRow = App.GroupMamuriyat.queryById('GroupMamuriyatGrid');
        for (var i = 0; i < SelectedRow.selModel.store.count() ; i++) {
            row = SelectedRow.selModel.store.data.items[i];
       /* var SelectedRow = App.GroupMamuriyat.queryById('GroupMamuriyatGrid').getSelectionModel().getSelection();
        if (SelectedRow.length != 0) {
            for (var k = 0; k < SelectedRow.length ; k++) {
                SelectItems.push({
                    'fldId': SelectedRow[k].data.fldMamuriyatId,
                    'fldPersonalId': SelectedRow[k].data.fldPersonalInfoId,
                    'fldBaBeytute': SelectedRow[k].data.fldBaBeytute,
                    'fldBa10': SelectedRow[k].data.fldBa10,
                    'fldBa20': SelectedRow[k].data.fldBa20,
                    'fldBa30': SelectedRow[k].data.fldBa30,
                    'fldBeduneBeytute': SelectedRow[k].data.fldBeduneBeytute,
                    'fldBe10': SelectedRow[k].data.fldBe10,
                    'fldBe20': SelectedRow[k].data.fldBe20,
                    'fldBe30': SelectedRow[k].data.fldBe30,*/
            SelectItems.push({
                'fldId': row.data.fldMamuriyatId,
                'fldPersonalId': row.data.fldPersonalInfoId,
                'fldBaBeytute': row.data.fldBaBeytute,
                'fldBa10': row.data.fldBa10,
                'fldBa20': row.data.fldBa20,
                'fldBa30': row.data.fldBa30,
                'fldBeduneBeytute': row.data.fldBeduneBeytute,
                'fldBe10': row.data.fldBe10,
                'fldBe20': row.data.fldBe20,
                'fldBe30': row.data.fldBe30,
                    'fldYear': '@ViewBag.Year',
                    'fldMonth': '@ViewBag.Month',
                    'fldNobatePardakht': '@ViewBag.nobatePardakht'
                });
            }
            var data = {
                MamuriyatVal: SelectItems,
                OrganId: '@ViewBag.OrganId'
            };
            $.ajax({
                type: "POST",
                url: '/PayRoll/Mamuriyat/SaveGroup',
                datatype: "json",
                data: JSON.stringify(data),
                contentType: 'application/json',
                success: function (data1) {
                    Ext.net.Mask.hide();
                    var result = data1;/*JSON.parse(data1);*/
                    var ico = Ext.MessageBox.INFO;
                    if (result.Er == 1)
                        ico = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: result.MsgTitle,
                        msg: result.Msg,
                        icon: ico,
                        buttons: Ext.MessageBox.OK
                    });
                },
                failure: function (data1) {
                    alert(data.data1);
                }
            });
            /* }
       else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا حداقل یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }*/
    }
    function DeleteGroupMamuriyat() {
        var SelectItems = new Array();
        var SelectedRow = App.GroupMamuriyat.queryById('GroupMamuriyatGrid').getSelectionModel().getSelection();
        if (SelectedRow.length != 0) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                        for (var k = 0; k < SelectedRow.length ; k++) {
                            SelectItems.push({
                                'fldId': SelectedRow[k].data.fldMamuriyatId
                            });
                        }
                        var data = {
                            MamuriyatGroupVal: SelectItems,
                            OrganId: '@ViewBag.OrganId'
                        };
                        $.ajax({
                            type: "POST",
                            url: '/PayRoll/Mamuriyat/DeleteGroup',
                            datatype: "json",
                            data: JSON.stringify(data),
                            contentType: 'application/json',
                            success: function (data1) {
                                var result = data1;/*JSON.parse(data1);*/
                                ReloadMamuriyatGroup();
                                var ico = Ext.MessageBox.INFO;
                                if (result.Er == 1)
                                    ico = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: result.MsgTitle,
                                    msg: result.Msg,
                                    icon: ico,
                                    buttons: Ext.MessageBox.OK
                                });
                            },
                            failure: function (data1) {
                                alert(data.data1);
                            }
                        });
                        Ext.net.Mask.hide();
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا حداقل یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>
