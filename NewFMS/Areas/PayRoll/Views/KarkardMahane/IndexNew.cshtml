@model NewFMS.Models.KarkardMahane
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<br />
@(Html.X().Panel()
        .ID("KarkardMahane")
        .Title("کارکرد ماهانه")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
            .Border(false)
        .Listeners(li => li.AfterRender.Handler = "KarkardMahaneSetSize();")
       .Items(
    X.Panel().Border(false)//.Height(250)
        .Items(
                X.GridPanel()
                                .AutoScroll(true)
        //.Listeners(l => l.ItemClick.Handler = "ReloadGridDetail();")
                                    .TopBar(
                                    Html.X().Toolbar()
                                    .Items(
                                    X.ComboBox()
                                        .ItemID("CboOrgan")
                                        .TypeAhead(true)
                                        .AutoFocus(true)
                                        .Editable(true)
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .BlankText("لطفا سازمان را انتخاب کنید.")
                .Listeners(l => l.Change.Handler = "App.KarkardMahane.queryById('GridAshkhas').store.load();App.KarkardMahane.queryById('GridAshkhas').getSelectionModel().clearSelections();App.KarkardMahane.queryById('GridKarkardMahane').store.loadData('');App.KarkardMahane.queryById('GridKarkardMahane').getSelectionModel().clearSelections();")
                                        .AllowBlank(false)
                                        .ForceSelection(true)
                                        .DisplayField("fldTitle")
                                        .ValueField("fldId")
                                        .EmptyText("سازمان ...")
                                        .Width(250)
                                        .Store(X.Store()
                                            .Model(X.Model()
                                                .IDProperty("fldId")
                                                .Fields(
                                                    new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                    new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                                )
                                            )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetOrgan"))
                                                .Reader(X.JsonReader().Root("data"))
                                            )
                                                    .Listeners(l => l.Load.Handler = "setdefaultValueKarkardMahane()")
                                            )
                                    )
                                )
                                .ItemID("GridAshkhas")
                                .BottomBar(X.PagingToolbar())
                                .Flex(2)
                                .Store(
                                                   X.StoreFor(Model.PersonalInfo)
                                                   .AutoLoad(false)
                                        .Proxy(Html.X().AjaxProxy()
                                                    .Url(Url.Action("ReadHeader"))
                                            .Reader(Html.X().JsonReader().Root("data")))
                                                    .Parameters(ps => ps.Add(new StoreParameter("OrganId", "App.KarkardMahane.queryById('CboOrgan').getValue()", ParameterMode.Raw)))
                                .PageSize(9)
                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = "App.KarkardMahane.queryById('GridAshkhas').selModel.refresh();")*/)
                                .View(
                                    Html.X().GridView()
                                        .LoadingText("در حال بارگذاری...")
                                        .RTL(true))
                                .ColumnModel(
                                    Html.X().RowNumbererColumn(),
                                    Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                        Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldName_Father).Text("نام و نام خانوادگی").Flex(5).Wrap(true),
                                        Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldCodemeli).Text("کد ملی").Flex(2),
                                        Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(2),
                                            Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldJobeCode).Text("کد شغلی بیمه").Flex(2),
                                                Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldStatusId).Text("وضعیت").Hidden(true).Flex(1),/*فعال1:   2:غیرفعال  3:بازنشسته*/
                                                Html.X().Column().DataIndex(Model.PersonalInfo, m => m.fldStatusTitle).Text("وضعیت").Hidden(true).Flex(1)
                                )
                                .Plugins(X.FilterHeader().Remote(true))
                                .SelectionModel(
                                    Html.X().RowSelectionModel()
                                        .Mode(Ext.Net.SelectionMode.Single)
                                             .Listeners(l =>
                                        {
                                            l.Select.Handler = "ReloadAshkhasKarkard();";
                                        })
                                        )
        ),
           X.Panel()
                                .ItemID("PnlGridDetail")
                                .Title("کارکرد ماهانه")
                                .Border(false)
                                .Layout(Ext.Net.LayoutType.Fit)
                                .Items(
                                        X.GridPanel()
                                            .TopBar(
                                        Html.X().Toolbar()
                                            .Items(
                                                    // X.Button().Text("چاپ").Icon(Ext.Net.Icon.Printer).ToolTip("چاپ")
                                                    //.Listeners(li => li.Click.Handler = "PrintKarkard();"),
                                                    X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)//.ToolTip("کلید میانبر F8")
                                                .Listeners(li => li.Click.Handler = "NewKarkard();"),
                                                     X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)//.ToolTip("کلید میانبر F2")
                                                        .Listeners(Li => Li.Click.Handler = "EditKarkard();"),
                                                        X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)//.ToolTip("کلید میانبر F9")
                                                    .Listeners(de =>
                                                    {
                                                        de.Click.Handler = "if (App.KarkardMahane.queryById('GridKarkardMahane').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteKarkard();";
                                                    })
                                                      ,
                                                         X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                                                             .Listeners(l => { l.Click.Handler = "HelpKarkard();"; })  
                                            ))
                                        .BottomBar(X.PagingToolbar().HideRefresh(true))
                                        .AutoScroll(true)
                                        .ID("GridKarkardMahane")
                                        .Flex(2).Height(187)
                                        .Store(
                                                               X.StoreFor(Model._KarKardeMahane).AutoLoad(false)
                                                        .Proxy(Html.X().AjaxProxy()
                                                            .Url(Url.Action("ReadKarKardeMahane"))
                                                    .Reader(Html.X().JsonReader().Root("data")))
                                                .PageSize(9)
                                                .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = " App.KarkardMahane.queryById('GridKarkardMahane').selModel.refresh();")*/
                        )
                                        .View(
                                            Html.X().GridView()
                                                .LoadingText("در حال بارگذاری...")
                                                .RTL(true)
                            )
                                .Plugins(X.FilterHeader().Remote(true))
                                            .ColumnModel(
                                                Html.X().RowNumbererColumn(),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldFlag).Text("fldFlag").Hidden(true).Flex(1),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldPersonalId).Text("کد").Hidden(true).Flex(1),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldYear).Text("سال").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldMonth).Text("ماه").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldMah).Text("کد").Hidden(true).Flex(1),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldNobatePardakht).Text("نوبت پرداخت").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldKarkard).Text("کارکرد").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldGheybat).Text("غیبت").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldNobateKari).Text("نوبت کاری").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldEzafeKari).Text("اضافه کاری").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldTatileKari).Text("تعطیل کاری").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldMosaedeh).Text("مساعده").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldMamoriatBaBeitote).Text("ماموریت با بیتوته").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldMamoriatBedoneBeitote).Text("ماموریت بدون بیتوته").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldShift).Text("حق شیفت").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldMoavagheName).Text("محاسبه معوقه").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldAzTarikhMoavagheS).Text("تاریخ شروع معوقه").Flex(2),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldTaTarikhMoavagheS).Text("تاریخ پایان معوقه").Flex(2)
                                 )
                                            .Plugins(
                                                Html.X().CellEditing().ClicksToEdit(1)

                                                )
                                                
                                        .SelectionModel(
                                            Html.X().RowSelectionModel()
                                                .Mode(Ext.Net.SelectionMode.Single)
                                )
                    )
    )
)
)
<script type="text/javascript">
    var dadat;
    function setdefaultValueKarkardMahane() {
        App.KarkardMahane.queryById('CboOrgan').select(App.KarkardMahane.queryById('CboOrgan').store.getAt(0));
    }
  /*  App.PayWin.addListener('resize', function () {
        App.KarkardMahane.setWidth(App.PayWin.getWidth());
    });
    App.PayWin.addListener('resize', function () {
        var grid = App.KarkardMahane.queryById('GridAshkhas');
        grid.setHeight(App.PayWin.getHeight() - 120);
        var grid = App.KarkardMahane.queryById('PnlGridDetail');
    });*/
    function KarkardMahaneSetSize() {
        var grid = App.KarkardMahane.queryById('GridAshkhas');
        grid.setHeight((App.PayWin.getHeight() - 200) / 2);
       var GridKarkardMahane = App.KarkardMahane.queryById('GridKarkardMahane');
       GridKarkardMahane.setHeight((App.PayWin.getHeight() - 200) / 2);
    }
    function ReloadAshkhasKarkard() {
        var SelectedRow = App.KarkardMahane.queryById('GridAshkhas').selModel.getLastSelected();

      /*  Ext.net.DirectMethod.request({
            url: '/PayRoll/KarkardMahane/Reload?PersonalId=' + SelectedRow.data.fldId,

            success: function (result) {
                App.KarkardMahane.queryById('GridKarkardMahane').getStore().loadData(result);
            }
        });*/

        App.KarkardMahane.queryById('GridKarkardMahane').getStore().getProxy().setExtraParam("PersonalId", SelectedRow.data.fldId);
        App.KarkardMahane.queryById('GridKarkardMahane').getStore().getProxy().setExtraParam("OrganId", App.KarkardMahane.queryById('CboOrgan').getValue());
        App.KarkardMahane.queryById('GridKarkardMahane').getStore().load();
    }
    function PrintKarkard() {
        var SelectedRow = App.KarkardMahane.queryById('GridKarkardMahane').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KarkardMahane/Print',
                params: {
                    KarkardMahaneId: SelectedRow.data.fldId,
                    containerId: "KarkardTab",
                    PersonalId: SelectedRow.data.fldPrs_PersonalInfoId,
                    AnvaeEstekhdamId: SelectedRow.data.fldAnvaeEstekhdamId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EditKarkard() {
        var SelectedRow = App.KarkardMahane.queryById('GridKarkardMahane').selModel.getLastSelected();

        if (SelectedRow != null) {
            if (SelectedRow.data.fldFlag == true) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "کاربر گرامی به دلیل بسته شدن حقوق شما مجاز به ویرایش اطلاعات نمی باشید.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/KarkardMahane/CheckStatusFlagEdit',
                    params: {
                        Year: SelectedRow.data.fldYear,
                        Month: SelectedRow.data.fldMah,
                        NobatPardakht: SelectedRow.data.fldNobatePardakht,
                        fldPayPersonalId: SelectedRow.data.fldPersonalId,
                        fldNoePardakht: 1,
                        MonthName: SelectedRow.data.fldMonth,
                        OrganId: App.KarkardMahane.queryById('CboOrgan').getValue()
                    },
                    success: function (data) {
                        Ext.net.Mask.hide();
                        if (data.Er == 1)
                        {
                            Ext.MessageBox.show({
                                title: data.MsgTitl,
                                msg: data.Msg,
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.MessageBox.OK,
                            });
                            return;
                        }
                        if (data.Flag == 4)
                        {
                        Ext.MessageBox.show({
                            title: data.MsgTitl,
                            msg: data.Msg,
                            icon: Ext.MessageBox.WARNING,
                            buttons: Ext.MessageBox.YESNO,
                            fn: function (btn) {
                                if (btn == 'yes') {
                                    Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                                    Ext.net.DirectMethod.request({
                                        url: '/PayRoll/KarkardMahane/new',
                                        params: {
                                            id: SelectedRow.data.fldId,
                                            containerId: "KarkardTab",
                                            PersonalId: SelectedRow.data.fldPersonalId,
                                            DelCalc: 1,
                                            OrganId: App.KarkardMahane.queryById('CboOrgan').getValue()
                                        },
                                        success: function () {
                                            Ext.net.Mask.hide();
                                        }
                                    });
                                }
                            }
                        });
                        }
                        else {
                            Ext.net.DirectMethod.request({
                                url: '/PayRoll/KarkardMahane/new',
                                params: {
                                    id: SelectedRow.data.fldId,
                                    containerId: "KarkardTab",
                                    PersonalId: SelectedRow.data.fldPersonalId,
                                    DelCalc: 0,
                                    OrganId: App.KarkardMahane.queryById('CboOrgan').getValue()
                                },
                                success: function () {
                                    Ext.net.Mask.hide();
                                }
                            });
                        }
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewKarkard() {
        var SelectedRow = App.KarkardMahane.queryById('GridAshkhas').selModel.getLastSelected();

        if (SelectedRow != null) {
            if (SelectedRow.data.fldStatusId == 1) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/KarkardMahane/new',
                    params: {
                        id: 0,
                        containerId: "KarkardTab",
                        PersonalId: SelectedRow.data.fldId,
                        DelCalc: 0,
                        OrganId: App.KarkardMahane.queryById('CboOrgan').getValue()
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "وضعیت فرد مورد نظر " + SelectedRow.data.fldStatusTitle + " است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک شخص را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function HelpKarkard() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/KarkardMahane/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function DeleteKarkard() {
        var SelectedRow = App.KarkardMahane.queryById('GridKarkardMahane').selModel.getLastSelected();
        if (SelectedRow != null) {
                if (SelectedRow.data.fldFlag == true) {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "کاربر گرامی به دلیل بسته شدن حقوق شما مجاز به ویرایش اطلاعات نمی باشید.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
                else {
                    Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                    Ext.net.DirectMethod.request({
                        url: '/PayRoll/KarkardMahane/CheckStatusFlagDel',
                        params: {
                            Year: SelectedRow.data.fldYear,
                            Month: SelectedRow.data.fldMah,
                            NobatPardakht: SelectedRow.data.fldNobatePardakht,
                            fldPayPersonalId: SelectedRow.data.fldPersonalId,
                            fldNoePardakht: 1,
                            MonthName: SelectedRow.data.fldMonth,
                            OrganId: App.KarkardMahane.queryById('CboOrgan').getValue()
                        },
                        success: function (data) {
                            Ext.net.Mask.hide();
                            if (data.Er == 1) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitl,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.MessageBox.OK,
                                });
                                return;
                            }
                            if (data.Flag == 4) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitl,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.WARNING,
                                    buttons: Ext.MessageBox.YESNO,
                                    fn: function (btn) {
                                        if (btn == 'yes') {
                                            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                                            Ext.net.DirectMethod.request({
                                                url: '/PayRoll/KarkardMahane/Delete',
                                                params: {
                                                    id: SelectedRow.data.fldId,
                                                    Year: SelectedRow.data.fldYear,
                                                    Month: SelectedRow.data.fldMah,
                                                    NobatPardakht: SelectedRow.data.fldNobatePardakht,
                                                    fldPayPersonalId: SelectedRow.data.fldPersonalId,
                                                    fldNoePardakht: 1,
                                                    DelCalc: 1,
                                                    OrganId: App.KarkardMahane.queryById('CboOrgan').getValue()
                                                },
                                                success: function (data) {
                                                    Ext.net.Mask.hide();
                                                    var ico = Ext.MessageBox.INFO;
                                                    if (data.Er == 1)
                                                        ico = Ext.MessageBox.ERROR;
                                                    Ext.MessageBox.show({
                                                        title: data.MsgTitle,
                                                        msg: data.Msg,
                                                        icon: ico,
                                                        buttons: Ext.MessageBox.OK
                                                    });
                                                    ReloadAshkhasKarkard();
                                                }
                                            });
                                        }
                                    }
                                });
                            }
                            else {
                                Ext.MessageBox.show({
                                    title: "هشدار",
                                    msg: "آیا برای حذف مطمئن هستید؟",
                                    icon: Ext.MessageBox.WARNING,
                                    buttons: Ext.MessageBox.YESNO,
                                    fn: function (btn) {
                                        if (btn == 'yes') {
                                            Ext.net.DirectMethod.request({
                                                url: '/PayRoll/KarkardMahane/Delete',
                                                params: {
                                                    id: SelectedRow.data.fldId,
                                                    Year: SelectedRow.data.fldYear,
                                                    Month: SelectedRow.data.fldMah,
                                                    NobatPardakht: SelectedRow.data.fldNobatePardakht,
                                                    fldPayPersonalId: SelectedRow.data.fldPersonalId,
                                                    fldNoePardakht: 1,
                                                    DelCalc: 0,
                                                    OrganId: App.KarkardMahane.queryById('CboOrgan').getValue()
                                                },
                                                success: function (data) {
                                                    Ext.net.Mask.hide();
                                                    var ico = Ext.MessageBox.INFO;
                                                    if (data.Er == 1)
                                                        ico = Ext.MessageBox.ERROR;
                                                    Ext.MessageBox.show({
                                                        title: data.MsgTitle,
                                                        msg: data.Msg,
                                                        icon: ico,
                                                        buttons: Ext.MessageBox.OK
                                                    });
                                                    ReloadAshkhasKarkard();
                                                }
                                            });
                                        }
                                    }
                                });
                            }
                        }
                    });
                }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>