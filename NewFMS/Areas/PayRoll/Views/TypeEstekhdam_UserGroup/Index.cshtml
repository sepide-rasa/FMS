@model IEnumerable<NewFMS.WCF_PayRoll.OBJ_TypeEstekhdam_UserGroup>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(X.Panel()
    .Title("گروه کاربری-نوع استخدام")
    .Border(false)
        .ID("TypeEstekhdam_UserGroup")
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
            .Listeners(l => l.AfterRender.Handler = "App.TypeEstekhdam_UserGroup.setHeight(App.PayWin.getHeight() - 170);")
    .Layout(LayoutType.Fit)
    .Border(false)
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.Fit)
            .Height(270)
            .AutoScroll(true)
            .ButtonAlign(Ext.Net.Alignment.Center)
            .Items(
                X.GridPanel()
                    .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button()
                                .Text("جدید")
                                .Icon(Ext.Net.Icon.Add)
        //.ToolTip("کلید میانبر F8")
                                    .Listeners(li => li.Click.Handler = "NewTypeEstekhdam_UserGroup();"),
        //                    X.Button()
        //                        .Text("ویرایش")
        //                        .Icon(Ext.Net.Icon.Pencil)
        ////.ToolTip("کلید میانبر F2")
        //                            .Listeners(Li => Li.Click.Handler = "EditTypeEstekhdam_UserGroup();"),
                            X.Button()
                                .Text("حذف")
                                .Icon(Ext.Net.Icon.Delete)
                                    .Listeners(Li => Li.Click.Handler = "DeleteTypeEstekhdam_UserGroup();"),
                            X.Button()
                            .Text("راهنما")
                            .Icon(Ext.Net.Icon.Help)
                                    .Listeners(l => { l.Click.Handler = "HelpTypeEstekhdam_UserGroup();"; })
                            
                        )
                    )
                        .ItemID("GridTypeEstekhdam_UserGroup")
                    .BottomBar(X.PagingToolbar())
        //.Height(600)
                    .Store(
                        X.StoreForModel()
                            .Listeners(l => l.DataChanged.Handler = "App.TypeEstekhdam_UserGroup.queryById('GridTypeEstekhdam_UserGroup').selModel.refresh();")
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                        Html.X().Column().DataIndex(Model, m => m.fldTitleUserGroup).Text("گروه کاربری").Flex(5).Wrap(true),
                        Html.X().Column().DataIndex(Model, m => m.fldTypeEstekhdamTitle).Text("نوع استخدام").Flex(5).Wrap(true)
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )
                    )
        )
)

<script type="text/javascript">

    function NewTypeEstekhdam_UserGroup() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/TypeEstekhdam_UserGroup/New',
            params: {
                id: 0
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }


    function HelpTypeEstekhdam_UserGroup() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/TypeEstekhdam_UserGroup/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function EditTypeEstekhdam_UserGroup() {
        var SelectedRow = App.TypeEstekhdam_UserGroup.queryById('GridTypeEstekhdam_UserGroup').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/TypeEstekhdam_UserGroup/New',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function (data) {
                    /*Ext.net.Mask.hide();*/
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteTypeEstekhdam_UserGroup() {
        var SelectedRow = App.TypeEstekhdam_UserGroup.queryById('GridTypeEstekhdam_UserGroup').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/TypeEstekhdam_UserGroup/Delete',
                params: {
                    UserGroupId: SelectedRow.data.fldUseGroupId
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Er == 1) {
                        ic = Ext.MessageBox.ERROR;
                    }
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.TypeEstekhdam_UserGroup.queryById('GridTypeEstekhdam_UserGroup').store.load();
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>