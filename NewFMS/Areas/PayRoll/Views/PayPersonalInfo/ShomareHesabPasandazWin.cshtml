@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
@model IEnumerable<NewFMS.WCF_PayRoll.OBJ_ShomareHesabPasAndaz>
@(Html.X().Window()
    .Modal(true)
    .Width(550)
        //   .Height(300)
    .Resizable(false)
    .Title("ثبت شماره حساب پس انداز پرسنل")
        .ID("NewShomareHesabPasandaz")
            .Listeners(li => { li.AfterRender.Fn = "addKeyMapShomareHesabPasandaz";  })
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .ButtonAlign(Ext.Net.Alignment.Center)
            .Border(false)
            .KeyMap(Html.X().KeyMap()
                .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                .Binding(b =>
                {
                    b.Add(Html.X().KeyBinding()
                    .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                    .Handler("SaveShomareHesabPasandaz(); ")
                    );

                }))
            
            //.Layout(Ext.Net.LayoutType.VBox)
            //.LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = VBoxAlign.Center })
                
            .Items(
            X.Panel().Border(false)
                    .Layout(Ext.Net.LayoutType.VBox)
                .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                        .DefaultButton("btn").ButtonAlign(Ext.Net.Alignment.Center)
                    .Buttons(
                        X.Button()
                            .Text("ذخیره")
                            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                            .Listeners(l => l.Click.Handler = "SaveShomareHesabPasandaz();")
                                .ItemID("btnSaveShomareHesabPasandaz"),
                        X.Button()
                            .Text("خروج")
                            .Icon(Ext.Net.Icon.DoorOut)
                            .ToolTip("کلید میانبر Esc")
                            .OnClientClick("App.NewShomareHesabPasandaz.destroy();")
                            )
            .Items(
                    X.FieldSet()
                    .ItemID("Panel").Title("اطلاعات شماره حساب پس انداز")
                    .Layout(Ext.Net.LayoutType.Table)
                    .Border(true)
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                    .Defaults(new { Margin = 2 })
                        .Items(
                                X.Hidden().ItemID("fldId"),
                                        X.Hidden().ItemID("ShomareHesabPersonalId"),
                                    X.Hidden().ItemID("ShomareHesabKarfarmaId"),
                            X.Label("بانک:")
                            , X.ComboBox()
                            .LabelAlign(Ext.Net.LabelAlign.Top)
        //.FieldLabel("بانک")
                            .ItemID("CboBank")
                            .TypeAhead(true)
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .Editable(true)
                            .AutoFocus(true)
                            .TriggerAction(TriggerAction.All)
                            .DisplayField("Name")
                            .ValueField("ID")
                            .EmptyText("بانک")
                            .Store(X.Store()
                                .Model(X.Model()
                                    .IDProperty("ID")
                                    .Fields(
                                    new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                    new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                    )
                                )
                                .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetBankFix"))
                                    .Reader(X.JsonReader().Root("data"))
                                )
                                )
                                .Listeners(l =>
                                    {
                                        l.Change.Handler = "ReloadBank();";
                                    })
                                     .SelectedItems(new { Value = "1" })
                                    ,
                               X.Label("شماره حساب پرسنل:"),
                                X.TextField()
                            .ItemID("txtShomareHesabPersonal")
                                .ReadOnly(true)
                                .IconCls("ShomareHesab")
                            .MaxLength(50)
                            .Width(145)
                            .EnforceMaxLength(true)
                            .MaskRe("/[0-9]/")
        // .FieldLabel("شماره حساب پرسنل")
                            .AllowBlank(false)
                            .BlankText("لطفا شماره حساب پرسنل را وارد کنید.")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                 .DirectEvents(li =>
                                    {
                                        li.SpecialKey.Url = "/Comon/SearchShomareHesab/Index?State=2&AshkhasId=" + @ViewBag.Id;
                                        li.SpecialKey.Before = "return e.getKey() == Ext.EventObject.INSERT;";
                                        li.IconClick.Url = "/Comon/SearchShomareHesab/Index?State=2&AshkhasId=" + @ViewBag.Id;
                                    })   
                            , X.Label("شماره حساب کارفرما:")
                            , X.TextField()
                            .ItemID("txtShomareHesabKarfarma")
                                    .ReadOnly(true)
                                .IconCls("ShomareHesab")
                            .MaxLength(50)
                            .EnforceMaxLength(true)
                                .MaskRe("/[0-9]/")
                                .Width(145)
        //.FieldLabel("شماره حساب کارفرما")
                            //.AllowBlank(false)
                            //.BlankText("لطفا شماره حساب کارفرما را وارد کنید.")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .DirectEvents(li =>
                                {
                                    li.SpecialKey.Url = "/Comon/SearchShomareHesab/Index?State=3&AshkhasId=" + @ViewBag.Id;
                                    li.SpecialKey.Before = "return e.getKey() == Ext.EventObject.INSERT;";
                                    li.IconClick.Url = "/Comon/SearchShomareHesab/Index?State=3&AshkhasId=" + @ViewBag.Id;
                                })
            )), X.GridPanel()
            //.TopBar(
            //                    Html.X().Toolbar()
            //                    .Items(
            //                        X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).Listeners(l => { l.Click.Handler = "SaveChangeStatus();"; }),
            //                        X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).Listeners(l => { l.Click.Handler = "EditPassAndaz();"; }),
            //                        //X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).Listeners(l => { l.Click.Handler = "DeleteChangeStatus();"; }),
            //                        X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).Listeners(l => { l.Click.Handler = "App.ChangeStatus.destroy();"; })

            //                    )
            //                        )
                                    .BottomBar(X.PagingToolbar())
                            .Height(290)
                                .ItemID("PersonalPassAndazGrid")
                                .Store(
                                X.StoreForModel()
                                                .Listeners(l => l.DataChanged.Handler = "App.NewShomareHesabPasandaz.queryById('PersonalPassAndazGrid').selModel.refresh();")
                                    .Proxy(Html.X().AjaxProxy()
                                            .Url(Url.Action("ReadPassAndaz"))
                                        .Reader(Html.X().JsonReader().Root("data"))
                                            .ExtraParams(ex =>
                                            {
                                                ex.Add(new { PersonalId = @ViewBag.Id });
                                                ex.Add(new { OrganId = @ViewBag.OrganId });
                                                
                                            })
                                            )
                                    .PageSize(20)
                                    .RemotePaging(true)
                                    .RemoteFilter(true)
                                )
                            .View(
                                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                                )
                                    .Plugins(X.FilterHeader().Remote(true))
                            .ColumnModel(
                                    Html.X().RowNumbererColumn(),
                                    Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldBankFixId).Text("کد بانک").Flex(1).Hidden(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldBankName).Text("بانک").Flex(1),
                                    Html.X().Column().DataIndex(Model, m => m.fldShomareHesabPersonal).Text("شماره حساب پرسنل").Flex(1),
                                    Html.X().Column().DataIndex(Model, m => m.fldShomareHesabKarfarma).Text("شماره حساب پس انداز").Flex(1)
                    )
                            .SelectionModel(
                                Html.X().RowSelectionModel()
                                    .Mode(Ext.Net.SelectionMode.Single)
                    )
    ))
)

<script type="text/javascript">

    function ReloadBank() {
        var BankId = App.NewShomareHesabPasandaz.queryById('CboBank').getValue();
        if (BankId != null) {
            Ext.net.DirectMethod.request({
                url: '/PayRoll/PayPersonalInfo/ReloadBank?&BankId=' + BankId + '&PersonId=' + '@ViewBag.Id' + '&OrganId=' + '@ViewBag.OrganId',

                success: function (result) {
                    App.NewShomareHesabPasandaz.queryById('txtShomareHesabPersonal').setValue(result.fldShomareHesabPersonal);
                    App.NewShomareHesabPasandaz.queryById('txtShomareHesabKarfarma').setValue(result.fldShomareHesabKarfarma);
                    App.NewShomareHesabPasandaz.queryById('ShomareHesabPersonalId').setValue(result.fldShomareHesabPersonalId);
                    App.NewShomareHesabPasandaz.queryById('ShomareHesabKarfarmaId').setValue(result.fldShomareHesabKarfarmaId);
                    App.NewShomareHesabPasandaz.queryById('fldId').setValue(result.fldId);
                    App.NewShomareHesabPasandaz.queryById('ShomareHesabPersonalId').getValue();
                }
            });
        }
    }

    function EditPassAndaz() {
        var SelectedRow = App.NewShomareHesabPasandaz.queryById('PersonalPassAndazGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/PayPersonalInfo/ReloadBank?&BankId=' + SelectedRow.data.fldBankFixId + '&PersonId=' + '@ViewBag.Id',

                success: function (result) {
                    App.NewShomareHesabPasandaz.queryById('txtShomareHesabPersonal').setValue(result.fldShomareHesabPersonal);
                    App.NewShomareHesabPasandaz.queryById('txtShomareHesabKarfarma').setValue(result.fldShomareHesabKarfarma);
                    App.NewShomareHesabPasandaz.queryById('ShomareHesabPersonalId').setValue(result.fldShomareHesabPersonalId);
                    App.NewShomareHesabPasandaz.queryById('ShomareHesabKarfarmaId').setValue(result.fldShomareHesabKarfarmaId);
                    App.NewShomareHesabPasandaz.queryById('fldId').setValue(result.fldId);
                    App.NewShomareHesabPasandaz.queryById('ShomareHesabPersonalId').getValue();
                }
            });
            Ext.net.Mask.hide();
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
        var BankId = App.NewShomareHesabPasandaz.queryById('CboBank').getValue();
        if (BankId != null) {
            Ext.net.DirectMethod.request({
                url: '/PayRoll/PayPersonalInfo/ReloadBank?&BankId=' + BankId + '&PersonId=' + '@ViewBag.Id',

                success: function (result) {
                    App.NewShomareHesabPasandaz.queryById('txtShomareHesabPersonal').setValue(result.fldShomareHesabPersonal);
                    App.NewShomareHesabPasandaz.queryById('txtShomareHesabKarfarma').setValue(result.fldShomareHesabKarfarma);
                    App.NewShomareHesabPasandaz.queryById('ShomareHesabPersonalId').setValue(result.fldShomareHesabPersonalId);
                    App.NewShomareHesabPasandaz.queryById('ShomareHesabKarfarmaId').setValue(result.fldShomareHesabKarfarmaId);
                    App.NewShomareHesabPasandaz.queryById('fldId').setValue(result.fldId);
                    App.NewShomareHesabPasandaz.queryById('ShomareHesabPersonalId').getValue();
                }
            });
        }
    }

    function SaveShomareHesabPasandaz() {
        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        var ShomareHesabPersonalId = App.NewShomareHesabPasandaz.queryById('ShomareHesabPersonalId');
        var ShomareHesabKarfarmaId = App.NewShomareHesabPasandaz.queryById('ShomareHesabKarfarmaId');
        var txtShomareHesabPersonal = App.NewShomareHesabPasandaz.queryById('txtShomareHesabPersonal');
        var txtShomareHesabKarfarma = App.NewShomareHesabPasandaz.queryById('txtShomareHesabKarfarma');
        var CboBank = App.NewShomareHesabPasandaz.queryById('CboBank');
        var fldId = App.NewShomareHesabPasandaz.queryById('fldId');
        var er = false;

  
        if (txtShomareHesabPersonal.validate() == false) {
            er = true;
        }
      /*  if (txtShomareHesabKarfarma.validate() == false) {
            er = true;
        }*/
        if (CboBank.validate() == false) {
            er = true;
        }


        if (er == true)
            return;
        
        Ext.net.DirectMethod.request({
            url: '/PayRoll/PayPersonalInfo/SaveShomareHesabPasandaz',
            params: {
                fldId: fldId.getValue(),
                fldPersonalId: '@ViewBag.Id',
                fldBankFixedId: CboBank.getValue(),
                fldShomareHesabPersonalId: ShomareHesabPersonalId.getValue(),
                fldShomareHesabKarfarmaId: ShomareHesabKarfarmaId.getValue(),
                OrganId:'@ViewBag.OrganId'
            },
            success: function (data) {
                Ext.net.Mask.hide();
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.NewShomareHesabPasandaz.queryById('PersonalPassAndazGrid').store.load()
               /* ClearShomareHesabPasandaz();*/
            }

        });
    }


    var addKeyMapShomareHesabPasandaz = function (cmp) {

        ReloadBank();

        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.NewShomareHesabPasandaz.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtShomareHesabKarfarma") {
                        nextfld = App.NewShomareHesabPasandaz.queryById('btnSaveShomareHesabPasandaz');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                }
            }]
        });
    }


</script>
