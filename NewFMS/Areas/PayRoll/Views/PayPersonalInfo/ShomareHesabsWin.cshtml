@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
    .Width(530)
        //   .Height(300)
    .Resizable(false)
    .Title("ثبت شماره حساب پرسنل")
        .ID("NewShomareHesab")
                .Listeners(li => { li.AfterRender.Fn = "addKeyMapShomareHesab"; })
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .ButtonAlign(Ext.Net.Alignment.Center)
            .Border(false)
            .KeyMap(Html.X().KeyMap()
                .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                .Binding(b =>
                {
                    b.Add(Html.X().KeyBinding()
                    .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                    .Handler("SaveShomareHesab(); ")
                    );

                }))
            .DefaultButton("btn")
            .Layout(Ext.Net.LayoutType.VBox)
            .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Buttons(
                X.Button()
                    .Text("ذخیره")
                    .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                    .Listeners(l => l.Click.Handler = "SaveShomareHesab();")
                        .ItemID("btnSaveShomareHesab"),
                X.Button()
                    .Text("خروج")
                    .Icon(Ext.Net.Icon.DoorOut)
                    .ToolTip("کلید میانبر Esc")
                    .OnClientClick("App.NewShomareHesab.destroy();")
                    )
            .Items(
                X.FieldSet()
                        .ItemID("Panel").Title("اطلاعات شماره حساب")
                    .Layout(Ext.Net.LayoutType.Table)
                    .Border(true)
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                    .Defaults(new { Margin = 2 })
                        .Items(
                            X.Hidden().ItemID("fldId"),                            
                            X.Label("نوع حساب:")
                                , X.ComboBox()
                                .AutoFocus(true)
                            .ItemID("CboTypeHesab")
                             .LabelAlign(Ext.Net.LabelAlign.Top)
                            .TypeAhead(true)
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .Editable(true)
                            .TriggerAction(TriggerAction.All)
                            .DisplayField("Name")
                            .ValueField("ID")
                            .EmptyText("نوع حساب")
                           .Store(X.Store()
                                .Model(X.Model()
                                    .IDProperty("ID")
                                    .Fields(
                                    new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                    new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                    )
                                )
                                .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetTypeHesab"))
                                    .Reader(X.JsonReader().Root("data"))
                                )
                                )
                                   
                                    .Listeners(l =>
                                        {
                                            l.Change.Handler = "ReloadTypeHesab_Bank();";
                                        })
                                        .ColSpan(3)
                            , X.Label("بانک:")
                            , X.ComboBox()
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                .ItemID("CboBank")
                            .TypeAhead(true)
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .Editable(true)
                            .TriggerAction(TriggerAction.All)
                            .DisplayField("Name")
                            .ValueField("ID")
                            .EmptyText("بانک")
                                 .Listeners(ls =>
                                        ls.Select.Handler = " App.NewShomareHesab.queryById('CboShobe').getStore().load();"
                                        )
                            .Store(X.Store()
                                .Model(X.Model()
                                    .IDProperty("ID")
                                    .Fields(
                                    new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                    new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                    )
                                )
                                .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetBankFix"))
                                    .Reader(X.JsonReader().Root("data"))
                                )
                                )
                                    .Listeners(l =>
                                            {
                                                l.Change.Handler = "ReloadTxt();";
                                            })
                                    ,
                                     X.Label("شعبه:"),
                        X.ComboBox()
                            .ItemID("CboShobe")
                        .EmptyText("شعبه...")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .TypeAhead(true)
                        .Editable(true)
                        .AllowBlank(false)
                        .BlankText("لطفا شعبه مورد نظر را انتخاب نمایید.")
                        .QueryMode(DataLoadMode.Local)
                        .ForceSelection(true)
                        .TriggerAction(TriggerAction.All)
                            .DisplayField("Name")
                            .ValueField("ID")
                                    .Store(X.Store().AutoLoad(false)
                            .Model(X.Model()
                                        .IDProperty("fldCityId")
                                .Fields(
                                    new ModelField("ID", ModelFieldType.String) { Mapping = "fldID" },
                                    new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" })
                                    )
                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetShobe"))
                                .Reader(X.JsonReader().Root("data")))
                                                        .Parameters(ps => ps.Add(new StoreParameter("ID", "App.NewShomareHesab.queryById('CboBank').getValue()", ParameterMode.Raw)))
                                            )

                                .Listeners(l =>
                                        {
                                            l.Change.Handler = "ReloadTypeHesab_Bank();";
                                        })
                                  ,X.Label("شماره حساب:"),
                           X.TextField()
                            .ItemID("txtShomareHesab")
                            .MaxLength(50)
                            .EnforceMaxLength(true)
                            .MaskRe("/[0-9]/")
                            .AllowBlank(false)
                            .BlankText("لطفا شماره حساب را وارد کنید.")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            , X.Label("شماره کارت:")
                            , X.TextField()
                            .ItemID("txtShomareKart")
                            .AllowBlank(false)
                            .MaxLength(19)
                            .EnforceMaxLength(true)
                            .MaskRe("/[0-9]/")
                            .BlankText("لطفا شماره کارت را وارد کنید.")
                            .LabelAlign(Ext.Net.LabelAlign.Top)
        )
    ))
)

<script type="text/javascript">
    function ReloadTxt() {
        App.NewShomareHesab.queryById('txtShomareHesab').setValue("");
        App.NewShomareHesab.queryById('txtShomareKart').setValue("");
        App.NewShomareHesab.queryById('fldId').setValue(0);
    }
    function ReloadTypeHesab_Bank() {
        var TypeHesabId = App.NewShomareHesab.queryById('CboTypeHesab').getValue();
        var BankId = App.NewShomareHesab.queryById('CboBank').getValue();
        var ShobeId = App.NewShomareHesab.queryById('CboShobe').getValue();
        if (TypeHesabId != null && ShobeId != null/* BankId != null*/) {
            Ext.net.DirectMethod.request({
                url: '/PayRoll/PayPersonalInfo/ReloadTypeHesab_Bank?TypeHesab=' + TypeHesabId + '&ShobeId=' + ShobeId + '&PersonId=' + '@ViewBag.Id' + '&OrganId=' + '@ViewBag.OrganId',

                success: function (result) {                    
                    App.NewShomareHesab.queryById('txtShomareHesab').setValue(result.fldShomareHesab);
                    App.NewShomareHesab.queryById('txtShomareKart').setValue(result.fldShomareKart);
                    App.NewShomareHesab.queryById('fldId').setValue(result.fldId);
                }
            });
        }
    }
   
    function SaveShomareHesab() {
        
        
        var CboShobe = App.NewShomareHesab.queryById('CboShobe');
        var CboTypeHesab = App.NewShomareHesab.queryById('CboTypeHesab');
        var CboBank = App.NewShomareHesab.queryById('CboBank');
        var PersonalInfoKargozini = App.NewShomareHesab.queryById('PersonalInfoKargozini');
        var txtShomareHesab = App.NewShomareHesab.queryById('txtShomareHesab');
        var txtShomareKart = App.NewShomareHesab.queryById('txtShomareKart');
        var fldId = App.NewShomareHesab.queryById('fldId');
        var er = false;

        /* if (CboYear.validate() == false) {
             er = true;
         }*/
        if (CboShobe.validate() == false) {
            er = true;
        }
        if (CboTypeHesab.validate() == false) {
            er = true;
        }
        if (CboBank.validate() == false) {
            er = true;
        }
        if (txtShomareHesab.validate() == false) {
            er = true;
        }
        if (txtShomareKart.validate() == false) {
            er = true;
        }


        if (er == true)
            return;

        var TypeHesab = false;
        if (CboTypeHesab.getValue() == "1")
            TypeHesab = true;
        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/PayPersonalInfo/SaveShomareHesab',
            params: {
                fldId: fldId.getValue(),
                fldTypeHesab: TypeHesab,
                fldPersonalId: '@ViewBag.Id',
                fldBankFixedId: CboBank.getValue(),
                fldShobeId: CboShobe.getValue(),
                fldShomareHesab: txtShomareHesab.getValue(),
                fldShomareKart: txtShomareKart.getValue(),
                fldHesabTypeId: CboTypeHesab.getValue(),
                OrganId: '@ViewBag.OrganId'
            },
            success: function (data) {
                Ext.net.Mask.hide();
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
               /* ClearShomareHesab();*/
            }

        });
    }


    var addKeyMapShomareHesab = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.NewShomareHesab.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtShomareKart") {
                        nextfld = App.NewShomareHesab.queryById('btnSaveShomareHesab');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                }
            }]
        });
    }


</script>
