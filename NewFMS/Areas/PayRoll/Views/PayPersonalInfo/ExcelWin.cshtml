@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window().Modal(true)
.Width(550)//.Height(220)
        .Title("خروجی اکسل")
    .ID("PayExcelWin")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)

    .Items(
            X.Panel()

                                    .Defaults(new { Margin = 10 })
                .Border(false)
                .Buttons(
                                X.Button().Text("خروجی اکسل").Icon(Ext.Net.Icon.Disk).Listeners(l => { l.Click.Handler = "CreatExcel();"; }),
                        X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).OnClientClick("App.PayExcelWin.destroy()")
                    )
                .ButtonAlign(Ext.Net.Alignment.Center)
                .Items(
        //X.Panel()
        //    .Border(true)
        //        .Layout(Ext.Net.LayoutType.VBox)
        //    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
        //    .Items(
                            X.FieldSet()
                                .Border(true)
                                .Title("فیلدها")
                                .Width(520)
                                .Defaults(new { Margin = 2 })
                                .Layout(LayoutType.Table)
                                .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                            .Items(
                            X.Checkbox()
                            .ItemID("CheckedName")
                             , X.Label("نام")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedFamily")
                            , X.Label("نام خانوادگی")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedFather")
                            , X.Label("نام پدر")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedMeliCode")
                            , X.Label("کدملی")

                            , X.Checkbox()
                            .ItemID("CheckedTypeBime")
                            , X.Label("نوع بیمه")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedShomareBime")
                            , X.Label("شماره بیمه")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedBimeOmr")
                            , X.Label("بیمه عمر")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedBimeTakmili")
                            , X.Label("بیمه تکمیلی")

                            , X.Checkbox()
                            .ItemID("CheckedMashagheleSakhtVaZianAvar")
                            , X.Label("مشاغل سخت و زیان آور")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedCostCenter")
                            , X.Label("مرکز هزینه")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedMazadCSal")
                            , X.Label("مازاد 30 سال")

                                , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedPasAndaz")
                            , X.Label("پس انداز")

                            , X.Checkbox()
                            .ItemID("CheckedMasuliyatPayanKhedmat")
                            , X.Label("سنوات پایان خدمت")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedJobeCode")
                            , X.Label("کد شغلی بیمه")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedInsuranceWorkShop")
                            , X.Label("کارگاه بیمه")

                            , X.Checkbox().PaddingSpec("0 20px 0 0")
                            .ItemID("CheckedHamsarKarmand")
                            , X.Label("همسر کارمند")

                   )
                   ,
                    X.FieldSet()
                                    .Border(true)//.PaddingSpec("0 100px 0 0")
                                .Width(520)
                                .Title("فیلترینگ")
                                .Defaults(new { Margin = 2 })
                                .Layout(LayoutType.Table)
                                .LayoutConfig(new TableLayoutConfig { Columns = 6 })
                            .Items(
                            X.Checkbox()
                                            .ItemID("CheckedStatus")
                                            .Listeners(l => l.Change.Handler = "CheckCheckedStatus()")
                                          , X.Label("وضعیت")
                                          , X.ComboBox()
        //  .Width(120)
                                            .ItemID("CboStatus")
                                            .TypeAhead(true)
                                            .Disabled(true)
                                            .BlankText("لطفا وضعیت را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .AllowBlank(false)
                                            .TriggerAction(TriggerAction.All)
                                                .DisplayField("Name")
                                        .ValueField("ID")
                                            .Editable(false)
                                                .EmptyText("وضعیت ...")
                                            .SelectedItems(new { Value = "1" })
                                            .Store(X.Store()
                                                       .Model(X.Model()
                                                .IDProperty("ID")
                                                .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                )
                                            )
                                                .Proxy(X.AjaxProxy()
                                                        .Url(Url.Action("GetStatus"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    )
                                            )
                                            ,
                                X.Checkbox()
                                        .ItemID("CheckedCboTypeBime")
                                        .Listeners(l => l.Change.Handler = "CheckCheckedTypeBime()")
                                    , X.Label("نوع بیمه")
                                        , X.ComboBox()
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .ItemID("CboTypeBime")
                                        .TypeAhead(true)
                                        .Editable(false)
                                                .Disabled(true)
                                    .BlankText("لطفا نوع بیمه را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldTitle")
                                    .ValueField("fldId")
                                    .EmptyText("نوع بیمه")
                                    .SelectedItems(new { Value = "1" })
                                    .Store(X.Store()
                                        .Model(X.Model()
                                        .IDProperty("fldId")
                                            .Fields(
                                            new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                            new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetTypeBime"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                        )
                                        ,
                                        X.Checkbox()
                                        .ItemID("CheckedCboCostCenter")
                                            .Listeners(l => l.Change.Handler = "CheckCheckedCboCostCenter()")
                                        , X.Label("مرکز هزینه")
                                        , X.ComboBox()
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .ItemID("CboCostCenter")
                                        .TypeAhead(true)
                                        .Editable(false)
                                                .Disabled(true)
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                        .DisplayField("Name")
                                        .ValueField("ID")
                                        .EmptyText("مرکز هزینه")
                                        .SelectedItems(new { Value = "1" })
                                        .Store(X.Store()
                                            .Model(X.Model()
                                                .IDProperty("ID")
                                                .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                )
                                            )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetCostCenter"))
                                                .Reader(X.JsonReader().Root("data"))
                                                    .ExtraParams(l => l.Add(new { OrganId =@ViewBag.OrganId}))
                                            )
        //  .Listeners(li => li.DataChanged.Handler = "LoadPersonalInfo();")
                                        )
                                        ,
                                        X.Checkbox()
                                            .ItemID("CheckedCboInsuranceWorkShop")
                                                .Listeners(l => l.Change.Handler = "CheckCheckedCboInsuranceWorkShop()")
                                                , X.Label("کارگاه بیمه")
                                            , X.ComboBox()
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .ItemID("CboInsuranceWorkShop")
                                            .TypeAhead(true)
                                                .Disabled(true)
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                        .DisplayField("WorkShopName")
                                            .ValueField("ID")
                                    .Editable(false)
                                        .SelectedItems(new { Value = "1" })
                                        .EmptyText("کارگاه بیمه")
                                        .Store(X.Store()
                                            .Model(X.Model()
                                                .IDProperty("ID")
                                                .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                new ModelField("WorkShopName", ModelFieldType.String) { Mapping = "WorkShopName" }
                                                )
                                            )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetInsuranceWorkShop"))
                                                .Reader(X.JsonReader().Root("data"))
                                                    .ExtraParams(l => l.Add(new { OrganId = @ViewBag.OrganId }))
                                            )
        // .Listeners(li => li.DataChanged.Handler = "LoadPersonalInfo();")
                                        )
                            )
        //)
        )
            )
)

<script type="text/javascript">
    function CreatExcel() {
        App.PayExcelWin.body.mask("در حال بارگذاری");
        
        var CheckedName = App.PayExcelWin.queryById('CheckedName').getValue();
        var CheckedFamily = App.PayExcelWin.queryById('CheckedFamily').getValue();
        var CheckedFather = App.PayExcelWin.queryById('CheckedFather').getValue();
        var CheckedMeliCode = App.PayExcelWin.queryById('CheckedMeliCode').getValue();
        var CheckedTypeBime = App.PayExcelWin.queryById('CheckedTypeBime').getValue();
        var CheckedShomareBime = App.PayExcelWin.queryById('CheckedShomareBime').getValue();
        var CheckedBimeOmr = App.PayExcelWin.queryById('CheckedBimeOmr').getValue();
        var CheckedBimeTakmili = App.PayExcelWin.queryById('CheckedBimeTakmili').getValue();
        var CheckedMashagheleSakhtVaZianAvar = App.PayExcelWin.queryById('CheckedMashagheleSakhtVaZianAvar').getValue();
        var CheckedCostCenter = App.PayExcelWin.queryById('CheckedCostCenter').getValue();
        var CheckedMazadCSal = App.PayExcelWin.queryById('CheckedMazadCSal').getValue();
        var CheckedPasAndaz = App.PayExcelWin.queryById('CheckedPasAndaz').getValue();
        var CheckedMasuliyatPayanKhedmat = App.PayExcelWin.queryById('CheckedMasuliyatPayanKhedmat').getValue();
        var CheckedJobeCode = App.PayExcelWin.queryById('CheckedJobeCode').getValue();
        var CheckedInsuranceWorkShop = App.PayExcelWin.queryById('CheckedInsuranceWorkShop').getValue();
        var CheckedHamsarKarmand = App.PayExcelWin.queryById('CheckedHamsarKarmand').getValue();
        var Checked = ""; 
        if (CheckedName == true) 
            Checked = Checked + "Name" + ";";
        if (CheckedFamily == true)
            Checked = Checked + "Family" + ";";
        if (CheckedFather == true)
            Checked = Checked + "Father" + ";";
        if (CheckedMeliCode == true)
            Checked = Checked + "MeliCode" + ";";
        if (CheckedTypeBime == true)
            Checked = Checked + "TypeBime" + ";";
        if (CheckedShomareBime == true)
            Checked = Checked + "ShomareBime" + ";";
        if (CheckedBimeOmr == true)
            Checked = Checked + "BimeOmr" + ";";
        if (CheckedBimeTakmili == true)
            Checked = Checked + "BimeTakmili" + ";";
        if (CheckedMashagheleSakhtVaZianAvar == true)
            Checked = Checked + "MashagheleSakhtVaZianAvar" + ";";
        if (CheckedCostCenter == true)
            Checked = Checked + "CostCenter" + ";";
        if (CheckedMazadCSal == true)
            Checked = Checked + "MazadCSal" + ";";
        if (CheckedPasAndaz == true)
            Checked = Checked + "PasAndaz" + ";";
        if (CheckedMasuliyatPayanKhedmat == true)
            Checked = Checked + "MasuliyatPayanKhedmat" + ";";
        if (CheckedJobeCode == true)
            Checked = Checked + "JobeCode" + ";";
        if (CheckedInsuranceWorkShop == true)
            Checked = Checked + "InsuranceWorkShop" + ";";
        if (CheckedHamsarKarmand == true)
            Checked = Checked + "HamsarKarmand" + ";";
        
        
        var CheckedStatus = App.PayExcelWin.queryById('CheckedStatus').getValue();
        var CheckedCboTypeBime = App.PayExcelWin.queryById('CheckedCboTypeBime').getValue();
          var CheckedCboCostCenter = App.PayExcelWin.queryById('CheckedCboCostCenter').getValue();
          var CheckedCboInsuranceWorkShop = App.PayExcelWin.queryById('CheckedCboInsuranceWorkShop').getValue();
        
          var CboStatus = App.PayExcelWin.queryById('CboStatus');
          var CboTypeBime = App.PayExcelWin.queryById('CboTypeBime');
          var CboCostCenter = App.PayExcelWin.queryById('CboCostCenter');
          var CboInsuranceWorkShop = App.PayExcelWin.queryById('CboInsuranceWorkShop');

          var Status = "";
          if (CheckedStatus == true) {
              Status = CboStatus.getValue();
          }
          var Bime = "";
          if (CheckedCboTypeBime == true) {
              Bime = CboTypeBime.getValue();
          }
          var Hazine = "";
          if (CheckedCboCostCenter == true) {
              Hazine = CboCostCenter.getValue();
          }
          var Kargah = "";
          if (CheckedCboInsuranceWorkShop == true) {
              Kargah = CboInsuranceWorkShop.getValue();
          }

          window.location.href = '@Url.Content("~/PayRoll/PayPersonalInfo/CreateExcel/")' + '?Checked=' + Checked + '&Status=' + Status + '&Bime=' + Bime +
              '&Hazine=' + Hazine + '&Kargah=' + Kargah + '&OrganId=' + '@ViewBag.OrganId';

        App.PayExcelWin.body.mask().hide();
    }
    function CheckCheckedStatus() {
        var CheckedStatus = App.PayExcelWin.queryById('CheckedStatus').getValue();
        var CboStatus = App.PayExcelWin.queryById('CboStatus');
        if (CheckedStatus == true)
            CboStatus.setDisabled(false);
        else
            CboStatus.setDisabled(true);
    }
    function CheckCheckedTypeBime() {
        var CheckedCboTypeBime = App.PayExcelWin.queryById('CheckedCboTypeBime').getValue();
        var CboTypeBime = App.PayExcelWin.queryById('CboTypeBime');
        if (CheckedCboTypeBime == true)
            CboTypeBime.setDisabled(false);
        else
            CboTypeBime.setDisabled(true);
    }
    function CheckCheckedCboCostCenter() {
        var CheckedCboCostCenter = App.PayExcelWin.queryById('CheckedCboCostCenter').getValue();
        var CboCostCenter = App.PayExcelWin.queryById('CboCostCenter');
        if (CheckedCboCostCenter == true)
            CboCostCenter.setDisabled(false);
        else
            CboCostCenter.setDisabled(true);
    }
    function CheckCheckedCboInsuranceWorkShop() {
        var CheckedCboInsuranceWorkShop = App.PayExcelWin.queryById('CheckedCboInsuranceWorkShop').getValue();
        var CboInsuranceWorkShop = App.PayExcelWin.queryById('CboInsuranceWorkShop');
        if (CheckedCboInsuranceWorkShop == true)
            CboInsuranceWorkShop.setDisabled(false);
        else
            CboInsuranceWorkShop.setDisabled(true);
    }
</script>