@model NewFMS.Models.Occasions
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}

<script src="~/Scripts/accounting.min.js"></script>
<script>
    Ext.net.FilterHeader.behaviour.string[0].match = function (recordValue, matchValue) {
        return (Ext.net.FilterHeader.behaviour.getStrValue(recordValue) || "").indexOf(matchValue) > -1;
    };

    Ext.net.FilterHeader.behaviour.string[0].getStrValue = function (value) {
        return value.toString();
    };

    Ext.net.FilterHeader.behaviour.string[0].serialize = function (value) {
        return {
            type: "string",
            op: "*",
            value: value
        };
    };
</script>
@(Html.X().Window()
    .ID("OccasionsPay")
    .Resizable(false)
    .Modal(true)
    .Title("ثبت مبالغ")
    .Listeners(li => { li.AfterRender.Handler = "OccasionsPaySetSize();"; })
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Border(false)
    .Layout(LayoutType.Table)
    .LayoutConfig(new TableLayoutConfig { Columns=2})
    .Items(
        X.GridPanel()
            .ItemID("OccasionsListGrid")
            .BottomBar(X.PagingToolbar())
            .Listeners(l => l.Select.Handler = "LoadNesbatListGrid();")
            .Frame(true)
            .TitleAlign(TitleAlign.Right)
            .Title("لیست مناسبت ها")
            .Store(
                X.StoreFor(Model.Monasebat)
                    .Listeners(l => l.Load.Handler = "App.OccasionsPay.queryById('OccasionsListGrid').getSelectionModel().select(0);")
                    .Proxy(Html.X().AjaxProxy()
                        .Url(Url.Action("ReadMonasebat"))
                        .Reader(Html.X().JsonReader().Root("data"))
                    )
                    .PageSize(15)
                    .RemoteFilter(false)
                    .RemotePaging(false)
            )
            .View(
                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
            )
            .ColumnModel(
                Html.X().RowNumbererColumn(),
                Html.X().Column().DataIndex(Model.Monasebat, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                Html.X().Column().DataIndex(Model.Monasebat, m => m.fldNameType).Text("نوع").Flex(2),
                Html.X().Column().DataIndex(Model.Monasebat, m => m.fldNameMonasebat).Text("عنوان").Flex(4).Wrap(true)
            )
            .SelectionModel(
                Html.X().RowSelectionModel()
                    .Mode(Ext.Net.SelectionMode.Single)
            ),
        X.GridPanel()
            .ItemID("NesbatListGrid")
            .MarginSpec("0 0 0 5px")
            .BottomBar(X.PagingToolbar())
            .TitleAlign(TitleAlign.Right)
            .Title("مبالغ")
            .Frame(true)
            .TopBar(X.Toolbar().Items(X.Button().Text("ذخیره").Icon(Icon.Disk).Listeners(l => l.Click.Handler = "SaveMonasebatMablagh()")))
            .Store(
                X.StoreFor(Model.Mablagh)
                    .AutoLoad(false)
                    .Listeners(l => {
                        l.DataChanged.Handler = "App.OccasionsPay.queryById('NesbatListGrid').selModel.refresh();";
                        l.Load.Handler = "setFocustxtMablagh()";
                    })
                    .Proxy(Html.X().AjaxProxy()
                        .Url(Url.Action("ReadMablagh"))
                        .Reader(Html.X().JsonReader().Root("data"))
                    )
                    .PageSize(200)
                    .RemoteFilter(false)
                    .RemotePaging(false)
            )
            .View(
                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
            )
            .Plugins(Html.X().CellEditing().ClicksToEdit(1).Listeners(l => l.Edit.Fn = "nextcellRowMM"))
            .ColumnModel(
                Html.X().RowNumbererColumn(),
                Html.X().Column().DataIndex(Model.Mablagh, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                    Html.X().Column().DataIndex(Model.Mablagh, m => m.fldTypeNesbatName).Text("نسبت").Flex(3),
                Html.X().Column().DataIndex(Model.Mablagh, m => m.fldMablagh).Text("مبلغ").Renderer("return value.toLocaleString()").Flex(3).Editor(Html.X().TextField()
                    .ItemID("txtMablagh").MaskRe("[0-9]").EnableKeyEvents(true).Listeners(l =>
                    {
                        l.SpecialKey.Handler = "checkhintkeyMM(e.getKey())";
                        l.Change.Fn = "setSeperateM";
                        l.Blur.Fn = "setSeperateM";
                        l.Focus.Fn = "setSeperateM";
                        
                    }))
            )
            .SelectionModel(
                Html.X().RowSelectionModel()
                    .Mode(Ext.Net.SelectionMode.Single)
            )
        )
)
<script type="text/javascript">
    var HintEnterMM = 0;

    function checkhintkeyMM(e) {
        if (e == 13) {
            HintEnterMM = 1;
        }
    };

    var nextcellRowMM = function (a, b) {
        if (b.field == "fldMablagh") {
            if (HintEnterMM == 1) {
                HintEnterMM = 0;
                App.OccasionsPay.queryById("NesbatListGrid").editingPlugin.startEdit(b.rowIdx + 1, 2);
                a.getEditor(b.row, b.column).field.selectText();
            }
        }
    };

    function setFocustxtMablagh() {
        setTimeout(function(){App.OccasionsPay.queryById("NesbatListGrid").editingPlugin.startEdit(0, 2)},200);
    }

    function SaveMonasebatMablagh() {
        var NesbatListGrid=App.OccasionsPay.queryById("NesbatListGrid");
        var OccasionsListGrid=App.OccasionsPay.queryById("OccasionsListGrid");
        var MablaghArray = new Array();

        for (var i = 0; i < NesbatListGrid.store.count() ; i++) {
            var Rec = NesbatListGrid.store.getAt(i);
            if (Rec.data.fldMablagh != 0 ||(Rec.data.fldMablagh==0 && Rec.data.fldId!=0)) {
                MablaghArray.push({
                    fldId: Rec.data.fldId,
                    fldMablagh:Rec.data.fldMablagh,
                    fldTypeNesbatId:Rec.data.fldTypeNesbatId
                });
            }
        }

        var data = {
            MablaghArray: MablaghArray,
            HeaderId: '@ViewBag.HeaderId',
            MonasebatId: OccasionsListGrid.getSelectionModel().getLastSelected().data.fldId,
        };
        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        $.ajax({
            type: "POST",
            url: '/PayRoll/Occasions/SaveMablagh',
            datatype: "json",
            data: JSON.stringify(data),
            contentType: 'application/json',
            success: function (result) {
                var ic = Ext.MessageBox.INFO;
                if (result.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: result.MsgTitle,
                    msg: result.Msg,
                    icon: ic,
                    closable: false,
                    buttons: Ext.MessageBox.OK,
                    fn: function (btn) {
                        if (btn == "ok" && result.Er != 1) {
                            App.OccasionsPay.queryById('NesbatListGrid').store.load();
                        }
                    }
                });
                Ext.net.Mask.hide();
            },
            failure: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function LoadNesbatListGrid() {
        var selRec = App.OccasionsPay.queryById("OccasionsListGrid").getSelectionModel().getLastSelected();
        if (selRec != null) {
            App.OccasionsPay.queryById("NesbatListGrid").getStore().getProxy().setExtraParam("HeaderId", '@ViewBag.HeaderId');
            App.OccasionsPay.queryById("NesbatListGrid").getStore().getProxy().setExtraParam("MonasebatId", selRec.data.fldId);
            App.OccasionsPay.queryById("NesbatListGrid").store.load();
        }
    }

    var setSeperateM = function (Fieldd, value, c) {
        Fieldd.setValue(Fieldd.getValue().toLocaleString());
    };

    function loadMonthsOccasionsPay() {
        var CboYear = App.OccasionsPay.queryById('CboYear');
        if (CboYear.getValue() == '@ViewBag.DefaultYear') {
            App.OccasionsPay.queryById('CboMonth').getStore().getProxy().setExtraParam("Month", '@ViewBag.DefaultMonth');
            App.OccasionsPay.queryById('CboMonth').getStore().load();
        }
        else {
            App.OccasionsPay.queryById('CboMonth').getStore().getProxy().setExtraParam("Month", null);
            App.OccasionsPay.queryById('CboMonth').getStore().load();
        }
    }

    function setdefaultYearOccasionsPay() {
        App.OccasionsPay.queryById('CboYear').setValue('@ViewBag.DefaultYear');
    }

    function setdefaultMonthOccasionsPay() {
        App.OccasionsPay.queryById('CboMonth').setValue('@ViewBag.DefaultMonth');
    }

    function GotoMonasebat_Mablagh(grid, command, record, row) {
        var RowId = record.data.fldCodingId;
        App.OccasionsPay.body.mask('در حال بارگذاری...');
        Ext.net.DirectMethod.request({
            url: '/PayRoll/OccasionsPay/Monasebat_Mablagh',
            params: {
                CodingAcc: RowId,
                Year: '@ViewBag.Year'
            },
            success: function (data) {
                App.Eghtesadi.body.mask().hide();
            }
        });
    };

    function HelpOccasionsPay() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Accounting/OccasionsPay/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function OccasionsPaySetSize() {
        App.OccasionsPay.setWidth(App.PayWin.getWidth() - 535);
        var grid1 = App.OccasionsPay.queryById('OccasionsListGrid');
        var grid2 = App.OccasionsPay.queryById('NesbatListGrid');
        grid1.setSize((App.PayWin.getWidth() - 550) / 2, App.PayWin.getHeight() - 250);
        grid2.setSize((App.PayWin.getWidth() - 550) / 2, App.PayWin.getHeight() - 250);
    }

    function LoadOccasionsPay() {
        var SelectedRow = App.OccasionsPay.queryById('OccasionsListGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Accounting/OccasionsPay/Details',
                params: {
                    Id: SelectedRow.data.fldId
                },
                success: function (data) {
                    var txtName = App.OccasionsPay.queryById('txtName');
                    txtName.setValue(data.fldName);
                    var txtDesc = App.OccasionsPay.queryById('txtDesc');
                    txtDesc.setValue(data.fldDesc);
                    var fldId = App.OccasionsPay.queryById('fldId');
                    fldId.setValue(data.fldId);
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function SaveOccasionsPay() {
        var txtName = App.OccasionsPay.queryById('txtName');
        var txtDesc = App.OccasionsPay.queryById('txtDesc');
        var fldId = App.OccasionsPay.queryById('fldId');
        var er = false;

        if (txtName.validate() == false) {
            er = true;
        }

        if (er == true)
            return;

        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Accounting/OccasionsPay/Save',
            params: {
                fldId: fldId.getValue(),
                fldActiveDate: txtName.getValue(),
                fldDeactiveDate: txtDesc.getValue(),
                fldActive: txtDesc.getValue()
            },
            success: function (data) {
                Ext.net.Mask.hide();
                var ic = Ext.MessageBox.INFO;
                if (data.Err == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    Name: data.MsgName,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.OccasionsPay.queryById('OccasionsPayGrid').store.load();
                if (data.Err != 1)
                    ClearOccasionsPay();
            }

        });
    }
    function DeleteOccasionsPay() {
        var SelectedRow = App.OccasionsPay.queryById('OccasionsPayGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                        Ext.net.DirectMethod.request({
                            url: '/Accounting/OccasionsPay/Delete',
                            params: {
                                id: SelectedRow.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.OccasionsPay.queryById('OccasionsPayGrid').store.load();
                            }
                        });
                        Ext.net.Mask.hide();
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ClearOccasionsPay() {
        App.OccasionsPay.queryById('fldId').setValue(0);
        App.OccasionsPay.queryById('txtName').setValue("");
        App.OccasionsPay.queryById('txtDesc').setValue("");
    }
    var addKeyMapOccasionsPay = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.OccasionsPay.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtDesc") {
                        nextfld = App.OccasionsPay.queryById('btnSaveOccasionsPay');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }
</script>

