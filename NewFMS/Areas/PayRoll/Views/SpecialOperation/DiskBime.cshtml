@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

<style>
    td {
        text-align: left;
    }
</style>

@(Html.X().Window()
    .Closable(true)
    .Border(false)
    .Modal(true)
    .CloseAction(CloseAction.Destroy)
    .Title("تهیه دیسکت بیمه")
    .Listeners(l => l.AfterRender.Fn = "addKeyMapBimeDisc")
    .Width(580)
    .AutoScroll(true)
    .Layout(LayoutType.Fit)
    .ButtonAlign(Alignment.Center)
    .ID("BimeDisc")
    .Buttons(
        Html.X().Button()
            .Text("تهیه دیسکت")
            .Icon(Ext.Net.Icon.ReportDisk)
            .ItemID("btnDisk")
                .Listeners(l => l.Click.Handler = "MessageBime()"),
        Html.X().Button()
            .Text("خروجی اکسل لیست بیمه")
            .ItemID("btnshow")
            .Icon(Ext.Net.Icon.Printer)
            .Listeners(l => l.Click.Handler = "ShowBime()"),  
        X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help).Listeners(l => { l.Click.Handler = "HelpDiskBime();"; }),

        Html.X().Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .OnClientClick("App.BimeDisc.destroy();")
    )
    .Items(
        X.Panel()
            .Border(true)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.FieldSet()
                            .Border(true)
                            .Title("مشخصات دیسکت")
                            .PaddingSpec("0 7px 7px 7px")
                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                            .Defaults(new { Margin = 2 })
                            .Items(
                                X.Label("سال:").ItemID("lblYear"),
                                X.ComboBox()
                                    .ItemID("CboYear")
                                    .Editable(false)
                                    .AutoFocus(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(180)
                                    .BlankText("لطفا سال را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueYearDiscB()";
                                    })
                                    .Items(
                                        new ListItem("1387", "1387"),
                                        new ListItem("1388", "1388"),
                                        new ListItem("1389", "1389"),
                                        new ListItem("1390", "1390"),
                                        new ListItem("1391", "1391"),
                                        new ListItem("1392", "1392"),
                                        new ListItem("1393", "1393"),
                                        new ListItem("1394", "1394"),
                                        new ListItem("1395", "1395"),
                                        new ListItem("1396", "1396"),
                                        new ListItem("1397", "1397"),
                                        new ListItem("1398", "1398"),
                                        new ListItem("1399", "1399"),
                                        new ListItem("1400", "1400"),
                                        new ListItem("1401", "1401"),
                                            new ListItem("1402", "1402"),
                                            new ListItem("1403", "1403")
                                ),
                                X.Label("ماه:").ItemID("lblMonth"),
                                X.ComboBox()
                                    .ItemID("CboMonth")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(180)
                                    .BlankText("لطفا ماه را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueMonthDiscB()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("فروردین", "01"),
                                        new ListItem("اردیبهشت", "02"),
                                        new ListItem("خرداد", "03"),
                                        new ListItem("تیر", "04"),
                                        new ListItem("مرداد", "05"),
                                        new ListItem("شهریور", "06"),
                                        new ListItem("مهر", "07"),
                                        new ListItem("آبان", "08"),
                                        new ListItem("آذر", "09"),
                                        new ListItem("دی", "10"),
                                        new ListItem("بهمن", "11"),
                                        new ListItem("اسفند", "12")
                                    ),
                                X.Label("نوع دیسکت:").ItemID("lblTypeDisc"),
                                X.ComboBox()
                                    .ItemID("CboTypeDisc")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(180)
                                    .BlankText("لطفا نوع دیسکت را انتخاب کنید.")
                                    .SelectedItems(new { value = "1" })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("حقوق ماهانه", "1"),
                                        new ListItem("اضافه کاری", "2"),
                                        new ListItem("تعطیل کاری", "3"),
                                        new ListItem("حقوق ماهانه و معوقه جدا", "4")
                                        
                                    ),
                                X.Label("پردازش:").ItemID("lblNobatePardakht"),
                                X.ComboBox()
                                    .ItemID("CboNobatePardakht")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(180)
                                    .BlankText("لطفا پردازش را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueNobatePardakhtdiscB()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("یک", "1"),
                                        new ListItem("دو", "2"),
                                        new ListItem("سه", "3"),
                                        new ListItem("چهار", "4"),
                                        new ListItem("پنج", "5"),
                                        new ListItem("گروهی", "0")
                                    ),
                                    X.Label("نام کارگاه:").ItemID("lblKargahName").Hidden(true),
                                X.ComboBox().Hidden(true)
                                    .ItemID("CboKargahName")
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(180)
                                    .BlankText("لطفا نام کارگاه را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                    .EmptyText("نام کارگاه...")
                                    .Store(X.Store()//.Listeners(l => l.Load.Handler = "setDefaultValue()")
                                        .Model(X.Model()
                                            .IDProperty("ID")
                                            .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" },
                                                new ModelField("Num", ModelFieldType.String) { Mapping = "fldNum" }
                                                )
                                            )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetKargah"))
                                            .Reader(X.JsonReader().Root("data"))
                                            )
                                        ),
                                X.Label("شماره لیست:").ItemID("lblSh_List"),
                                X.TextField()
                                    .ItemID("txtSh_List")
                                    .AllowBlank(false)
                                    .Width(180)
                                    .BlankText("لطفا شماره لیست را وارد کنید.")
                                    .MaskRe("/[0-9]/")
                                    )
                                        )
            )
    )
)

<script type="text/javascript">

    function setValueYearDiscB() {
        var CboYear = App.BimeDisc.queryById('CboYear');
        CboYear.setValue('@ViewBag.Year');
    }
    function HelpDiskBime() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/SpecialOperation/HelpDiskBime',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function setValueNobatePardakhtdiscB() {
        var CboNobatePardakht = App.BimeDisc.queryById('CboNobatePardakht');
        CboNobatePardakht.setValue('@ViewBag.nobatePardakht');
    }

    function setValueMonthDiscB() {
        var CboMonth = App.BimeDisc.queryById('CboMonth');
        CboMonth.setValue('@ViewBag.Month');
    }
    var t;
    function ShowBime() {

        var CboYear = App.BimeDisc.queryById('CboYear');
        var CboMonth = App.BimeDisc.queryById('CboMonth');
        var CboNobatePardakht = App.BimeDisc.queryById('CboNobatePardakht');

        
         if (CboYear.validate() == false) {
            return;
        }
        else if (CboMonth.validate() == false) {
            return;
        }
        else if (CboNobatePardakht.validate() == false) {
            return;
        }
       
                    window.location.href = '@Url.Content("~/PayRoll/SpecialOperation/GenerateExcelBime/")' + '?Year=' + CboYear.getValue() + "&Month=" + CboMonth.getValue()

      + "&NobatePardakht=" + CboNobatePardakht.getValue() ;

             
    }
    function MessageBime() {
         
                Ext.MessageBox.show({
                    title: "هشدار",
                    msg: "پس از تهیه دیسکت، کلیه اطلاعات حقوق ماه جاری بسته شده و هرگونه محاسبات و عملیات در ماه جاری مجاز نخواهد بود. آیا برای تهیه دیسکت مطمئن هستید؟",
                    icon: Ext.MessageBox.WARNING,
                    buttons: Ext.MessageBox.YESNO,
                    fn: function (btn) {
                        if (btn == 'yes') {
                            DiscB();
                        }
                    }
                });
          
        }
    function DiscB() {
        var CboYear = App.BimeDisc.queryById('CboYear');
        var CboMonth = App.BimeDisc.queryById('CboMonth');
        var CboNobatePardakht = App.BimeDisc.queryById('CboNobatePardakht');
        var CboTypeDisc = App.BimeDisc.queryById('CboTypeDisc');
        var txtSh_List = App.BimeDisc.queryById('txtSh_List');
        /*var CboKargahName = App.BimeDisc.queryById('CboKargahName');*/

        
        if (CboYear.validate() == false) {
            return;
        }
        else if (CboMonth.validate() == false) {
            return;
        }
        else if (CboNobatePardakht.validate() == false) {
            return;
        }
        else if (CboTypeDisc.validate() == false) {
            return;
        }
        /*else if (CboKargahName.validate() == false) {
            return;
        }*/
        else if (txtSh_List.validate() == false) {
            return;
        }

        var FieldName = "";

        if (CboTypeDisc.getValue() == "1") {
            FieldName = 'Hoghough';
        }
        else if (CboTypeDisc.getValue() == "2") {
            FieldName = 'Ezafekar';
        }
        else if (CboTypeDisc.getValue() == "3") {
            FieldName = 'Tatilkar';
        }
        else if (CboTypeDisc.getValue() == "4") {
            FieldName = 'Hoghough_Moavaghe';
        }
        /*Ext.net.DirectMethod.request({
            url: "/PayRoll/SpecialOperation/GenerateDiskBime",
            params: {
                Year: CboYear.getValue(),
                Month: CboMonth.getValue(),
                NobatePardakht: CboNobatePardakht.getValue(),
                FieldName: FieldName,
                Sh_List: txtSh_List.getValue(),
                KargahId: CboKargahName.getValue(),
                KargahNum: CboKargahName.findRecordByValue(CboKargahName.getValue()).data.Num
            },*/
        var no = CboNobatePardakht.getValue();
        if (FieldName == 'Hoghough_Moavaghe')
            no = 10;

        var data1 = {
            Year: CboYear.getValue(),
            Month: CboMonth.getValue(),
            NobatePardakht: no,
            FieldName: FieldName,
            Sh_List: txtSh_List.getValue(),
            /*KargahId: CboKargahName.getValue(),*/
            /*KargahNum: CboKargahName.findRecordByValue(CboKargahName.getValue()).data.Num*/
        };
        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
        Ext.net.DirectMethod.request({
            url: "/PayRoll/SpecialOperation/CheckDiskMaliat",
            params: {
                Year: CboYear.getValue(),
                Month: CboMonth.getValue(),
                NobatPardakht: no,
                type:4
            },
            success: function (data) {
                if (data.AllowGenerate == 1 || parseInt(CboYear.getValue() + CboMonth.getValue()) < 140306) {
                    $.ajax({
                        type: "POST",
                        url: '/PayRoll/SpecialOperation/GenerateDiskBime',
                        datatype: "json",
                        data: JSON.stringify(data1),
                        contentType: "application/json; charset=utf-8",                
                        success: function (data) {
                            var result = data;/*JSON.parse(data);*/
                            t = data;
                            var ic = Ext.MessageBox.INFO;
                            if (result.Er == 1)
                                ic = Ext.MessageBox.ERROR;
                            Ext.MessageBox.show({
                                title: result.MsgTitle,
                                msg: result.Msg,
                                closable: false,
                                icon: ic,
                                buttons: Ext.MessageBox.OK,
                                fn: function (btn) {
                                    if (result.Er == 0 && btn == "ok") {
                                        @*for (var i = 0; i < 2; i++) {
                                            var masir = "";
                                            var FileName = "";
                                            var Passvand = ".DBF";
                                            if (i == 0) {
                                                masir = data.masir_KAR;
                                                FileName = data.FileName_KAR;
                                            }
                                            else if (i == 1) {
                                                masir = data.masir_WOR;
                                                FileName = data.FileName_WOR;
                                            }
                                            downloadURL('@Url.Content("/PayRoll/SpecialOperation/Download?Masir=")' + masir + "&FileName=" + FileName + "&Passvand=" + Passvand, i);
                                        }*@
                                        Ext.net.Mask.show({ msg: 'در حال بارگزاری...' });
                                        Ext.net.DirectMethod.request({
                                            url: '/PayRoll/SpecialOperation/rptBime',
                                            params: {
                                                FieldName: FieldName,
                                                sh_List: txtSh_List.getValue(),
                                                Year: CboYear.getValue(),
                                                Month: CboMonth.getValue(),
                                                NobatePardakht: CboNobatePardakht.getValue(),
                                                /*KargahId: CboKargahName.getValue(),*/
                                                /*Mard: result.TedadMard,
                                                Zan: result.TedadZan,
                                                J_Mazaya: result.J_Mazaya,
                                                J_Bime_P: result.J_Bime_P,
                                                J_Bime_K: result.J_Bime_K,
                                                j_motalebat: result.j_motalebat,
                                                j_bime_bikari: result.j_bime_bikari*/
                                            },
                                            success: function () {
                                                Ext.net.Mask.hide();
                                            }
                                        });
                                    }
                                }
                            });
                            Ext.net.Mask.hide();
                        }, error: function (result) {
                            t = result;
                            Ext.MessageBox.show({
                                title: result.MsgTitle,
                                msg: result.Msg,
                                closable: false,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                    });
                }
                else {
                    Ext.net.Mask.hide();
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "لطفا ابتدا اقدام به تهیه دیسکت مالیات نمایید.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });        
    }
    var t;
    var downloadURL = function downloadURL(url, count) {
        var hiddenIFrameID = 'hiddenDownloader' + count;
        var iframe = document.createElement('iframe');
        iframe.id = hiddenIFrameID;
        iframe.style.display = 'none';
        document.body.appendChild(iframe);
        iframe.src = url;
    };

    var addKeyMapBimeDisc = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.BimeDisc.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;

                    if (keyfield.itemId == "txtSh_List") {
                        nextfld = App.BimeDisc.queryById('btnDisk');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                }
            }]
        });
    };
</script>