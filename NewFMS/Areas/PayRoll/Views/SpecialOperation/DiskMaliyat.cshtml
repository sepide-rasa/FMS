@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

<style>
    td {
        text-align: left;
    }
</style>

@(Html.X().Panel()
    .Closable(true)
    .Border(false)
    //.Modal(true)
    .CloseAction(CloseAction.Destroy)
    .Title("تهیه دیسکت دارایی")
    //.Width(620)
    .AutoScroll(true)
    .Layout(LayoutType.Fit)
        .ButtonAlign(Alignment.Center)
            .Listeners(l => l.AfterRender.Fn = "addKeyMapMaliyatDisc")
    .ID("MaliyatDisc")
   
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                              .ButtonAlign(Alignment.Center)
                         .Buttons(
            Html.X().Button()
                .Text("تهیه دیسکت")
                .Icon(Ext.Net.Icon.ReportDisk)
                    .Listeners(l => l.Click.Handler = "MessageMaliyat()"),
                   Html.X().Button()
                        .Text("آپلود فایل اکسل دارایی")
                        .ItemID("btnUpload")
                        .Icon(Ext.Net.Icon.DiskUpload)
                        .Listeners(l => l.Click.Handler = "UploadM()"),      
            //Html.X().Button()
            //    .Text("خروجی اکسل")
            //    .ItemID("btnExcel")
            //    .Icon(Ext.Net.Icon.PageExcel)
            //    .Listeners(l => l.Click.Handler = "ExcelM()"),
            Html.X().Button()
                    .Text("خروجی اکسل لیست دارایی")
                    .ItemID("btnshow")
                    .Icon(Ext.Net.Icon.Printer)
                    .Listeners(l => l.Click.Handler = "ShowM()"),
            X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                .Listeners(l => { l.Click.Handler = "HelpMaliyatDisc();"; }),
            Html.X().Button()
                .Text("خروج")
                .Icon(Ext.Net.Icon.DoorOut)
                .OnClientClick("App.MaliyatDisc.destroy();")
        )
                    .Items(
                        X.FieldSet()
                            .Border(true)
                            .Title("مشخصات دیسکت")
                            .PaddingSpec("0 7px 7px 7px")
                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                            .Defaults(new { Margin = 2 })
                            .Items(
                                X.Label("سال:").ItemID("lblYear"),
                                X.ComboBox()
                                    .ItemID("CboYear")
                                    .Editable(false)
                                        .TypeAhead(true)
                                        .AutoFocus(true)
                                    .AllowBlank(false)
                                    .Width(180)
                                    .BlankText("لطفا سال را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueYearDiscM()";
                                    })
                                    .Items(
                                        new ListItem("1387", "1387"),
                                        new ListItem("1388", "1388"),
                                        new ListItem("1389", "1389"),
                                        new ListItem("1390", "1390"),
                                        new ListItem("1391", "1391"),
                                        new ListItem("1392", "1392"),
                                        new ListItem("1393", "1393"),
                                        new ListItem("1394", "1394"),
                                        new ListItem("1395", "1395"),
                                        new ListItem("1396", "1396"),
                                        new ListItem("1397", "1397"),
                                        new ListItem("1398", "1398"),
                                        new ListItem("1399", "1399"),
                                        new ListItem("1400", "1400"),
                                        new ListItem("1401", "1401"),
                                            new ListItem("1402", "1402"),
                                            new ListItem("1403", "1403")
                            ),
                                X.Label("ماه:").ItemID("lblMonth"),
                                X.ComboBox()
                                    .ItemID("CboMonth")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(180)
                                    .BlankText("لطفا ماه را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueMonthDiscM()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("فروردین", "01"),
                                        new ListItem("اردیبهشت", "02"),
                                        new ListItem("خرداد", "03"),
                                        new ListItem("تیر", "04"),
                                        new ListItem("مرداد", "05"),
                                        new ListItem("شهریور", "06"),
                                        new ListItem("مهر", "07"),
                                        new ListItem("آبان", "08"),
                                        new ListItem("آذر", "09"),
                                        new ListItem("دی", "10"),
                                        new ListItem("بهمن", "11"),
                                        new ListItem("اسفند", "12")
                                    ),
                                X.Label("نوع دیسکت:").ItemID("lblTypeDisc"),
                                X.ComboBox()
                                    .ItemID("CboTypeDisc")
                                    .Editable(false)
                                    .ReadOnly(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(180)
                                   // .Listeners(l => l.Select.Handler = "hideMarhale()")
                                    .BlankText("لطفا نوع دیسکت را انتخاب کنید.")
                                    .SelectedItems(new { value = "1" })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
            new ListItem("کلیه اطلاعات حقوق ماهانه", "1")
                                    //    new ListItem("حقوق ماهانه", "1"),
                                    //    new ListItem("عیدی", "2"),
                                    //    new ListItem("اضافه کاری", "3"),
                                    //    new ListItem("تعطیل کاری", "4"),
                                    //    new ListItem("کمک غیرنقدی مستمر", "5"),
                                    //    new ListItem("کمک غیرنقدی غیرمستمر", "6"),
                                    //    new ListItem("سایر پرداخت ها", "7"),
                                    //    new ListItem("بن مزایای جانبی رفاهی", "8")
                                    ),
                                X.Label("تاریخ پرداخت حقوق:").ItemID("lblDatePay"),
                                X.PDateField()
                                    .ItemID("CboDatePay")
                                    .Editable(true)
                                    .AllowBlank(false)
                                    .MaxLength(10)
                                    .EnforceMaxLength(true)
                                    .MaskRe("/[0-9 /]/")
                                    .Width(180)
                                    .BlankText("لطفا تاریخ پرداخت حقوق را انتخاب کنید."),
                                X.Label("نحــــوه پــرداخـت:").ItemID("lblTypePardakht"),
                                X.ComboBox()
                                    .ItemID("CboTypePardakht")
                                    .Listeners(l => l.Select.Handler = "showhide()")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .Width(180)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نحوه پرداخت را انتخاب کنید.")
                                    .SelectedItems(new { value = "1" })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("چک شخصی", "1"),
                                        new ListItem("پرداخت با کارت اعتباری", "2"),
                                        new ListItem("انتقال بانکی", "3"),
                                        new ListItem("سفته", "4"),
                                        new ListItem("چک تضمین شده", "5"),
                                        new ListItem("واریز نقدی", "6"),
                                        new ListItem("واریز خزانه", "7"),
                                        new ListItem("ارائه لیست بدون پرداخت مالیات", "8")
                                    ),
                                X.Label("نوبت پرداخت:").ItemID("lblNobatePardakht"),
                                X.ComboBox()
                                    .ItemID("CboNobatePardakht")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .Width(180)
                                    .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueNobatePardakhtdiscM()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("یک", "1"),
                                        new ListItem("دو", "2"),
                                        new ListItem("سه", "3"),
                                        new ListItem("چهار", "4"),
                                        new ListItem("پنج", "5"),
                                        new ListItem("گروهی", "0")
                                    ),
                                X.Label("مرحله پرداخت:").ItemID("lblMarhalePardakht"),
                                X.ComboBox()
                                    .ItemID("CboMarhalePardakht")
                                    .Editable(false)
                                    .Width(180)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                   // .Listeners(l => l.AfterRender.Handler = "App.MaliyatDisc.queryById('CboMarhalePardakht').hide();App.MaliyatDisc.queryById('lblMarhalePardakht').hide();")
                                    .BlankText("لطفا مرحله پرداخت را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("یک", "1"),
                                        new ListItem("دو", "2"),
                                        new ListItem("سه", "3"),
                                        new ListItem("چهار", "4"),
                                        new ListItem("پنج", "5")
                                        )
                                        .SelectedItems(new { Value = "1" }).ColSpan(6)
                         , X.FieldSet()
                         .Layout(LayoutType.HBox)
                            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle })
                            .Border(false)
                                    .Items(
                                            X.Checkbox().ItemID("ChMoaf").PaddingSpec("0 0 0 5px")//.PaddingSpec("0 20px 0 0")
                                            , X.Label("ارسال جمع آیتم های حق اولاد، حق عائله مندی، حق مسکن، تسهیلات رفاهی در سایر معافیت ها")
                                    ).ColSpan(6)
                                        , X.FieldSet().Layout(LayoutType.HBox)
                                .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle }).Border(false)
                                        .Items(
                                                        X.Checkbox().PaddingSpec("0 0 0 5px").ItemID("ChMotalebat")
                                                , X.Label("ارسال جمع مطالبات پارامتری در پرداخت مزایای مستمر غیرنقدی")//.PaddingSpec("0 20px 0 0")
                                        ).ColSpan(6)
                                         
                                    ),
                        Html.X().Panel()
                            .ItemID("pnlCheck")
                            .Border(false)
                            .Items(
                                X.FieldSet()
                                    .Border(true)
                                    .Title("مشخصات چک")
                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                                    .Defaults(new { Margin = 2 })
                                    .PaddingSpec("0 7px 7px 7px")
                                    .Items(
                                        X.Label("شمـاره حســاب:").ItemID("lblSh_Hesab"),
                                        X.TextField()
                                            .ItemID("txtSh_Hesab")
                                            .AllowBlank(false)
                                            .MaxLength(15)
                                            .EnforceMaxLength(true)
                                            .MaskRe("/[0-9]/")
                                            .Width(180)
                                            .BlankText("لطفا شماره حساب را وارد کنید."),
                                        X.Label("شمــاره ســری چک:").ItemID("lblSh_Check"),
                                        X.TextField()
                                            .ItemID("txtSh_Check")
                                            .AllowBlank(false)
                                            .MaxLength(15)
                                            .EnforceMaxLength(true)
                                            .MaskRe("/[0-9]/")
                                            .Width(180)
                                            .BlankText("لطفا شماره سری چک را وارد کنید."),
                                        X.Label("تاریخ چک:").ItemID("lblDateCheck"),
                                        X.PDateField()
                                            .ItemID("txtDateCheck")
                                            .Editable(true)
                                            .AllowBlank(false)
                                            .MaxLength(10)
                                            .EnforceMaxLength(true)
                                            .MaskRe("/[0-9 /]/")
                                            .Width(180)
                                            .BlankText("لطفا تاریخ چک را وارد کنید."),
                                        X.Label("نام بانک:").ItemID("lblBankName"),
                                        X.ComboBox()
                                            .ItemID("CboBankName")
                                            .Editable(true)
                                            .ForceSelection(true)
                                            .TypeAhead(true)
                                            .Width(180)
                                            .AllowBlank(false)
                                            .BlankText("لطفا بانک را انتخاب کنید.")
                                            .SelectedItems(new { value = "1" })
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .Items(
                                                new ListItem("بانک انصار", "1"),
                                                new ListItem("بانک توسعه تعاون", "2"),
                                                new ListItem("بانک مرکزی ایران", "3"),
                                                new ListItem("بانک شهر", "4"),
                                                new ListItem("بانک دی", "5"),
                                                new ListItem("بانک قرض الحسنه مهر ایرانیان", "6"),
                                                new ListItem("بانک حکمت ایرانیان", "7"),
                                                new ListItem("بانک صنعت و معدن", "8"),
                                                new ListItem("بانک کارآفرین", "9"),
                                                new ListItem("بانک کشاورزی", "10"),
                                                new ListItem("بانک مسکن", "11"),
                                                new ListItem("بانک ملت", "12"),
                                                new ListItem("بانک ملی ایران", "13"),
                                                new ListItem("بانک پارسیان", "14"),
                                                new ListItem("بانک پاسارگاد", "15"),
                                                new ListItem("پست بانک ایران", "16"),
                                                new ListItem("بانک رفاه کارگران", "17"),
                                                new ListItem("بانک صادرات", "18"),
                                                new ListItem("بانک سامان", "19"),
                                                new ListItem("بانک سرمایه", "20"),
                                                new ListItem("بانک سپه", "21"),
                                                new ListItem("بانک سینا", "22"),
                                                new ListItem("بانک تات", "23"),
                                                new ListItem("بانک تجارت", "24"),
                                                new ListItem("بانک گردشگری", "25"),
                                                new ListItem("بانک رسالت", "26")
                                                ),
                                        X.Label("نام شعبه:").ItemID("lblNameShobe"),
                                        X.TextField()
                                            .ItemID("txtNameShobe")
                                            .AllowBlank(false)
                                            .Width(180)
                                            .BlankText("لطفا نام شعبه را وارد کنید.")
                                    )
                                            )
                                            )/*,
                    Html.X().Panel()
                        .Border(true)
                        .Listeners(L => L.AfterRender.Handler = "setSizeRptPanel()")
                        .AutoScroll(true)
                        .ItemID("RptPanel")*/
            )
    )
)


<script type="text/javascript">
    /*function setSizeRptPanel() {
        App.MaliyatDisc.queryById('RptPanel').setSize(App.PayWin.getWidth() - 20, App.PayWin.getHeight() - 200);
    }*/
    function HelpMaliyatDisc() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/SpecialOperation/HelpMaliyatDisc',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }

    function UploadM() {
        var CboYear = App.MaliyatDisc.queryById('CboYear');
        var CboMonth = App.MaliyatDisc.queryById('CboMonth');
        var CboNobatePardakht = App.MaliyatDisc.queryById('CboNobatePardakht');
        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
        Ext.net.DirectMethod.request({
            url: "/PayRoll/SpecialOperation/CheckUploadFile",
            params: {
                Year: CboYear.getValue(),
                Month: CboMonth.getValue(),
                NobatPardakht: CboNobatePardakht.getValue(),
                type:5
            },
            success: function (data) {
                if (data.AllowGenerate == 1) {
                    Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                    Ext.net.DirectMethod.request({
                        url: '/PayRoll/SpecialOperation/UploadExcel', params: {
                            Year: CboYear.getValue(),
                            Month: CboMonth.getValue(),
                            NobatePardakht: CboNobatePardakht.getValue(),
                        },
                        success: function () {
                            Ext.net.Mask.hide();
                        }
                    });
                }
                else {
                    Ext.net.Mask.hide();
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "پس از تهیه دیسکت بانک، آپلود فایل مجاز نیست.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });
    }

    function showhide() {
        if (App.MaliyatDisc.queryById("CboTypePardakht").getValue() == "1" || App.MaliyatDisc.queryById("CboTypePardakht").getValue() == "5") {
            App.MaliyatDisc.queryById("pnlCheck").show();
        }
        else {
            App.MaliyatDisc.queryById("pnlCheck").hide();
        }
    }

    function hideMarhale() {
        if (App.MaliyatDisc.queryById('CboTypeDisc').getValue() == "7") {
            App.MaliyatDisc.queryById('CboMarhalePardakht').show();
            App.MaliyatDisc.queryById('lblMarhalePardakht').show();
        }
        else {
            App.MaliyatDisc.queryById('CboMarhalePardakht').hide();
            App.MaliyatDisc.queryById('lblMarhalePardakht').hide();
        }
    }

    function setValueYearDiscM() {
        var CboYear = App.MaliyatDisc.queryById('CboYear');
        CboYear.setValue('@ViewBag.Year');
    }

    function setValueNobatePardakhtdiscM() {
        var CboNobatePardakht = App.MaliyatDisc.queryById('CboNobatePardakht');
        CboNobatePardakht.setValue('@ViewBag.nobatePardakht');
    }

    function setValueMonthDiscM() {
        var CboMonth = App.MaliyatDisc.queryById('CboMonth');
        CboMonth.setValue('@ViewBag.Month');
    }

    function ShowM() {
        var CboTypePardakht = App.MaliyatDisc.queryById('CboTypePardakht');
        var CboYear = App.MaliyatDisc.queryById('CboYear');
        var CboMonth = App.MaliyatDisc.queryById('CboMonth');
        var CboNobatePardakht = App.MaliyatDisc.queryById('CboNobatePardakht');
        var CboMarhalePardakht = App.MaliyatDisc.queryById('CboMarhalePardakht');
        var CboTypeDisc = App.MaliyatDisc.queryById('CboTypeDisc');
        var CboDatePay = App.MaliyatDisc.queryById('CboDatePay');
        var txtSh_Hesab = App.MaliyatDisc.queryById('txtSh_Hesab');
        var txtSh_Check = App.MaliyatDisc.queryById('txtSh_Check');
        var txtDateCheck = App.MaliyatDisc.queryById('txtDateCheck');
        var CboBankName = App.MaliyatDisc.queryById('CboBankName');
        var txtNameShobe = App.MaliyatDisc.queryById('txtNameShobe');
        var ChMoaf = App.MaliyatDisc.queryById('ChMoaf');
        var ChMotalebat = App.MaliyatDisc.queryById('ChMotalebat');

        if (CboTypePardakht.validate() == false) {
            return;
        }
        else if (CboYear.validate() == false) {
            return;
        }
        else if (CboMonth.validate() == false) {
            return;
        }
        else if (CboNobatePardakht.validate() == false) {
            return;
        }
        else if (CboTypeDisc.validate() == false) {
            return;
        }
        else if (CboDatePay.validate() == false) {
            return;
        }

        if (CboTypePardakht.getValue() == "1" || CboTypePardakht.getValue() == "5") {
            if (txtSh_Hesab.validate() == false) {
                return;
            }
            else if (txtSh_Check.validate() == false) {
                return;
            }
            else if (txtDateCheck.validate() == false) {
                return;
            }
            else if (CboBankName.validate() == false) {
                return;
            }
            else if (txtNameShobe.validate() == false) {
                return;
            }
        }

        var FieldName = "";

        if (CboTypeDisc.getValue() == "1") {
            FieldName = 'Hoghogh';
        }
        else if (CboTypeDisc.getValue() == "2") {
            FieldName = 'Eydi';
        }
        else if (CboTypeDisc.getValue() == "7") {
            FieldName = 'SayerPardakht';
        }
        else if (CboTypeDisc.getValue() == "3") {
            FieldName = 'EzafeKari';
        }
        else if (CboTypeDisc.getValue() == "4") {
            FieldName = 'TatilKari';
        }
        else if (CboTypeDisc.getValue() == "5") {
            FieldName = 'KomakGheyerNaghdi_Mostamer';
        }
        else if (CboTypeDisc.getValue() == "6") {
            FieldName = 'KomakGheyerNaghdi_GheyreMostamer';
        }
        else if (CboTypeDisc.getValue() == "8") {
            FieldName = 'BonKart';
        }
        var height = App.PayWin.getHeight() - 255;

        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/SpecialOperation/CheckDataDiskMaliyat',
            params: {
                Year: CboYear.getValue(),
                Month: CboMonth.getValue(),
                NobatePardakht: CboNobatePardakht.getValue(),
                MarhalePardakht: CboMarhalePardakht.getValue(),
                FieldName: FieldName
            },
            success: function (data) {
                if (data.Er == 0) {
                   
                                            /*App.MaliyatDisc.queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height + "px;border: 1px solid #ccc;'  type='application/pdf' data='/PayRoll/SpecialOperation/GeneratePDFMaliyat?Year="
                                                 + CboYear.getValue() + "&Month=" + CboMonth.getValue()
                                           + "&NobatePardakht=" + CboNobatePardakht.getValue() + "&MarhalePardakht=" + CboMarhalePardakht.getValue() + "&FieldName=" + FieldName + "&TypePardakht=" + CboTypePardakht.getValue()
                                    + "&Sh_Check=" + txtSh_Check.getValue() + "&DateCheck=" + txtDateCheck.getValue() + "&Bank=" + CboBankName.getValue() + "&NameShobe=" + txtNameShobe.getValue()
                                    + "&Sh_Hesab=" + txtSh_Hesab.getValue() + "&DatePay=" + CboDatePay.getValue() + "&NahvePardakht=" + CboTypePardakht.getDisplayValue() + "'></object></center>");
                                    */
                                            window.location.href = '@Url.Content("~/PayRoll/SpecialOperation/GeneratePDFMaliyat/")' + '?Year=' + CboYear.getValue() + "&Month=" + CboMonth.getValue()

                              + "&NobatePardakht=" + CboNobatePardakht.getValue() + "&MarhalePardakht=" + CboMarhalePardakht.getValue() + "&FieldName=" + FieldName + "&TypePardakht=" + CboTypePardakht.getValue()
                        + "&Sh_Check=" + txtSh_Check.getValue() + "&DateCheck=" + txtDateCheck.getValue() + "&Bank=" + CboBankName.getValue() + "&NameShobe=" + txtNameShobe.getValue()
                        + "&Sh_Hesab=" + txtSh_Hesab.getValue() + "&DatePay=" + CboDatePay.getValue() + "&NahvePardakht=" + CboTypePardakht.getDisplayValue()
                           + "&SayerMoafiyat=" + ChMoaf.getValue() + "&IsMotalebat=" + ChMotalebat.getValue();
                                    
                }
                else {
                    Ext.MessageBox.show({
                        msg: "اطلاعاتی جهت نمایش یافت نشد.",
                        icon: Ext.MessageBox.WARNING,
                        buttons: Ext.MessageBox.OK
                    });
                }
                Ext.net.Mask.hide();
            }
        });
    }
    function ExcelM() {
        var CboTypePardakht = App.MaliyatDisc.queryById('CboTypePardakht');
        var CboYear = App.MaliyatDisc.queryById('CboYear');
        var CboMonth = App.MaliyatDisc.queryById('CboMonth');
        var CboNobatePardakht = App.MaliyatDisc.queryById('CboNobatePardakht');
        var CboMarhalePardakht = App.MaliyatDisc.queryById('CboMarhalePardakht');
        var CboTypeDisc = App.MaliyatDisc.queryById('CboTypeDisc');
        var CboDatePay = App.MaliyatDisc.queryById('CboDatePay');
        var txtSh_Hesab = App.MaliyatDisc.queryById('txtSh_Hesab');
        var txtSh_Check = App.MaliyatDisc.queryById('txtSh_Check');
        var txtDateCheck = App.MaliyatDisc.queryById('txtDateCheck');
        var CboBankName = App.MaliyatDisc.queryById('CboBankName');
        var txtNameShobe = App.MaliyatDisc.queryById('txtNameShobe');

        if (CboTypePardakht.validate() == false) {
            return;
        }
        else if (CboYear.validate() == false) {
            return;
        }
        else if (CboMonth.validate() == false) {
            return;
        }
        else if (CboNobatePardakht.validate() == false) {
            return;
        }
        else if (CboTypeDisc.validate() == false) {
            return;
        }
        else if (CboDatePay.validate() == false) {
            return;
        }

        if (CboTypePardakht.getValue() == "1" || CboTypePardakht.getValue() == "5") {
            if (txtSh_Hesab.validate() == false) {
                return;
            }
            else if (txtSh_Check.validate() == false) {
                return;
            }
            else if (txtDateCheck.validate() == false) {
                return;
            }
            else if (CboBankName.validate() == false) {
                return;
            }
            else if (txtNameShobe.validate() == false) {
                return;
            }
        }

        var FieldName = "";

        if (CboTypeDisc.getValue() == "1") {
            FieldName = 'Hoghogh';
        }
        else if (CboTypeDisc.getValue() == "2") {
            FieldName = 'Eydi';
        }
        else if (CboTypeDisc.getValue() == "7") {
            FieldName = 'SayerPardakht';
        }
        else if (CboTypeDisc.getValue() == "3") {
            FieldName = 'EzafeKari';
        }
        else if (CboTypeDisc.getValue() == "4") {
            FieldName = 'TatilKari';
        }
        else if (CboTypeDisc.getValue() == "5") {
            FieldName = 'KomakGheyerNaghdi_Mostamer';
        }
        else if (CboTypeDisc.getValue() == "6") {
            FieldName = 'KomakGheyerNaghdi_GheyreMostamer';
        }
        else if (CboTypeDisc.getValue() == "8") {
            FieldName = 'BonKart';
        }


        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });

        window.location.href = '@Url.Content("~/PayRoll/SpecialOperation/GenerateExcelMaliyat/")' + '?Year=' + CboYear.getValue() + "&Month=" + CboMonth.getValue()

       + "&NobatePardakht=" + CboNobatePardakht.getValue() + "&MarhalePardakht=" + CboMarhalePardakht.getValue() + "&FieldName=" + FieldName + "&TypePardakht=" + CboTypePardakht.getValue()
+ "&Sh_Check=" + txtSh_Check.getValue() + "&DateCheck=" + txtDateCheck.getValue() + "&Bank=" + CboBankName.getValue() + "&NameShobe=" + txtNameShobe.getValue()
+ "&Sh_Hesab=" + txtSh_Hesab.getValue() + "&DatePay=" + CboDatePay.getValue() + "&NahvePardakht=" + CboTypePardakht.getDisplayValue();


        Ext.net.Mask.hide();
    }

    function MessageMaliyat() {

        Ext.MessageBox.show({
            title: "هشدار",
            msg: "پس از تهیه دیسکت، کلیه اطلاعات حقوق ماه جاری بسته شده و هرگونه محاسبات و عملیات در ماه جاری مجاز نخواهد بود. آیا برای تهیه دیسکت مطمئن هستید؟",
            icon: Ext.MessageBox.WARNING,
            buttons: Ext.MessageBox.YESNO,
            fn: function (btn) {
                if (btn == 'yes') {
                    DiscM();
                }
            }
        });

    }
    function DiscM() {
        var CboTypePardakht = App.MaliyatDisc.queryById('CboTypePardakht');
        var CboYear = App.MaliyatDisc.queryById('CboYear');
        var CboMonth = App.MaliyatDisc.queryById('CboMonth');
        var CboNobatePardakht = App.MaliyatDisc.queryById('CboNobatePardakht');
        var CboMarhalePardakht = App.MaliyatDisc.queryById('CboMarhalePardakht');
        var CboTypeDisc = App.MaliyatDisc.queryById('CboTypeDisc');
        var CboDatePay = App.MaliyatDisc.queryById('CboDatePay');
        var txtSh_Hesab = App.MaliyatDisc.queryById('txtSh_Hesab');
        var txtSh_Check = App.MaliyatDisc.queryById('txtSh_Check');
        var txtDateCheck = App.MaliyatDisc.queryById('txtDateCheck');
        var CboBankName = App.MaliyatDisc.queryById('CboBankName');
        var txtNameShobe = App.MaliyatDisc.queryById('txtNameShobe');
        var ChMoaf = App.MaliyatDisc.queryById('ChMoaf');
        var ChMotalebat = App.MaliyatDisc.queryById('ChMotalebat');

        if (CboTypePardakht.validate() == false) {
            return;
        }
        else if (CboYear.validate() == false) {
            return;
        }
        else if (CboMonth.validate() == false) {
            return;
        }
        else if (CboNobatePardakht.validate() == false) {
            return;
        }
        else if (CboTypeDisc.validate() == false) {
            return;
        }
        else if (CboDatePay.validate() == false) {
            return;
        }

        if (CboTypePardakht.getValue() == "1" || CboTypePardakht.getValue() == "5") {
            if (txtSh_Hesab.validate() == false) {
                return;
            }
            else if (txtSh_Check.validate() == false) {
                return;
            }
            else if (txtDateCheck.validate() == false) {
                return;
            }
            else if (CboBankName.validate() == false) {
                return;
            }
            else if (txtNameShobe.validate() == false) {
                return;
            }
        }

        var FieldName = "";

        if (CboTypeDisc.getValue() == "1") {
            FieldName = 'Hoghogh_Maliyat';
        }
        else if (CboTypeDisc.getValue() == "2") {
            FieldName = 'Eydi';
        }
        else if (CboTypeDisc.getValue() == "7") {
            FieldName = 'SayerPardakht';
        }
        else if (CboTypeDisc.getValue() == "3") {
            FieldName = 'EzafeKari';
        }
        else if (CboTypeDisc.getValue() == "4") {
            FieldName = 'TatilKari';
        }
        else if (CboTypeDisc.getValue() == "5") {
            FieldName = 'KomakGheyerNaghdi_Mostamer';
        }
        else if (CboTypeDisc.getValue() == "6") {
            FieldName = 'KomakGheyerNaghdi_GheyreMostamer';
        }
        else if (CboTypeDisc.getValue() == "8") {
            FieldName = 'BonKart';
        }

        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/SpecialOperation/CheckDataDiskMaliyat',
            params: {
                Year: CboYear.getValue(),
                Month: CboMonth.getValue(),
                NobatePardakht: CboNobatePardakht.getValue(),
                MarhalePardakht: CboMarhalePardakht.getValue(),
                FieldName: FieldName
            },
            success: function (data) {
                if (data.Er == 0) {
                   
                    Ext.net.DirectMethod.request({
                        url: "/PayRoll/SpecialOperation/CheckDiskMaliat",
                        params: {
                            Year: CboYear.getValue(),
                            Month: CboMonth.getValue(),
                            NobatPardakht: CboNobatePardakht.getValue(),
                            type: 4
                        },
                        success: function (data) {
                            if (data.AllowGenerate == 1) {
                                Ext.net.Mask.hide();
                                Ext.MessageBox.show({
                                    msg: "در صورت بارگذاری مجدد اطلاعات در سامانه دارایی، محاسبه مالیات دچار مشکل می شود. آیا برای انجام عملیات مطمئن هستید؟",
                                    icon: Ext.MessageBox.WARNING,
                                    buttons: Ext.MessageBox.YESNO,
                                    fn: function (btn) {
                                        if (btn == 'yes') {
                                            Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                                            Ext.net.DirectMethod.request({
                                                url: "/PayRoll/SpecialOperation/GenerateDiskMaliyat",
                                                params: {
                                                    Year: CboYear.getValue(),
                                                    Month: CboMonth.getValue(),
                                                    NobatePardakht: CboNobatePardakht.getValue(),
                                                    MarhalePardakht: CboMarhalePardakht.getValue(),
                                                    FieldName: FieldName,
                                                    TypePardakht: CboTypePardakht.getValue(),
                                                    Sh_Check: txtSh_Check.getValue(),
                                                    DateCheck: txtDateCheck.getRawValue(),
                                                    Bank: CboBankName.getValue(),
                                                    NameShobe: txtNameShobe.getValue(),
                                                    Sh_Hesab: txtSh_Hesab.getValue(),
                                                    DatePay: CboDatePay.getRawValue(),
                                                    SayerMoafiyat: ChMoaf.getValue(),
                                                    IsMotalebat: ChMotalebat.getValue()
                                                },
                                                success: function (data) {
                                                    Ext.net.Mask.hide();
                                                    var ic = Ext.MessageBox.INFO;
                                                    if (data.Er == 1)
                                                        ic = Ext.MessageBox.ERROR;
                                                    Ext.MessageBox.show({
                                                        title: data.MsgTitle,
                                                        msg: data.Msg,
                                                        closable: false,
                                                        icon: ic,
                                                        buttons: Ext.MessageBox.OK,
                                                        fn: function (btn) {
                                                            if (data.Er == 0 && btn == "ok") {
                                                                for (var i = 0; i < 2; i++) {
                                                                    var masir = "";
                                                                    var FileName = "";
                                                                    var Passvand = "";
                                                                    if (i == 0) {
                                                                        masir = data.masir;
                                                                        FileName = data.FileName;
                                                                        Passvand = data.Passvand;
                                                                    }
                                                                    else if (i == 1) {
                                                                        masir = data.masir2;
                                                                        FileName = data.FileName2;
                                                                        Passvand = data.Passvand2;
                                                                    }
                                                                    /*else if (i == 2) {
                                                                        masir = data.masir3;
                                                                        FileName = data.FileName3;
                                                                        Passvand = data.Passvand3;
                                                                    }*/
                                                                    downloadURL('@Url.Content("/PayRoll/SpecialOperation/Download?Masir=")' + masir + "&FileName=" + FileName + "&Passvand=" + Passvand, i);
                                                                }

                                                            }
                                                        }
                                                    });

                                                }
                                            });
                                        }
                                    }
                                });
                            }
                            else
                            {
                                Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                                Ext.net.DirectMethod.request({
                                    url: "/PayRoll/SpecialOperation/GenerateDiskMaliyat",
                                    params: {
                                        Year: CboYear.getValue(),
                                        Month: CboMonth.getValue(),
                                        NobatePardakht: CboNobatePardakht.getValue(),
                                        MarhalePardakht: CboMarhalePardakht.getValue(),
                                        FieldName: FieldName,
                                        TypePardakht: CboTypePardakht.getValue(),
                                        Sh_Check: txtSh_Check.getValue(),
                                        DateCheck: txtDateCheck.getRawValue(),
                                        Bank: CboBankName.getValue(),
                                        NameShobe: txtNameShobe.getValue(),
                                        Sh_Hesab: txtSh_Hesab.getValue(),
                                        DatePay: CboDatePay.getRawValue(),
                                        SayerMoafiyat: ChMoaf.getValue(),
                                        IsMotalebat: ChMotalebat.getValue()
                                    },
                                    success: function (data) {
                                        Ext.net.Mask.hide();
                                        var ic = Ext.MessageBox.INFO;
                                        if (data.Er == 1)
                                            ic = Ext.MessageBox.ERROR;
                                        Ext.MessageBox.show({
                                            title: data.MsgTitle,
                                            msg: data.Msg,
                                            closable: false,
                                            icon: ic,
                                            buttons: Ext.MessageBox.OK,
                                            fn: function (btn) {
                                                if (data.Er == 0 && btn == "ok") {
                                                    for (var i = 0; i < 2; i++) {
                                                        var masir = "";
                                                        var FileName = "";
                                                        var Passvand = "";
                                                        if (i == 0) {
                                                            masir = data.masir;
                                                            FileName = data.FileName;
                                                            Passvand = data.Passvand;
                                                        }
                                                        else if (i == 1) {
                                                            masir = data.masir2;
                                                            FileName = data.FileName2;
                                                            Passvand = data.Passvand2;
                                                        }
                                                        /*else if (i == 2) {
                                                            masir = data.masir3;
                                                            FileName = data.FileName3;
                                                            Passvand = data.Passvand3;
                                                        }*/
                                                        downloadURL('@Url.Content("/PayRoll/SpecialOperation/Download?Masir=")' + masir + "&FileName=" + FileName + "&Passvand=" + Passvand, i);
                                                    }

                                                }
                                            }
                                        });

                                    }
                                });
                            }
                        }
                    });
                }
                else {
                    Ext.net.Mask.hide();
                    Ext.MessageBox.show({
                        msg: "اطلاعاتی جهت نمایش یافت نشد.",
                        icon: Ext.MessageBox.WARNING,
                        buttons: Ext.MessageBox.OK
                    });
                }
               
            }
        });
    }

    var downloadURL = function downloadURL(url, count) {
        var hiddenIFrameID = 'hiddenDownloader' + count;
        var iframe = document.createElement('iframe');
        iframe.id = hiddenIFrameID;
        iframe.style.display = 'none';
        document.body.appendChild(iframe);
        iframe.src = url;
    };

    var addKeyMapMaliyatDisc = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.MaliyatDisc.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var TypeDisc = App.MaliyatDisc.queryById('CboTypeDisc').getValue();
                    var TypePardakht = App.MaliyatDisc.queryById('CboTypePardakht').getValue();
                    var nextfld;

                    if (TypePardakht == "1" || TypePardakht == "7") {
                        if (keyfield.itemId == "CboNobatePardakht" && TypeDisc == "7") {
                            nextfld = App.MaliyatDisc.queryById('CboMarhalePardakht');
                        }
                        else if (keyfield.itemId == "CboMarhalePardakht" || (keyfield.itemId == "CboNobatePardakht" && TypeDisc != "7")) {
                            nextfld = App.MaliyatDisc.queryById('txtSh_Hesab');
                        }
                        else if (keyfield.itemId == "txtNameShobe") {
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                        }
                    }
                    else {
                        if (keyfield.itemId == "CboNobatePardakht" && TypeDisc == "7") {
                            nextfld = App.MaliyatDisc.queryById('CboMarhalePardakht');
                        }
                        else if (keyfield.itemId == "CboMarhalePardakht") {
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                        }
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    };
</script>