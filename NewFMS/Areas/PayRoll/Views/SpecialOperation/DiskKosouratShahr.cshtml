@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Closable(true)
    .Border(false)
    .Modal(true)
    .CloseAction(CloseAction.Destroy)
    .Title("تهیه دیسکت کسورات بانک شهر")
    .Listeners(l => l.AfterRender.Fn = "addKeyMapKosouratShahr")
    .Width(450)
    .AutoScroll(true)
    .Layout(LayoutType.Fit)
    .ButtonAlign(Alignment.Center)
    .ID("KosouratShahrDisc")
    .Buttons(
        Html.X().Button()
            .Text("تهیه دیسکت")
            .Icon(Ext.Net.Icon.ReportDisk)
            .ItemID("btnDisk")
            .Listeners(l => l.Click.Handler = "DiscKosouratShahr()"),
        X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
             .Listeners(l => { l.Click.Handler = "HelpDiscKosourat();"; }),    
        Html.X().Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .OnClientClick("App.KosouratShahrDisc.destroy();")
    )
    .Items(
        X.Panel()
            .Border(true)
            .Layout(LayoutType.Fit)
            .Items(
                X.Panel()
                    .Border(false)
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.FieldSet()
                            .Border(true)
                            .Title("مشخصات دیسکت")
                            .PaddingSpec("0 7px 7px 7px")
                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                            .Defaults(new { Margin = 2 })
                            .Items(
                                X.Label("سال:").ItemID("lblYear"),
                                X.ComboBox()
                                    .ItemID("CboYear")
                                    .Editable(false)
                                    .AutoFocus(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا سال را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueYearKosouratShahr()";
                                    })
                                    .Items(
                                        new ListItem("1387", "1387"),
                                        new ListItem("1388", "1388"),
                                        new ListItem("1389", "1389"),
                                        new ListItem("1390", "1390"),
                                        new ListItem("1391", "1391"),
                                        new ListItem("1392", "1392"),
                                        new ListItem("1393", "1393"),
                                        new ListItem("1394", "1394"),
                                        new ListItem("1395", "1395"),
                                        new ListItem("1396", "1396"),
                                        new ListItem("1397", "1397"),
                                        new ListItem("1398", "1398"),
                                        new ListItem("1399", "1399"),
                                        new ListItem("1400", "1400"),
                                        new ListItem("1401", "1401"),
                                            new ListItem("1402", "1402"),
                                            new ListItem("1403", "1403")
                                ),
                                X.Label("ماه:").ItemID("lblMonth"),
                                X.ComboBox()
                                    .ItemID("CboMonth")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا ماه را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueMonthKosouratShahr()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("فروردین", "01"),
                                        new ListItem("اردیبهشت", "02"),
                                        new ListItem("خرداد", "03"),
                                        new ListItem("تیر", "04"),
                                        new ListItem("مرداد", "05"),
                                        new ListItem("شهریور", "06"),
                                        new ListItem("مهر", "07"),
                                        new ListItem("آبان", "08"),
                                        new ListItem("آذر", "09"),
                                        new ListItem("دی", "10"),
                                        new ListItem("بهمن", "11"),
                                        new ListItem("اسفند", "12")
                                    )
                                    ,
                                         X.Label("بانک:"),
                        X.ComboBox()
                        .LabelAlign(Ext.Net.LabelAlign.Top)
        //.FieldLabel("استان")
                        .ItemID("CboBank")
                        .TypeAhead(true)
                        .Editable(true)
                        .QueryMode(DataLoadMode.Local)
                        .BlankText("لطفا بانک را انتخاب کنید.")
                        .ForceSelection(true)
                        .TriggerAction(TriggerAction.All)
                            .DisplayField("fldName")
                        .ValueField("fldId")
                        .EmptyText("بانک ...")
        //.SelectedItems(new { Value = "1" })
                        .Store(X.Store()
                        .Model(X.Model()
                        .IDProperty("fldId")
                        .Fields(
                            new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                )
                                    )
                        .Proxy(X.AjaxProxy()
                            .Url(Url.Action("GetBank"))
                        .Reader(X.JsonReader().Root("data"))
                                    )
                                )
                            .AllowBlank(false)
                                    )
                             )
            )
    )
)

<script type="text/javascript">
    function HelpDiscKosourat() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/SpecialOperation/HelpDiscKosourat',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function setValueYearKosouratShahr() {
        var CboYear = App.KosouratShahrDisc.queryById('CboYear');
        CboYear.setValue('@ViewBag.Year');
    }

    function setValueMonthKosouratShahr() {
        var CboMonth = App.KosouratShahrDisc.queryById('CboMonth');
        CboMonth.setValue('@ViewBag.Month');
    }

    function DiscKosouratShahr() {
        var CboYear = App.KosouratShahrDisc.queryById('CboYear');
        var CboMonth = App.KosouratShahrDisc.queryById('CboMonth');
        var CboBank = App.KosouratShahrDisc.queryById('CboBank');
        
        if (CboYear.validate() == false) {
            return;
        }
        else if (CboMonth.validate() == false) {
            return;
        }
        else if (CboBank.validate() == false) {
            return;
        }

        var Checked = "fldName" + ";" + "fldFamily" + ";" + "fldMelli_EconomicCode" + ";" + "fldMonth" + ";" + "fldMablagh" + ";" + "fldTarikhPardakht" + ";" + "fldTozih";
        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
        Ext.net.DirectMethod.request({
            url: "/PayRoll/SpecialOperation/CheckDiskMaliat",
            params: {
                Year: CboYear.getValue(),
                Month: CboMonth.getValue(),
                type: 4
            },
            success: function (data) {
                Ext.net.Mask.hide();
                if (data.AllowGenerate == 1) {
                    window.location.href = '@Url.Content("/PayRoll/SpecialOperation/CreateExcelKosouratShahr/")' + '?Checked=' + Checked + '&Year=' + CboYear.getValue() + '&Month=' + CboMonth.getValue() + '&BankId=' + CboBank.getValue();
                }
                else {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "لطفا ابتدا اقدام به تهیه دیسکت مالیات نمایید.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });        
    }

    var addKeyMapKosouratShahr = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.KosouratShahrDisc.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;

                    if (keyfield.itemId == "CboMonth") {
                        nextfld = App.KhadamatDarmaniDisc.queryById('btnDisk');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                }
            }]
        });
    };
</script>