@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

<style>
    td {
        text-align: left;
    }
</style>

@(Html.X().Window()
    .Closable(true)
    .Border(false)
    .Modal(true)
    .Width(500)
    .CloseAction(CloseAction.Destroy)
    .Title("تهیه دیسکت بازنشستگی")
    .Layout(LayoutType.Fit)
    .ButtonAlign(Alignment.Center)
    .Listeners(l => l.AfterRender.Fn = "addKeyMapBazneshastegiDisc")
    .ID("BazneshastegiDisc")
    .Buttons(
        Html.X().Button()
            .Text("تهیه دیسکت")
            .Icon(Ext.Net.Icon.ReportDisk)
            .Listeners(l => l.Click.Handler = "DiscBazneshastegi()"),
         X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help).Listeners(l => { l.Click.Handler = "HelpDiskBazneshastegi();"; }),

        Html.X().Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .OnClientClick("App.BazneshastegiDisc.destroy();")
        )
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.Panel()
                    .Border(false)
                    .Layout(LayoutType.Fit)
                    .Items(
                        X.FieldSet()
                            .Border(true)
                            .Title("مشخصات دیسکت")
                            .PaddingSpec("0 7px 7px 7px")
                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                            .Defaults(new { Margin = 2 })
                            .Items(
                                X.Label("سال:").ItemID("lblYear"),
                                X.ComboBox()
                                        .ItemID("CboYear")
                                        .AutoFocus(true)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا سال را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueYearDiscBaz()";
                                    })
                                    .Items(
                                        new ListItem("1387", "1387"),
                                        new ListItem("1388", "1388"),
                                        new ListItem("1389", "1389"),
                                        new ListItem("1390", "1390"),
                                        new ListItem("1391", "1391"),
                                        new ListItem("1392", "1392"),
                                        new ListItem("1393", "1393"),
                                        new ListItem("1394", "1394"),
                                        new ListItem("1395", "1395"),
                                        new ListItem("1396", "1396"),
                                        new ListItem("1397", "1397"),
                                        new ListItem("1398", "1398"),
                                        new ListItem("1399", "1399"),
                                        new ListItem("1400", "1400"),
                                        new ListItem("1401", "1401"),
                                            new ListItem("1402", "1402"),
                                            new ListItem("1403", "1403")
                                ),
                                X.Label("ماه:").ItemID("lblMonth"),
                                X.ComboBox()
                                    .ItemID("CboMonth")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا ماه را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueMonthDiscBaz()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("فروردین", "01"),
                                        new ListItem("اردیبهشت", "02"),
                                        new ListItem("خرداد", "03"),
                                        new ListItem("تیر", "04"),
                                        new ListItem("مرداد", "05"),
                                        new ListItem("شهریور", "06"),
                                        new ListItem("مهر", "07"),
                                        new ListItem("آبان", "08"),
                                        new ListItem("آذر", "09"),
                                        new ListItem("دی", "10"),
                                        new ListItem("بهمن", "11"),
                                        new ListItem("اسفند", "12")
                                    ),
                                X.Label("نوبت پرداخت:").ItemID("lblNobatePardakht"),
                                X.ComboBox()
                                    .ItemID("CboNobatePardakht")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueNobatePardakhtdiscBaz()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("یک", "1"),
                                        new ListItem("دو", "2"),
                                        new ListItem("سه", "3"),
                                        new ListItem("چهار", "4"),
                                        new ListItem("پنج", "5")
                                    ),
                                X.Label("شماره فیش:").ItemID("lblShFish"),
                                X.TextField()
                                    .ItemID("txtShFish")
                                        .AllowBlank(false)
                                        .MaxLength(20)
                                        .EnforceMaxLength(true)
                                        .MaskRe("/[0-9]/")
                                    .BlankText("لطفا شماره فیش را وارد کنید."),
                                X.Label("تاریخ واریز:").ItemID("lblDateVariz"),
                                X.PDateField()
                                    .ItemID("txtDateVariz")
                                        .AllowBlank(false)
                                        .MaxLength(10)
                                        .EnforceMaxLength(true)
                                        .MaskRe("/[0-9 /]/")
                                    .BlankText("لطفا تاریخ واریز را وارد کنید.")
                            )
                        )
            )
    )
)

<script type="text/javascript">

    function setValueYearDiscBaz() {
        var CboYear = App.BazneshastegiDisc.queryById('CboYear');
        CboYear.setValue('@ViewBag.Year');
    }
    function HelpDiskBazneshastegi() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/SpecialOperation/HelpDiskBazneshastegi',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function setValueNobatePardakhtdiscBaz() {
        var CboNobatePardakht = App.BazneshastegiDisc.queryById('CboNobatePardakht');
        CboNobatePardakht.setValue('@ViewBag.nobatePardakht');
    }

    function setValueMonthDiscBaz() {
        var CboMonth = App.BazneshastegiDisc.queryById('CboMonth');
        CboMonth.setValue('@ViewBag.Month');
    }

    function DiscBazneshastegi() {
        var CboYear = App.BazneshastegiDisc.queryById('CboYear');
        var CboMonth = App.BazneshastegiDisc.queryById('CboMonth');
        var CboNobatePardakht = App.BazneshastegiDisc.queryById('CboNobatePardakht');
        var txtShFish = App.BazneshastegiDisc.queryById('txtShFish');
        var txtDateVariz = App.BazneshastegiDisc.queryById('txtDateVariz');

        if (CboYear.validate() == false) {
            return;
        }
        else if (CboMonth.validate() == false) {
            return;
        }
        else if (CboNobatePardakht.validate() == false) {
            return;
        }
        else if (txtShFish.validate() == false) {
            return;
        }
        else if (txtDateVariz.validate() == false) {
            return;
        }

        var data1 = {
            Year: CboYear.getValue(),
            Month: CboMonth.getValue(),
            NobatePardakht: CboNobatePardakht.getValue(),
            Sh_Fish: txtShFish.getValue(),
            DateVariz: txtDateVariz.getRawValue()
        };

        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
        Ext.net.DirectMethod.request({
            url: "/PayRoll/SpecialOperation/CheckDiskMaliat",
            params: {
                Year: CboYear.getValue(),
                Month: CboMonth.getValue(),
                NobatPardakht: CboNobatePardakht.getValue(),
                type:4
            },
            success: function (data) {
                if (data.AllowGenerate == 1 || parseInt(CboYear.getValue() + CboMonth.getValue()) < 140306) {
                    $.ajax({
                        type: "POST",
                        url: "/PayRoll/SpecialOperation/GenerateDiscBazneshastegi",
                        datatype: "json",
                        data: JSON.stringify(data1),
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            var result = data;/* JSON.parse(data);*/
                            if (result.Er == 1) {                                
                                Ext.MessageBox.show({
                                    title: result.MsgTitle,
                                    msg: result.Msg,
                                    closable: true,
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.MessageBox.OK
                                    @*fn: function (btn) {
                                        if (data.Er == 0 && btn == "ok") {
                                            window.location.href = '@Url.Content("/PayRoll/SpecialOperation/Download?Masir=")' + data.masir + "&FileName=" + data.FileName + "&Passvand=" + data.Passvand;
                                        }
                                    }*@
                                    });
                            }
                            else {
                                window.location.href = '@Url.Content("/PayRoll/SpecialOperation/DownloadBazneshastegi?Year=")' + CboYear.getValue() +
                                    "&Month=" + CboMonth.getValue() + "&NobatePardakht=" + CboNobatePardakht.getValue();
                            }                            
                            Ext.net.Mask.hide();
                        }
                    });
                }
                else {
                    Ext.net.Mask.hide();
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "لطفا ابتدا اقدام به تهیه دیسکت مالیات نمایید.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });
        @*Ext.net.DirectMethod.request({
            url: "/PayRoll/SpecialOperation/GenerateDiscBazneshastegi",
            params: {
                Year: CboYear.getValue(),
                Month: CboMonth.getValue(),
                NobatePardakht: CboNobatePardakht.getValue(),
                Sh_Fish: txtShFish.getValue(),
                DateVariz: txtDateVariz.getRawValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    closable: true,
                    icon: ic,
                    buttons: Ext.MessageBox.OK,
                    fn: function (btn) {
                        if (data.Er == 0 && btn == "ok") {
                            window.location.href = '@Url.Content("/PayRoll/SpecialOperation/Download?Masir=")' + data.masir + "&FileName=" + data.FileName + "&Passvand=" + data.Passvand;
                        }
                    }
                });
                Ext.net.Mask.hide();
            }
        });*@
    }

    var addKeyMapBazneshastegiDisc = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.BankDisc.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld = keyfield.nextSibling().nextSibling();
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    };
</script>