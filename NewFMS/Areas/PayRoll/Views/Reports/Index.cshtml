@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

<style>
    .custom-PayRollRpticon {
        margin-right: 210px!important;
    }
    .custom-PayRollRpticon2 {
        margin-right: 252px!important;
    }
    /*td {
        text-align: left;
    }

    .x-rtl .x-textfield-icon {
        margin-right: 125px;
    }

    .x-rtl .x-textfield-icon-input {
        padding-right: 3px;
    }*/
</style>



@(Html.X().Panel()
    .Closable(true)
    .Border(false)
    .CloseAction(CloseAction.Destroy)
    .Listeners(li => { li.AfterRender.Handler = "setTitleWinRpt()"; li.Render.Fn = "addKeyMapPayRollRpt"; })
    .Layout(LayoutType.Fit)
    .ID("PayRollRpt" + @ViewBag.State)
    .Items(
        //X.Panel()
        //    .Border(false)
        //    .Layout(LayoutType.VBox)
            //.LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
        //.PaddingSpec("4px 12px 4px 12px")                
            //.Items(
                X.Panel()
                    .Border(false)
                    .AutoScroll(true)
                    .ButtonAlign(Alignment.Center)
                    .Layout(LayoutType.VBox)
                        .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Buttons(
                        Html.X().Button()
                            .Text("چاپ")
                            .Icon(Ext.Net.Icon.Printer)
                            .ItemID("btnPrintRpt")
                            .Listeners(l => l.Click.Handler = "Print()")
                            .Hidden(@ViewBag.State == "31"),
                        Html.X().Button()
                            .Text("نمایش مانده کسورات")
                            .Icon(Ext.Net.Icon.ReportGo)
                            .ItemID("btnMande")
                            .Listeners(l => l.Click.Handler = "PrintMandeK()"),
                        Html.X().Button()
                            .Text("نمایش جمع کسورات")
                            .ItemID("btnJam")
                            .Icon(Ext.Net.Icon.ReportGo)
                            .Listeners(l => l.Click.Handler = "PrintJamK()"),
                        Html.X().Button()
                            .Text("خروجی اکسل")
                            .ItemID("btnExcel")
                            .Icon(Ext.Net.Icon.PageExcel)
                            .Listeners(l => l.Click.Handler = "ExcelK()"),
                        Html.X().Button()
                            .Text("خروجی XML")
                            .ItemID("btnXML")
                            .Icon(Ext.Net.Icon.Note)
                            .Listeners(l => l.Click.Handler = "XMLK()")
                            .Hidden(@ViewBag.State != "10"),
                        Html.X().Button()
                                .Text("خروجی اکسل")
                                .ItemID("btnExlPay")
                                .Icon(Ext.Net.Icon.Note)
                                .Listeners(l => l.Click.Handler = "ExlPay()")
                                .Hidden(@ViewBag.State != "10"),
                        Html.X().Button()
                                    .Text("خروجی اکسل")
                                    .ItemID("btnExlPayBon")
                                    .Icon(Ext.Net.Icon.Note)
                                    .Listeners(l => l.Click.Handler = "ExlPayBonKart()")
                                    .Hidden(@ViewBag.State != "33"),            
                        Html.X().Button()
                            .Text("خروج")
                            .Icon(Ext.Net.Icon.DoorOut)
                            .Listeners(l => l.Click.Handler = "destroyWin()")
                    )
                    .Items(
                        X.FieldSet()
                            .Border(false)
        //.PaddingSpec("0 7px 7px 7px")
                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 8 })
                            .ItemID("FieldsetFilter")
                            .Listeners(l=>l.Render.Handler="SetColspan()")
        .Defaults(new { Margin = 2 })
                            .Items(
                            X.Label("سازمان:"),
                     X.ComboBox()
                            .ItemID("CboOrgan")
                            .TypeAhead(true)
                            .ColSpan(3)
                            .AutoFocus(true)
                            .Editable(true)
                                 .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                .BlankText("لطفا سازمان را انتخاب کنید.")
                                    .Listeners(l => l.AfterRender.Handler = "setSizeCboOrgan()")
                                    .Listeners(l=>l.Change.Handler="ChangeCboOrgan()")
                                .AllowBlank(false)
                            .ForceSelection(true)
                                .DisplayField("fldTitle")
                            .ValueField("fldId")
                                .EmptyText("سازمان ...")
        .Width(233)
                            .Store(X.Store()
                            .Model(X.Model()
                            .IDProperty("fldId")
                            .Fields(
                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                    )
                                        )
                            .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetOrgan"))
                            .Reader(X.JsonReader().Root("data"))
                                            )
        .Listeners(l => l.Load.Handler = "setdefaultValueOrganFish()")
                                    ),
                                        X.Label("مرکز هزینه:").ItemID("lblCostCenterType2"),
                                    X.ComboBox()
                                        .ItemID("CboCostCenterType2")
                                        .Editable(true)
                                        .TypeAhead(true)
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldName")
                                        .ValueField("fldId")
                                        .EmptyText("مرکز هزینه")
                                        .ColSpan(5)
                                            .Width(200)
                                        .ValueNotFoundText("Loading...")
                                        .Listeners(ls => ls.Select.Handler = "setCostClassRpt2()")
                                        .Store(X.Store().Listeners(ls => ls.Load.Handler = "setValueCostCenterType2()").AutoLoad(false)
                                            .Model(X.Model()
                                                .IDProperty("fldId")
                                                .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                )
                                            )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetCostCenter"))
                                                .Reader(X.JsonReader().Root("data"))
                                            )
                                        .Parameters(ps => ps.Add(new StoreParameter("OrganId", "Ext.getCmp('PayRollRpt" + (string)ViewBag.State + "').queryById('CboOrgan').getValue()", ParameterMode.Raw)))
                                        ),
                                      X.Label("نوع گزارش سند حسابداری:")
                             .ItemID("lblReportTypeSanad3")
                                   , X.ComboBox()
                                       .Width(228)
                                        .ItemID("CboReportTypeSanad3")
                                            .ColSpan(3)
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نوع گزارش سند حسابداری را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("جمع مطالبات و مزایای کارکنان", "1"),
                                        new ListItem("جمع مطالبات کارکنان بصورت مجزا", "2")
                                        )
                                        .SelectedItems(new { Value = "1" })   ,  
                                        X.Label().Text("نوع فیش:").ItemID("lblTypeFish"),
                                    X.ComboBox()
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .ItemID("CboTypeFish")
                                        .Width(100)
                                        .Editable(true)
                                        .ForceSelection(true)
                                        .TypeAhead(true)
                                        .BlankText("لطفا نوع فیش را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Items(
                                            new ListItem("نوع یک", "1"),
                                            new ListItem("نوع دو", "2"),
                                            new ListItem(" نوع سه", "3")
                                            )
                                        .SelectedItems(new { Value = "1" })//.ColSpan(2)
                                        ,
                                  X.Label().Text("نوع:").ItemID("lblType")
                                    , X.ComboBox()
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .ItemID("CboType")
                                    .Width(100)
                                    .Editable(true)
                                    .TypeAhead(true)
                                    .ForceSelection(true)
                                        .BlankText("لطفا نوع را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("گروهی", "0"),
                                        new ListItem("انفرادی", "1")
                                        )
                                    .SelectedItems(new { Value = "1" })
                                    .Listeners(l => l.Select.Handler = "ChangeType();"),
                                    X.Hidden().ItemID("fldIdPayPersonalInfo"),
                                    X.Label().Text("شخص(INS):").ItemID("lblName"),
                                    X.TextField()
                                    .ItemID("txtName")
                                    .Icon(Icon.UserAdd)
                                    .EnableKeyEvents(true)
        //.Listeners(l => l.KeyDown.Fn = "DeletePersonn2")
                                    .LabelAlign(Ext.Net.LabelAlign.Right)
                                    .AllowBlank(false)
                                    .FieldStyle("padding-right:6px;")
                                    .ColSpan(3)
                                    .ReadOnly(true)
                                    .Width(233)
                                    .BlankText("لطفا شخص را وارد کنید.")
                                    //.DirectEvents(li =>
                                    //{
                                    //    li.SpecialKey.Url = "/PayRoll/SearchPayPersonal/Index?State=1";
                                    //    li.SpecialKey.Before = "return e.getKey() == Ext.EventObject.INSERT;";
                                    //})
                                    .Listeners(l =>
                                    {
                                        l.SpecialKey.Fn = "SelectPersonnn";
                                        l.IconClick.Handler = "SearchPayPerson();";
                                        l.AfterRender.Handler = "Ext.getCmp('PayRollRpt" + (string)ViewBag.State + "').queryById('txtName').icon.dom.classList.add('custom-PayRollRpticon');";
                                    }),
                                        X.Label().Text("نوع گزارش:").ItemID("lblType2"),
                                    X.ComboBox()
                                        .ItemID("CboType2")
                                        .Editable(true)
                                        .ForceSelection(true)
                                        .TypeAhead(true)
                                        .BlankText("لطفا نوع گزارش را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Width(100)
                                        .Items(
                                            new ListItem("گروهی", "0"),
                                            new ListItem("براساس مرکز هزینه", "1")
                                            )
                                        .SelectedItems(new { Value = "0" })
                                        .Listeners(l => l.Select.Handler = "ChangeTypeListPardakhti2();"),
                                            X.Label("نوع پارامتر:").ItemID("lblTypeParametrha"),
                                        X.ComboBox()
                                            .ItemID("CboTypeParametrha")
                                            .Width(411)
                                            .TypeAhead(true)
                                            .Editable(true)
                                            .ColSpan(5)
                                            .AllowBlank(false)
                                            .BlankText("لطفا نوع پارامترها را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldParametrName")
                                            .ValueField("fldId")
                                            .Store(X.Store()
                                                .Model(X.Model()
                                                    .IDProperty("fldId")
                                                    .Fields(
                                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                        new ModelField("fldParametrName", ModelFieldType.String) { Mapping = "fldParametrName" }
                                                            )
                                                        )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetK_MParametri"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    )
                                                .Parameters(ps => ps.Add(new StoreParameter("type", ViewBag.State, ParameterMode.Raw)))
                                                ),
                                                    X.Label("نوع گزارش:").ItemID("lblTypeReport"),
                                            X.ComboBox()
                                                .ItemID("CboTypeReport")
                                                .Editable(true)
                                                .ForceSelection(true)
                                                .TypeAhead(true)
                                                .AllowBlank(false)
                                                .ColSpan(5)
                                                .Width(100)
                                                .BlankText("لطفا نوع گزارش را انتخاب کنید.")
                                                .QueryMode(DataLoadMode.Local)
                                                .TriggerAction(TriggerAction.All)
                                                .Items(
                                                    new ListItem("حقوق", "1"),
                                                    new ListItem("عیدی", "2"),
                                                    new ListItem("مرخصی", "3"),
                                                    new ListItem("اضافه کاری", "4"),
                                                    new ListItem("تعطیل کاری", "5"),
                                                    new ListItem("سایر پرداخت ها", "6"),
                                                    new ListItem("کمک غیرنقدی مستمر", "7"),
                                                    new ListItem("کمک غیرنقدی غیرمستمر", "8"),
                                                    new ListItem("ماموریت", "9"),
                                                    new ListItem("بن مزایای جانبی رفاهی", "10")                                                    
                                                    )
                                                .SelectedItems(new { Value = "1" }),
                                X.Label("سال:").ItemID("lblYear"),
                                X.ComboBox()
                                    .ItemID("CboYear")
                                        .Width(100)
                                    .Editable(true)
                                    .ForceSelection(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا سال را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueYearRpt()";
                                        l.Select.Handler = "setYearClassRpt()";
                                    })
                                    .Items(
                                        new ListItem("1387", "1387"),
                                        new ListItem("1388", "1388"),
                                        new ListItem("1389", "1389"),
                                        new ListItem("1390", "1390"),
                                        new ListItem("1391", "1391"),
                                        new ListItem("1392", "1392"),
                                        new ListItem("1393", "1393"),
                                        new ListItem("1394", "1394"),
                                        new ListItem("1395", "1395"),
                                        new ListItem("1396", "1396"),
                                        new ListItem("1397", "1397"),
                                        new ListItem("1398", "1398"),
                                        new ListItem("1399", "1399"),
                                        new ListItem("1400", "1400"),
                                        new ListItem("1401", "1401"),
                                            new ListItem("1402", "1402"),
                                            new ListItem("1403", "1403")
                                ),
                                     
                                X.Label().Text("مشمول سال:").ItemID("lblMashmoolSal"),
                                X.TextField()
                                    .ItemID("txtMashmoolSal")
                                    .AllowBlank(false)
                                    .MaskRe("/[0-9]/")
                                    .Width(100)
                                    .BlankText("لطفا عدد مشمول سال را وارد کنید."),
                                X.Label("مــاه:").ItemID("lblMonth"),
                                X.ComboBox()
                                    .ItemID("CboMonth")
                                    .Editable(true)
                                    .ForceSelection(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                        .Width(100)
                                    .BlankText("لطفا ماه را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueMonthRpt()";
                                        l.Select.Handler = "setMonthClassRpt()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("فروردین", "01"),
                                        new ListItem("اردیبهشت", "02"),
                                        new ListItem("خرداد", "03"),
                                        new ListItem("تیر", "04"),
                                        new ListItem("مرداد", "05"),
                                        new ListItem("شهریور", "06"),
                                        new ListItem("مهر", "07"),
                                        new ListItem("آبان", "08"),
                                        new ListItem("آذر", "09"),
                                        new ListItem("دی", "10"),
                                        new ListItem("بهمن", "11"),
                                        new ListItem("اسفند", "12")
                                        ),
                                   
                                         X.Label("تا سال:").ItemID("lblTaYear"),
                                    X.ComboBox()
                                        .ItemID("CboTaYear")
                                        .Editable(true)
                                        .ForceSelection(true)
                                        .Width(100)
                                        .TypeAhead(true)
                                        .AllowBlank(false)
                                        .BlankText("لطفا سال را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                            .Listeners(l =>
                                            {
                                                l.AfterRender.Handler = "setValueTaYearRpt()";
                                            })
                                        .Items(
                                            new ListItem("1387", "1387"),
                                            new ListItem("1388", "1388"),
                                            new ListItem("1389", "1389"),
                                            new ListItem("1390", "1390"),
                                            new ListItem("1391", "1391"),
                                            new ListItem("1392", "1392"),
                                            new ListItem("1393", "1393"),
                                            new ListItem("1394", "1394"),
                                            new ListItem("1395", "1395"),
                                            new ListItem("1396", "1396"),
                                            new ListItem("1397", "1397"),
                                            new ListItem("1398", "1398"),
                                            new ListItem("1399", "1399"),
                                            new ListItem("1400", "1400"),
                                            new ListItem("1401", "1401"),
                                                new ListItem("1402", "1402"),
                                            new ListItem("1403", "1403")
                                    ),
                                          X.Label("تا ماه:").ItemID("lblTaMonth"),
                                    X.ComboBox()
                                        .ItemID("CboTaMonth")
                                        .Editable(true)
                                        .ForceSelection(true)
                                        .Width(100)
                                        .TypeAhead(true)
                                        .AllowBlank(false)
                                        .BlankText("لطفا ماه را انتخاب کنید.")
                                            .Listeners(l =>
                                            {
                                                l.AfterRender.Handler = "setValueTaMonthRpt()";
                                            })
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Items(
                                            new ListItem("فروردین", "01"),
                                            new ListItem("اردیبهشت", "02"),
                                            new ListItem("خرداد", "03"),
                                            new ListItem("تیر", "04"),
                                            new ListItem("مرداد", "05"),
                                            new ListItem("شهریور", "06"),
                                            new ListItem("مهر", "07"),
                                            new ListItem("آبان", "08"),
                                            new ListItem("آذر", "09"),
                                            new ListItem("دی", "10"),
                                            new ListItem("بهمن", "11"),
                                            new ListItem("اسفند", "12")
                                        ),
                                
                                X.Label("نوبت پرداخت:").ItemID("lblNobatePardakht"),
                                X.ComboBox()
                                    .ItemID("CboNobatePardakht")
                                    .Editable(true)
                                    .ForceSelection(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                        .Width(100)
                                    .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueNobatePardakhtRpt()";
                                        l.Select.Handler = "setNobatePardakhtCalssRpt()";
                                    })
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("یک", "1"),
                                        new ListItem("دو", "2"),
                                        new ListItem("سه", "3"),
                                        new ListItem("چهار", "4"),
                                        new ListItem("پنج", "5")
                                    ),
                                        
                                X.Label("نــوع کـمـک:").ItemID("lblTypeKomak"),
                                X.ComboBox()
                                    .ItemID("CboTypeKomak")
                                    .Editable(true)
                                    .ForceSelection(true)
                                    .AllowBlank(false)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Width(100)
                                    .EmptyText("نوع")
                                    .Items(
                                        new ListItem("مستمر", "1"),
                                        new ListItem("غیرمستمر", "0")
                                        )
                                    .SelectedItems(new { Value = "1" }),
                                
                                
                            X.Label("فیلتر:").ItemID("lblCostCenter"),
                              X.ComboBox()
                                .ItemID("CboCostCenter")
                                .Editable(false)
                                .TypeAhead(true)
                                .QueryMode(DataLoadMode.Local)
                                
        .Width(100)
                                .AllowBlank(false)
                                .BlankText("لطفا نوع فیلتر را انتخاب نمایید.")
                                .ForceSelection(true)
                                .TriggerAction(TriggerAction.All)
                                .DisplayField("Name")
                                .ValueField("ID")
                                .EmptyText("مراکز هزینه")
                                .Listeners(ls =>
                                    {
                                        ls.Select.Handler = "LOadCostCenterS();ChangeCostCenterS()";
                                    })
                                .ValueNotFoundText("...")
                                .Items(
                                    new ListItem("تمام پرسنل", "1"),
                                    new ListItem("براساس مرکز هزینه", "2"),
                                    new ListItem("براساس محل خدمت", "3")
                                        )
                                        .SelectedItems(new { Value = "1" })
                                            ,
                                X.Label("مرکز هزینه:").ItemID("lblCostCenterType"),
                                X.ComboBox()
                                    .ItemID("CboCostCenterType")
                                    .Editable(true)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("fldName")
                                    .ValueField("fldId")
                                    .EmptyText("مرکز هزینه")
                                    .ColSpan(3)
                                        .Width(233)
                                    .ValueNotFoundText("Loading...")
                                    .Listeners(ls => ls.Select.Handler = "setCostClassRpt()")
                                    .Store(X.Store().Listeners(ls => ls.Load.Handler = "setValueCostCenterType()").AutoLoad(false)
                                        .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                            new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetCostCenter"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                    .Parameters(ps => ps.Add(new StoreParameter("OrganId", "Ext.getCmp('PayRollRpt" + (string)ViewBag.State + "').queryById('CboOrgan').getValue()", ParameterMode.Raw)))
                                    ),
                                            X.Label().Text("نوع:").ItemID("lblTypeHesab")
                                                        ,
                                                            X.ComboBox()
                                            .ItemID("CboTypeHesab")
                                            .ForceSelection(true)
                                            .TypeAhead(true)
                                            .AllowBlank(false)
                                            .Width(100)
                                            .BlankText("لطفا نوع  حساب را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                        
                                           .Items(
                                        new ListItem("حقوق", "1"),
                                        new ListItem("بن مزایای جانبی رفاهی", "2")
                                        )
                                        .SelectedItems(new { Value = "1" }),
                                X.Label("مرحله پرداخت:").ItemID("lblMarhalePardakht"),
                                X.ComboBox()
                                    .ItemID("CboMarhalePardakht")
                                    .Editable(true)
                                    .ForceSelection(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                        .Width(100)
        //  .ColSpan(3)
                                    .BlankText("لطفا مرحله پرداخت را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("یک", "1"),
                                        new ListItem("دو", "2"),
                                        new ListItem("سه", "3"),
                                        new ListItem("چهار", "4"),
                                        new ListItem("پنج", "5")
                                        )
                                    .SelectedItems(new { Value = "1" }),
                                X.Label("نوع استخدام:").ItemID("lblTypeEstekhdam"),
                                X.ComboBox()
                                    .ItemID("CboTypeEstekhdam")
                                    .Editable(true)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نوع استخدام را انتخاب نمایید.")
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                    .EmptyText("نوع استخدام...")
                                    .Store(X.Store()
                                        .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                                new ModelField("ID", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetTypeEstekhdam"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                )
                                ,
                                     X.Label("گروه بندی:").ItemID("lblGrouhBandi"),
                                    X.ComboBox()
                                        .ItemID("CboGrouhBandi")
                                        .Editable(true)
                                        .ForceSelection(true)
                                        .TypeAhead(true)
                                        .AllowBlank(false)
                                        .Width(275)
                                        .ColSpan(3)
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Items(
                                            new ListItem("براساس مرکز هزینه", "1"),
                                            new ListItem("براساس محل خدمت", "2")
                                            )
                                        .SelectedItems(new { Value = "1" })
                                        , X.Label().Text("براساس:").ItemID("lblTafkik")
                                    , X.ComboBox()
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .ItemID("CboTafkik")
                                    .Editable(true)
                                    .TypeAhead(true)
                                    .ForceSelection(true)
                                    .Width(100)
                                        .BlankText("لطفا نوع را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("مزایای تفکیک شده", "1"),
                                        new ListItem("سرجمع مزایا", "0")
                                        )
                                    .SelectedItems(new { Value = "1" })
                       , X.Label("نوع گزارش:")
                         .ItemID("lblReportType")
                               , X.ComboBox()
                                .ItemID("CboReportType")
                                .Editable(false)
                                .TypeAhead(true)
                                .Width(100)
                                .AllowBlank(false)
                                .BlankText("لطفا نوع گزارش را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .Items(
                                    new ListItem("با معوقه", "1"),
                                    new ListItem("بدون معوقه", "2")
                                    )
                                    .SelectedItems(new { Value = "1" })
                                   
                                          , X.TreePanel()
                            .ID("TreeReport")
                                    .AutoScroll(true)
                                    .Width(300)
                                    .ColSpan(8)
                                    .Height(200)
                                    .UseArrows(true)
                                    .Border(false)
                                        .Store(
                    Html.X().TreeStore()
                            .Proxy(
                                        Html.X().AjaxProxy().Url(Url.Action("Node"))
                            )
                )

                                    .Listeners(a =>
                                    {
                                        a.ItemClick.Handler = "GetIdChartOrgan(record)";
                                        a.AfterRender.Handler = "this.getRootNode().expand();";
                                        a.BeforeLoad.Fn = "nodeLoad";
                                    })
                       .Root(Html.X().Node().NodeID("0").Text("چارت سازمانی"))

                                    .View(
                                    X.TreeView()
                                    .Plugins(
                                    X.TreeViewDragDrop().AppendOnly(true).ContainerScroll(true)

                                )
                        )
                            )),
                Html.X().Panel()
                    .Border(true)
                    .Listeners(L => L.AfterRender.Handler = "setSizeRptPanel()")
                    .AutoScroll(true)
                    .ItemID("RptPanel")
        //.BodyStyle("background-color:red;")
        //.Html("<center><object style='width: 1200px;height: 550px;border: 1px solid #ccc;' type='application/pdf' data='/RptListKhadamatDarmani/GeneratePDF?Year=" + ViewBag.Year + "&Month=" + ViewBag.Month + "&nobatPardakht=" + ViewBag.nobatPardakht + "'></object></center>")
            //)

    )
)

<script type="text/javascript">
    var NodeId = 0;

    @*function CheckAccess() {
        if ('@ViewBag.Access' == "False") {
            var Index=App.PayRollRpt10.queryById("CboTypeHesab").store.findExact("fldId","1");
            App.PayRollRpt10.queryById("CboTypeHesab").store.removeAt(parseInt(Index));
        }
    }*@

    /*function setdefaultValueTypeHesabReport() {
        App.PayRollRpt10.queryById('CboTypeHesab').setValue("2");
        CheckAccess();
    }*/

    function ChangeCboOrgan() {
        var tabId = App.FirstTabPay.activeTab.id;
        if (tabId.substring(10) == "10" || tabId.substring(10) == "33") {
            Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').setValue(0);
            Ext.getCmp(tabId).queryById('txtName').setValue("");
            Ext.getCmp(tabId).queryById('CboCostCenterType').store.load();
        }
        else if (tabId.substring(10) == "12" || tabId.substring(10) == "23" || tabId.substring(10) == "24" || tabId.substring(10) == "25"
            || tabId.substring(10) == "26" || tabId.substring(10) == "27" || tabId.substring(10) == "28" || tabId.substring(10) == "11") {
            Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').setValue(0);
            Ext.getCmp(tabId).queryById('txtName').setValue("");
        }
        else if (tabId.substring(10) == "9" || tabId.substring(10) == "17" || tabId.substring(10) == "18" || tabId.substring(10) == "21") {
            Ext.getCmp(tabId).queryById('CboCostCenterType').store.load();
        }
        else if (tabId.substring(10) == "6") {
            Ext.getCmp(tabId).queryById('CboCostCenterType2').store.load();
        }
    }

    function SearchPayPerson() {
        /*var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/SearchPayPersonal/Index',
            params: {
                State: 1,
                organId: Ext.getCmp(tabId).queryById('CboOrgan').getValue()
            }
        });*/
        var type = 1;
        if ('@ViewBag.State' == "10") /*حقوق*/
            type = 1;
        else if ('@ViewBag.State' == "23") /*اضافه کار*/
            type = 2;
        else if ('@ViewBag.State' == "24") /*تعطیل کار*/
            type = 3;
        else if ('@ViewBag.State' == "12") /*عیدی*/
            type = 4;
        else if ('@ViewBag.State' == "27") /*ماموریت*/
            type = 5;
        else if ('@ViewBag.State' == "28") /*مرخصی*/
            type = 6;
        var tabId = App.FirstTabPay.activeTab.id;
        var Ezafe_TarilKari = 1;
        if (Ext.getCmp(tabId).queryById('CboNobatePardakht').getValue() == "3") {
            Ezafe_TarilKari = 2;
        }
        var tarikh = Ext.getCmp(tabId).queryById('CboYear').getValue() + '/' + Ext.getCmp(tabId).queryById('CboMonth').getValue().padStart(2, '0') + '/31';
        Ext.net.DirectMethod.request({
            /*url: '/PayRoll/SearchPayPersonal/Index',
            params: {
                State: 1,
                organId: Ext.getCmp(tabId).queryById('CboOrgan').getValue()
            }*/
            url: '/PayRoll/SearchPersonMohasebe/Index',
            params: {
                State: 3,
                Year: Ext.getCmp(tabId).queryById('CboYear').getValue(),
                Month: Ext.getCmp(tabId).queryById('CboMonth').getValue(),
                NobatePardakht: Ext.getCmp(tabId).queryById('CboNobatePardakht').getValue(),
                NoePardakht: type,
                Ezafe_TarilKari: Ezafe_TarilKari,
                CostCenter: "",
                AnvaeEstekhdam: "",
                Tarikh: tarikh,
                OrganId: Ext.getCmp(tabId).queryById('CboOrgan').getValue()

            }
        });
    }

    var SelectPersonnn = function (Fieldd, Eventt) {
        if (Eventt.keyCode == 45) {
            var type = 1;
            if ('@ViewBag.State' == "10") /*حقوق*/
                type = 1;
            else if ('@ViewBag.State' == "23") /*اضافه کار*/
                type = 2;
            else if ('@ViewBag.State' == "24") /*تعطیل کار*/
                type = 3;
            else if ('@ViewBag.State' == "12") /*عیدی*/
                type = 4;
            else if ('@ViewBag.State' == "27") /*ماموریت*/
                type = 5;
            else if ('@ViewBag.State' == "28") /*مرخصی*/
                type = 6;
            var tabId = App.FirstTabPay.activeTab.id;
            var Ezafe_TarilKari = 1;
            if (Ext.getCmp(tabId).queryById('CboNobatePardakht').getValue() == "3") {
                Ezafe_TarilKari = 2;
            }
            var tarikh = Ext.getCmp(tabId).queryById('CboYear').getValue() + '/' + Ext.getCmp(tabId).queryById('CboMonth').getValue().padStart(2, '0') + '/31';
            Ext.net.DirectMethod.request({
                /*url: '/PayRoll/SearchPayPersonal/Index',
                params: {
                    State: 1,
                    organId: Ext.getCmp(tabId).queryById('CboOrgan').getValue()
                }*/
                url: '/PayRoll/SearchPersonMohasebe/Index',
                params: {
                    State: 3,
                    Year: Ext.getCmp(tabId).queryById('CboYear').getValue(),
                    Month: Ext.getCmp(tabId).queryById('CboMonth').getValue(),
                    NobatePardakht: Ext.getCmp(tabId).queryById('CboNobatePardakht').getValue(),
                    NoePardakht: type,
                    Ezafe_TarilKari: Ezafe_TarilKari,
                    CostCenter: "",
                    AnvaeEstekhdam: "",
                    Tarikh: tarikh,
                    OrganId: Ext.getCmp(tabId).queryById('CboOrgan').getValue()

                }
            });
        }
    };


    var nodeLoad = function (store, operation, options) {
        var node = operation.node;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/KarkardMahaneGroup/NodeLoad',
            params: {
                nod: node.getId()
            },
            success: function (result) {
                node.set('loading', false);
                node.set('loaded', true);
                node.appendChild(result);
                node.expand();
            },

            failure: function (errorMsg) {
                Ext.Msg.alert('Failure', errorMsg);
            }
        });

        return false;
    };

    function SetColspan() {
        if ('@ViewBag.State' == 10 || '@ViewBag.State' == 6 || '@ViewBag.State' == 32 || '@ViewBag.State' == 30) {
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('FieldsetFilter').layout.columns = 8;
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('FieldsetFilter').doLayout();
        }
        else if ('@ViewBag.State' == 8 || '@ViewBag.State' == 2 || '@ViewBag.State' == 3 || '@ViewBag.State' == 22 || '@ViewBag.State' == 5) {
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('FieldsetFilter').layout.columns = 4;
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('FieldsetFilter').doLayout();
        }
        else if ('@ViewBag.State' == 33) {
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('FieldsetFilter').layout.columns = 6;
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('FieldsetFilter').doLayout();
        }
        else {
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('FieldsetFilter').layout.columns = 6;
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('FieldsetFilter').doLayout();
        }
    }

    function setSizeCboOrgan() {
        if ('@ViewBag.State' == 31 || '@ViewBag.State' == 1 || '@ViewBag.State' == 4 || '@ViewBag.State' == 13
            || '@ViewBag.State' == 22 || '@ViewBag.State' == 14 || '@ViewBag.State' == 15
            || '@ViewBag.State' == 29) {
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboOrgan').setWidth(276);
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboNobatePardakht').setWidth(100);
        }
        else if ('@ViewBag.State' == 16) {
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboOrgan').setWidth(265);
        }
        else if ('@ViewBag.State' == 30 || '@ViewBag.State' == 6) {
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboOrgan').setWidth(235);
        }
    }

    function setdefaultValueOrganFish() {
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboOrgan').select(Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboOrgan').store.getAt(0));
    }

    function GetIdChartOrgan(record) {
        NodeId = record.getId();
    };
    function setSizeRptPanel() {
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('RptPanel').setSize(App.PayWin.getWidth() - 20, App.PayWin.getHeight() - 100);
    }

    function destroyWin() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.getCmp(tabId).destroy();
    }

    var DeletePersonn2 = function (textfield, key) {
        var tabId = App.FirstTabPay.activeTab.id;
        if (key.keyCode == 46) {
            Ext.getCmp(tabId).queryById('txtName').setValue("");
            Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').setValue(0);
        }
    };

    function setYearClassRpt() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetYearClass',
            params: {
                Year: Ext.getCmp(tabId).queryById("CboYear").getValue()
            }
        });
    }

    function setMonthClassRpt() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetMonthClass',
            params: {
                Month: Ext.getCmp(tabId).queryById("CboMonth").getValue()
            }
        });
    }

    function setNobatePardakhtCalssRpt() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/setNobatePardakhtCalss',
            params: {
                NobatePardakht: Ext.getCmp(tabId).queryById("CboNobatePardakht").getValue()
            }
        });
    }

    function setCostClassRpt() {
        var tabId = App.FirstTabPay.activeTab.id;
        var value = Ext.getCmp(tabId).queryById('CboCostCenterType').getValue();
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetCostClass',
            params: {
                Value: value
            }
        });
    }
    function setCostClassRpt2() {
        var tabId = App.FirstTabPay.activeTab.id;
        var value = Ext.getCmp(tabId).queryById('CboCostCenterType2').getValue();
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetCostClass',
            params: {
                Value: value
            }
        });
    }

    function ChangeTypeListPardakhti2() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboType2 = Ext.getCmp(tabId).queryById('CboType2');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var lblCostCenterType = Ext.getCmp(tabId).queryById('lblCostCenterType');

        if (CboType2.getValue() == "0") {
            CboCostCenterType.hide();
            lblCostCenterType.hide();
        }
        else {
            CboCostCenterType.show();
            lblCostCenterType.show();
        }
    }
    function LOadCostCenterS() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.getCmp(tabId).queryById('CboCostCenterType').getStore().load();
    }
    function ChangeCostCenterS() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CostCenter = Ext.getCmp(tabId).queryById('CboCostCenter').getValue();
        if (tabId.substring(10) == "33" && Ext.getCmp(tabId).queryById('CboType').getValue() == "0") {
            if (CostCenter == 2) {
                Ext.getCmp(tabId).queryById('CboOrgan').setWidth(265);
                Ext.getCmp(tabId).queryById('CboCostCenterType').setWidth(274);
            }
            else if (CostCenter == 3) {
                Ext.getCmp(tabId).queryById('CboOrgan').setWidth(233);
            }
            else {
                Ext.getCmp(tabId).queryById('CboOrgan').setWidth(233);
            }
        }
        if (CostCenter == 2) {
            Ext.getCmp(tabId).queryById('CboCostCenterType').allowBlank = false;
            Ext.getCmp(tabId).queryById('CboCostCenterType').validate();
            Ext.getCmp(tabId).queryById('CboCostCenterType').show();
            Ext.getCmp(tabId).queryById('lblCostCenterType').show();
            Ext.getCmp(tabId).queryById('TreeReport').hide();
        }
        else if (CostCenter == 3) {
            Ext.getCmp(tabId).queryById('CboCostCenterType').allowBlank = true;
            Ext.getCmp(tabId).queryById('CboCostCenterType').validate();
            Ext.getCmp(tabId).queryById('CboCostCenterType').hide();
            Ext.getCmp(tabId).queryById('lblCostCenterType').hide();
            Ext.getCmp(tabId).queryById('TreeReport').show();
        }
        else {
            Ext.getCmp(tabId).queryById('CboCostCenterType').allowBlank = true;
            Ext.getCmp(tabId).queryById('CboCostCenterType').validate();
            Ext.getCmp(tabId).queryById('CboCostCenterType').hide();
            Ext.getCmp(tabId).queryById('lblCostCenterType').hide();
            Ext.getCmp(tabId).queryById('TreeReport').hide();
        }
    }
    function setTitleWinRpt() {
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboGrouhBandi').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('lblGrouhBandi').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('lblCostCenter').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboCostCenter').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('TreeReport').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboTaYear').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboTaMonth').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('lblTaYear').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('lblTaMonth').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboCostCenterType2').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('lblCostCenterType2').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboTypeHesab').hide();
        Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('lblTypeHesab').hide();
        if ('@ViewBag.State' == "1") {
            App.PayRollRpt1.setTitle("گزارش لیست خدمات درمانی");
            App.PayRollRpt1.queryById('lblTypeKomak').hide();
            App.PayRollRpt1.queryById('CboTypeKomak').hide();
            App.PayRollRpt1.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt1.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt1.queryById('CboCostCenterType').hide();
            App.PayRollRpt1.queryById('lblCostCenterType').hide();
            App.PayRollRpt1.queryById('lblNobatePardakht').show();
            App.PayRollRpt1.queryById('CboNobatePardakht').show();
            App.PayRollRpt1.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt1.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt1.queryById('lblType').hide();
            App.PayRollRpt1.queryById('CboType').hide();
            App.PayRollRpt1.queryById('lblTypeFish').hide();
            App.PayRollRpt1.queryById('CboTypeFish').hide();
            App.PayRollRpt1.queryById('lblName').hide();
            App.PayRollRpt1.queryById('txtName').hide();
            App.PayRollRpt1.queryById('CboYear').show();
            App.PayRollRpt1.queryById('CboMonth').show();
            App.PayRollRpt1.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt1.queryById('lblYear').show();
            App.PayRollRpt1.queryById('lblMonth').show();
            App.PayRollRpt1.queryById('CboTypeReport').hide();
            App.PayRollRpt1.queryById('lblTypeReport').hide();
            App.PayRollRpt1.queryById('CboTypeParametrha').hide();
            App.PayRollRpt1.queryById('lblTypeParametrha').hide();
            App.PayRollRpt1.queryById('CboType2').hide();
            App.PayRollRpt1.queryById('lblType2').hide();
            App.PayRollRpt1.queryById('btnJam').hide();
            App.PayRollRpt1.queryById('btnMande').hide();
            App.PayRollRpt1.queryById('btnExcel').hide();
            App.PayRollRpt1.queryById('txtMashmoolSal').hide();
            App.PayRollRpt1.queryById('lblMashmoolSal').hide();
            App.PayRollRpt1.queryById('lblTafkik').hide();
            App.PayRollRpt1.queryById('CboTafkik').hide();
            App.PayRollRpt1.queryById('CboReportType').hide();
            App.PayRollRpt1.queryById('lblReportType').hide();
            App.PayRollRpt1.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt1.queryById('lblReportTypeSanad3').hide();


        }
        else if ('@ViewBag.State' == "2") {
            App.PayRollRpt2.setTitle("گزارش لیست بیمه عمر");
            App.PayRollRpt2.queryById('lblTypeKomak').hide();
            App.PayRollRpt2.queryById('CboTypeKomak').hide();
            App.PayRollRpt2.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt2.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt2.queryById('lblNobatePardakht').hide();
            App.PayRollRpt2.queryById('CboNobatePardakht').hide();
            App.PayRollRpt2.queryById('CboCostCenterType').hide();
            App.PayRollRpt2.queryById('lblCostCenterType').hide();
            App.PayRollRpt2.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt2.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt2.queryById('lblType').hide();
            App.PayRollRpt2.queryById('CboType').hide();
            App.PayRollRpt2.queryById('lblTypeFish').hide();
            App.PayRollRpt2.queryById('CboTypeFish').hide();
            App.PayRollRpt2.queryById('lblName').hide();
            App.PayRollRpt2.queryById('txtName').hide();
            App.PayRollRpt2.queryById('CboYear').show();
            App.PayRollRpt2.queryById('CboMonth').show();
            App.PayRollRpt2.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt2.queryById('lblYear').show();
            App.PayRollRpt2.queryById('lblMonth').show();
            App.PayRollRpt2.queryById('CboTypeReport').hide();
            App.PayRollRpt2.queryById('lblTypeReport').hide();
            App.PayRollRpt2.queryById('CboTypeParametrha').hide();
            App.PayRollRpt2.queryById('lblTypeParametrha').hide();
            App.PayRollRpt2.queryById('CboType2').hide();
            App.PayRollRpt2.queryById('lblType2').hide();
            App.PayRollRpt2.queryById('btnJam').hide();
            App.PayRollRpt2.queryById('btnMande').hide();
            App.PayRollRpt2.queryById('btnExcel').hide();
            App.PayRollRpt2.queryById('txtMashmoolSal').hide();
            App.PayRollRpt2.queryById('lblMashmoolSal').hide();
            App.PayRollRpt2.queryById('lblTafkik').hide();
            App.PayRollRpt2.queryById('CboTafkik').hide();
            App.PayRollRpt2.queryById('CboReportType').hide();
            App.PayRollRpt2.queryById('lblReportType').hide();
            App.PayRollRpt2.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt2.queryById('lblReportTypeSanad3').hide();

        }
        else if ('@ViewBag.State' == "3") {
            App.PayRollRpt3.setTitle("گزارش اقساط وام");
            App.PayRollRpt3.queryById('lblTypeKomak').hide();
            App.PayRollRpt3.queryById('CboTypeKomak').hide();
            App.PayRollRpt3.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt3.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt3.queryById('lblNobatePardakht').hide();
            App.PayRollRpt3.queryById('CboNobatePardakht').hide();
            App.PayRollRpt3.queryById('CboCostCenterType').hide();
            App.PayRollRpt3.queryById('lblCostCenterType').hide();
            App.PayRollRpt3.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt3.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt3.queryById('lblType').hide();
            App.PayRollRpt3.queryById('CboType').hide();
            App.PayRollRpt3.queryById('lblTypeFish').hide();
            App.PayRollRpt3.queryById('CboTypeFish').hide();
            App.PayRollRpt3.queryById('lblName').hide();
            App.PayRollRpt3.queryById('txtName').hide();
            App.PayRollRpt3.queryById('CboYear').show();
            App.PayRollRpt3.queryById('CboMonth').show();
            App.PayRollRpt3.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt3.queryById('lblYear').show();
            App.PayRollRpt3.queryById('lblMonth').show();
            App.PayRollRpt3.queryById('CboTypeReport').hide();
            App.PayRollRpt3.queryById('lblTypeReport').hide();
            App.PayRollRpt3.queryById('CboTypeParametrha').hide();
            App.PayRollRpt3.queryById('lblTypeParametrha').hide();
            App.PayRollRpt3.queryById('CboType2').hide();
            App.PayRollRpt3.queryById('lblType2').hide();
            App.PayRollRpt3.queryById('btnJam').hide();
            App.PayRollRpt3.queryById('btnMande').hide();
            App.PayRollRpt3.queryById('btnExcel').show();
            App.PayRollRpt3.queryById('txtMashmoolSal').hide();
            App.PayRollRpt3.queryById('lblMashmoolSal').hide();
            App.PayRollRpt3.queryById('lblTafkik').hide();
            App.PayRollRpt3.queryById('CboTafkik').hide();
            App.PayRollRpt3.queryById('CboReportType').hide();
            App.PayRollRpt3.queryById('lblReportType').hide();
            App.PayRollRpt3.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt3.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "4") {
            App.PayRollRpt4.setTitle("گزارش لیست پس انداز کارمندان");
            App.PayRollRpt4.queryById('lblTypeKomak').hide();
            App.PayRollRpt4.queryById('CboTypeKomak').hide();
            App.PayRollRpt4.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt4.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt4.queryById('lblNobatePardakht').show();
            App.PayRollRpt4.queryById('CboNobatePardakht').show();
            App.PayRollRpt4.queryById('CboCostCenterType').hide();
            App.PayRollRpt4.queryById('lblCostCenterType').hide();
            App.PayRollRpt4.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt4.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt4.queryById('lblType').hide();
            App.PayRollRpt4.queryById('CboType').hide();
            App.PayRollRpt4.queryById('lblTypeFish').hide();
            App.PayRollRpt4.queryById('CboTypeFish').hide();
            App.PayRollRpt4.queryById('lblName').hide();
            App.PayRollRpt4.queryById('txtName').hide();
            App.PayRollRpt4.queryById('CboYear').show();
            App.PayRollRpt4.queryById('CboMonth').show();
            App.PayRollRpt4.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt4.queryById('lblYear').show();
            App.PayRollRpt4.queryById('lblMonth').show();
            App.PayRollRpt4.queryById('CboTypeReport').hide();
            App.PayRollRpt4.queryById('lblTypeReport').hide();
            App.PayRollRpt4.queryById('CboTypeParametrha').hide();
            App.PayRollRpt4.queryById('lblTypeParametrha').hide();
            App.PayRollRpt4.queryById('CboType2').hide();
            App.PayRollRpt4.queryById('lblType2').hide();
            App.PayRollRpt4.queryById('btnJam').hide();
            App.PayRollRpt4.queryById('btnMande').hide();
            App.PayRollRpt4.queryById('btnExcel').hide();
            App.PayRollRpt4.queryById('txtMashmoolSal').hide();
            App.PayRollRpt4.queryById('lblMashmoolSal').hide();
            App.PayRollRpt4.queryById('lblTafkik').hide();
            App.PayRollRpt4.queryById('CboTafkik').hide();
            App.PayRollRpt4.queryById('CboReportType').hide();
            App.PayRollRpt4.queryById('lblReportType').hide();
            App.PayRollRpt4.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt4.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "5") {
            App.PayRollRpt5.setTitle("گزارش لیست مانده پس انداز پرسنل");
            App.PayRollRpt5.queryById('lblTypeKomak').hide();
            App.PayRollRpt5.queryById('CboTypeKomak').hide();
            App.PayRollRpt5.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt5.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt5.queryById('lblNobatePardakht').hide();
            App.PayRollRpt5.queryById('CboNobatePardakht').hide();
            App.PayRollRpt5.queryById('CboCostCenterType').hide();
            App.PayRollRpt5.queryById('lblCostCenterType').hide();
            App.PayRollRpt5.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt5.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt5.queryById('lblType').hide();
            App.PayRollRpt5.queryById('CboType').hide();
            App.PayRollRpt5.queryById('lblTypeFish').hide();
            App.PayRollRpt5.queryById('CboTypeFish').hide();
            App.PayRollRpt5.queryById('lblName').hide();
            App.PayRollRpt5.queryById('txtName').hide();
            App.PayRollRpt5.queryById('CboYear').show();
            App.PayRollRpt5.queryById('CboMonth').show();
            App.PayRollRpt5.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt5.queryById('lblYear').show();
            App.PayRollRpt5.queryById('lblMonth').show();
            App.PayRollRpt5.queryById('CboTypeReport').hide();
            App.PayRollRpt5.queryById('lblTypeReport').hide();
            App.PayRollRpt5.queryById('CboTypeParametrha').hide();
            App.PayRollRpt5.queryById('lblTypeParametrha').hide();
            App.PayRollRpt5.queryById('CboType2').hide();
            App.PayRollRpt5.queryById('lblType2').hide();
            App.PayRollRpt5.queryById('btnJam').hide();
            App.PayRollRpt5.queryById('btnMande').hide();
            App.PayRollRpt5.queryById('btnExcel').hide();
            App.PayRollRpt5.queryById('txtMashmoolSal').hide();
            App.PayRollRpt5.queryById('lblMashmoolSal').hide();
            App.PayRollRpt5.queryById('lblTafkik').hide();
            App.PayRollRpt5.queryById('CboTafkik').hide();
            App.PayRollRpt5.queryById('CboReportType').hide();
            App.PayRollRpt5.queryById('lblReportType').hide();
            App.PayRollRpt5.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt5.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "6") {
            App.PayRollRpt6.setTitle("گزارش لیست مالیات");
            App.PayRollRpt6.queryById('lblTypeKomak').hide();
            App.PayRollRpt6.queryById('CboTypeKomak').hide();
            App.PayRollRpt6.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt6.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt6.queryById('lblNobatePardakht').show();
            App.PayRollRpt6.queryById('CboNobatePardakht').show();
            App.PayRollRpt6.queryById('CboCostCenterType2').show();
            App.PayRollRpt6.queryById('lblCostCenterType2').show();
            App.PayRollRpt6.queryById('CboCostCenterType').hide();
            App.PayRollRpt6.queryById('lblCostCenterType').hide();
            App.PayRollRpt6.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt6.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt6.queryById('lblType').hide();
            App.PayRollRpt6.queryById('CboType').hide();
            App.PayRollRpt6.queryById('lblTypeFish').hide();
            App.PayRollRpt6.queryById('CboTypeFish').hide();
            App.PayRollRpt6.queryById('lblName').hide();
            App.PayRollRpt6.queryById('txtName').hide();
            App.PayRollRpt6.queryById('CboYear').show();
            App.PayRollRpt6.queryById('CboMonth').show();
            App.PayRollRpt6.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt6.queryById('lblYear').show();
            App.PayRollRpt6.queryById('lblMonth').show();
            App.PayRollRpt6.queryById('CboTypeReport').hide();
            App.PayRollRpt6.queryById('lblTypeReport').hide();
            App.PayRollRpt6.queryById('CboTypeParametrha').hide();
            App.PayRollRpt6.queryById('lblTypeParametrha').hide();
            App.PayRollRpt6.queryById('CboType2').hide();
            App.PayRollRpt6.queryById('lblType2').hide();
            App.PayRollRpt6.queryById('btnJam').hide();
            App.PayRollRpt6.queryById('btnMande').hide();
            App.PayRollRpt6.queryById('btnExcel').hide();
            App.PayRollRpt6.queryById('txtMashmoolSal').hide();
            App.PayRollRpt6.queryById('lblMashmoolSal').hide();
            App.PayRollRpt6.queryById('lblTafkik').hide();
            App.PayRollRpt6.queryById('CboTafkik').hide();
            App.PayRollRpt6.queryById('CboReportType').hide();
            App.PayRollRpt6.queryById('lblReportType').hide();
            App.PayRollRpt6.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt6.queryById('lblReportTypeSanad3').hide();
        }
            @* else if ('@ViewBag.State' == "7") {
            App.PayRollRpt7.setTitle("گزارش لیست مالیات کارمندی");
            App.PayRollRpt7.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt7.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt7.queryById('lblNobatePardakht').show();
            App.PayRollRpt7.queryById('CboNobatePardakht').show();
            App.PayRollRpt7.queryById('CboCostCenterType').show();
            App.PayRollRpt7.queryById('lblCostCenterType').show();
            App.PayRollRpt7.queryById('CboTypeEstekhdam').show();
            App.PayRollRpt7.queryById('lblTypeEstekhdam').show();
            App.PayRollRpt7.queryById('lblType').hide();
            App.PayRollRpt7.queryById('CboType').hide();
            App.PayRollRpt7.queryById('lblTypeFish').hide();
            App.PayRollRpt7.queryById('CboTypeFish').hide();
            App.PayRollRpt7.queryById('lblName').hide();
            App.PayRollRpt7.queryById('txtName').hide();
            App.PayRollRpt7.queryById('CboYear').show();
            App.PayRollRpt7.queryById('CboMonth').show();
            App.PayRollRpt7.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt7.queryById('lblYear').show();
            App.PayRollRpt7.queryById('lblMonth').show();
            App.PayRollRpt7.queryById('CboTypeReport').hide();
            App.PayRollRpt7.queryById('lblTypeReport').hide();
            App.PayRollRpt7.queryById('CboTypeParametrha').hide();
            App.PayRollRpt7.queryById('lblTypeParametrha').hide();
            App.PayRollRpt7.queryById('CboType2').hide();
            App.PayRollRpt7.queryById('lblType2').hide();
            App.PayRollRpt7.queryById('btnJam').hide();
            App.PayRollRpt7.queryById('btnMande').hide();
            App.PayRollRpt7.queryById('btnExcel').hide();
            App.PayRollRpt7.queryById('txtMashmoolSal').hide();
            App.PayRollRpt7.queryById('lblMashmoolSal').hide();
       }*@
        else if ('@ViewBag.State' == "8") {
            App.PayRollRpt8.setTitle("گزارش لیست بیمه تکمیلی");
            App.PayRollRpt8.queryById('lblTypeKomak').hide();
            App.PayRollRpt8.queryById('CboTypeKomak').hide();
            App.PayRollRpt8.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt8.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt8.queryById('lblNobatePardakht').hide();
            App.PayRollRpt8.queryById('CboNobatePardakht').hide();
            App.PayRollRpt8.queryById('CboCostCenterType').hide();
            App.PayRollRpt8.queryById('lblCostCenterType').hide();
            App.PayRollRpt8.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt8.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt8.queryById('lblType').hide();
            App.PayRollRpt8.queryById('CboType').hide();
            App.PayRollRpt8.queryById('lblTypeFish').hide();
            App.PayRollRpt8.queryById('CboTypeFish').hide();
            App.PayRollRpt8.queryById('lblName').hide();
            App.PayRollRpt8.queryById('txtName').hide();
            App.PayRollRpt8.queryById('CboYear').show();
            App.PayRollRpt8.queryById('CboMonth').show();
            App.PayRollRpt8.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt8.queryById('lblYear').show();
            App.PayRollRpt8.queryById('lblMonth').show();
            App.PayRollRpt8.queryById('CboTypeReport').hide();
            App.PayRollRpt8.queryById('lblTypeReport').hide();
            App.PayRollRpt8.queryById('CboTypeParametrha').hide();
            App.PayRollRpt8.queryById('lblTypeParametrha').hide();
            App.PayRollRpt8.queryById('CboType2').hide();
            App.PayRollRpt8.queryById('lblType2').hide();
            App.PayRollRpt8.queryById('btnJam').hide();
            App.PayRollRpt8.queryById('btnMande').hide();
            App.PayRollRpt8.queryById('btnExcel').hide();
            App.PayRollRpt8.queryById('txtMashmoolSal').hide();
            App.PayRollRpt8.queryById('lblMashmoolSal').hide();
            App.PayRollRpt8.queryById('lblTafkik').hide();
            App.PayRollRpt8.queryById('CboTafkik').hide();
            App.PayRollRpt8.queryById('CboReportType').hide();
            App.PayRollRpt8.queryById('lblReportType').hide();
            App.PayRollRpt8.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt8.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "9") {
            App.PayRollRpt9.setTitle("گزارش کسورات (کلی) به همراه کسورات بانک");
            App.PayRollRpt9.queryById('lblTypeKomak').hide();
            App.PayRollRpt9.queryById('CboTypeKomak').hide();
            App.PayRollRpt9.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt9.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt9.queryById('CboType2').show();
            App.PayRollRpt9.queryById('lblType2').show();
            App.PayRollRpt9.queryById('CboCostCenterType').hide();
            App.PayRollRpt9.queryById('lblCostCenterType').hide();
            App.PayRollRpt9.queryById('lblNobatePardakht').show();
            App.PayRollRpt9.queryById('CboNobatePardakht').show();
            App.PayRollRpt9.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt9.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt9.queryById('lblType').hide();
            App.PayRollRpt9.queryById('CboType').hide();
            App.PayRollRpt9.queryById('lblTypeFish').hide();
            App.PayRollRpt9.queryById('CboTypeFish').hide();
            App.PayRollRpt9.queryById('lblName').hide();
            App.PayRollRpt9.queryById('txtName').hide();
            App.PayRollRpt9.queryById('CboYear').show();
            App.PayRollRpt9.queryById('CboMonth').show();
            App.PayRollRpt9.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt9.queryById('lblYear').show();
            App.PayRollRpt9.queryById('lblMonth').show();
            App.PayRollRpt9.queryById('CboTypeReport').hide();
            App.PayRollRpt9.queryById('lblTypeReport').hide();
            App.PayRollRpt9.queryById('CboTypeParametrha').hide();
            App.PayRollRpt9.queryById('lblTypeParametrha').hide();
            App.PayRollRpt9.queryById('btnJam').hide();
            App.PayRollRpt9.queryById('btnMande').hide();
            App.PayRollRpt9.queryById('btnExcel').hide();
            App.PayRollRpt9.queryById('txtMashmoolSal').hide();
            App.PayRollRpt9.queryById('lblMashmoolSal').hide();
            App.PayRollRpt9.queryById('lblTafkik').hide();
            App.PayRollRpt9.queryById('CboTafkik').hide();
            App.PayRollRpt9.queryById('CboReportType').hide();
            App.PayRollRpt9.queryById('lblReportType').hide();
            App.PayRollRpt9.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt9.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "10") {
            App.PayRollRpt10.setTitle("گزارش فیش حقوقی");
            App.PayRollRpt10.queryById('lblTypeKomak').hide();
            App.PayRollRpt10.queryById('CboTypeKomak').hide();
            App.PayRollRpt10.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt10.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt10.queryById('CboCostCenterType').hide();
            App.PayRollRpt10.queryById('lblCostCenterType').hide();
            App.PayRollRpt10.queryById('lblNobatePardakht').show();
            App.PayRollRpt10.queryById('CboNobatePardakht').show();
            App.PayRollRpt10.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt10.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt10.queryById('lblType').show();
            App.PayRollRpt10.queryById('CboType').show();
            App.PayRollRpt10.queryById('lblTypeFish').show();
            App.PayRollRpt10.queryById('CboTypeFish').show();
            App.PayRollRpt10.queryById('lblName').show();
            App.PayRollRpt10.queryById('txtName').show();
            App.PayRollRpt10.queryById('CboYear').show();
            App.PayRollRpt10.queryById('CboMonth').show();
            App.PayRollRpt10.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt10.queryById('lblYear').show();
            App.PayRollRpt10.queryById('lblMonth').show();
            App.PayRollRpt10.queryById('CboTypeReport').hide();
            App.PayRollRpt10.queryById('lblTypeReport').hide();
            App.PayRollRpt10.queryById('CboTypeParametrha').hide();
            App.PayRollRpt10.queryById('lblTypeParametrha').hide();
            App.PayRollRpt10.queryById('CboType2').hide();
            App.PayRollRpt10.queryById('lblType2').hide();
            App.PayRollRpt10.queryById('btnJam').hide();
            App.PayRollRpt10.queryById('btnMande').hide();
            App.PayRollRpt10.queryById('btnExcel').hide();
            App.PayRollRpt10.queryById('txtMashmoolSal').hide();
            App.PayRollRpt10.queryById('lblMashmoolSal').hide();
            App.PayRollRpt10.queryById('lblCostCenter').show();
            App.PayRollRpt10.queryById('CboCostCenter').show();
            App.PayRollRpt10.queryById('lblTafkik').hide();
            App.PayRollRpt10.queryById('CboTafkik').hide();
            App.PayRollRpt10.queryById('CboReportType').hide();
            App.PayRollRpt10.queryById('lblReportType').hide();
            App.PayRollRpt10.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt10.queryById('lblReportTypeSanad3').hide();
            /*App.PayRollRpt10.queryById('CboTypeHesab').show();
            App.PayRollRpt10.queryById('lblTypeHesab').show();*/
            /* App.PayRollRpt10.queryById('TreeReport').show();*/
        }
        else if ('@ViewBag.State' == "11") {
            App.PayRollRpt11.setTitle("گزارش اطلاعات پرسنل");
            App.PayRollRpt11.queryById('lblTypeKomak').hide();
            App.PayRollRpt11.queryById('CboTypeKomak').hide();
            App.PayRollRpt11.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt11.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt11.queryById('CboCostCenterType').hide();
            App.PayRollRpt11.queryById('lblCostCenterType').hide();
            App.PayRollRpt11.queryById('lblNobatePardakht').hide();
            App.PayRollRpt11.queryById('CboNobatePardakht').hide();
            App.PayRollRpt11.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt11.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt11.queryById('lblType').show();
            App.PayRollRpt11.queryById('CboType').show();
            App.PayRollRpt11.queryById('lblTypeFish').hide();
            App.PayRollRpt11.queryById('CboTypeFish').hide();
            App.PayRollRpt11.queryById('lblName').show();
            App.PayRollRpt11.queryById('txtName').show();
            App.PayRollRpt11.queryById('CboYear').hide();
            App.PayRollRpt11.queryById('CboMonth').hide();
            App.PayRollRpt11.queryById('lblYear').hide();
            App.PayRollRpt11.queryById('lblMonth').hide();
            App.PayRollRpt11.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt11.queryById('CboTypeReport').hide();
            App.PayRollRpt11.queryById('lblTypeReport').hide();
            App.PayRollRpt11.queryById('CboTypeParametrha').hide();
            App.PayRollRpt11.queryById('lblTypeParametrha').hide();
            App.PayRollRpt11.queryById('CboType2').hide();
            App.PayRollRpt11.queryById('lblType2').hide();
            App.PayRollRpt11.queryById('btnJam').hide();
            App.PayRollRpt11.queryById('btnMande').hide();
            App.PayRollRpt11.queryById('btnExcel').hide();
            App.PayRollRpt11.queryById('txtMashmoolSal').hide();
            App.PayRollRpt11.queryById('lblMashmoolSal').hide();
            App.PayRollRpt11.queryById('lblTafkik').hide();
            App.PayRollRpt11.queryById('CboTafkik').hide();
            App.PayRollRpt11.queryById('CboReportType').hide();
            App.PayRollRpt11.queryById('lblReportType').hide();
            App.PayRollRpt11.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt11.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "31") {
            App.PayRollRpt31.setTitle("گزارش اطلاعات کارکرد ماهانه پرسنل");
            App.PayRollRpt31.queryById('lblTypeKomak').hide();
            App.PayRollRpt31.queryById('CboTypeKomak').hide();
            App.PayRollRpt31.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt31.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt31.queryById('CboCostCenterType').hide();
            App.PayRollRpt31.queryById('lblCostCenterType').hide();
            App.PayRollRpt31.queryById('lblNobatePardakht').show();
            App.PayRollRpt31.queryById('CboNobatePardakht').show();
            App.PayRollRpt31.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt31.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt31.queryById('lblType').hide();
            App.PayRollRpt31.queryById('CboType').hide();
            App.PayRollRpt31.queryById('lblTypeFish').hide();
            App.PayRollRpt31.queryById('CboTypeFish').hide();
            App.PayRollRpt31.queryById('lblName').hide();
            App.PayRollRpt31.queryById('txtName').hide();
            App.PayRollRpt31.queryById('CboYear').show();
            App.PayRollRpt31.queryById('CboMonth').show();
            App.PayRollRpt31.queryById('lblYear').show();
            App.PayRollRpt31.queryById('lblMonth').show();
            App.PayRollRpt31.queryById('CboTypeReport').hide();
            App.PayRollRpt31.queryById('lblTypeReport').hide();
            App.PayRollRpt31.queryById('CboTypeParametrha').hide();
            App.PayRollRpt31.queryById('lblTypeParametrha').hide();
            App.PayRollRpt31.queryById('CboType2').hide();
            App.PayRollRpt31.queryById('lblType2').hide();
            App.PayRollRpt31.queryById('btnJam').hide();
            App.PayRollRpt31.queryById('btnMande').hide();
            App.PayRollRpt31.queryById('btnExcel').show();
            App.PayRollRpt31.queryById('txtMashmoolSal').hide();
            App.PayRollRpt31.queryById('lblMashmoolSal').hide();
            App.PayRollRpt31.queryById('lblTafkik').hide();
            App.PayRollRpt31.queryById('CboTafkik').hide();
            App.PayRollRpt31.queryById('CboReportType').hide();
            App.PayRollRpt31.queryById('lblReportType').hide();
            App.PayRollRpt31.queryById('RptPanel').hide();
            App.PayRollRpt31.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt31.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "12") {
            App.PayRollRpt12.setTitle("گزارش فیش پرداخت عیدی");
            App.PayRollRpt12.queryById('lblTypeKomak').hide();
            App.PayRollRpt12.queryById('CboTypeKomak').hide();
            App.PayRollRpt12.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt12.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt12.queryById('CboCostCenterType').hide();
            App.PayRollRpt12.queryById('lblCostCenterType').hide();
            App.PayRollRpt12.queryById('lblNobatePardakht').show();
            App.PayRollRpt12.queryById('CboNobatePardakht').show();
            App.PayRollRpt12.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt12.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt12.queryById('lblType').show();
            App.PayRollRpt12.queryById('CboType').show();
            App.PayRollRpt12.queryById('lblTypeFish').hide();
            App.PayRollRpt12.queryById('CboTypeFish').hide();
            App.PayRollRpt12.queryById('lblName').show();
            App.PayRollRpt12.queryById('txtName').show();
            App.PayRollRpt12.queryById('CboYear').show();
            App.PayRollRpt12.queryById('CboMonth').show();
            App.PayRollRpt12.queryById('CboMonth').setReadOnly(true);
            App.PayRollRpt12.queryById('lblYear').show();
            App.PayRollRpt12.queryById('lblMonth').show();
            App.PayRollRpt12.queryById('CboTypeReport').hide();
            App.PayRollRpt12.queryById('lblTypeReport').hide();
            App.PayRollRpt12.queryById('CboTypeParametrha').hide();
            App.PayRollRpt12.queryById('lblTypeParametrha').hide();
            App.PayRollRpt12.queryById('CboType2').hide();
            App.PayRollRpt12.queryById('lblType2').hide();
            App.PayRollRpt12.queryById('btnJam').hide();
            App.PayRollRpt12.queryById('btnMande').hide();
            App.PayRollRpt12.queryById('btnExcel').hide();
            App.PayRollRpt12.queryById('txtMashmoolSal').hide();
            App.PayRollRpt12.queryById('lblMashmoolSal').hide();
            App.PayRollRpt12.queryById('lblTafkik').hide();
            App.PayRollRpt12.queryById('CboTafkik').hide();
            App.PayRollRpt12.queryById('CboReportType').hide();
            App.PayRollRpt12.queryById('lblReportType').hide();
            App.PayRollRpt12.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt12.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "13") {
            App.PayRollRpt13.setTitle("گزارش مطالبات(کلی)");
            App.PayRollRpt13.queryById('lblTypeKomak').hide();
            App.PayRollRpt13.queryById('CboTypeKomak').hide();
            App.PayRollRpt13.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt13.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt13.queryById('CboCostCenterType').hide();
            App.PayRollRpt13.queryById('lblCostCenterType').hide();
            App.PayRollRpt13.queryById('lblNobatePardakht').show();
            App.PayRollRpt13.queryById('CboNobatePardakht').show();
            App.PayRollRpt13.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt13.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt13.queryById('lblType').hide();
            App.PayRollRpt13.queryById('CboType').hide();
            App.PayRollRpt13.queryById('lblTypeFish').hide();
            App.PayRollRpt13.queryById('CboTypeFish').hide();
            App.PayRollRpt13.queryById('lblName').hide();
            App.PayRollRpt13.queryById('txtName').hide();
            App.PayRollRpt13.queryById('CboYear').show();
            App.PayRollRpt13.queryById('CboMonth').show();
            App.PayRollRpt13.queryById('lblYear').show();
            App.PayRollRpt13.queryById('lblMonth').show();
            App.PayRollRpt13.queryById('CboTypeReport').hide();
            App.PayRollRpt13.queryById('lblTypeReport').hide();
            App.PayRollRpt13.queryById('CboTypeParametrha').hide();
            App.PayRollRpt13.queryById('lblTypeParametrha').hide();
            App.PayRollRpt13.queryById('CboType2').hide();
            App.PayRollRpt13.queryById('lblType2').hide();
            App.PayRollRpt13.queryById('btnJam').hide();
            App.PayRollRpt13.queryById('btnMande').hide();
            App.PayRollRpt13.queryById('btnExcel').hide();
            App.PayRollRpt13.queryById('txtMashmoolSal').hide();
            App.PayRollRpt13.queryById('lblMashmoolSal').hide();
            App.PayRollRpt13.queryById('lblTafkik').hide();
            App.PayRollRpt13.queryById('CboTafkik').hide();
            App.PayRollRpt13.queryById('CboReportType').hide();
            App.PayRollRpt13.queryById('lblReportType').hide();
            App.PayRollRpt13.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt13.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "14") {
            App.PayRollRpt14.setTitle("گزارش سند حسابداری 1");
            App.PayRollRpt14.queryById('lblTypeKomak').hide();
            App.PayRollRpt14.queryById('CboTypeKomak').hide();
            App.PayRollRpt14.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt14.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt14.queryById('CboCostCenterType').hide();
            App.PayRollRpt14.queryById('lblCostCenterType').hide();
            App.PayRollRpt14.queryById('lblNobatePardakht').show();
            App.PayRollRpt14.queryById('CboNobatePardakht').show();
            App.PayRollRpt14.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt14.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt14.queryById('lblType').hide();
            App.PayRollRpt14.queryById('CboType').hide();
            App.PayRollRpt14.queryById('lblTypeFish').hide();
            App.PayRollRpt14.queryById('CboTypeFish').hide();
            App.PayRollRpt14.queryById('lblName').hide();
            App.PayRollRpt14.queryById('txtName').hide();
            App.PayRollRpt14.queryById('CboYear').show();
            App.PayRollRpt14.queryById('CboMonth').show();
            App.PayRollRpt14.queryById('lblYear').show();
            App.PayRollRpt14.queryById('lblMonth').show();
            App.PayRollRpt14.queryById('CboTypeReport').hide();
            App.PayRollRpt14.queryById('lblTypeReport').hide();
            App.PayRollRpt14.queryById('CboTypeParametrha').hide();
            App.PayRollRpt14.queryById('lblTypeParametrha').hide();
            App.PayRollRpt14.queryById('CboType2').hide();
            App.PayRollRpt14.queryById('lblType2').hide();
            App.PayRollRpt14.queryById('btnJam').hide();
            App.PayRollRpt14.queryById('btnMande').hide();
            App.PayRollRpt14.queryById('btnExcel').hide();
            App.PayRollRpt14.queryById('txtMashmoolSal').hide();
            App.PayRollRpt14.queryById('lblMashmoolSal').hide();
            App.PayRollRpt14.queryById('lblTafkik').show();
            App.PayRollRpt14.queryById('CboTafkik').show();
            App.PayRollRpt14.queryById('CboReportType').hide();
            App.PayRollRpt14.queryById('lblReportType').hide();
            App.PayRollRpt14.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt14.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "15") {
            App.PayRollRpt15.setTitle("گزارش سند حسابداری 2");
            App.PayRollRpt15.queryById('lblTypeKomak').hide();
            App.PayRollRpt15.queryById('CboTypeKomak').hide();
            App.PayRollRpt15.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt15.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt15.queryById('CboCostCenterType').hide();
            App.PayRollRpt15.queryById('lblCostCenterType').hide();
            App.PayRollRpt15.queryById('lblNobatePardakht').show();
            App.PayRollRpt15.queryById('CboNobatePardakht').show();
            App.PayRollRpt15.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt15.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt15.queryById('lblType').hide();
            App.PayRollRpt15.queryById('CboType').hide();
            App.PayRollRpt15.queryById('lblTypeFish').hide();
            App.PayRollRpt15.queryById('CboTypeFish').hide();
            App.PayRollRpt15.queryById('lblName').hide();
            App.PayRollRpt15.queryById('txtName').hide();
            App.PayRollRpt15.queryById('CboYear').show();
            App.PayRollRpt15.queryById('CboMonth').show();
            App.PayRollRpt15.queryById('lblYear').show();
            App.PayRollRpt15.queryById('lblMonth').show();
            App.PayRollRpt15.queryById('CboTypeReport').hide();
            App.PayRollRpt15.queryById('lblTypeReport').hide();
            App.PayRollRpt15.queryById('CboTypeParametrha').hide();
            App.PayRollRpt15.queryById('lblTypeParametrha').hide();
            App.PayRollRpt15.queryById('CboType2').hide();
            App.PayRollRpt15.queryById('lblType2').hide();
            App.PayRollRpt15.queryById('btnJam').hide();
            App.PayRollRpt15.queryById('btnMande').hide();
            App.PayRollRpt15.queryById('btnExcel').hide();
            App.PayRollRpt15.queryById('txtMashmoolSal').hide();
            App.PayRollRpt15.queryById('lblMashmoolSal').hide();
            App.PayRollRpt15.queryById('lblTafkik').hide();
            App.PayRollRpt15.queryById('CboTafkik').hide();
            App.PayRollRpt15.queryById('CboReportType').hide();
            App.PayRollRpt15.queryById('lblReportType').hide();
            App.PayRollRpt15.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt15.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "30") {
            App.PayRollRpt30.setTitle("گزارش سند حسابداری 3");
            App.PayRollRpt30.queryById('lblTypeKomak').hide();
            App.PayRollRpt30.queryById('CboTypeKomak').hide();
            App.PayRollRpt30.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt30.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt30.queryById('CboCostCenterType').hide();
            App.PayRollRpt30.queryById('lblCostCenterType').hide();
            App.PayRollRpt30.queryById('lblNobatePardakht').show();
            App.PayRollRpt30.queryById('CboNobatePardakht').show();
            App.PayRollRpt30.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt30.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt30.queryById('lblType').hide();
            App.PayRollRpt30.queryById('CboType').hide();
            App.PayRollRpt30.queryById('lblTypeFish').hide();
            App.PayRollRpt30.queryById('CboTypeFish').hide();
            App.PayRollRpt30.queryById('lblName').hide();
            App.PayRollRpt30.queryById('txtName').hide();
            App.PayRollRpt30.queryById('CboYear').show();
            App.PayRollRpt30.queryById('CboMonth').show();
            App.PayRollRpt30.queryById('lblYear').show();
            App.PayRollRpt30.queryById('lblMonth').show();
            App.PayRollRpt30.queryById('CboTypeReport').hide();
            App.PayRollRpt30.queryById('lblTypeReport').hide();
            App.PayRollRpt30.queryById('CboTypeParametrha').hide();
            App.PayRollRpt30.queryById('lblTypeParametrha').hide();
            App.PayRollRpt30.queryById('CboType2').hide();
            App.PayRollRpt30.queryById('lblType2').hide();
            App.PayRollRpt30.queryById('btnJam').hide();
            App.PayRollRpt30.queryById('btnMande').hide();
            App.PayRollRpt30.queryById('btnExcel').hide();
            App.PayRollRpt30.queryById('txtMashmoolSal').hide();
            App.PayRollRpt30.queryById('lblMashmoolSal').hide();
            App.PayRollRpt30.queryById('lblTafkik').hide();
            App.PayRollRpt30.queryById('CboTafkik').hide();
            App.PayRollRpt30.queryById('CboReportType').hide();
            App.PayRollRpt30.queryById('lblReportType').hide();
            App.PayRollRpt30.queryById('CboReportTypeSanad3').show();
            App.PayRollRpt30.queryById('lblReportTypeSanad3').show();
            App.PayRollRpt30.queryById('CboTypeHesab').show();
            App.PayRollRpt30.queryById('lblTypeHesab').show();
        }
        else if ('@ViewBag.State' == "16") {
            App.PayRollRpt16.setTitle("گزارش خلاصه حقوق و مزایا");
            App.PayRollRpt16.queryById('lblTypeKomak').hide();
            App.PayRollRpt16.queryById('CboTypeKomak').hide();
            App.PayRollRpt16.queryById('lblMarhalePardakht').show();
            App.PayRollRpt16.queryById('CboMarhalePardakht').show();
            App.PayRollRpt16.queryById('CboCostCenterType').hide();
            App.PayRollRpt16.queryById('lblCostCenterType').hide();
            App.PayRollRpt16.queryById('lblNobatePardakht').show();
            App.PayRollRpt16.queryById('CboNobatePardakht').show();
            App.PayRollRpt16.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt16.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt16.queryById('lblType').hide();
            App.PayRollRpt16.queryById('CboType').hide();
            App.PayRollRpt16.queryById('lblTypeFish').hide();
            App.PayRollRpt16.queryById('CboTypeFish').hide();
            App.PayRollRpt16.queryById('lblName').hide();
            App.PayRollRpt16.queryById('txtName').hide();
            App.PayRollRpt16.queryById('CboYear').show();
            App.PayRollRpt16.queryById('CboMonth').show();
            App.PayRollRpt16.queryById('lblYear').show();
            App.PayRollRpt16.queryById('lblMonth').show();
            App.PayRollRpt16.queryById('CboTypeReport').show();
            App.PayRollRpt16.queryById('lblTypeReport').show();
            App.PayRollRpt16.queryById('CboTypeParametrha').hide();
            App.PayRollRpt16.queryById('lblTypeParametrha').hide();
            App.PayRollRpt16.queryById('CboType2').hide();
            App.PayRollRpt16.queryById('lblType2').hide();
            App.PayRollRpt16.queryById('btnJam').hide();
            App.PayRollRpt16.queryById('btnMande').hide();
            App.PayRollRpt16.queryById('btnExcel').show();
            App.PayRollRpt16.queryById('txtMashmoolSal').hide();
            App.PayRollRpt16.queryById('lblMashmoolSal').hide();
            App.PayRollRpt16.queryById('lblGrouhBandi').show();
            App.PayRollRpt16.queryById('CboGrouhBandi').show();
            App.PayRollRpt16.queryById('lblTafkik').hide();
            App.PayRollRpt16.queryById('CboTafkik').hide();
            App.PayRollRpt16.queryById('CboReportType').show();
            App.PayRollRpt16.queryById('lblReportType').show();
            App.PayRollRpt16.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt16.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "29") {
            App.PayRollRpt29.setTitle("گزارش خلاصه حقوق و مزایا");
            App.PayRollRpt29.queryById('lblTypeKomak').hide();
            App.PayRollRpt29.queryById('CboTypeKomak').hide();
            App.PayRollRpt29.queryById('lblMarhalePardakht').show();
            App.PayRollRpt29.queryById('CboMarhalePardakht').show();
            App.PayRollRpt29.queryById('CboCostCenterType').hide();
            App.PayRollRpt29.queryById('lblCostCenterType').hide();
            App.PayRollRpt29.queryById('lblNobatePardakht').show();
            App.PayRollRpt29.queryById('CboNobatePardakht').show();
            App.PayRollRpt29.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt29.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt29.queryById('lblType').hide();
            App.PayRollRpt29.queryById('CboType').hide();
            App.PayRollRpt29.queryById('lblTypeFish').hide();
            App.PayRollRpt29.queryById('CboTypeFish').hide();
            App.PayRollRpt29.queryById('lblName').hide();
            App.PayRollRpt29.queryById('txtName').hide();
            App.PayRollRpt29.queryById('CboYear').show();
            App.PayRollRpt29.queryById('CboMonth').show();
            App.PayRollRpt29.queryById('lblYear').show();
            App.PayRollRpt29.queryById('lblMonth').show();
            App.PayRollRpt29.queryById('CboTypeReport').show();
            App.PayRollRpt29.queryById('lblTypeReport').show();
            App.PayRollRpt29.queryById('CboTypeParametrha').hide();
            App.PayRollRpt29.queryById('lblTypeParametrha').hide();
            App.PayRollRpt29.queryById('CboType2').hide();
            App.PayRollRpt29.queryById('lblType2').hide();
            App.PayRollRpt29.queryById('btnJam').hide();
            App.PayRollRpt29.queryById('btnMande').hide();
            App.PayRollRpt29.queryById('btnExcel').hide();
            App.PayRollRpt29.queryById('txtMashmoolSal').hide();
            App.PayRollRpt29.queryById('lblMashmoolSal').hide();
            App.PayRollRpt29.queryById('lblGrouhBandi').show();
            App.PayRollRpt29.queryById('CboGrouhBandi').show();
            App.PayRollRpt29.queryById('CboTaYear').show();
            App.PayRollRpt29.queryById('CboTaMonth').show();
            App.PayRollRpt29.queryById('lblTaYear').show();
            App.PayRollRpt29.queryById('lblTaMonth').show();
            App.PayRollRpt29.queryById('lblTafkik').hide();
            App.PayRollRpt29.queryById('CboTafkik').hide();
            App.PayRollRpt29.queryById('CboReportType').hide();
            App.PayRollRpt29.queryById('lblReportType').hide();
            App.PayRollRpt29.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt29.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "17") {
            App.PayRollRpt17.setTitle("گزارش کسورات پرداخت شده");
            App.PayRollRpt17.queryById('lblTypeKomak').hide();
            App.PayRollRpt17.queryById('CboTypeKomak').hide();
            App.PayRollRpt17.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt17.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt17.queryById('CboCostCenterType').hide();
            App.PayRollRpt17.queryById('lblCostCenterType').hide();
            App.PayRollRpt17.queryById('lblNobatePardakht').show();
            App.PayRollRpt17.queryById('CboNobatePardakht').show();
            App.PayRollRpt17.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt17.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt17.queryById('lblType').hide();
            App.PayRollRpt17.queryById('CboType').hide();
            App.PayRollRpt17.queryById('lblTypeFish').hide();
            App.PayRollRpt17.queryById('CboTypeFish').hide();
            App.PayRollRpt17.queryById('lblName').hide();
            App.PayRollRpt17.queryById('txtName').hide();
            App.PayRollRpt17.queryById('CboYear').show();
            App.PayRollRpt17.queryById('CboMonth').show();
            App.PayRollRpt17.queryById('lblYear').show();
            App.PayRollRpt17.queryById('lblMonth').show();
            App.PayRollRpt17.queryById('CboTypeReport').hide();
            App.PayRollRpt17.queryById('lblTypeReport').hide();
            App.PayRollRpt17.queryById('CboTypeParametrha').show();
            App.PayRollRpt17.queryById('lblTypeParametrha').show();
            App.PayRollRpt17.queryById('CboType2').show();
            App.PayRollRpt17.queryById('lblType2').show();
            App.PayRollRpt17.queryById('btnJam').show();
            App.PayRollRpt17.queryById('btnMande').show();
            App.PayRollRpt17.queryById('btnExcel').show();
            App.PayRollRpt17.queryById('txtMashmoolSal').hide();
            App.PayRollRpt17.queryById('lblMashmoolSal').hide();
            App.PayRollRpt17.queryById('lblTafkik').hide();
            App.PayRollRpt17.queryById('CboTafkik').hide();
            App.PayRollRpt17.queryById('CboReportType').hide();
            App.PayRollRpt17.queryById('lblReportType').hide();
            App.PayRollRpt17.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt17.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "18") {
            App.PayRollRpt18.setTitle("گزارش مطالبات پرداخت شده");
            App.PayRollRpt18.queryById('lblTypeKomak').hide();
            App.PayRollRpt18.queryById('CboTypeKomak').hide();
            App.PayRollRpt18.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt18.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt18.queryById('CboCostCenterType').hide();
            App.PayRollRpt18.queryById('lblCostCenterType').hide();
            App.PayRollRpt18.queryById('lblNobatePardakht').show();
            App.PayRollRpt18.queryById('CboNobatePardakht').show();
            App.PayRollRpt18.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt18.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt18.queryById('lblType').hide();
            App.PayRollRpt18.queryById('CboType').hide();
            App.PayRollRpt18.queryById('lblTypeFish').hide();
            App.PayRollRpt18.queryById('CboTypeFish').hide();
            App.PayRollRpt18.queryById('lblName').hide();
            App.PayRollRpt18.queryById('txtName').hide();
            App.PayRollRpt18.queryById('CboYear').show();
            App.PayRollRpt18.queryById('CboMonth').show();
            App.PayRollRpt18.queryById('lblYear').show();
            App.PayRollRpt18.queryById('lblMonth').show();
            App.PayRollRpt18.queryById('CboTypeReport').hide();
            App.PayRollRpt18.queryById('lblTypeReport').hide();
            App.PayRollRpt18.queryById('CboTypeParametrha').show();
            App.PayRollRpt18.queryById('lblTypeParametrha').show();
            App.PayRollRpt18.queryById('CboType2').show();
            App.PayRollRpt18.queryById('lblType2').show();
            App.PayRollRpt18.queryById('btnJam').hide();
            App.PayRollRpt18.queryById('btnMande').hide();
            App.PayRollRpt18.queryById('btnExcel').hide();
            App.PayRollRpt18.queryById('txtMashmoolSal').hide();
            App.PayRollRpt18.queryById('lblMashmoolSal').hide();
            App.PayRollRpt18.queryById('lblTafkik').hide();
            App.PayRollRpt18.queryById('CboTafkik').hide();
            App.PayRollRpt18.queryById('CboReportType').hide();
            App.PayRollRpt18.queryById('lblReportType').hide();
            App.PayRollRpt18.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt18.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "21") {
            App.PayRollRpt21.setTitle("گزارش کسورات بانک ها");
            App.PayRollRpt21.queryById('lblTypeKomak').hide();
            App.PayRollRpt21.queryById('CboTypeKomak').hide();
            App.PayRollRpt21.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt21.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt21.queryById('CboCostCenterType').hide();
            App.PayRollRpt21.queryById('lblCostCenterType').hide();
            App.PayRollRpt21.queryById('lblNobatePardakht').show();
            App.PayRollRpt21.queryById('CboNobatePardakht').show();
            App.PayRollRpt21.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt21.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt21.queryById('lblType').hide();
            App.PayRollRpt21.queryById('CboType').hide();
            App.PayRollRpt21.queryById('lblTypeFish').hide();
            App.PayRollRpt21.queryById('CboTypeFish').hide();
            App.PayRollRpt21.queryById('lblName').hide();
            App.PayRollRpt21.queryById('txtName').hide();
            App.PayRollRpt21.queryById('CboYear').show();
            App.PayRollRpt21.queryById('CboMonth').show();
            App.PayRollRpt21.queryById('lblYear').show();
            App.PayRollRpt21.queryById('lblMonth').show();
            App.PayRollRpt21.queryById('CboTypeReport').hide();
            App.PayRollRpt21.queryById('lblTypeReport').hide();
            App.PayRollRpt21.queryById('CboTypeParametrha').hide();
            App.PayRollRpt21.queryById('lblTypeParametrha').hide();
            App.PayRollRpt21.queryById('CboType2').show();
            App.PayRollRpt21.queryById('lblType2').show();
            App.PayRollRpt21.queryById('btnJam').hide();
            App.PayRollRpt21.queryById('btnMande').hide();
            App.PayRollRpt21.queryById('btnExcel').hide();
            App.PayRollRpt21.queryById('txtMashmoolSal').hide();
            App.PayRollRpt21.queryById('lblMashmoolSal').hide();
            App.PayRollRpt21.queryById('lblTafkik').hide();
            App.PayRollRpt21.queryById('CboTafkik').hide();
            App.PayRollRpt21.queryById('CboReportType').hide();
            App.PayRollRpt21.queryById('lblReportType').hide();
            App.PayRollRpt21.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt21.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "22") {
            App.PayRollRpt22.setTitle("گزارش مالیات سالیانه");
            App.PayRollRpt22.queryById('lblTypeKomak').hide();
            App.PayRollRpt22.queryById('CboTypeKomak').hide();
            App.PayRollRpt22.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt22.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt22.queryById('CboCostCenterType').hide();
            App.PayRollRpt22.queryById('lblCostCenterType').hide();
            App.PayRollRpt22.queryById('lblNobatePardakht').hide();
            App.PayRollRpt22.queryById('CboNobatePardakht').hide();
            App.PayRollRpt22.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt22.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt22.queryById('lblType').hide();
            App.PayRollRpt22.queryById('CboType').hide();
            App.PayRollRpt22.queryById('lblTypeFish').hide();
            App.PayRollRpt22.queryById('CboTypeFish').hide();
            App.PayRollRpt22.queryById('lblName').hide();
            App.PayRollRpt22.queryById('txtName').hide();
            App.PayRollRpt22.queryById('CboYear').show();
            App.PayRollRpt22.queryById('CboMonth').hide();
            App.PayRollRpt22.queryById('lblYear').show();
            App.PayRollRpt22.queryById('lblMonth').hide();
            App.PayRollRpt22.queryById('CboTypeReport').hide();
            App.PayRollRpt22.queryById('lblTypeReport').hide();
            App.PayRollRpt22.queryById('CboTypeParametrha').hide();
            App.PayRollRpt22.queryById('lblTypeParametrha').hide();
            App.PayRollRpt22.queryById('CboType2').hide();
            App.PayRollRpt22.queryById('lblType2').hide();
            App.PayRollRpt22.queryById('btnJam').hide();
            App.PayRollRpt22.queryById('btnMande').hide();
            App.PayRollRpt22.queryById('btnExcel').hide();
            App.PayRollRpt22.queryById('txtMashmoolSal').show();
            App.PayRollRpt22.queryById('lblMashmoolSal').show();
            App.PayRollRpt22.queryById('lblTafkik').hide();
            App.PayRollRpt22.queryById('CboTafkik').hide();
            App.PayRollRpt22.queryById('CboReportType').hide();
            App.PayRollRpt22.queryById('lblReportType').hide();
            App.PayRollRpt22.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt22.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "23") {
            App.PayRollRpt23.setTitle("گزارش فیش پرداخت اضافه کاری");
            App.PayRollRpt23.queryById('lblTypeKomak').hide();
            App.PayRollRpt23.queryById('CboTypeKomak').hide();
            App.PayRollRpt23.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt23.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt23.queryById('CboCostCenterType').hide();
            App.PayRollRpt23.queryById('lblCostCenterType').hide();
            App.PayRollRpt23.queryById('lblNobatePardakht').show();
            App.PayRollRpt23.queryById('CboNobatePardakht').show();
            App.PayRollRpt23.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt23.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt23.queryById('lblType').show();
            App.PayRollRpt23.queryById('CboType').show();
            App.PayRollRpt23.queryById('lblTypeFish').hide();
            App.PayRollRpt23.queryById('CboTypeFish').hide();
            App.PayRollRpt23.queryById('lblName').show();
            App.PayRollRpt23.queryById('txtName').show();
            App.PayRollRpt23.queryById('CboYear').show();
            App.PayRollRpt23.queryById('CboMonth').show();
            App.PayRollRpt23.queryById('lblYear').show();
            App.PayRollRpt23.queryById('lblMonth').show();
            App.PayRollRpt23.queryById('CboTypeReport').hide();
            App.PayRollRpt23.queryById('lblTypeReport').hide();
            App.PayRollRpt23.queryById('CboTypeParametrha').hide();
            App.PayRollRpt23.queryById('lblTypeParametrha').hide();
            App.PayRollRpt23.queryById('CboType2').hide();
            App.PayRollRpt23.queryById('lblType2').hide();
            App.PayRollRpt23.queryById('btnJam').hide();
            App.PayRollRpt23.queryById('btnMande').hide();
            App.PayRollRpt23.queryById('btnExcel').hide();
            App.PayRollRpt23.queryById('txtMashmoolSal').hide();
            App.PayRollRpt23.queryById('lblMashmoolSal').hide();
            App.PayRollRpt23.queryById('lblTafkik').hide();
            App.PayRollRpt23.queryById('CboTafkik').hide();
            App.PayRollRpt23.queryById('CboReportType').hide();
            App.PayRollRpt23.queryById('lblReportType').hide();
            App.PayRollRpt23.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt23.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "24") {
            App.PayRollRpt24.setTitle("گزارش فیش پرداخت تعطیل کاری");
            App.PayRollRpt24.queryById('lblTypeKomak').hide();
            App.PayRollRpt24.queryById('CboTypeKomak').hide();
            App.PayRollRpt24.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt24.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt24.queryById('CboCostCenterType').hide();
            App.PayRollRpt24.queryById('lblCostCenterType').hide();
            App.PayRollRpt24.queryById('lblNobatePardakht').show();
            App.PayRollRpt24.queryById('CboNobatePardakht').show();
            App.PayRollRpt24.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt24.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt24.queryById('lblType').show();
            App.PayRollRpt24.queryById('CboType').show();
            App.PayRollRpt24.queryById('lblTypeFish').hide();
            App.PayRollRpt24.queryById('CboTypeFish').hide();
            App.PayRollRpt24.queryById('lblName').show();
            App.PayRollRpt24.queryById('txtName').show();
            App.PayRollRpt24.queryById('CboYear').show();
            App.PayRollRpt24.queryById('CboMonth').show();
            App.PayRollRpt24.queryById('lblYear').show();
            App.PayRollRpt24.queryById('lblMonth').show();
            App.PayRollRpt24.queryById('CboTypeReport').hide();
            App.PayRollRpt24.queryById('lblTypeReport').hide();
            App.PayRollRpt24.queryById('CboTypeParametrha').hide();
            App.PayRollRpt24.queryById('lblTypeParametrha').hide();
            App.PayRollRpt24.queryById('CboType2').hide();
            App.PayRollRpt24.queryById('lblType2').hide();
            App.PayRollRpt24.queryById('btnJam').hide();
            App.PayRollRpt24.queryById('btnMande').hide();
            App.PayRollRpt24.queryById('btnExcel').hide();
            App.PayRollRpt24.queryById('txtMashmoolSal').hide();
            App.PayRollRpt24.queryById('lblMashmoolSal').hide();
            App.PayRollRpt24.queryById('lblTafkik').hide();
            App.PayRollRpt24.queryById('CboTafkik').hide();
            App.PayRollRpt24.queryById('CboReportType').hide();
            App.PayRollRpt24.queryById('lblReportType').hide();
            App.PayRollRpt24.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt24.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "25") {
            App.PayRollRpt25.setTitle("گزارش فیش پرداخت کمک های غیرنقدی");
            App.PayRollRpt25.queryById('lblTypeKomak').show();
            App.PayRollRpt25.queryById('CboTypeKomak').show();
            App.PayRollRpt25.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt25.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt25.queryById('CboCostCenterType').hide();
            App.PayRollRpt25.queryById('lblCostCenterType').hide();
            App.PayRollRpt25.queryById('lblNobatePardakht').hide();
            App.PayRollRpt25.queryById('CboNobatePardakht').hide();
            App.PayRollRpt25.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt25.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt25.queryById('lblType').show();
            App.PayRollRpt25.queryById('CboType').show();
            App.PayRollRpt25.queryById('lblTypeFish').hide();
            App.PayRollRpt25.queryById('CboTypeFish').hide();
            App.PayRollRpt25.queryById('lblName').show();
            App.PayRollRpt25.queryById('txtName').show();
            App.PayRollRpt25.queryById('CboYear').show();
            App.PayRollRpt25.queryById('CboMonth').show();
            App.PayRollRpt25.queryById('lblYear').show();
            App.PayRollRpt25.queryById('lblMonth').show();
            App.PayRollRpt25.queryById('CboTypeReport').hide();
            App.PayRollRpt25.queryById('lblTypeReport').hide();
            App.PayRollRpt25.queryById('CboTypeParametrha').hide();
            App.PayRollRpt25.queryById('lblTypeParametrha').hide();
            App.PayRollRpt25.queryById('CboType2').hide();
            App.PayRollRpt25.queryById('lblType2').hide();
            App.PayRollRpt25.queryById('btnJam').hide();
            App.PayRollRpt25.queryById('btnMande').hide();
            App.PayRollRpt25.queryById('btnExcel').hide();
            App.PayRollRpt25.queryById('txtMashmoolSal').hide();
            App.PayRollRpt25.queryById('lblMashmoolSal').hide();
            App.PayRollRpt25.queryById('lblTafkik').hide();
            App.PayRollRpt25.queryById('CboTafkik').hide();
            App.PayRollRpt25.queryById('CboReportType').hide();
            App.PayRollRpt25.queryById('lblReportType').hide();
            App.PayRollRpt25.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt25.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "26") {
            App.PayRollRpt26.setTitle("گزارش فیش پرداخت سایر پرداخت ها");
            App.PayRollRpt26.queryById('lblTypeKomak').hide();
            App.PayRollRpt26.queryById('CboTypeKomak').hide();
            App.PayRollRpt26.queryById('lblMarhalePardakht').show();
            App.PayRollRpt26.queryById('CboMarhalePardakht').show();
            App.PayRollRpt26.queryById('CboCostCenterType').hide();
            App.PayRollRpt26.queryById('lblCostCenterType').hide();
            App.PayRollRpt26.queryById('lblNobatePardakht').show();
            App.PayRollRpt26.queryById('CboNobatePardakht').show();
            App.PayRollRpt26.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt26.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt26.queryById('lblType').show();
            App.PayRollRpt26.queryById('CboType').show();
            App.PayRollRpt26.queryById('lblTypeFish').hide();
            App.PayRollRpt26.queryById('CboTypeFish').hide();
            App.PayRollRpt26.queryById('lblName').show();
            App.PayRollRpt26.queryById('txtName').show();
            App.PayRollRpt26.queryById('CboYear').show();
            App.PayRollRpt26.queryById('CboMonth').show();
            App.PayRollRpt26.queryById('lblYear').show();
            App.PayRollRpt26.queryById('lblMonth').show();
            App.PayRollRpt26.queryById('CboTypeReport').hide();
            App.PayRollRpt26.queryById('lblTypeReport').hide();
            App.PayRollRpt26.queryById('CboTypeParametrha').hide();
            App.PayRollRpt26.queryById('lblTypeParametrha').hide();
            App.PayRollRpt26.queryById('CboType2').hide();
            App.PayRollRpt26.queryById('lblType2').hide();
            App.PayRollRpt26.queryById('btnJam').hide();
            App.PayRollRpt26.queryById('btnMande').hide();
            App.PayRollRpt26.queryById('btnExcel').hide();
            App.PayRollRpt26.queryById('txtMashmoolSal').hide();
            App.PayRollRpt26.queryById('lblMashmoolSal').hide();
            App.PayRollRpt26.queryById('lblTafkik').hide();
            App.PayRollRpt26.queryById('CboTafkik').hide();
            App.PayRollRpt26.queryById('CboReportType').hide();
            App.PayRollRpt26.queryById('lblReportType').hide();
            App.PayRollRpt26.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt26.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "27") {
            App.PayRollRpt27.setTitle("گزارش فیش پرداخت مأموریت");
            App.PayRollRpt27.queryById('lblTypeKomak').hide();
            App.PayRollRpt27.queryById('CboTypeKomak').hide();
            App.PayRollRpt27.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt27.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt27.queryById('CboCostCenterType').hide();
            App.PayRollRpt27.queryById('lblCostCenterType').hide();
            App.PayRollRpt27.queryById('lblNobatePardakht').show();
            App.PayRollRpt27.queryById('CboNobatePardakht').show();
            App.PayRollRpt27.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt27.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt27.queryById('lblType').show();
            App.PayRollRpt27.queryById('CboType').show();
            App.PayRollRpt27.queryById('lblTypeFish').hide();
            App.PayRollRpt27.queryById('CboTypeFish').hide();
            App.PayRollRpt27.queryById('lblName').show();
            App.PayRollRpt27.queryById('txtName').show();
            App.PayRollRpt27.queryById('CboYear').show();
            App.PayRollRpt27.queryById('CboMonth').show();
            App.PayRollRpt27.queryById('lblYear').show();
            App.PayRollRpt27.queryById('lblMonth').show();
            App.PayRollRpt27.queryById('CboTypeReport').hide();
            App.PayRollRpt27.queryById('lblTypeReport').hide();
            App.PayRollRpt27.queryById('CboTypeParametrha').hide();
            App.PayRollRpt27.queryById('lblTypeParametrha').hide();
            App.PayRollRpt27.queryById('CboType2').hide();
            App.PayRollRpt27.queryById('lblType2').hide();
            App.PayRollRpt27.queryById('btnJam').hide();
            App.PayRollRpt27.queryById('btnMande').hide();
            App.PayRollRpt27.queryById('btnExcel').hide();
            App.PayRollRpt27.queryById('txtMashmoolSal').hide();
            App.PayRollRpt27.queryById('lblMashmoolSal').hide();
            App.PayRollRpt27.queryById('lblTafkik').hide();
            App.PayRollRpt27.queryById('CboTafkik').hide();
            App.PayRollRpt27.queryById('CboReportType').hide();
            App.PayRollRpt27.queryById('lblReportType').hide();
            App.PayRollRpt27.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt27.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "28") {
            App.PayRollRpt28.setTitle("گزارش فیش پرداخت مرخصی");
            App.PayRollRpt28.queryById('lblTypeKomak').hide();
            App.PayRollRpt28.queryById('CboTypeKomak').hide();
            App.PayRollRpt28.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt28.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt28.queryById('CboCostCenterType').hide();
            App.PayRollRpt28.queryById('lblCostCenterType').hide();
            App.PayRollRpt28.queryById('lblNobatePardakht').show();
            App.PayRollRpt28.queryById('CboNobatePardakht').show();
            App.PayRollRpt28.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt28.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt28.queryById('lblType').show();
            App.PayRollRpt28.queryById('CboType').show();
            App.PayRollRpt28.queryById('lblTypeFish').hide();
            App.PayRollRpt28.queryById('CboTypeFish').hide();
            App.PayRollRpt28.queryById('lblName').show();
            App.PayRollRpt28.queryById('txtName').show();
            App.PayRollRpt28.queryById('CboYear').show();
            App.PayRollRpt28.queryById('CboMonth').show();
            App.PayRollRpt28.queryById('lblYear').show();
            App.PayRollRpt28.queryById('lblMonth').show();
            App.PayRollRpt28.queryById('CboTypeReport').hide();
            App.PayRollRpt28.queryById('lblTypeReport').hide();
            App.PayRollRpt28.queryById('CboTypeParametrha').hide();
            App.PayRollRpt28.queryById('lblTypeParametrha').hide();
            App.PayRollRpt28.queryById('CboType2').hide();
            App.PayRollRpt28.queryById('lblType2').hide();
            App.PayRollRpt28.queryById('btnJam').hide();
            App.PayRollRpt28.queryById('btnMande').hide();
            App.PayRollRpt28.queryById('btnExcel').hide();
            App.PayRollRpt28.queryById('txtMashmoolSal').hide();
            App.PayRollRpt28.queryById('lblMashmoolSal').hide();
            App.PayRollRpt28.queryById('lblTafkik').hide();
            App.PayRollRpt28.queryById('CboTafkik').hide();
            App.PayRollRpt28.queryById('CboReportType').hide();
            App.PayRollRpt28.queryById('lblReportType').hide();
            App.PayRollRpt28.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt28.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "32") {
            App.PayRollRpt32.setTitle("گزارش لیست افراد تحت پوشش بیمه تکمیلی");
            App.PayRollRpt32.queryById('lblTypeKomak').hide();
            App.PayRollRpt32.queryById('CboTypeKomak').hide();
            App.PayRollRpt32.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt32.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt32.queryById('CboCostCenterType').hide();
            App.PayRollRpt32.queryById('lblCostCenterType').hide();
            App.PayRollRpt32.queryById('lblNobatePardakht').hide();
            App.PayRollRpt32.queryById('CboNobatePardakht').hide();
            App.PayRollRpt32.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt32.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt32.queryById('lblType').hide();
            App.PayRollRpt32.queryById('CboType').hide();
            App.PayRollRpt32.queryById('lblTypeFish').hide();
            App.PayRollRpt32.queryById('CboTypeFish').hide();
            App.PayRollRpt32.queryById('lblName').hide();
            App.PayRollRpt32.queryById('txtName').hide();
            App.PayRollRpt32.queryById('CboYear').show();
            App.PayRollRpt32.queryById('CboMonth').hide();
            App.PayRollRpt32.queryById('lblYear').show();
            App.PayRollRpt32.queryById('lblMonth').hide();
            App.PayRollRpt32.queryById('CboTypeReport').hide();
            App.PayRollRpt32.queryById('lblTypeReport').hide();
            App.PayRollRpt32.queryById('CboTypeParametrha').hide();
            App.PayRollRpt32.queryById('lblTypeParametrha').hide();
            App.PayRollRpt32.queryById('CboType2').hide();
            App.PayRollRpt32.queryById('lblType2').hide();
            App.PayRollRpt32.queryById('btnJam').hide();
            App.PayRollRpt32.queryById('btnMande').hide();
            App.PayRollRpt32.queryById('btnExcel').hide();
            App.PayRollRpt32.queryById('txtMashmoolSal').hide();
            App.PayRollRpt32.queryById('lblMashmoolSal').hide();
            App.PayRollRpt32.queryById('lblCostCenter').show();
            App.PayRollRpt32.queryById('CboCostCenter').show();
            App.PayRollRpt32.queryById('lblTafkik').hide();
            App.PayRollRpt32.queryById('CboTafkik').hide();
            App.PayRollRpt32.queryById('CboReportType').hide();
            App.PayRollRpt32.queryById('lblReportType').hide();
            App.PayRollRpt32.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt32.queryById('lblReportTypeSanad3').hide();
        }
        else if ('@ViewBag.State' == "33") {
            App.PayRollRpt33.setTitle("گزارش فیش پرداخت مزایای جانبی رفاهی");
            App.PayRollRpt33.queryById('lblTypeKomak').hide();
            App.PayRollRpt33.queryById('CboTypeKomak').hide();
            App.PayRollRpt33.queryById('lblMarhalePardakht').hide();
            App.PayRollRpt33.queryById('CboMarhalePardakht').hide();
            App.PayRollRpt33.queryById('CboCostCenterType').hide();
            App.PayRollRpt33.queryById('lblCostCenterType').hide();
            App.PayRollRpt33.queryById('lblNobatePardakht').show();
            App.PayRollRpt33.queryById('CboNobatePardakht').show();
            App.PayRollRpt33.queryById('CboTypeEstekhdam').hide();
            App.PayRollRpt33.queryById('lblTypeEstekhdam').hide();
            App.PayRollRpt33.queryById('lblType').show();
            App.PayRollRpt33.queryById('CboType').show();
            App.PayRollRpt33.queryById('lblTypeFish').hide();
            App.PayRollRpt33.queryById('CboTypeFish').hide();
            App.PayRollRpt33.queryById('lblName').show();
            App.PayRollRpt33.queryById('txtName').show();
            App.PayRollRpt33.queryById('CboYear').show();
            App.PayRollRpt33.queryById('CboMonth').show();
            App.PayRollRpt33.queryById('CboMonth').setReadOnly(false);
            App.PayRollRpt33.queryById('lblYear').show();
            App.PayRollRpt33.queryById('lblMonth').show();
            App.PayRollRpt33.queryById('CboTypeReport').hide();
            App.PayRollRpt33.queryById('lblTypeReport').hide();
            App.PayRollRpt33.queryById('CboTypeParametrha').hide();
            App.PayRollRpt33.queryById('lblTypeParametrha').hide();
            App.PayRollRpt33.queryById('CboType2').hide();
            App.PayRollRpt33.queryById('lblType2').hide();
            App.PayRollRpt33.queryById('btnJam').hide();
            App.PayRollRpt33.queryById('btnMande').hide();
            App.PayRollRpt33.queryById('btnExcel').hide();
            App.PayRollRpt33.queryById('txtMashmoolSal').hide();
            App.PayRollRpt33.queryById('lblMashmoolSal').hide();
            App.PayRollRpt33.queryById('lblCostCenter').show();
            App.PayRollRpt33.queryById('CboCostCenter').show();
            App.PayRollRpt33.queryById('lblTafkik').hide();
            App.PayRollRpt33.queryById('CboTafkik').hide();
            App.PayRollRpt33.queryById('CboReportType').hide();
            App.PayRollRpt33.queryById('lblReportType').hide();
            App.PayRollRpt33.queryById('CboReportTypeSanad3').hide();
            App.PayRollRpt33.queryById('lblReportTypeSanad3').hide();
        }
    }

    var addKeyMapPayRollRpt = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9],
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    if ('@ViewBag.State' == "11") {
                        var keyfield = App.PayRollRpt11.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboType") {
                            if (App.PayRollRpt11.queryById('CboType').getValue() == "0") {
                                Print();
                                return;
                            }
                            else {
                                nextfld = App.PayRollRpt11.queryById('txtName');
                            }
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt11.queryById('CboType');
                        }
                        else if (keyfield.itemId == "txtName") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "1") {
                        var keyfield = App.PayRollRpt1.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt1.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt1.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt1.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "4") {
                        var keyfield = App.PayRollRpt4.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt4.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt4.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt4.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "6") {
                        var keyfield = App.PayRollRpt6.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt6.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt6.queryById('CboCostCenterType2');
                        }
                        else if (keyfield.itemId == "CboCostCenterType2") {
                            nextfld = App.PayRollRpt6.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt6.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            Print();
                            return;
                        }
                        else if (keyfield.itemId == "CboCostCenterType") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "8") {
                        var keyfield = App.PayRollRpt8.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt8.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt8.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "31") {
                        var keyfield = App.PayRollRpt31.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt31.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt31.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt31.queryById('CboNobatePardakht');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "2") {
                        var keyfield = App.PayRollRpt2.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt2.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt2.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "16") {

                        var keyfield = App.PayRollRpt16.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt16.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt16.queryById('CboTypeReport');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt16.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboTypeReport") {
                            nextfld = App.PayRollRpt16.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            nextfld = App.PayRollRpt16.queryById('CboMarhalePardakht');
                        }
                        else if (keyfield.itemId == "CboMarhalePardakht") {
                            nextfld = App.PayRollRpt16.queryById('CboGrouhBandi');
                        }
                        else if (keyfield.itemId == "CboGrouhBandi") {
                            nextfld = App.PayRollRpt16.queryById('CboReportType');
                        }
                        else if (keyfield.itemId == "CboReportType") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "29") {

                        var keyfield = App.PayRollRpt29.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt29.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt29.queryById('CboTypeReport');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt29.queryById('CboTaYear');
                        }
                        else if (keyfield.itemId == "CboTaYear") {
                            nextfld = App.PayRollRpt29.queryById('CboTaMonth');
                        }
                        else if (keyfield.itemId == "CboTaMonth") {
                            nextfld = App.PayRollRpt29.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboTypeReport") {
                            nextfld = App.PayRollRpt29.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            nextfld = App.PayRollRpt29.queryById('CboMarhalePardakht');
                        }
                        else if (keyfield.itemId == "CboMarhalePardakht") {
                            nextfld = App.PayRollRpt29.queryById('CboGrouhBandi');
                        }
                        else if (keyfield.itemId == "CboGrouhBandi") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "3") {
                        var keyfield = App.PayRollRpt3.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt3.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt3.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "9") {
                        var keyfield = App.PayRollRpt9.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt9.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt9.queryById('CboType2');
                        }
                        else if (keyfield.itemId == "CboType2") {
                            nextfld = App.PayRollRpt9.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt9.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            if (App.PayRollRpt9.queryById('CboType2').getValue() == "0") {
                                Print();
                                return;
                            }
                            else {
                                nextfld = App.PayRollRpt9.queryById('CboCostCenterType');
                            }
                        }
                        else if (keyfield.itemId == "CboCostCenterType") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "17") {
                        var keyfield = App.PayRollRpt17.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt17.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt17.queryById('CboType2');
                        }
                        else if (keyfield.itemId == "CboType2") {
                            nextfld = App.PayRollRpt17.queryById('CboTypeParametrha');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt17.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboTypeParametrha") {
                            nextfld = App.PayRollRpt17.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            if (App.PayRollRpt17.queryById('CboType2').getValue() == "0") {
                                Print();
                                return;
                            }
                            else {
                                nextfld = App.PayRollRpt17.queryById('CboCostCenterType');
                            }
                        }
                        else if (keyfield.itemId == "CboCostCenterType") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "13") {
                        var keyfield = App.PayRollRpt13.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt13.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt13.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt13.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "18") {
                        var keyfield = App.PayRollRpt18.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt18.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt18.queryById('CboType2');
                        }
                        else if (keyfield.itemId == "CboType2") {
                            nextfld = App.PayRollRpt18.queryById('CboTypeParametrha');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt18.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboTypeParametrha") {
                            nextfld = App.PayRollRpt18.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            if (App.PayRollRpt18.queryById('CboType2').getValue() == "0") {
                                Print();
                                return;
                            }
                            else {
                                nextfld = App.PayRollRpt18.queryById('CboCostCenterType');
                            }
                        }
                        else if (keyfield.itemId == "CboCostCenterType") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }

                    if ('@ViewBag.State' == "14") {
                        var keyfield = App.PayRollRpt14.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt14.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt14.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt14.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            nextfld = App.PayRollRpt14.queryById('CboTafkik');
                        }
                        else if (keyfield.itemId == "CboTafkik") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "15") {
                        var keyfield = App.PayRollRpt15.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt15.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt15.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt15.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "30") {
                        var keyfield = App.PayRollRpt30.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt30.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt30.queryById('CboReportTypeSanad3');
                        }
                        else if (keyfield.itemId == "CboReportTypeSanad3") {
                            nextfld = App.PayRollRpt30.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt30.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            nextfld = App.PayRollRpt30.queryById('CboTypeHesab');
                        }
                        else if (keyfield.itemId == "CboTypeHesab") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "21") {
                        var keyfield = App.PayRollRpt21.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt21.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt21.queryById('CboType2');
                        }
                        else if (keyfield.itemId == "CboType2") {
                            nextfld = App.PayRollRpt21.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt21.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            if (App.PayRollRpt21.queryById('CboType2').getValue() == "0") {
                                Print();
                                return;
                            }
                            else {
                                nextfld = App.PayRollRpt21.queryById('CboCostCenterType');
                            }
                        }
                        else if (keyfield.itemId == "CboCostCenterType") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "5") {
                        var keyfield = App.PayRollRpt5.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt5.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt5.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "22") {
                        var keyfield = App.PayRollRpt22.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt22.queryById('txtMashmoolSal');
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt22.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "txtMashmoolSal") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "10") {

                        var keyfield = App.PayRollRpt10.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboType") {
                            if (App.PayRollRpt10.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt10.queryById('CboYear');
                            }
                            else {
                                nextfld = App.PayRollRpt10.queryById('txtName');
                            }
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt10.queryById('CboTypeFish');
                        }
                        else if (keyfield.itemId == "txtName") {
                            nextfld = App.PayRollRpt10.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt10.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt10.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            if (App.PayRollRpt10.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt10.queryById('CboCostCenter');
                            }
                            else {
                                return;
                                /*nextfld = App.PayRollRpt10.queryById('CboTypeHesab');*/
                            }
                        }
                        else if (keyfield.itemId == "CboCostCenter") {
                            if (App.PayRollRpt10.queryById('CboCostCenter').getValue() == "1" || App.PayRollRpt10.queryById('CboCostCenter').getValue() == "3") {
                                return;
                                /*nextfld = App.PayRollRpt10.queryById('CboTypeHesab');*/
                            }
                            else {
                                nextfld = App.PayRollRpt10.queryById('CboCostCenterType');
                            }
                        }
                        else if (keyfield.itemId == "CboTypeFish") {
                            nextfld = App.PayRollRpt10.queryById('CboType');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }

                    if ('@ViewBag.State' == "33") {

                        var keyfield = App.PayRollRpt33.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboType") {
                            if (App.PayRollRpt33.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt33.queryById('CboYear');
                            }
                            else {
                                nextfld = App.PayRollRpt33.queryById('txtName');
                            }
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt33.queryById('CboType');
                        }
                        else if (keyfield.itemId == "txtName") {
                            nextfld = App.PayRollRpt33.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt33.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt33.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            if (App.PayRollRpt33.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt33.queryById('CboCostCenter');
                            }
                            else {
                                Print();
                                return;
                            }
                        }
                        else if (keyfield.itemId == "CboCostCenter") {
                            if (App.PayRollRpt33.queryById('CboCostCenter').getValue() == "3") {
                                return;
                            }
                            else if (App.PayRollRpt33.queryById('CboCostCenter').getValue() == "1") {
                                Print();
                                return;
                            }
                            else {
                                nextfld = App.PayRollRpt33.queryById('CboCostCenterType');
                            }
                        }
                        else if (keyfield.itemId == "CboCostCenterType") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }

                    if ('@ViewBag.State' == "12") {
                        var keyfield = App.PayRollRpt12.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboType") {
                            if (App.PayRollRpt12.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt12.queryById('CboYear');
                            }
                            else {
                                nextfld = App.PayRollRpt12.queryById('txtName');
                            }
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt12.queryById('CboType');
                        }
                        else if (keyfield.itemId == "txtName") {
                            nextfld = App.PayRollRpt12.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt12.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt12.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "23") {
                        var keyfield = App.PayRollRpt23.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;
                        if (keyfield.itemId == "CboType") {
                            if (App.PayRollRpt23.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt23.queryById('CboYear');
                            }
                            else {
                                nextfld = App.PayRollRpt23.queryById('txtName');
                            }
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt23.queryById('CboType');
                        }
                        else if (keyfield.itemId == "txtName") {
                            nextfld = App.PayRollRpt23.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt23.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt23.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "24") {
                        var keyfield = App.PayRollRpt24.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;
                        if (keyfield.itemId == "CboType") {
                            if (App.PayRollRpt24.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt24.queryById('CboYear');
                            }
                            else {
                                nextfld = App.PayRollRpt24.queryById('txtName');
                            }
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt24.queryById('CboType');
                        }
                        else if (keyfield.itemId == "txtName") {
                            nextfld = App.PayRollRpt24.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt24.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt24.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "25") {
                        var keyfield = App.PayRollRpt25.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboType") {
                            if (App.PayRollRpt25.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt25.queryById('CboYear');
                            }
                            else {
                                nextfld = App.PayRollRpt25.queryById('txtName');
                            }
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt25.queryById('CboType');
                        }
                        else if (keyfield.itemId == "txtName") {
                            nextfld = App.PayRollRpt25.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt25.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt25.queryById('CboTypeKomak');
                        }
                        else if (keyfield.itemId == "CboTypeKomak") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "26") {
                        var keyfield = App.PayRollRpt26.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboType") {
                            if (App.PayRollRpt26.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt26.queryById('CboYear');
                            }
                            else {
                                nextfld = App.PayRollRpt26.queryById('txtName');
                            }
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt26.queryById('CboType');
                        }
                        else if (keyfield.itemId == "txtName") {
                            nextfld = App.PayRollRpt26.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt26.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt26.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            nextfld = App.PayRollRpt26.queryById('CboMarhalePardakht');
                        }
                        else if (keyfield.itemId == "CboMarhalePardakht") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "27") {
                        var keyfield = App.PayRollRpt27.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboType") {
                            if (App.PayRollRpt27.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt27.queryById('CboYear');
                            }
                            else {
                                nextfld = App.PayRollRpt27.queryById('txtName');
                            }
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt27.queryById('CboType');
                        }
                        else if (keyfield.itemId == "txtName") {
                            nextfld = App.PayRollRpt27.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt27.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt27.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "28") {
                        var keyfield = App.PayRollRpt28.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboType") {
                            if (App.PayRollRpt28.queryById('CboType').getValue() == "0") {
                                nextfld = App.PayRollRpt28.queryById('CboYear');
                            }
                            else {
                                nextfld = App.PayRollRpt28.queryById('txtName');
                            }
                        }
                        else if (keyfield.itemId == "CboOrgan") {
                            nextfld = App.PayRollRpt28.queryById('CboType');
                        }
                        else if (keyfield.itemId == "txtName") {
                            nextfld = App.PayRollRpt28.queryById('CboYear');
                        }
                        else if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt28.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.PayRollRpt28.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            Print();
                            return;
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "32") {

                        var keyfield = App.PayRollRpt32.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.PayRollRpt10.queryById('CboCostCenter');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                }
            }]
        });
    };
   

    function ChangeType() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboType = Ext.getCmp(tabId).queryById('CboType');
        var txtName = Ext.getCmp(tabId).queryById('txtName');
        var lblName = Ext.getCmp(tabId).queryById('lblName');
        var CboCostCenter = Ext.getCmp(tabId).queryById('CboCostCenter');
        var lblCostCenter = Ext.getCmp(tabId).queryById('lblCostCenter');

        txtName.icon.dom.classList.remove('custom-PayRollRpticon2');
        if (tabId != "PayRollRpt10") {/*فیش حقوقی نبود*/
            if (CboType.getValue() != "0") {
                if (tabId == "PayRollRpt33") {/*انفرادی*/
                    Ext.getCmp(tabId).queryById('CboOrgan').setWidth(280);
                    Ext.getCmp(tabId).queryById('txtName').setWidth(280);
                }
                else {
                    Ext.getCmp(tabId).queryById('CboOrgan').setWidth(275);
                    Ext.getCmp(tabId).queryById('txtName').setWidth(275);
                }
                txtName.icon.dom.classList.add('custom-PayRollRpticon2');
            }
            else {
                Ext.getCmp(tabId).queryById('CboOrgan').setWidth(233);
                Ext.getCmp(tabId).queryById('txtName').setWidth(233);
            }
        }

        if (CboType.getValue() == "0") {/*گروهی*/
            txtName.hide();
            lblName.hide();

            if (tabId == "PayRollRpt10" || tabId == "PayRollRpt33") {

                CboCostCenter.setValue("1");

                CboCostCenter.show();
                lblCostCenter.show();
                ChangeCostCenterS();
            }

        }
        else {
            txtName.show();
            lblName.show();
            if (tabId == "PayRollRpt10" || tabId == "PayRollRpt33") {
                CboCostCenter.setValue("1");

                CboCostCenter.hide();
                lblCostCenter.hide();
                ChangeCostCenterS();

            }
        }
    }

    /*function setYearClass() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetYearClass',
            params: {
                Year:App.SayerPardakhthaWin.queryById("CboYear").getValue()
            }
        });
    }

    function setMonthClass() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetMonthClass',
            params: {
                Month: App.SayerPardakhthaWin.queryById("CboMonth").getValue()
            }
        });
    }

    function setCostClass() {
        var value = "";
        if (App.SayerPardakhthaWin.queryById('CboCostCenter').getValue() == "1") {
            value = "";
        }
        else {
            value = App.SayerPardakhthaWin.queryById('CboCostCenterType').getValue();
        }
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetCostClass',
            params: {
                Value: value
            }
        });
    }

    function setNobatePardakhtCalss() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/setNobatePardakhtCalss',
            params: {
                NobatePardakht: App.SayerPardakhthaWin.queryById("CboNobatePardakht").getValue()
            }
        });
    }*/

    function setValueYearRpt() {
        var CboYear = Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboYear');
        CboYear.setValue('@ViewBag.Year');
    }
    function setValueTaYearRpt() {
        var CboTaYear = Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboTaYear');
        CboTaYear.setValue('@ViewBag.Year');
    }

    function setValueCostCenterType() {
        if ('@ViewBag.CostCenter' == "") {
            var CboCostCenterType = Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboCostCenterType');
            CboCostCenterType.setValue(CboCostCenterType.store.getAt(0));
        }
        else {
            var CboCostCenterType = Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboCostCenterType');
            CboCostCenterType.setValue('@ViewBag.CostCenter');
        }
    }
    function setValueCostCenterType2() {
        if ('@ViewBag.CostCenter' == "") {
            var CboCostCenterType2 = Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboCostCenterType2');
            CboCostCenterType2.setValue(CboCostCenterType2.store.getAt(0));
        }
        else {
            var CboCostCenterType2 = Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboCostCenterType2');
            CboCostCenterType2.setValue('@ViewBag.CostCenter');
        }
    }


    function setValueNobatePardakhtRpt() {
        var CboNobatePardakht = Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboNobatePardakht');
        CboNobatePardakht.setValue('@ViewBag.nobatePardakht');
        if (@*'@ViewBag.State' == 30 ||*@ '@ViewBag.State' == 6) {
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboNobatePardakht').setWidth(200);
        }
        else {
            Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboNobatePardakht').setWidth(100);
        }
    }

    function setValueMonthRpt() {
        var CboMonth = Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboMonth');
        CboMonth.setValue('@ViewBag.Month');
        if ('@ViewBag.State' == "12") {
            CboMonth.setValue("12");
        }
    }
    function setValueTaMonthRpt() {
        var CboTaMonth = Ext.getCmp('PayRollRpt' + '@ViewBag.State').queryById('CboTaMonth');
        CboTaMonth.setValue('@ViewBag.Month');
        if ('@ViewBag.State' == "12") {
            CboTaMonth.setValue("12");
        }
    }


    function Print() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var CboTaYear = Ext.getCmp(tabId).queryById('CboTaYear');
        var CboTaMonth = Ext.getCmp(tabId).queryById('CboTaMonth');
        var nobatPardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var marhalePardakht = Ext.getCmp(tabId).queryById('CboMarhalePardakht');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboCostCenterType2 = Ext.getCmp(tabId).queryById('CboCostCenterType2');
        var CboTypeEstekhdam = Ext.getCmp(tabId).queryById('CboTypeEstekhdam');
        var CboType = Ext.getCmp(tabId).queryById('CboType');
        var CboTypeFish = Ext.getCmp(tabId).queryById('CboTypeFish');
        var txtName = Ext.getCmp(tabId).queryById('txtName');
        var fldIdPayPersonalInfo = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo');
        var CboTypeReport = Ext.getCmp(tabId).queryById('CboTypeReport');
        var CboType2 = Ext.getCmp(tabId).queryById('CboType2');
        var CboTypeParametrha = Ext.getCmp(tabId).queryById('CboTypeParametrha');
        var txtMashmoolSal = Ext.getCmp(tabId).queryById('txtMashmoolSal');
        var CboTypeKomak = Ext.getCmp(tabId).queryById('CboTypeKomak');
        var CboGrouhBandi = Ext.getCmp(tabId).queryById('CboGrouhBandi');
        var CboCostCenter = Ext.getCmp(tabId).queryById('CboCostCenter');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboTafkik = Ext.getCmp(tabId).queryById('CboTafkik');
        var CboOrgan = Ext.getCmp(tabId).queryById('CboOrgan');
        /*var CboTypeHesab = Ext.getCmp(tabId).queryById('CboTypeHesab');*/



        var height = App.PayWin.getHeight() - 255;
        var height2 = App.PayWin.getHeight() - 277;

        if (tabId.substring(10) == "1") {
            if (CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true) {

                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckListKhadamatDarmani',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                                + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListKhadamatDarmani?Year=" +
                                CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "2") {
            if (CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckListBimeOmr',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                                + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListBimeOmr?Year=" + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });

            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "3") {
            if (CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true) {

                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckListAghsateVam',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height +
                                "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListAghsateVam?Year=" + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "4") {
            if (CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true) {

                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckListPasAndaz',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height +
                                "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPasAndaz?Year=" + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "5") {
            if (CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true) {
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListMandePasAndaz?Year=" + CboYear.getValue() +
                    "&Month=" + CboMonth.getValue() + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "6") {
            if (CboYear.validate() == true && CboMonth.validate() == true && CboCostCenterType2.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true) {

                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckListMaliyat',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        CostCenterId: CboCostCenterType2.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        CostCenterName: CboCostCenterType2.getDisplayValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 +
                                "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListMaliyat?Year=" + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&CostCenterId=" + CboCostCenterType2.getValue() + "&OrganId=" + CboOrgan.getValue()
                   + "&nobatPardakht=" + nobatPardakht.getValue() + "&CostCenterName=" + CboCostCenterType2.getDisplayValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }

            @* else if (tabId.substring(10) == "7") {
            if (CboYear.validate() == true && CboMonth.validate() == true && CboCostCenterType.validate() == true && nobatPardakht.validate() == true && CboTypeEstekhdam.validate() == true) {
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 1200px;height: 390px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListMaliyat?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&CostCenterId=" + CboCostCenterType.getValue()
                    + "&nobatPardakht=" + nobatPardakht.getValue() + "&TypeEstekhdamId=" + CboTypeEstekhdam.getValue() + "&CostCenterName=" + CboCostCenterType.getDisplayValue() + "&State=7" + "'></object></center>");
            }
            else {
                return;
            }
       }*@

        else if (tabId.substring(10) == "8") {
            if (CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true) {

                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckListBimeTakmili',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                                + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListBimeTakmili?Year=" + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }

        else if (tabId.substring(10) == "9") {
            if (CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true) {
                var costid = 0, costname = '';
                var CboType2 = Ext.getCmp(tabId).queryById('CboType2');
                if (CboType2.getValue() != "0") {
                    costid = CboCostCenterType.getValue();
                    costname = CboCostCenterType.getDisplayValue();
                }
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckKosuratParam_Bank',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        CostCenterId: costid,
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                                + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFKosuratParam_Bank?CostCenterName=" + costname +
                                " &CostCenterId=" + costid + " &Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue()
                                + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "10") {
            var FieldName = "";
            var valid = true;
            var CostCenter_ChartId = 0;
            if (CboCostCenter.getValue() == 2) {
                if (CboCostCenterType.validate() == false)
                    valid = false;

                FieldName = "CostCenter";
                CostCenter_ChartId = CboCostCenterType.getValue();
            }
            else if (CboCostCenter.getValue() == 3) {
                if (NodeId == 0)
                    valid = false;

                FieldName = "ChartOrgan";
                CostCenter_ChartId = NodeId;
            }
            if (valid && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true) {

                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFFishHoghughi?Year=" + CboYear.getValue() + "&Month="
                    + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&Type=" + CboType.getValue() + "&PersonalId=" + fldIdPayPersonalInfo.getValue()
                    + "&TypeFish=" + CboTypeFish.getValue() + "&FieldName=" + FieldName + "&CostCenter_ChartId=" + CostCenter_ChartId + "&CalcType=" + CboTypeReport.getValue()
                    + "&FilterType=" + CboCostCenter.getValue() /*+ "&TypeHesab=" + CboTypeHesab.getValue()*/
                    + "&OrganId=" + CboOrgan.getValue()
                    + "&CostCenterId=" + CboCostCenterType.getValue() + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "33") {
            var FieldName = "";
            var valid = true;
            var CostCenter_ChartId = 0;
            if (CboType.getValue() == 1) {/*انفرادی*/
                if (txtName.validate()==false) {
                    valid = false;
                }
            }
            else {
                if (CboCostCenter.getValue() == 2) {
                    if (CboCostCenterType.validate() == false)
                        valid = false;

                    FieldName = "CostCenter";
                    CostCenter_ChartId = CboCostCenterType.getValue();
                }
                else if (CboCostCenter.getValue() == 3) {
                    if (NodeId == 0)
                        valid = false;

                    FieldName = "ChartOrgan";
                    CostCenter_ChartId = NodeId;
                }
            }
            var height3 = App.PayWin.getHeight() - 290;
            
            if (valid && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true) {

                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height3
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFFishBonKart?Year=" + CboYear.getValue() + "&Month="
                    + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&Type=" + CboType.getValue() + "&PersonalId=" + fldIdPayPersonalInfo.getValue()
                    + "&FieldName=" + FieldName + "&CostCenter_ChartId=" + CostCenter_ChartId + "&CalcType=" + CboTypeReport.getValue()
                    + "&FilterType=" + CboCostCenter.getValue()
                    + "&OrganId=" + CboOrgan.getValue()
                    + "&CostCenterId=" + CboCostCenterType.getValue() + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "11") {
            if ((CboType.getValue() == 1 && txtName.validate() == true && CboOrgan.validate() == true) || (CboType.getValue() == 0 && CboOrgan.validate() == true)) {
                var value = 0;
                if (CboType.getValue() == 1) {
                    value = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').getValue();
                }
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                /* Ext.net.DirectMethod.request({
                     url: '/PayRoll/Reports/CheckPayPersonalInfo',
                     params: {
                         value: value
                     },
                     success: function (data) {
                         if (data.AllowPrint) {*/
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFPayPersonalInfo?value=" + value + + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
                /*}
                else {
                    Ext.MessageBox.show({
                        msg: "اطلاعاتی جهت نمایش یافت نشد.",
                        icon: Ext.MessageBox.WARNING,
                        buttons: Ext.MessageBox.OK
                    });
                }
                Ext.net.Mask.hide();
            }
        });*/
                Ext.net.Mask.hide();
            }
            else {
                return;
            }
        }

        else if (tabId.substring(10) == "12") {
            if ((CboType.getValue() == 0 && nobatPardakht.validate() == true && CboYear.validate() == true && CboOrgan.validate() == true) || (CboType.getValue() == 1 && nobatPardakht.validate() == true && CboYear.validate() == true && txtName.validate() == true && CboOrgan.validate() == true)) {
                var PersonId = 0;
                if (CboType.getValue() == 1) {
                    PersonId = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').getValue();
                }
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 +
                    "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFFishEydi?Year=" + CboYear.getValue()
                    + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&PersonId=" + PersonId + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
            }
            else {
                return;
            }
        }

        else if (tabId.substring(10) == "13") {
            if (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true) {

                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckMotalebatekoli',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height +
                                "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFMotalebatekoli?Year=" + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&OrganId=" + CboOrgan.getValue() +
                                "&nobatPardakht=" + nobatPardakht.getValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }

        else if (tabId.substring(10) == "14") {
            if (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboTafkik.validate() == true && CboOrgan.validate() == true) {
                var Takhfif = false;
                if (CboTafkik.getValue() == "1")
                    Takhfif = true;

                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckSanadHesabdari1',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        Takhfif: Takhfif,
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height +
                                "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFSanadHesabdari1?Year=" + CboYear.getValue()
                                + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                                + "&Takhfif=" + Takhfif + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "15") {
            if (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckSanadHesabdari2',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                                + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFSanadHesabdari2?Year=" + CboYear.getValue()
                                + "&OrganId=" + CboOrgan.getValue() + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });

            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "30") {
            if (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true ) {

                var CboReportTypeSanad3 = App.PayRollRpt30.queryById('CboReportTypeSanad3').getValue();
                var CboTypeHesab = App.PayRollRpt30.queryById('CboTypeHesab').getValue();
                if (CboTypeHesab == "1") {
                    Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                    Ext.net.DirectMethod.request({
                        url: '/PayRoll/Reports/CheckSanadHesabdari3',
                        params: {
                            Year: CboYear.getValue(),
                            Month: CboMonth.getValue(),
                            nobatPardakht: nobatPardakht.getValue(),
                            OrganId: CboOrgan.getValue()
                        },
                        success: function (data) {
                            if (data.AllowPrint) {
                                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFSanadHesabdari3?Year=" + CboYear.getValue() +
                                    "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue() +
                                    "&ReportTypeSanad3=" + CboReportTypeSanad3 + "'></object></center>");
                            }
                            else {
                                Ext.MessageBox.show({
                                    msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                    icon: Ext.MessageBox.WARNING,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                            Ext.net.Mask.hide();
                        }
                    });
                }
                else {
                    Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFSanadHesabdari3_BonKart?Year=" + CboYear.getValue() +
                    "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
                }
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "16") {

            var CboReportType = Ext.getCmp(tabId).queryById('CboReportType');
            if (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true
                && CboTypeReport.validate() == true && marhalePardakht.validate() == true && CboOrgan.validate() == true) {
                var height3 = App.PayWin.getHeight() - 310;
                if (CboTypeReport.getValue() == 10) {
                    Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height3
                                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFKholaseBonKart?Year=" + CboYear.getValue() +
                                    "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                         + "&GrouhBandi=" + CboGrouhBandi.getValue() + "&State=1" + "'></object></center>");
                }
                else {
                    Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                    Ext.net.DirectMethod.request({
                        url: '/PayRoll/Reports/CheckhoghoughMazaya',
                        params: {
                            Year: CboYear.getValue(),
                            Month: CboMonth.getValue(),
                            nobatPardakht: nobatPardakht.getValue(),
                            marhalePardakht: marhalePardakht.getValue(),
                            TypeReport: CboTypeReport.getValue(),
                            GrouhBandi: CboGrouhBandi.getValue(),
                            moavaghe: CboReportType.getValue(),
                            OrganId: CboOrgan.getValue()
                        },
                        success: function (data) {
                            if (data.AllowPrint) {
                                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFhoghoughMazaya?Year=" + CboYear.getValue() +
                                    "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                        + "&marhalePardakht=" + marhalePardakht.getValue() + "&TypeReport=" + CboTypeReport.getValue() + "&GrouhBandi=" + CboGrouhBandi.getValue() + "&moavaghe=" + CboReportType.getValue() + "'></object></center>");
                            }
                            else {
                                Ext.MessageBox.show({
                                    msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                    icon: Ext.MessageBox.WARNING,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                            Ext.net.Mask.hide();
                        }
                    });

                }
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "29") {
            if (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true
                 && CboTaYear.validate() == true && CboTaMonth.validate() == true
                && CboTypeReport.validate() == true && marhalePardakht.validate() == true && CboOrgan.validate() == true) {

                if (CboTypeReport.getValue() == 10) {
                    var height3 = App.PayWin.getHeight() - 310;
                    Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height3
                                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFKholaseBonKart?Year=" + CboYear.getValue() +
                                    "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                        + "&GrouhBandi=" + CboGrouhBandi.getValue() +"&TaYear=" + CboTaYear.getValue() + "&TaMonth=" + CboTaMonth.getValue() + "&State=2"+ "'></object></center>");
                }
                else {
                    Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                    Ext.net.DirectMethod.request({
                        url: '/PayRoll/Reports/CheckhoghoughMazayaBazei',
                        params: {
                            Year: CboYear.getValue(),
                            Month: CboMonth.getValue(),
                            nobatPardakht: nobatPardakht.getValue(),
                            marhalePardakht: marhalePardakht.getValue(),
                            TypeReport: CboTypeReport.getValue(),
                            GrouhBandi: CboGrouhBandi.getValue(),
                            TaYear: CboTaYear.getValue(),
                            TaMonth: CboTaMonth.getValue(),
                            OrganId: CboOrgan.getValue()
                        },
                        success: function (data) {
                            if (data.AllowPrint) {
                                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFhoghoughMazayaBazei?Year=" + CboYear.getValue() +
                                    "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                        + "&marhalePardakht=" + marhalePardakht.getValue() + "&TypeReport=" + CboTypeReport.getValue() + "&GrouhBandi=" + CboGrouhBandi.getValue() +
                        "&TaYear=" + CboTaYear.getValue() + "&TaMonth=" + CboTaMonth.getValue() + "'></object></center>");
                            }
                            else {
                                Ext.MessageBox.show({
                                    msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                    icon: Ext.MessageBox.WARNING,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                            Ext.net.Mask.hide();
                        }
                    });
                }

            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "17") {
            if ((nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true
                && CboTypeParametrha.validate() == true && CboType2.getValue() == "0") || (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true
                && CboTypeParametrha.validate() == true && CboType2.getValue() == "1" && CboCostCenterType.validate() == true)) {
                var costCenterId = "0";
                var costCenterName = "تمام مراکز";
                if (CboType2.getValue() == "1") {
                    costCenterId = CboCostCenterType.getValue();
                    costCenterName = CboCostCenterType.getDisplayValue();
                }

                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckKosourat_Motalebat_P',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        TypeParametrhaId: CboTypeParametrha.getValue(),
                        ParamName: CboTypeParametrha.getDisplayValue(),
                        CostCenterId: costCenterId,
                        CostCenterName: costCenterName,
                        FieldName: "Kosurat",
                        nobatPardakhtName: nobatPardakht.getDisplayValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2
                                + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDKosourat_Motalebat_P?Year=" + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                    + "&TypeParametrhaId=" + CboTypeParametrha.getValue() + "&ParamName=" + CboTypeParametrha.getDisplayValue() + "&CostCenterId=" + costCenterId + "&CostCenterName=" + costCenterName
                    + "&FieldName=Kosurat" + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });

            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "18") {
            if ((nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true
                && CboTypeParametrha.validate() == true && CboType2.getValue() == "0") || (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true
                && CboTypeParametrha.validate() == true && CboType2.getValue() == "1" && CboCostCenterType.validate() == true)) {
                var costCenterId = "0";
                var costCenterName = "تمام مراکز";
                if (CboType2.getValue() == "1") {
                    costCenterId = CboCostCenterType.getValue();
                    costCenterName = CboCostCenterType.getDisplayValue();
                }

                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckKosourat_Motalebat_P',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        TypeParametrhaId: CboTypeParametrha.getValue(),
                        ParamName: CboTypeParametrha.getDisplayValue(),
                        CostCenterId: costCenterId,
                        CostCenterName: costCenterName,
                        FieldName: "Motalebat",
                        nobatPardakhtName: nobatPardakht.getDisplayValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 +
                                "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDKosourat_Motalebat_P?Year=" + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                     + "&TypeParametrhaId=" + CboTypeParametrha.getValue() + "&ParamName=" + CboTypeParametrha.getDisplayValue() + "&CostCenterId=" + costCenterId + "&CostCenterName=" + costCenterName
                     + "&FieldName=Motalebat" + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "21") {
            if ((nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true
                && CboType2.getValue() == "0") || (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true
                && CboType2.getValue() == "1" && CboCostCenterType.validate() == true)) {
                var costCenterId = "0";
                var costCenterName = "تمام مراکز";
                if (CboType2.getValue() == "1") {
                    costCenterId = CboCostCenterType.getValue();
                    costCenterName = CboCostCenterType.getDisplayValue();
                }

                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckKosouratBank',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        CostCenterId: costCenterId,
                        CostCenterName: costCenterName,
                        nobatPardakhtName: nobatPardakht.getDisplayValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 +
                                "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDKosouratBank?Year=" + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                    + "&CostCenterId=" + costCenterId + "&CostCenterName=" + costCenterName + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "22") {
            if (CboYear.validate() == true && txtMashmoolSal.validate() == true && CboOrgan.validate() == true) {

                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckMaliyatSaliyane',
                    params: {
                        Year: CboYear.getValue(),
                        MashmoolSal: txtMashmoolSal.getValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                                + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFMaliyatSaliyane?Year=" + CboYear.getValue() +
                                "&MashmoolSal=" + txtMashmoolSal.getValue() + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });


            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "23") {
            if ((CboType.getValue() == "0" && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true)
                || (CboType.getValue() == "1" && txtName.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true)) {
                var PersonId = 0;
                if (txtName.getValue() != "") {
                    PersonId = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').getValue();
                }
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 +
                    "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFFishEzafekari?Year=" + CboYear.getValue()
                    + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue()
                    + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&PersonId=" + PersonId + "&OrganId=" + CboOrgan.getValue() + "&FieldName=EzafeKari" + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "24") {
            if ((CboType.getValue() == "0" && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true)
                || (CboType.getValue() == "1" && txtName.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true)) {
                var PersonId = 0;
                if (txtName.getValue() != "") {
                    PersonId = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').getValue();
                }
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFFishEzafekari?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue()
                    + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&PersonId=" + PersonId + "&OrganId=" + CboOrgan.getValue() + "&FieldName=TatilKari" + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "25") {
            if ((CboType.getValue() == "0" && CboYear.validate() == true && CboMonth.validate() == true && CboTypeKomak.validate() == true && CboOrgan.validate() == true)
                || (CboType.getValue() == "1" && txtName.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboTypeKomak.validate() == true && CboOrgan.validate() == true)) {
                var PersonId = 0;
                var typekomak = true;/*مستمر*/
                if (txtName.getValue() != "") {
                    PersonId = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').getValue();
                }
                if (CboTypeKomak.getValue() == "0") {
                    typekomak = false;
                }
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFFishKomak?Year=" + CboYear.getValue()
                    + "&Month=" + CboMonth.getValue()
                    + "&PersonId=" + PersonId + "&type=" + typekomak + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "26") {
            if ((CboType.getValue() == "0" && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true
                && marhalePardakht.validate() == true && CboOrgan.validate() == true)
                || (CboType.getValue() == "1" && txtName.validate() == true && CboYear.validate() == true && CboMonth.validate() == true
                && nobatPardakht.validate() == true && marhalePardakht.validate() == true && CboOrgan.validate() == true)) {
                var PersonId = 0;
                if (txtName.getValue() != "") {
                    PersonId = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').getValue();
                }
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFFishSayer?Year=" + CboYear.getValue()
                    + "&Month=" + CboMonth.getValue() + "&OrganId=" + CboOrgan.getValue()
                    + "&PersonId=" + PersonId + "&nobatPardakht=" + nobatPardakht.getValue() + "&marhalePardakht=" + marhalePardakht.getValue() + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "27") {
            if ((CboType.getValue() == "0" && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true)
                || (CboType.getValue() == "1" && txtName.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true)) {
                var PersonId = 0;
                if (txtName.getValue() != "") {
                    PersonId = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').getValue();
                }
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 +
                    "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFFishMamooriat?Year=" + CboYear.getValue()
                    + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                    + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&PersonId=" + PersonId + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "28") {
            if ((CboType.getValue() == "0" && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true)
                || (CboType.getValue() == "1" && txtName.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true)) {
                var PersonId = 0;
                if (txtName.getValue() != "") {
                    PersonId = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').getValue();
                }
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFFishMorakhasi?Year=" + CboYear.getValue() +
                    "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                    + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&PersonId=" + PersonId + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(10) == "32") {
            var valid = true;
            var ChartId = 0;
            var CostCenter = 0;
            if (CboCostCenter.getValue() == 2) {
                if (CboCostCenterType.validate() == false)
                    valid = false;

                CostCenter = CboCostCenterType.getValue();
            }
            else if (CboCostCenter.getValue() == 3) {
                if (NodeId == 0)
                    valid = false;

                ChartId = NodeId;
            }
            if (valid && CboYear.validate() == true  && CboOrgan.validate() == true) {
                Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFPusheshTakmili?Year=" + CboYear.getValue()
                    + "&ChartId=" + ChartId
                    + "&CostCenterId=" + CostCenter
                    + "&OrganId=" + CboOrgan.getValue() + "'></object></center>");
            }
            else {
                return;
            }
        }
    }
    function ShowDetails() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var CboTaYear = Ext.getCmp(tabId).queryById('CboTaYear');
        var CboTaMonth = Ext.getCmp(tabId).queryById('CboTaMonth');
        var nobatPardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var marhalePardakht = Ext.getCmp(tabId).queryById('CboMarhalePardakht');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboTypeEstekhdam = Ext.getCmp(tabId).queryById('CboTypeEstekhdam');
        var CboType = Ext.getCmp(tabId).queryById('CboType');
        var CboTypeFish = Ext.getCmp(tabId).queryById('CboTypeFish');
        var txtName = Ext.getCmp(tabId).queryById('txtName');
        var fldIdPayPersonalInfo = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo');
        var CboTypeReport = Ext.getCmp(tabId).queryById('CboTypeReport');
        var CboType2 = Ext.getCmp(tabId).queryById('CboType2');
        var CboTypeParametrha = Ext.getCmp(tabId).queryById('CboTypeParametrha');
        var txtMashmoolSal = Ext.getCmp(tabId).queryById('txtMashmoolSal');
        var CboTypeKomak = Ext.getCmp(tabId).queryById('CboTypeKomak');
        var CboGrouhBandi = Ext.getCmp(tabId).queryById('CboGrouhBandi');
        var CboCostCenter = Ext.getCmp(tabId).queryById('CboCostCenter');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboOrgan = Ext.getCmp(tabId).queryById('CboOrgan');

        var CboTafkik = Ext.getCmp(tabId).queryById('CboTafkik');
        var costCenterId = "0";
        var costCenterName = "تمام مراکز";

        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });

        if (fldIdPayPersonalInfo.getValue() == "") {
            Ext.net.Mask.hide();
            Ext.MessageBox.show({
                msg: "شخص مورد نظر را انتخاب کنید.",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.OK
            });
            return;
        }
        var height = App.PayWin.getHeight() - 255;
        if (CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true && fldIdPayPersonalInfo.getValue() != "") {
            Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height
                + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFFishHoghughiDeatils?Year=" + CboYear.getValue()
                + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue()
                + "&PersonalId=" + fldIdPayPersonalInfo.getValue() +
                    "&TypeFish=" + CboTypeFish.getValue() + "'></object></center>");
            Ext.net.Mask.hide();
        }
        else {
            Ext.net.Mask.hide();
            return;

        }
    }
    function ExcelK() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var CboTaYear = Ext.getCmp(tabId).queryById('CboTaYear');
        var CboTaMonth = Ext.getCmp(tabId).queryById('CboTaMonth');
        var nobatPardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var marhalePardakht = Ext.getCmp(tabId).queryById('CboMarhalePardakht');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboTypeEstekhdam = Ext.getCmp(tabId).queryById('CboTypeEstekhdam');
        var CboType = Ext.getCmp(tabId).queryById('CboType');
        var CboTypeFish = Ext.getCmp(tabId).queryById('CboTypeFish');
        var txtName = Ext.getCmp(tabId).queryById('txtName');
        var fldIdPayPersonalInfo = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo');
        var CboTypeReport = Ext.getCmp(tabId).queryById('CboTypeReport');
        var CboType2 = Ext.getCmp(tabId).queryById('CboType2');
        var CboTypeParametrha = Ext.getCmp(tabId).queryById('CboTypeParametrha');
        var txtMashmoolSal = Ext.getCmp(tabId).queryById('txtMashmoolSal');
        var CboTypeKomak = Ext.getCmp(tabId).queryById('CboTypeKomak');
        var CboGrouhBandi = Ext.getCmp(tabId).queryById('CboGrouhBandi');
        var CboCostCenter = Ext.getCmp(tabId).queryById('CboCostCenter');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboTafkik = Ext.getCmp(tabId).queryById('CboTafkik');
        var CboOrgan = Ext.getCmp(tabId).queryById('CboOrgan');

        var costCenterId = "0";
        var costCenterName = "تمام مراکز";
        if (CboType2.getValue() == "1") {
            costCenterId = CboCostCenterType.getValue();
            costCenterName = CboCostCenterType.getDisplayValue();
        }
        if (tabId.substring(10) == "16") {
            if (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true
                && CboTypeReport.validate() == true && marhalePardakht.validate() == true && CboOrgan.validate() == true) {
                if (CboTypeReport.getValue() == 10) {
                    window.location.href = '@Url.Content("~/PayRoll/Reports/GenerateExcelKholaseBonKart/")' + '?Year=' + CboYear.getValue()
                                    + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() 
                                    + "&GrouhBandi=" + CboGrouhBandi.getValue() + "&State=1" + "&OrganId=" + CboOrgan.getValue();
                }
                else {
                    Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                    Ext.net.DirectMethod.request({
                        url: '/PayRoll/Reports/CheckhoghoughMazaya',
                        params: {
                            Year: CboYear.getValue(),
                            Month: CboMonth.getValue(),
                            nobatPardakht: nobatPardakht.getValue(),
                            marhalePardakht: marhalePardakht.getValue(),
                            TypeReport: CboTypeReport.getValue(),
                            GrouhBandi: CboGrouhBandi.getValue(),
                            OrganId: CboOrgan.getValue()
                        },
                        success: function (data) {
                            if (data.AllowPrint) {
                                window.location.href = '@Url.Content("~/PayRoll/Reports/GenerateExcelhoghoughMazaya/")' + '?Year=' + CboYear.getValue()
                                    + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&marhalePardakht=" + marhalePardakht.getValue()
                                    + "&TypeReport=" + CboTypeReport.getValue() + "&GrouhBandi=" + CboGrouhBandi.getValue() + "&OrganId=" + CboOrgan.getValue();;
                            }
                            else {
                                Ext.MessageBox.show({
                                    msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                    icon: Ext.MessageBox.WARNING,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                            Ext.net.Mask.hide();
                        }
                    });
                }
            }
        }
        if (tabId.substring(10) == "3") {
            if (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true
                && CboTypeReport.validate() == true && marhalePardakht.validate() == true && CboOrgan.validate() == true) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckListAghsateVam',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            window.location.href = '@Url.Content("~/PayRoll/Reports/GenerateExcelListAghsateVam/")' + '?Year=' + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&OrganId=" + CboOrgan.getValue();
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });

            }
        }
        if (tabId.substring(10) == "17") {
            if (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true
                && CboTypeReport.validate() == true && CboTypeParametrha.validate() == true && CboOrgan.validate() == true) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckKosourat_Motalebat_P',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        nobatPardakht: nobatPardakht.getValue(),
                        TypeParametrhaId: CboTypeParametrha.getValue(),
                        ParamName: CboTypeParametrha.getDisplayValue(),
                        CostCenterId: costCenterId,
                        CostCenterName: costCenterName,
                        FieldName: "Kosurat",
                        nobatPardakhtName: nobatPardakht.getDisplayValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            window.location.href = '@Url.Content("~/PayRoll/Reports/GenerateExcelKosourat_Motalebat_P/")' + '?Year=' + CboYear.getValue() +
                                "&Month=" + CboMonth.getValue() + "&ParamId=" + CboTypeParametrha.getValue() +
                                "& ParamName=" + CboTypeParametrha.getDisplayValue() + "&OrganId=" + CboOrgan.getValue();
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });

            }
        }
        if (tabId.substring(10) == "31") {
            if (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true
                && CboOrgan.validate() == true) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/Reports/CheckKarkarMahane',
                    params: {
                        Year: CboYear.getValue(),
                        Month: CboMonth.getValue(),
                        NobatPardakht: nobatPardakht.getValue(),
                        OrganId: CboOrgan.getValue()
                    },
                    success: function (data) {
                        if (data.AllowPrint) {
                            window.location.href = '@Url.Content("~/PayRoll/Reports/GenerateExcelKarkarMahane/")' + '?Year=' + CboYear.getValue()
                                + "&Month=" + CboMonth.getValue() + "&NobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + CboOrgan.getValue();
                        }
                        else {
                            Ext.MessageBox.show({
                                msg: "اطلاعاتی جهت نمایش یافت نشد.",
                                icon: Ext.MessageBox.WARNING,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                        Ext.net.Mask.hide();
                    }
                });

            }
        }
    }
    function ExlPay() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var CboTaYear = Ext.getCmp(tabId).queryById('CboTaYear');
        var CboTaMonth = Ext.getCmp(tabId).queryById('CboTaMonth');
        var nobatPardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var marhalePardakht = Ext.getCmp(tabId).queryById('CboMarhalePardakht');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboTypeEstekhdam = Ext.getCmp(tabId).queryById('CboTypeEstekhdam');
        var CboType = Ext.getCmp(tabId).queryById('CboType');
        var CboTypeFish = Ext.getCmp(tabId).queryById('CboTypeFish');
        var txtName = Ext.getCmp(tabId).queryById('txtName');
        var fldIdPayPersonalInfo = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo');
        var CboTypeReport = Ext.getCmp(tabId).queryById('CboTypeReport');
        var CboType2 = Ext.getCmp(tabId).queryById('CboType2');
        var CboTypeParametrha = Ext.getCmp(tabId).queryById('CboTypeParametrha');
        var txtMashmoolSal = Ext.getCmp(tabId).queryById('txtMashmoolSal');
        var CboTypeKomak = Ext.getCmp(tabId).queryById('CboTypeKomak');
        var CboGrouhBandi = Ext.getCmp(tabId).queryById('CboGrouhBandi');
        var CboCostCenter = Ext.getCmp(tabId).queryById('CboCostCenter');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboTafkik = Ext.getCmp(tabId).queryById('CboTafkik');
        var CboOrgan = Ext.getCmp(tabId).queryById('CboOrgan');

        var costCenterId = "0";
        var costCenterName = "تمام مراکز";
        if (CboType2.getValue() == "1") {
            costCenterId = CboCostCenterType.getValue();
            costCenterName = CboCostCenterType.getDisplayValue();
        }
       
        var FieldName = "Hoghogh";
        var valid = true;
        var CostCenter_ChartId = 0;
        if (CboCostCenter.getValue() == 2) {
            if (CboCostCenterType.validate() == false)
                valid = false;

            CostCenter_ChartId = CboCostCenterType.getValue();
        }
        else if (CboCostCenter.getValue() == 3) {
            if (NodeId == 0)
                valid = false;

            CostCenter_ChartId = NodeId;
        }
        if (valid && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true) {

            window.location.href = '@Url.Content("~/PayRoll/Reports/GenerateExcelFishHoghughi/")' + '?Year=' + CboYear.getValue()
                                   + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() 
                                    + "&PersonalId=" + fldIdPayPersonalInfo.getValue() + "&FieldName=Hoghogh &OrganId=" + CboOrgan.getValue();;
        }
        else {
            return;
        }
    }
    function ExlPayBonKart() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var CboTaYear = Ext.getCmp(tabId).queryById('CboTaYear');
        var CboTaMonth = Ext.getCmp(tabId).queryById('CboTaMonth');
        var nobatPardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var marhalePardakht = Ext.getCmp(tabId).queryById('CboMarhalePardakht');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboTypeEstekhdam = Ext.getCmp(tabId).queryById('CboTypeEstekhdam');
        var CboType = Ext.getCmp(tabId).queryById('CboType');
        var CboTypeFish = Ext.getCmp(tabId).queryById('CboTypeFish');
        var txtName = Ext.getCmp(tabId).queryById('txtName');
        var fldIdPayPersonalInfo = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo');
        var CboTypeReport = Ext.getCmp(tabId).queryById('CboTypeReport');
        var CboType2 = Ext.getCmp(tabId).queryById('CboType2');
        var CboTypeParametrha = Ext.getCmp(tabId).queryById('CboTypeParametrha');
        var txtMashmoolSal = Ext.getCmp(tabId).queryById('txtMashmoolSal');
        var CboTypeKomak = Ext.getCmp(tabId).queryById('CboTypeKomak');
        var CboGrouhBandi = Ext.getCmp(tabId).queryById('CboGrouhBandi');
        var CboCostCenter = Ext.getCmp(tabId).queryById('CboCostCenter');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboTafkik = Ext.getCmp(tabId).queryById('CboTafkik');
        var CboOrgan = Ext.getCmp(tabId).queryById('CboOrgan');

        var costCenterId = "0";
        var costCenterName = "تمام مراکز";
        if (CboType2.getValue() == "1") {
            costCenterId = CboCostCenterType.getValue();
            costCenterName = CboCostCenterType.getDisplayValue();
        }

        var FieldName = "Hoghogh";
        var valid = true;
        var CostCenter_ChartId = 0;
        if (CboCostCenter.getValue() == 2) {
            if (CboCostCenterType.validate() == false)
                valid = false;

            CostCenter_ChartId = CboCostCenterType.getValue();
        }
        else if (CboCostCenter.getValue() == 3) {
            if (NodeId == 0)
                valid = false;

            CostCenter_ChartId = NodeId;
        }
        if (valid && CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true && CboOrgan.validate() == true) {

            window.location.href = '@Url.Content("~/PayRoll/Reports/GenerateExcelBonKartFishHoghughi/")' + '?Year=' + CboYear.getValue()
                                   + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue()
                                    + "&PersonalId=" + fldIdPayPersonalInfo.getValue() + "&FieldName=BonKart &OrganId=" + CboOrgan.getValue();;
        }
        else {
            return;
        }
    }
    function PrintJamK() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var nobatPardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboType2 = Ext.getCmp(tabId).queryById('CboType2');
        var CboTypeParametrha = Ext.getCmp(tabId).queryById('CboTypeParametrha');
        var CboOrgan = Ext.getCmp(tabId).queryById('CboOrgan');

        var height = App.PayWin.getHeight() - 255;
        var height2 = App.PayWin.getHeight() - 277;

        if ((nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboTypeParametrha.validate() == true && CboOrgan.validate() == true
                && CboType2.getValue() == "0") || (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboTypeParametrha.validate() == true && CboOrgan.validate() == true
                && CboType2.getValue() == "1" && CboCostCenterType.validate() == true)) {
            var costCenterId = "0";
            var costCenterName = "تمام مراکز";
            if (CboType2.getValue() == "1") {
                costCenterId = CboCostCenterType.getValue();
                costCenterName = CboCostCenterType.getDisplayValue();
            }

            Ext.net.DirectMethod.request({
                url: '/PayRoll/Reports/CheckMande_SumKosur',
                params: {
                    Year: CboYear.getValue(),
                    Month: CboMonth.getValue(),
                    nobatPardakht: nobatPardakht.getValue(),
                    TypeParametrhaId: CboTypeParametrha.getValue(),
                    ParamName: CboTypeParametrha.getDisplayValue(),
                    CostCenterId: costCenterId,
                    CostCenterName: costCenterName,
                    FieldName: "Jam",
                    nobatPardakhtName: nobatPardakht.getDisplayValue(),
                    OrganId: CboOrgan.getValue()
                },
                success: function (data) {
                    if (data.AllowPrint) {
                        Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2
                            + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GenerateMande_SumKosur?Year=" + CboYear.getValue() +
                            "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue()
            + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&TypeParametrhaId=" + CboTypeParametrha.getValue() + "&OrganId=" + CboOrgan.getValue()
            + "&ParamName=" + CboTypeParametrha.getDisplayValue() + "&CostCenterId=" + costCenterId
            + "&CostCenterName=" + costCenterName + "&FieldName=Jam" + "'></object></center>");
                    }
                    else {
                        Ext.MessageBox.show({
                            msg: "اطلاعاتی جهت نمایش یافت نشد.",
                            icon: Ext.MessageBox.WARNING,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    Ext.net.Mask.hide();
                }
            });

        }
    }

    function XMLK() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var nobatPardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var CboType = Ext.getCmp(tabId).queryById('CboType');
        var CboTypeFish = Ext.getCmp(tabId).queryById('CboTypeFish');
        var fldIdPayPersonalInfo = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo');
        var CboOrgan = Ext.getCmp(tabId).queryById('CboOrgan');
        /*var CboTypeHesab = Ext.getCmp(tabId).queryById('CboTypeHesab');*/



        if ((nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboTypeFish.validate() == true && CboOrgan.validate() == true
                && CboType.getValue() == 0) || (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboTypeFish.validate() == true && CboOrgan.validate() == true
                && CboType.getValue() == 1 && fldIdPayPersonalInfo.getValue() != 0)) {
            var PersonIdd = 0;
            if (CboType.getValue() == 1) {/*انفرادی*/
                PersonIdd = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').getValue();
            }
           Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
            Ext.net.DirectMethod.request({
                url: "/PayRoll/SpecialOperation/CheckDiskMaliat",
                params: {
                    Year: CboYear.getValue(),
                    Month: CboMonth.getValue(),
                    NobatPardakht: nobatPardakht.getValue(),
                    type: 4
                },
                success: function (data) {
                    if (data.AllowGenerate == 1) {
                        window.location.href = '@Url.Content("/PayRoll/Reports/GeneratePDFFishHoghughiXML?Year=")' + CboYear.getValue() + "&Month=" + CboMonth.getValue() +
                        "&nobatPardakht=" + nobatPardakht.getValue() + "&Type=" + CboType.getValue() + "&PersonalId=" + PersonIdd + "&TypeFish=" + CboTypeFish.getValue()
                        + "&OrganId=" + CboOrgan.getValue(); /*+ "&TypeHesab=" + CboTypeHesab.getValue();;*/
               Ext.net.Mask.hide();
                    }
                    else {
                        Ext.net.Mask.hide();
                        Ext.MessageBox.show({
                            title: "خطا",
                            msg: "لطفا ابتدا اقدام به تهیه دیسکت مالیات نمایید.",
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                }
            });
        }
    }

    function PrintMandeK() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var nobatPardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboType2 = Ext.getCmp(tabId).queryById('CboType2');
        var CboTypeParametrha = Ext.getCmp(tabId).queryById('CboTypeParametrha');
        var CboOrgan = Ext.getCmp(tabId).queryById('CboOrgan');

        var height = App.PayWin.getHeight() - 255;
        var height2 = App.PayWin.getHeight() - 277;

        if ((nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true && CboTypeParametrha.validate() == true
                && CboType2.getValue() == "0") || (nobatPardakht.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboOrgan.validate() == true && CboTypeParametrha.validate() == true
                && CboType2.getValue() == "1" && CboCostCenterType.validate() == true)) {
            var costCenterId = "0";
            var costCenterName = "تمام مراکز";
            if (CboType2.getValue() == "1") {
                costCenterId = CboCostCenterType.getValue();
                costCenterName = CboCostCenterType.getDisplayValue();
            }

            Ext.net.DirectMethod.request({
                url: '/PayRoll/Reports/CheckMande_SumKosur',
                params: {
                    Year: CboYear.getValue(),
                    Month: CboMonth.getValue(),
                    nobatPardakht: nobatPardakht.getValue(),
                    TypeParametrhaId: CboTypeParametrha.getValue(),
                    ParamName: CboTypeParametrha.getDisplayValue(),
                    CostCenterId: costCenterId,
                    CostCenterName: costCenterName,
                    FieldName: "Mande",
                    nobatPardakhtName: nobatPardakht.getDisplayValue(),
                    OrganId: CboOrgan.getValue()
                },
                success: function (data) {
                    if (data.AllowPrint) {
                        Ext.getCmp(tabId).queryById('RptPanel').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2
                            + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GenerateMande_SumKosur?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + nobatPardakht.getValue()
            + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&TypeParametrhaId=" + CboTypeParametrha.getValue()
            + "&ParamName=" + CboTypeParametrha.getDisplayValue() + "&CostCenterId=" + costCenterId + "&OrganId=" + CboOrgan.getValue()
            + "&CostCenterName=" + costCenterName + "&FieldName=Mande" + "'></object></center>");
                    }
                    else {
                        Ext.MessageBox.show({
                            msg: "اطلاعاتی جهت نمایش یافت نشد.",
                            icon: Ext.MessageBox.WARNING,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    Ext.net.Mask.hide();
                }
            });


        }
    }
</script>