@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
<style>
    .custom-RptListPardakhtiicon {
        margin-right: 124px!important;
    }
</style>
@(Html.X().Panel()
    .Closable(true)
    .Border(false)
    .CloseAction(CloseAction.Destroy)
    .Listeners(li => { li.AfterRender.Handler = "setTitleListPardakhti()"; li.Render.Fn = "addKeyMapListPardakhti"; })
   // .Listeners(l => l.AfterRender.Handler = "setTitleListPardakhti()")
    .Layout(LayoutType.Fit)
    .ID("RptListPardakhti" + @ViewBag.State)
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.Panel()
                .Border(false)
                .ButtonAlign(Alignment.Center)
                .Buttons(
                    Html.X().Button()
                        .Text("چاپ")
                        .Icon(Ext.Net.Icon.Printer)
                        .Listeners(l => l.Click.Handler = "PrintRptListPardakhti()")
                        .Hidden(@ViewBag.State == "11"),
                    Html.X().Button()
                        .Text("خروجی اکسل")
                        .ItemID("btnExcel")
                        .Icon(Ext.Net.Icon.PageExcel)
                        .Listeners(l => l.Click.Handler = "ExcelRptListPardakhti()"),     
                    Html.X().Button()
                        .Text("خروج")
                        .Icon(Ext.Net.Icon.DoorOut)
                        .Listeners(l => l.Click.Handler = "destroyWinListPardakhti()")
                )
                .Items(
                    X.FieldSet()
                        .Border(false)
                        .PaddingSpec("0 7px 7px 7px")
                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                        .Defaults(new { Margin = 2 })
                        .Items(
                             X.Label("سازمان:"),
                             X.ComboBox()
                                .ItemID("CboOrgan")
                                .TypeAhead(true)
                                .AutoFocus(true)
                                .Editable(true)
                                     .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                    .BlankText("لطفا سازمان را انتخاب کنید.")
                                    .AllowBlank(false)
                                .ForceSelection(true)
                                    .DisplayField("fldTitle")
                                .ValueField("fldId")
                                    .EmptyText("سازمان ...")
            //.Width(233)
                                .Store(X.Store()
                                .Model(X.Model()
                                .IDProperty("fldId")
                                .Fields(
                                    new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                    new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                        )
                                            )
                                .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetOrgan"))
                                .Reader(X.JsonReader().Root("data"))
                                                )
            .Listeners(l => l.Load.Handler = "setdefaultValueOrganP()")
                                        ),
                            X.Label("سال:").ItemID("lblYear"),
                            X.ComboBox()
                                .ItemID("CboYear")
                                .Editable(true)
                                .ForceSelection(true)
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .BlankText("لطفا سال را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .Listeners(l =>
                                {
                                    l.AfterRender.Handler = "setValueYearRptListP()";
                                    l.Select.Handler = "setYearClassRptListP()";
                                })
                                .Items(
                                    new ListItem("1387", "1387"),
                                    new ListItem("1388", "1388"),
                                    new ListItem("1389", "1389"),
                                    new ListItem("1390", "1390"),
                                    new ListItem("1391", "1391"),
                                    new ListItem("1392", "1392"),
                                    new ListItem("1393", "1393"),
                                    new ListItem("1394", "1394"),
                                    new ListItem("1395", "1395"),
                                    new ListItem("1396", "1396"),
                                    new ListItem("1397", "1397"),
                                    new ListItem("1398", "1398"),
                                    new ListItem("1399", "1399"),
                                    new ListItem("1400", "1400"),
                                    new ListItem("1401", "1401"),
                                    new ListItem("1402", "1402"),
                                    new ListItem("1403", "1403")
                            ),
                            X.Label("ماه:").ItemID("lblMonth"),
                            X.ComboBox()
                                .ItemID("CboMonth")
                                .Editable(true)
                                .ForceSelection(true)
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .BlankText("لطفا ماه را انتخاب کنید.")
                                .Listeners(l =>
                                {
                                    l.AfterRender.Handler = "setValueMonthRptListP()";
                                    l.Select.Handler = "setMonthClassRptListP()";
                                })
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .Items(
                                    new ListItem("فروردین", "01"),
                                    new ListItem("اردیبهشت", "02"),
                                    new ListItem("خرداد", "03"),
                                    new ListItem("تیر", "04"),
                                    new ListItem("مرداد", "05"),
                                    new ListItem("شهریور", "06"),
                                    new ListItem("مهر", "07"),
                                    new ListItem("آبان", "08"),
                                    new ListItem("آذر", "09"),
                                    new ListItem("دی", "10"),
                                    new ListItem("بهمن", "11"),
                                    new ListItem("اسفند", "12")
                                ),
                            X.Label().Text("نوع:").ItemID("lblType"),
                            X.ComboBox()
                                .ItemID("CboType")
                                .Editable(true)
                                .TypeAhead(true)
                                .ForceSelection(true)
                                .BlankText("لطفا نوع را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .Items(
                                    new ListItem("گروهی", "0"),
                                    new ListItem("براساس مرکز هزینه", "1")
                                    )
                                .SelectedItems(new { Value = "0" })
                                .Listeners(l => l.Select.Handler = "ChangeTypeListPardakhti();"),
                            X.Label("مرکز هزینه:").ItemID("lblCostCenterType"),
                            X.ComboBox()
                                .ItemID("CboCostCenterType")
                                .Editable(true)
                                .TypeAhead(true)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .AllowBlank(false)
                                .BlankText("لطفا مرکز هزینه را انتخاب کنید.")
                                .TriggerAction(TriggerAction.All)
                                .DisplayField("fldName")
                                .ValueField("fldId")
                                .EmptyText("مرکز هزینه")
                                .ValueNotFoundText("Loading...")
                                .Store(X.Store().Listeners(ls => ls.Load.Handler = "setValueCostCenterTypeListP()")
                                    .Model(X.Model()
                                        .IDProperty("fldId")
                                        .Fields(
                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                        )
                                    )
                                    .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetCostCenter"))
                                        .Reader(X.JsonReader().Root("data"))
                                    )
                                ),
                            X.Label("نوع بیمه:").ItemID("lblTypeBime"),
                            X.ComboBox()
                                .ItemID("CboTypeBime")
                                .Editable(true)
                                .TypeAhead(true)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .AllowBlank(false)
                                .BlankText("لطفا نوع بیمه را انتخاب کنید.")
                                .TriggerAction(TriggerAction.All)
                                .DisplayField("fldName")
                                .ValueField("fldId")
                                .EmptyText("نوع بیمه")
                                .ValueNotFoundText("Loading...")
                                .Store(X.Store().Listeners(ls => ls.Load.Handler = "setValueBimeListP()")
                                    .Model(X.Model()
                                        .IDProperty("fldId")
                                        .Fields(
                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                        )
                                    )
                                    .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetBime"))
                                        .Reader(X.JsonReader().Root("data"))
                                    )
                                ),
                            X.Label("نوبت پرداخت:").ItemID("lblNobatePardakht"),
                            X.ComboBox()
                                .ItemID("CboNobatePardakht")
                                .Editable(true)
                                .ForceSelection(true)
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                                .Listeners(l =>
                                {
                                    l.AfterRender.Handler = "setValueNobatePardakhtRptListP()";
                                    l.Select.Handler = "setNobatePardakhtCalssRptListP()";   
                                })
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .Items(
                                    new ListItem("یک", "1"),
                                    new ListItem("دو", "2"),
                                    new ListItem("سه", "3"),
                                    new ListItem("چهار", "4"),
                                    new ListItem("پنج", "5")
                                ),
                            X.Label("مرحله پرداخت:").ItemID("lblMarhalePardakht"),
                            X.ComboBox()
                                .ItemID("CboMarhalePardakht")
                                .Editable(true)
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .ForceSelection(true)
                                .BlankText("لطفا مرحله پرداخت را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .Items(
                                    new ListItem("یک", "1"),
                                    new ListItem("دو", "2"),
                                    new ListItem("سه", "3"),
                                    new ListItem("چهار", "4"),
                                    new ListItem("پنج", "5")
                                    )
                                .SelectedItems(new { Value = "1" }),
                            X.Label("نوع حساب:").ItemID("lblTypeHesab"),
                            X.ComboBox()
                                .ItemID("CboTypeHesab")
                                .Editable(true)
                                .ForceSelection(true)
                                .AllowBlank(false)
                                .TypeAhead(true)
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .EmptyText("نوع حساب")
                                .Items(
                                    new ListItem("حقوق", "0"),
                                    new ListItem("بن کارت", "1")
                                    )
                                .SelectedItems(new { Value = "0" }),
                            X.Label("نوع:").ItemID("lblTypeKomak"),
                            X.ComboBox()
                                .ItemID("CboTypeKomak")
                                .Editable(true)
                                .AllowBlank(false)
                                .ForceSelection(true)
                                .TypeAhead(true)
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .EmptyText("نوع")
                                .Items(
                                    new ListItem("مستمر", "1"),
                                    new ListItem("غیرمستمر", "0")
                                    )
                                .SelectedItems(new { Value = "1" }),
                            X.Label("عنوان:").ItemID("lblTitle"),
                            X.TextField()
                                .ItemID("txtTitle"),
                            X.Label("نوع لیست:").ItemID("lblTypeList"),
                            X.ComboBox()
                                .ItemID("CboTypeList")
                                .Editable(true)
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .BlankText("لطفا نوع لیست را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .SelectedItems(new { value="0"})
                                .Items(
                                    new ListItem("A3", "0"),
                                    new ListItem("A4", "1")
                                ),
                            X.Hidden().ItemID("fldIdPayPersonalInfo"),
                            X.Label().Text("شخص(INS):").ItemID("lblName"),
                            X.TextField()
                                .ItemID("txtName")
                                .Icon(Icon.UserAdd)
                                .EnableKeyEvents(true)
                                .Listeners(l=>l.KeyDown.Fn="DeletePersonn")
                                .AllowBlank(false)
                                .ReadOnly(true)
                                .FieldStyle("padding-right:6px;")
                                .Width(145)
                                .BlankText("لطفا شخص را وارد کنید.")
                                .DirectEvents(li =>
                                {
                                    li.SpecialKey.Url = "/PayRoll/SearchPayPersonal/Index?State=2";
                                    li.SpecialKey.Before = "return e.getKey() == Ext.EventObject.INSERT;";
                                })
                                .Listeners(l =>{
                                    l.IconClick.Handler = "SearchPayPersonListP();";
                                    l.AfterRender.Handler = "Ext.getCmp('RptListPardakhti" + (string)ViewBag.State + "').queryById('txtName').icon.dom.classList.add('custom-RptListPardakhtiicon');";
                                })
                           , X.Label("نوع گزارش:")      
                                .ItemID("lblReportType")
                           ,X.ComboBox()
                                    .ItemID("CboReportType")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا نوع گزارش را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("با معوقه", "1"),
                                        new ListItem("بدون معوقه", "2")
                                        )
                                        .SelectedItems(new { Value = "1" })             
                            )
                        ),
                Html.X().Panel()
                    .Border(true)
                    .Listeners(L => L.AfterRender.Handler = "setSizeRptPanelListP()")
                    .AutoScroll(true)
                    .ItemID("RptPanelListP")
        //.Html("<center><object style='width: 1200px;height: 550px;border: 1px solid #ccc;' type='application/pdf' data='/RptListKhadamatDarmani/GeneratePDF?Year=" + ViewBag.Year + "&Month=" + ViewBag.Month + "&nobatPardakht=" + ViewBag.nobatPardakht + "'></object></center>")
            )

    )
)

<script type="text/javascript">
    var a;
    var b;
    function setdefaultValueOrganP() {
        Ext.getCmp('RptListPardakhti' + '@ViewBag.State').queryById('CboOrgan').select(Ext.getCmp('RptListPardakhti' + '@ViewBag.State').queryById('CboOrgan').store.getAt(0));
    }
    function setSizeRptPanelListP() {
        Ext.getCmp('RptListPardakhti' + '@ViewBag.State').queryById('RptPanelListP').setSize(App.PayWin.getWidth() - 20, App.PayWin.getHeight() - 165);
    }

    function destroyWinListPardakhti() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.getCmp(tabId).destroy();
    }

    function SearchPayPersonListP() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/SearchPayPersonal/Index',
            params: {
                State: 2,
                organId: Ext.getCmp(tabId).queryById('CboOrgan').getValue()
            }
        });
    }

    var DeletePersonn = function (textfield, key) {
        var tabId = App.FirstTabPay.activeTab.id;
        if (key.keyCode == 46) {
            Ext.getCmp(tabId).queryById('txtName').setValue("");
            Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo').setValue(0);
        }
    };

    function setMonthClassRptListP() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetMonthClass',
            params: {
                Month: Ext.getCmp(tabId).queryById("CboMonth").getValue()
            }
        });
    }

    function setYearClassRptListP() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetYearClass',
            params: {
                Year: Ext.getCmp(tabId).queryById("CboYear").getValue()
            }
        });
    }

    function setNobatePardakhtCalssRptListP() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/setNobatePardakhtCalss',
            params: {
                NobatePardakht: Ext.getCmp(tabId).queryById("CboNobatePardakht").getValue()
            }
        });
    }

    function setTitleListPardakhti() {
        if ('@ViewBag.State' == "1") {
            App.RptListPardakhti1.setTitle("گزارش لیست پرداخت عیدی");
            App.RptListPardakhti1.queryById('txtName').hide();
            App.RptListPardakhti1.queryById('lblName').hide();
            App.RptListPardakhti1.queryById('CboYear').show();
            App.RptListPardakhti1.queryById('lblYear').show();
            App.RptListPardakhti1.queryById('lblType').show();
            App.RptListPardakhti1.queryById('CboType').show();
            App.RptListPardakhti1.queryById('CboCostCenterType').hide();
            App.RptListPardakhti1.queryById('lblCostCenterType').hide();
            App.RptListPardakhti1.queryById('lblNobatePardakht').show();
            App.RptListPardakhti1.queryById('CboNobatePardakht').show();
            App.RptListPardakhti1.queryById('lblMonth').show();
            App.RptListPardakhti1.queryById('CboMonth').show();
            App.RptListPardakhti1.queryById('btnExcel').show();
            App.RptListPardakhti1.queryById('CboMonth').setReadOnly(true);
            App.RptListPardakhti1.queryById('lblTypeBime').hide();
            App.RptListPardakhti1.queryById('CboTypeBime').hide();
            App.RptListPardakhti1.queryById('lblTypeList').hide();
            App.RptListPardakhti1.queryById('CboTypeList').hide();
            App.RptListPardakhti1.queryById('CboMarhalePardakht').hide();
            App.RptListPardakhti1.queryById('lblMarhalePardakht').hide();
            App.RptListPardakhti1.queryById('CboTypeHesab').hide();
            App.RptListPardakhti1.queryById('lblTypeHesab').hide();
            App.RptListPardakhti1.queryById('txtTitle').hide();
            App.RptListPardakhti1.queryById('lblTitle').hide();
            App.RptListPardakhti1.queryById('CboTypeKomak').hide();
            App.RptListPardakhti1.queryById('lblTypeKomak').hide();
            App.RptListPardakhti1.queryById('CboReportType').hide();
            App.RptListPardakhti1.queryById('lblReportType').hide();
        }
        else if ('@ViewBag.State' == "2") {
            App.RptListPardakhti2.setTitle("گزارش لیست پرداخت اضافه کاری");
            App.RptListPardakhti2.queryById('txtName').show();
            App.RptListPardakhti2.queryById('lblName').show();
            App.RptListPardakhti2.queryById('txtName').allowBlank = true;
            App.RptListPardakhti2.queryById('CboYear').show();
            App.RptListPardakhti2.queryById('lblYear').show();
            App.RptListPardakhti2.queryById('lblType').hide();
            App.RptListPardakhti2.queryById('CboType').hide();
            App.RptListPardakhti2.queryById('CboCostCenterType').show();
            App.RptListPardakhti2.queryById('lblCostCenterType').show();
            App.RptListPardakhti2.queryById('lblNobatePardakht').show();
            App.RptListPardakhti2.queryById('CboNobatePardakht').show();
            App.RptListPardakhti2.queryById('lblMonth').show();
            App.RptListPardakhti2.queryById('CboMonth').show();
            App.RptListPardakhti2.queryById('lblTypeBime').hide();
            App.RptListPardakhti2.queryById('CboTypeBime').hide();
            App.RptListPardakhti2.queryById('lblTypeList').hide();
            App.RptListPardakhti2.queryById('CboTypeList').hide();
            App.RptListPardakhti2.queryById('CboMarhalePardakht').hide();
            App.RptListPardakhti2.queryById('lblMarhalePardakht').hide();
            App.RptListPardakhti2.queryById('CboTypeHesab').hide();
            App.RptListPardakhti2.queryById('lblTypeHesab').hide();
            App.RptListPardakhti2.queryById('txtTitle').hide();
            App.RptListPardakhti2.queryById('lblTitle').hide();
            App.RptListPardakhti2.queryById('CboTypeKomak').hide();
            App.RptListPardakhti2.queryById('lblTypeKomak').hide();
            App.RptListPardakhti2.queryById('btnExcel').hide();
            App.RptListPardakhti2.queryById('CboReportType').hide();
            App.RptListPardakhti2.queryById('lblReportType').hide();
        }
        else if ('@ViewBag.State' == "3") {
            App.RptListPardakhti3.setTitle("گزارش لیست پرداخت تعطیل کاری");
            App.RptListPardakhti3.queryById('txtName').show();
            App.RptListPardakhti3.queryById('lblName').show();
            App.RptListPardakhti3.queryById('txtName').allowBlank = true;
            App.RptListPardakhti3.queryById('CboYear').show();
            App.RptListPardakhti3.queryById('lblYear').show();
            App.RptListPardakhti3.queryById('lblType').hide();
            App.RptListPardakhti3.queryById('CboType').hide();
            App.RptListPardakhti3.queryById('CboCostCenterType').show();
            App.RptListPardakhti3.queryById('lblCostCenterType').show();
            App.RptListPardakhti3.queryById('lblNobatePardakht').show();
            App.RptListPardakhti3.queryById('CboNobatePardakht').show();
            App.RptListPardakhti3.queryById('lblMonth').show();
            App.RptListPardakhti3.queryById('CboMonth').show();
            App.RptListPardakhti3.queryById('lblTypeBime').hide();
            App.RptListPardakhti3.queryById('CboTypeBime').hide();
            App.RptListPardakhti3.queryById('lblTypeList').hide();
            App.RptListPardakhti3.queryById('CboTypeList').hide();
            App.RptListPardakhti3.queryById('CboMarhalePardakht').hide();
            App.RptListPardakhti3.queryById('lblMarhalePardakht').hide();
            App.RptListPardakhti3.queryById('CboTypeHesab').hide();
            App.RptListPardakhti3.queryById('lblTypeHesab').hide();
            App.RptListPardakhti3.queryById('txtTitle').hide();
            App.RptListPardakhti3.queryById('lblTitle').hide();
            App.RptListPardakhti3.queryById('CboTypeKomak').hide();
            App.RptListPardakhti3.queryById('lblTypeKomak').hide();
            App.RptListPardakhti3.queryById('btnExcel').hide();
            App.RptListPardakhti3.queryById('CboReportType').hide();
            App.RptListPardakhti3.queryById('lblReportType').hide();
        }
        else if ('@ViewBag.State' == "4") {
            App.RptListPardakhti4.setTitle("گزارش لیست پرداخت حقوق");
            App.RptListPardakhti4.queryById('txtName').hide();
            App.RptListPardakhti4.queryById('lblName').hide();
            App.RptListPardakhti4.queryById('CboYear').show();
            App.RptListPardakhti4.queryById('lblYear').show();
            App.RptListPardakhti4.queryById('lblType').hide();
            App.RptListPardakhti4.queryById('CboType').hide();
            App.RptListPardakhti4.queryById('CboCostCenterType').show();
            App.RptListPardakhti4.queryById('lblCostCenterType').show();
            App.RptListPardakhti4.queryById('lblNobatePardakht').show();
            App.RptListPardakhti4.queryById('CboNobatePardakht').show();
            App.RptListPardakhti4.queryById('lblTypeBime').show();
            App.RptListPardakhti4.queryById('CboTypeBime').show();
            App.RptListPardakhti4.queryById('lblMonth').show();
            App.RptListPardakhti4.queryById('CboMonth').show();
            App.RptListPardakhti4.queryById('lblTypeList').show();
            App.RptListPardakhti4.queryById('CboTypeList').show();
            App.RptListPardakhti4.queryById('CboMarhalePardakht').hide();
            App.RptListPardakhti4.queryById('lblMarhalePardakht').hide();
            App.RptListPardakhti4.queryById('CboTypeHesab').hide();
            App.RptListPardakhti4.queryById('lblTypeHesab').hide();
            App.RptListPardakhti4.queryById('txtTitle').hide();
            App.RptListPardakhti4.queryById('lblTitle').hide();
            App.RptListPardakhti4.queryById('CboTypeKomak').hide();
            App.RptListPardakhti4.queryById('lblTypeKomak').hide();
            App.RptListPardakhti4.queryById('btnExcel').hide();
            App.RptListPardakhti4.queryById('CboReportType').show();
            App.RptListPardakhti4.queryById('lblReportType').show();
        }
        else if ('@ViewBag.State' == "5") {
            App.RptListPardakhti5.setTitle("گزارش لیست پرداخت معوقه");
            App.RptListPardakhti5.queryById('txtName').show();
            App.RptListPardakhti5.queryById('lblName').show();
            App.RptListPardakhti5.queryById('CboYear').show();
            App.RptListPardakhti5.queryById('lblYear').show();
            App.RptListPardakhti5.queryById('lblType').hide();
            App.RptListPardakhti5.queryById('CboType').hide();
            App.RptListPardakhti5.queryById('CboCostCenterType').hide();
            App.RptListPardakhti5.queryById('lblCostCenterType').hide();
            App.RptListPardakhti5.queryById('lblNobatePardakht').hide();
            App.RptListPardakhti5.queryById('CboNobatePardakht').hide();
            App.RptListPardakhti5.queryById('lblTypeBime').hide();
            App.RptListPardakhti5.queryById('CboTypeBime').hide();
            App.RptListPardakhti5.queryById('lblMonth').show();
            App.RptListPardakhti5.queryById('CboMonth').show();
            App.RptListPardakhti5.queryById('lblTypeList').hide();
            App.RptListPardakhti5.queryById('CboTypeList').hide();
            App.RptListPardakhti5.queryById('CboMarhalePardakht').hide();
            App.RptListPardakhti5.queryById('lblMarhalePardakht').hide();
            App.RptListPardakhti5.queryById('CboTypeHesab').hide();
            App.RptListPardakhti5.queryById('lblTypeHesab').hide();
            App.RptListPardakhti5.queryById('txtTitle').hide();
            App.RptListPardakhti5.queryById('lblTitle').hide();
            App.RptListPardakhti5.queryById('CboTypeKomak').hide();
            App.RptListPardakhti5.queryById('lblTypeKomak').hide();
            App.RptListPardakhti5.queryById('btnExcel').hide();
            App.RptListPardakhti5.queryById('CboReportType').hide();
            App.RptListPardakhti5.queryById('lblReportType').hide();
        }
        else if ('@ViewBag.State' == "6") {
            App.RptListPardakhti6.setTitle("گزارش لیست پرداخت سایر پرداخت ها");
            App.RptListPardakhti6.queryById('txtName').hide();
            App.RptListPardakhti6.queryById('lblName').hide();
            App.RptListPardakhti6.queryById('CboYear').show();
            App.RptListPardakhti6.queryById('lblYear').show();
            App.RptListPardakhti6.queryById('lblType').hide();
            App.RptListPardakhti6.queryById('CboType').hide();
            App.RptListPardakhti6.queryById('CboCostCenterType').hide();
            App.RptListPardakhti6.queryById('lblCostCenterType').hide();
            App.RptListPardakhti6.queryById('lblNobatePardakht').show();
            App.RptListPardakhti6.queryById('CboNobatePardakht').show();
            App.RptListPardakhti6.queryById('lblTypeBime').hide();
            App.RptListPardakhti6.queryById('CboTypeBime').hide();
            App.RptListPardakhti6.queryById('lblMonth').show();
            App.RptListPardakhti6.queryById('CboMonth').show();
            App.RptListPardakhti6.queryById('lblTypeList').hide();
            App.RptListPardakhti6.queryById('CboTypeList').hide();
            App.RptListPardakhti6.queryById('CboMarhalePardakht').show();
            App.RptListPardakhti6.queryById('lblMarhalePardakht').show();
            App.RptListPardakhti6.queryById('CboTypeHesab').show();
            App.RptListPardakhti6.queryById('lblTypeHesab').show();
            App.RptListPardakhti6.queryById('txtTitle').show();
            App.RptListPardakhti6.queryById('lblTitle').show();
            App.RptListPardakhti6.queryById('CboTypeKomak').hide();
            App.RptListPardakhti6.queryById('lblTypeKomak').hide();
            App.RptListPardakhti6.queryById('btnExcel').hide();
            App.RptListPardakhti6.queryById('CboReportType').hide();
            App.RptListPardakhti6.queryById('lblReportType').hide();
        }
        else if ('@ViewBag.State' == "7") {
            App.RptListPardakhti7.setTitle("گزارش لیست پرداخت مأموریت");
            App.RptListPardakhti7.queryById('txtName').hide();
            App.RptListPardakhti7.queryById('lblName').hide();
            App.RptListPardakhti7.queryById('CboYear').show();
            App.RptListPardakhti7.queryById('lblYear').show();
            App.RptListPardakhti7.queryById('lblType').hide();
            App.RptListPardakhti7.queryById('CboType').hide();
            App.RptListPardakhti7.queryById('CboCostCenterType').hide();
            App.RptListPardakhti7.queryById('lblCostCenterType').hide();
            App.RptListPardakhti7.queryById('lblNobatePardakht').hide();
            App.RptListPardakhti7.queryById('CboNobatePardakht').hide();
            App.RptListPardakhti7.queryById('lblTypeBime').hide();
            App.RptListPardakhti7.queryById('CboTypeBime').hide();
            App.RptListPardakhti7.queryById('lblMonth').show();
            App.RptListPardakhti7.queryById('CboMonth').show();
            App.RptListPardakhti7.queryById('lblTypeList').hide();
            App.RptListPardakhti7.queryById('CboTypeList').hide();
            App.RptListPardakhti7.queryById('CboMarhalePardakht').hide();
            App.RptListPardakhti7.queryById('lblMarhalePardakht').hide();
            App.RptListPardakhti7.queryById('CboTypeHesab').hide();
            App.RptListPardakhti7.queryById('lblTypeHesab').hide();
            App.RptListPardakhti7.queryById('txtTitle').hide();
            App.RptListPardakhti7.queryById('lblTitle').hide();
            App.RptListPardakhti7.queryById('CboTypeKomak').hide();
            App.RptListPardakhti7.queryById('lblTypeKomak').hide();
            App.RptListPardakhti7.queryById('btnExcel').hide();
            App.RptListPardakhti7.queryById('CboReportType').hide();
            App.RptListPardakhti7.queryById('lblReportType').hide();
        }
        else if ('@ViewBag.State' == "8") {
            App.RptListPardakhti8.setTitle("گزارش لیست پرداخت مرخصی");
            App.RptListPardakhti8.queryById('txtName').hide();
            App.RptListPardakhti8.queryById('lblName').hide();
            App.RptListPardakhti8.queryById('CboYear').show();
            App.RptListPardakhti8.queryById('lblYear').show();
            App.RptListPardakhti8.queryById('lblType').show();
            App.RptListPardakhti8.queryById('CboType').show();
            App.RptListPardakhti8.queryById('CboCostCenterType').hide();
            App.RptListPardakhti8.queryById('lblCostCenterType').hide();
            App.RptListPardakhti8.queryById('lblNobatePardakht').hide();
            App.RptListPardakhti8.queryById('CboNobatePardakht').hide();
            App.RptListPardakhti8.queryById('lblMonth').show();
            App.RptListPardakhti8.queryById('CboMonth').show();
            App.RptListPardakhti8.queryById('lblTypeBime').hide();
            App.RptListPardakhti8.queryById('CboTypeBime').hide();
            App.RptListPardakhti8.queryById('lblTypeList').hide();
            App.RptListPardakhti8.queryById('CboTypeList').hide();
            App.RptListPardakhti8.queryById('CboMarhalePardakht').hide();
            App.RptListPardakhti8.queryById('lblMarhalePardakht').hide();
            App.RptListPardakhti8.queryById('CboTypeHesab').hide();
            App.RptListPardakhti8.queryById('lblTypeHesab').hide();
            App.RptListPardakhti8.queryById('txtTitle').hide();
            App.RptListPardakhti8.queryById('lblTitle').hide();
            App.RptListPardakhti8.queryById('CboTypeKomak').hide();
            App.RptListPardakhti8.queryById('lblTypeKomak').hide();
            App.RptListPardakhti8.queryById('btnExcel').hide();
            App.RptListPardakhti8.queryById('CboReportType').hide();
            App.RptListPardakhti8.queryById('lblReportType').hide();
        }
        else if ('@ViewBag.State' == "9") {
            App.RptListPardakhti9.setTitle("گزارش لیست پرداخت کمک های غیرنقدی");
            App.RptListPardakhti9.queryById('txtName').hide();
            App.RptListPardakhti9.queryById('lblName').hide();
            App.RptListPardakhti9.queryById('CboYear').show();
            App.RptListPardakhti9.queryById('lblYear').show();
            App.RptListPardakhti9.queryById('lblType').hide();
            App.RptListPardakhti9.queryById('CboType').hide();
            App.RptListPardakhti9.queryById('CboCostCenterType').hide();
            App.RptListPardakhti9.queryById('lblCostCenterType').hide();
            App.RptListPardakhti9.queryById('lblNobatePardakht').hide();
            App.RptListPardakhti9.queryById('CboNobatePardakht').hide();
            App.RptListPardakhti9.queryById('lblMonth').show();
            App.RptListPardakhti9.queryById('CboMonth').show();
            App.RptListPardakhti9.queryById('lblTypeBime').hide();
            App.RptListPardakhti9.queryById('CboTypeBime').hide();
            App.RptListPardakhti9.queryById('lblTypeList').hide();
            App.RptListPardakhti9.queryById('CboTypeList').hide();
            App.RptListPardakhti9.queryById('CboMarhalePardakht').hide();
            App.RptListPardakhti9.queryById('lblMarhalePardakht').hide();
            App.RptListPardakhti9.queryById('CboTypeHesab').hide();
            App.RptListPardakhti9.queryById('lblTypeHesab').hide();
            App.RptListPardakhti9.queryById('txtTitle').hide();
            App.RptListPardakhti9.queryById('lblTitle').hide();
            App.RptListPardakhti9.queryById('CboTypeKomak').show();
            App.RptListPardakhti9.queryById('lblTypeKomak').show();
            App.RptListPardakhti9.queryById('btnExcel').hide();
            App.RptListPardakhti9.queryById('CboReportType').hide();
            App.RptListPardakhti9.queryById('lblReportType').hide();
        }
        else if ('@ViewBag.State' == "10") {
            App.RptListPardakhti10.setTitle("گزارش لیست پرداخت مزایای جانبی رفاهی");
            App.RptListPardakhti10.queryById('txtName').hide();
            App.RptListPardakhti10.queryById('lblName').hide();
            App.RptListPardakhti10.queryById('CboYear').show();
            App.RptListPardakhti10.queryById('lblYear').show();
            App.RptListPardakhti10.queryById('lblType').hide();
            App.RptListPardakhti10.queryById('CboType').hide();
            App.RptListPardakhti10.queryById('CboCostCenterType').hide();
            App.RptListPardakhti10.queryById('lblCostCenterType').hide();
            App.RptListPardakhti10.queryById('lblNobatePardakht').show();
            App.RptListPardakhti10.queryById('CboNobatePardakht').show();
            App.RptListPardakhti10.queryById('lblTypeBime').hide();
            App.RptListPardakhti10.queryById('CboTypeBime').hide();
            App.RptListPardakhti10.queryById('lblMonth').show();
            App.RptListPardakhti10.queryById('CboMonth').show();
            App.RptListPardakhti10.queryById('lblTypeList').hide();
            App.RptListPardakhti10.queryById('CboTypeList').hide();
            App.RptListPardakhti10.queryById('CboMarhalePardakht').hide();
            App.RptListPardakhti10.queryById('lblMarhalePardakht').hide();
            App.RptListPardakhti10.queryById('CboTypeHesab').hide();
            App.RptListPardakhti10.queryById('lblTypeHesab').hide();
            App.RptListPardakhti10.queryById('txtTitle').hide();
            App.RptListPardakhti10.queryById('lblTitle').hide();
            App.RptListPardakhti10.queryById('CboTypeKomak').hide();
            App.RptListPardakhti10.queryById('lblTypeKomak').hide();
            App.RptListPardakhti10.queryById('btnExcel').hide();
            App.RptListPardakhti10.queryById('CboReportType').hide();
            App.RptListPardakhti10.queryById('lblReportType').hide();
        }
        else if ('@ViewBag.State' == "11") {
            App.RptListPardakhti11.setTitle("گزارش لیست پرداخت علی الحساب");
            App.RptListPardakhti11.queryById('txtName').hide();
            App.RptListPardakhti11.queryById('lblName').hide();
            App.RptListPardakhti11.queryById('CboYear').show();
            App.RptListPardakhti11.queryById('lblYear').show();
            App.RptListPardakhti11.queryById('lblType').hide();
            App.RptListPardakhti11.queryById('CboType').hide();
            App.RptListPardakhti11.queryById('CboCostCenterType').hide();
            App.RptListPardakhti11.queryById('lblCostCenterType').hide();
            App.RptListPardakhti11.queryById('lblNobatePardakht').show();
            App.RptListPardakhti11.queryById('CboNobatePardakht').show();
            App.RptListPardakhti11.queryById('lblTypeBime').hide();
            App.RptListPardakhti11.queryById('CboTypeBime').hide();
            App.RptListPardakhti11.queryById('lblMonth').show();
            App.RptListPardakhti11.queryById('CboMonth').show();
            App.RptListPardakhti11.queryById('lblTypeList').hide();
            App.RptListPardakhti11.queryById('CboTypeList').hide();
            App.RptListPardakhti11.queryById('CboMarhalePardakht').hide();
            App.RptListPardakhti11.queryById('lblMarhalePardakht').hide();
            App.RptListPardakhti11.queryById('CboTypeHesab').hide();
            App.RptListPardakhti11.queryById('lblTypeHesab').hide();
            App.RptListPardakhti11.queryById('txtTitle').hide();
            App.RptListPardakhti11.queryById('lblTitle').hide();
            App.RptListPardakhti11.queryById('CboTypeKomak').hide();
            App.RptListPardakhti11.queryById('lblTypeKomak').hide();
            App.RptListPardakhti11.queryById('btnExcel').show();
            App.RptListPardakhti11.queryById('CboReportType').hide();
            App.RptListPardakhti11.queryById('lblReportType').hide();
        }
    }

    function ChangeTypeListPardakhti() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboType = Ext.getCmp(tabId).queryById('CboType');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var lblCostCenterType = Ext.getCmp(tabId).queryById('lblCostCenterType');

        if (CboType.getValue() == "0") {
            CboCostCenterType.hide();
            lblCostCenterType.hide();
        }
        else {
            CboCostCenterType.show();
            lblCostCenterType.show();
        }
    }

    function setValueMonthRptListP() {
        var CboMonth = Ext.getCmp('RptListPardakhti' + '@ViewBag.State').queryById('CboMonth');
        CboMonth.setValue('@ViewBag.Month');
        if ('@ViewBag.State' == "1") {
            CboMonth.setValue("12");
        }
    }

    function setValueYearRptListP() {
        var CboYear = Ext.getCmp('RptListPardakhti' + '@ViewBag.State').queryById('CboYear');
        CboYear.setValue('@ViewBag.Year');
    }

    function setValueCostCenterTypeListP() {
        var tabId = App.FirstTabPay.activeTab.id;
        if ('@ViewBag.CostCenter' == "") {
            var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
            CboCostCenterType.setValue(CboCostCenterType.store.getAt(0));
        }
        else {
            var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
            CboCostCenterType.setValue('@ViewBag.CostCenter');
        }
    }

    function setValueBimeListP() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboTypeBime = Ext.getCmp(tabId).queryById('CboTypeBime');
        CboTypeBime.setValue(CboTypeBime.store.getAt(0));
    }

    function setValueNobatePardakhtRptListP() {
        var CboNobatePardakht = Ext.getCmp('RptListPardakhti' + '@ViewBag.State').queryById('CboNobatePardakht');
        CboNobatePardakht.setValue('@ViewBag.nobatePardakht');
    }
    function ExcelRptListPardakhti() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var nobatPardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboType = Ext.getCmp(tabId).queryById('CboType');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var txtName = Ext.getCmp(tabId).queryById('txtName');
        var CboTypeBime = Ext.getCmp(tabId).queryById('CboTypeBime');
        var CboTypeList = Ext.getCmp(tabId).queryById('CboTypeList');
        var CboMarhalePardakht = Ext.getCmp(tabId).queryById('CboMarhalePardakht');
        var CboTypeHesab = Ext.getCmp(tabId).queryById('CboTypeHesab');
        var fldIdPayPersonalInfo = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo');
        var txtTitle = Ext.getCmp(tabId).queryById('txtTitle');
        var CboTypeKomak = Ext.getCmp(tabId).queryById('CboTypeKomak');
        var height = App.PayWin.getHeight() - 250;
        var height2 = App.PayWin.getHeight() - 277;
        var OrganId = Ext.getCmp(tabId).queryById('CboOrgan').getValue();

        if (tabId.substring(16) == "1") {
            if ((CboType.validate() == true && CboType.getValue() == "0" && CboYear.validate() == true && nobatPardakht.validate() == true) ||
                (CboType.validate() == true && CboType.getValue() == "1" && CboYear.validate() == true && nobatPardakht.validate() == true && CboCostCenterType.validate() == true)) {
                var costCenterId = "0";
                var costCenterName = "تمام مراکز";
                if (CboType.getValue() == "1") {
                    costCenterId = CboCostCenterType.getValue();
                    costCenterName = CboCostCenterType.getDisplayValue();
                }
                window.location.href = '@Url.Content("~/PayRoll/Reports/GenerateExcelListPardakhtEydi")' + '?Year=' + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&costCenterId=" + costCenterId + "&costCenterName=" + costCenterName + "&nobatPardakht=" + nobatPardakht.getValue() + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&OrganId=" + OrganId;

            }
            else {
                return;
            }
        }
        if (tabId.substring(16) == "11") {
            if (CboYear.validate() == true && nobatPardakht.validate() == true && nobatPardakht.validate() == true && CboMonth.validate() == true) {
                var costCenterId = "0";
                var costCenterName = "تمام مراکز";
                if (CboType.getValue() == "1") {
                    costCenterId = CboCostCenterType.getValue();
                    costCenterName = CboCostCenterType.getDisplayValue();
                }
                window.location.href = '@Url.Content("~/PayRoll/Reports/GenerateExcelHoghughOnAccount")' + '?Year=' + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&OrganId=1" + "&nobatPardakht=" + nobatPardakht.getValue() + "&OrganId=" + OrganId;

            }
            else {
                return;
            }
        }
    }
    function PrintRptListPardakhti() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var nobatPardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var CboCostCenterType = Ext.getCmp(tabId).queryById('CboCostCenterType');
        var CboType = Ext.getCmp(tabId).queryById('CboType');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var txtName = Ext.getCmp(tabId).queryById('txtName');
        var CboTypeBime = Ext.getCmp(tabId).queryById('CboTypeBime');
        var CboTypeList = Ext.getCmp(tabId).queryById('CboTypeList');
        var CboMarhalePardakht = Ext.getCmp(tabId).queryById('CboMarhalePardakht');
        var CboTypeHesab = Ext.getCmp(tabId).queryById('CboTypeHesab');
        var fldIdPayPersonalInfo = Ext.getCmp(tabId).queryById('fldIdPayPersonalInfo');
        var txtTitle = Ext.getCmp(tabId).queryById('txtTitle');
        var CboTypeKomak = Ext.getCmp(tabId).queryById('CboTypeKomak');
        var height = App.PayWin.getHeight() - 250;
        var height2 = App.PayWin.getHeight() - 277;
        var OrganId = Ext.getCmp(tabId).queryById('CboOrgan').getValue();

        if (tabId.substring(16) == "1") {
            if ((CboType.validate() == true && CboType.getValue() == "0" && CboYear.validate() == true && nobatPardakht.validate() == true) ||
                (CboType.validate() == true && CboType.getValue() == "1" && CboYear.validate() == true && nobatPardakht.validate() == true && CboCostCenterType.validate() == true)) {
                var costCenterId = "0";
                var costCenterName = "تمام مراکز";
                if (CboType.getValue() == "1") {
                    costCenterId = CboCostCenterType.getValue();
                    costCenterName = CboCostCenterType.getDisplayValue();
                }
                Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtEydi?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&costCenterId=" + costCenterId + "&costCenterName=" + costCenterName + "&nobatPardakht=" + nobatPardakht.getValue() + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&OrganId=" + OrganId + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(16) == "2") {
            if (CboYear.validate() == true && CboMonth.validate() == true && CboCostCenterType.validate() == true && nobatPardakht.validate() == true) {
                var PersonId = 0;
                var costCenterName = CboCostCenterType.getDisplayValue();
                if (txtName.getValue() != "") {
                    PersonId = fldIdPayPersonalInfo.getValue();
                    costCenterName = txtName.getValue();
                }
                Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtEzafekar_Tatilkar?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&costCenterId=" + CboCostCenterType.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&PersonId=" + PersonId + "&costCenterName=" + costCenterName + "&FieldName=EzafeKar" + "&OrganId=" + OrganId + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(16) == "3") {
            if (CboYear.validate() == true && CboMonth.validate() == true && CboCostCenterType.validate() == true && nobatPardakht.validate() == true) {
                var PersonId = 0;
                var costCenterName = CboCostCenterType.getDisplayValue();
                if (txtName.getValue() != "") {
                    PersonId = fldIdPayPersonalInfo.getValue();
                    costCenterName = txtName.getValue();
                }
                Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtEzafekar_Tatilkar?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&costCenterId=" + CboCostCenterType.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&PersonId=" + PersonId + "&costCenterName=" + costCenterName + "&FieldName=TatilKar" + "&OrganId=" + OrganId + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(16) == "4") {

            var CboReportType = Ext.getCmp(tabId).queryById('CboReportType');
            if (CboYear.validate() == true && CboMonth.validate() == true && CboCostCenterType.validate() == true && nobatPardakht.validate() == true &&
                CboTypeBime.validate() == true && CboTypeList.validate() == true) {
                Ext.MessageBox.show({
                    title: "",
                    msg: "آیا مایلید معوقه در ترازها به صورت جدا باشد؟",
                    icon: Ext.MessageBox.QUESTION,
                    buttons: Ext.MessageBox.YESNO,
                    fn: function (btn) {
                        if (btn == "yes") {
                            Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtHoghough?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&costCenterId=" + CboCostCenterType.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&TypeBime=" + CboTypeBime.getValue() + "&TypeList=" + CboTypeList.getValue()
                                + "&costCenterName=" + CboCostCenterType.getDisplayValue() + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&moavaghe=" + CboReportType.getValue() + "&type=false" + "&OrganId=" + OrganId + "'></object></center>");
                        }
                        else if (btn == "no") {
                            Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtHoghough?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&costCenterId=" + CboCostCenterType.getValue() + "&nobatPardakht=" + nobatPardakht.getValue() + "&TypeBime=" + CboTypeBime.getValue() + "&TypeList=" + CboTypeList.getValue()
                                + "&costCenterName=" + CboCostCenterType.getDisplayValue() + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue() + "&moavaghe=" + CboReportType.getValue() + "&type=true" + "&OrganId=" + OrganId + "'></object></center>");
                        }
                    }
                });
            }
            else {
                return;
            }
        }
        else if (tabId.substring(16) == "5") {
            if (CboYear.validate() == true && CboMonth.validate() == true) {
                var PersonId = 0;
                if (txtName.getValue() != "") {
                    PersonId = fldIdPayPersonalInfo.getValue();
                }
                Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtMoavaghe?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&PersonId=" + PersonId + "&Name=" + txtName.getValue() + "&OrganId=" + OrganId + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(16) == "6") {
            if (CboYear.validate() == true && CboMonth.validate() == true && CboTypeHesab.validate() == true
                && CboMarhalePardakht.validate() == true && nobatPardakht.validate() == true) {
                Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtSayer?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue()
                    + "&TypeHesab=" + CboTypeHesab.getValue() + "&MarhalePardakht=" + CboMarhalePardakht.getValue() + "&nobatPardakht=" + nobatPardakht.getValue()
                    + "&MarhalePardakhtName=" + CboMarhalePardakht.getDisplayValue() + "&nobatPardakhtName=" + nobatPardakht.getDisplayValue()
                    + "&Title=" + txtTitle.getValue() + "&OrganId=" + OrganId + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(16) == "7") {
            if (CboYear.validate() == true && CboMonth.validate() == true) {
                Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtMamooriat?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&OrganId=" + OrganId + "'></object></center>");
            }
            else {
                return;
            }
        }
        if (tabId.substring(16) == "8") {
            if ((CboType.validate() == true && CboType.getValue() == "0" && CboYear.validate() == true && CboMonth.validate() == true) ||
                (CboType.validate() == true && CboType.getValue() == "1" && CboYear.validate() == true && CboMonth.validate() == true && CboCostCenterType.validate() == true)) {
                var costCenterId = "0";
                var costCenterName = "تمام مراکز";
                if (CboType.getValue() == "1") {
                    costCenterId = CboCostCenterType.getValue();
                    costCenterName = CboCostCenterType.getDisplayValue();
                    Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height2 + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtMorakhasi?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&costCenterId=" + costCenterId + "&costCenterName=" + costCenterName + "&OrganId=" + OrganId + "'></object></center>");
                }
                else {
                    Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtMorakhasi?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&costCenterId=" + costCenterId + "&costCenterName=" + costCenterName + "&OrganId=" + OrganId + "'></object></center>");
                }
            }
            else {
                return;
            }
        }
        else if (tabId.substring(16) == "9") {
            if (CboYear.validate() == true && CboMonth.validate() == true && CboTypeKomak.validate() == true) {
                Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtKomak?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&TypeKomak=" + CboTypeKomak.getValue() + "&OrganId=" + OrganId + "'></object></center>");
            }
            else {
                return;
            }
        }
        else if (tabId.substring(16) == "10") {
            if (CboYear.validate() == true && CboMonth.validate() == true && nobatPardakht.validate() == true) {
                Ext.getCmp(tabId).queryById('RptPanelListP').update("<center><object class='se-pre-con' style='width: 100%;height:" + height + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFListPardakhtBonKart?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&Nobat=" + nobatPardakht.getValue() + "&OrganId=" + OrganId + "'></object></center>");
            }
            else {
                return;
            }
        }
    }
    var addKeyMapListPardakhti = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    if ('@ViewBag.State' == "4") {
                        var keyfield = App.RptListPardakhti4.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.RptListPardakhti4.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.RptListPardakhti4.queryById('CboCostCenterType');
                        }
                        else if (keyfield.itemId == "CboCostCenterType") {
                            nextfld = App.RptListPardakhti4.queryById('CboTypeBime');
                        }
                        else if (keyfield.itemId == "CboTypeBime") {
                            nextfld = App.RptListPardakhti4.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            nextfld = App.RptListPardakhti4.queryById('CboTypeList');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "1") {
                        var keyfield = App.RptListPardakhti1.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.RptListPardakhti1.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.RptListPardakhti1.queryById('CboType');
                        }
                        else if (keyfield.itemId == "CboType") {
                            nextfld = App.RptListPardakhti1.queryById('CboNobatePardakht');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "2") {
                        var keyfield = App.RptListPardakhti2.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.RptListPardakhti2.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.RptListPardakhti2.queryById('CboCostCenterType');
                        }
                        else if (keyfield.itemId == "CboCostCenterType") {
                            nextfld = App.RptListPardakhti2.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            nextfld = App.RptListPardakhti2.queryById('txtName');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "3") {
                        var keyfield = App.RptListPardakhti3.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.RptListPardakhti3.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.RptListPardakhti3.queryById('CboCostCenterType');
                        }
                        else if (keyfield.itemId == "CboCostCenterType") {
                            nextfld = App.RptListPardakhti3.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            nextfld = App.RptListPardakhti3.queryById('txtName');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "5") {
                        var keyfield = App.RptListPardakhti5.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.RptListPardakhti5.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.RptListPardakhti5.queryById('txtName');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "6") {
                        var keyfield = App.RptListPardakhti6.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.RptListPardakhti6.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.RptListPardakhti6.queryById('CboNobatePardakht');
                        }
                        else if (keyfield.itemId == "CboNobatePardakht") {
                            nextfld = App.RptListPardakhti6.queryById('CboMarhalePardakht');
                        }
                        else if (keyfield.itemId == "CboMarhalePardakht") {
                            nextfld = App.RptListPardakhti6.queryById('CboTypeHesab');
                        }
                        else if (keyfield.itemId == "CboTypeHesab") {
                            nextfld = App.RptListPardakhti6.queryById('txtTitle');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "7") {
                        var keyfield = App.RptListPardakhti7.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.RptListPardakhti7.queryById('CboMonth');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "8") {
                        var keyfield = App.RptListPardakhti8.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.RptListPardakhti8.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.RptListPardakhti8.queryById('CboType');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                    if ('@ViewBag.State' == "9") {
                        var keyfield = App.RptListPardakhti9.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                        if (keyfield.itemId == "CboYear") {
                            nextfld = App.RptListPardakhti9.queryById('CboMonth');
                        }
                        else if (keyfield.itemId == "CboMonth") {
                            nextfld = App.RptListPardakhti9.queryById('CboTypeKomak');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                    }
                }
            }]
        });
    };
</script>