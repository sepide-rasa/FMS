@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

<style>
    td {
        text-align: left;
    }
</style>

@(Html.X().Window().Listeners(l => l.AfterRender.Fn = "addKeyMapoutlen")
    .Closable(true)
    .Border(false)
    .Width(450)
    .CloseAction(CloseAction.Destroy)
    .Title("خروجی 12 ماهه سند حسابداری")
    .Layout(LayoutType.Fit)
    .ID("outlen")
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
        .PaddingSpec("10px 0px 10px 0px")
            .Items(
                X.Panel()
                .Border(false)
                .ButtonAlign(Alignment.Center)
                .Buttons(
                    Html.X().Button()
                        .Text("خروجی اکسل")
                        .Icon(Ext.Net.Icon.PageExcel)
                        .Listeners(l => l.Click.Handler = "ExcelDavaze()"),
                    Html.X().Button()
                        .Text("خروج")
                        .Icon(Ext.Net.Icon.DoorOut)
                        .OnClientClick("App.outlen.destroy()")
                )
                .Items(
                    X.FieldSet()
                        .Border(false)
                        .PaddingSpec("0 7px 7px 7px")
                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                        .Defaults(new { Margin = 2 })
                        .Items(
                            X.Label("سال:").ItemID("lblYear"),
                            X.ComboBox()
                                .ItemID("CboYear")
                                .Editable(false)
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .BlankText("لطفا سال را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .Listeners(l =>
                                {
                                    l.AfterRender.Handler = "setValueYearRpt2()";
                                })
                                .Items(
                                    new ListItem("1387", "1387"),
                                    new ListItem("1388", "1388"),
                                    new ListItem("1389", "1389"),
                                    new ListItem("1390", "1390"),
                                    new ListItem("1391", "1391"),
                                    new ListItem("1392", "1392"),
                                    new ListItem("1393", "1393"),
                                    new ListItem("1394", "1394"),
                                    new ListItem("1395", "1395"),
                                    new ListItem("1396", "1396"),
                                    new ListItem("1397", "1397"),
                                    new ListItem("1398", "1398"),
                                    new ListItem("1399", "1399"),
                                    new ListItem("1400", "1400"),
                                    new ListItem("1401", "1401"),
                                        new ListItem("1402", "1402"),
                                            new ListItem("1403", "1403")
                            ),
                            X.Label().Text("نوبت پرداخت:")
                            , X.ComboBox()
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .ItemID("CboNobatePardakht")
                            .Editable(false)
                            .TypeAhead(true)
                                .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .Items(
                                new ListItem("یک", "1"),
                                new ListItem("دو", "2"),
                                new ListItem("سه", "3"),
                                new ListItem("چهار", "4"),
                                new ListItem("پنج", "5")
                                )
                                .SelectedItems(new { Value = "1" }).ColSpan(2)
                                )
                           /* ,X.Label("مرکز هزینه:").ItemID("lblCostCenterType"),
                            X.ComboBox()
                                .ItemID("CboCostCenterType")
                                .Editable(false)
                                .TypeAhead(true)
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .TriggerAction(TriggerAction.All)
                                .DisplayField("fldName")
                                .Width(170)
                                .ValueField("fldId")
                                .EmptyText("مرکز هزینه")
                                .ValueNotFoundText("Loading...")
                                .Store(X.Store().Listeners(ls => ls.Load.Handler = "setValueCostCenterType2()")
                                    .Model(X.Model()
                                        .IDProperty("fldId")
                                        .Fields(
                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                        )
                                    )
                                    .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetCostCenter"))
                                        .Reader(X.JsonReader().Root("data"))
                                    )
                                )*/
                                )
            )

    )
)
)

<script>

    function setValueYearRpt2() {
        var CboYear = App.outlen.queryById('CboYear');
        CboYear.setValue('@ViewBag.Year');
    }

    function setValueCostCenterType2() {
        if ('@ViewBag.CostCenter' == "") {
            var CboCostCenterType = App.outlen.queryById('CboCostCenterType');
            CboCostCenterType.setValue(CboCostCenterType.store.getAt(0));
        }
        else {
            var CboCostCenterType = App.outlen.queryById('CboCostCenterType');
            CboCostCenterType.setValue('@ViewBag.CostCenter');
        }
    }

    function ExcelDavaze() {
      
        var CboYear = App.outlen.queryById('CboYear');
        var NobatPardakht = App.outlen.queryById('CboNobatePardakht');
        window.location.href = '@Url.Content("~/PayRoll/Reports/Excel12")' + '?Year=' + CboYear.getValue() + '&NobatPardakht=' + NobatPardakht.getValue();
        
    }

    function Excelout() {
        App.outlen.body.mask("در حال بارگذاری");

        var CheckedName = App.PayExcelWin.queryById('CheckedName').getValue();
        var CheckedTypeBime = App.PayExcelWin.queryById('CheckedTypeBime').getValue();
        var CheckedShomareBime = App.PayExcelWin.queryById('CheckedShomareBime').getValue();
        var CheckedBimeOmr = App.PayExcelWin.queryById('CheckedBimeOmr').getValue();
        var CheckedBimeTakmili = App.PayExcelWin.queryById('CheckedBimeTakmili').getValue();
        var CheckedMashagheleSakhtVaZianAvar = App.PayExcelWin.queryById('CheckedMashagheleSakhtVaZianAvar').getValue();
        var CheckedCostCenter = App.PayExcelWin.queryById('CheckedCostCenter').getValue();
        var CheckedMazadCSal = App.PayExcelWin.queryById('CheckedMazadCSal').getValue();
        var CheckedPasAndaz = App.PayExcelWin.queryById('CheckedPasAndaz').getValue();
        var CheckedMasuliyatPayanKhedmat = App.PayExcelWin.queryById('CheckedMasuliyatPayanKhedmat').getValue();
        var CheckedJobeCode = App.PayExcelWin.queryById('CheckedJobeCode').getValue();
        var CheckedInsuranceWorkShop = App.PayExcelWin.queryById('CheckedInsuranceWorkShop').getValue();
        var Checked = "";

        if (CheckedName == true)
            Checked = Checked + "Name" + ";";
        if (CheckedTypeBime == true)
            Checked = Checked + "TypeBime" + ";";
        if (CheckedShomareBime == true)
            Checked = Checked + "ShomareBime" + ";";
        if (CheckedBimeOmr == true)
            Checked = Checked + "BimeOmr" + ";";
        if (CheckedBimeTakmili == true)
            Checked = Checked + "BimeTakmili" + ";";
        if (CheckedMashagheleSakhtVaZianAvar == true)
            Checked = Checked + "MashagheleSakhtVaZianAvar" + ";";
        if (CheckedCostCenter == true)
            Checked = Checked + "CostCenter" + ";";
        if (CheckedMazadCSal == true)
            Checked = Checked + "MazadCSal" + ";";
        if (CheckedPasAndaz == true)
            Checked = Checked + "PasAndaz" + ";";
        if (CheckedMasuliyatPayanKhedmat == true)
            Checked = Checked + "MasuliyatPayanKhedmat" + ";";
        if (CheckedJobeCode == true)
            Checked = Checked + "JobeCode" + ";";
        if (CheckedInsuranceWorkShop == true)
            Checked = Checked + "InsuranceWorkShop" + ";";
        window.location.href = '@Url.Content("~/PayRoll/PayPersonalInfo/CreateExcel/")' + '?Checked=' + Checked;

        App.PayExcelWin.body.mask().hide();
    }
    var addKeyMapoutlen = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                        var keyfield = App.outlen.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;
                         
                         if (keyfield.itemId == "CboYear") {
                             nextfld = App.outlen.queryById('CboCostCenterType');
                        }
                        else {
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                        }
                        nextfld.focus();
                        nextfld.selectText();
                }
            }]
        });
    };
</script>