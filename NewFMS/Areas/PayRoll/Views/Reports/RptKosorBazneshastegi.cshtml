@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Panel()
    .Closable(true)
    .Border(false)
    .CloseAction(CloseAction.Destroy)
                    .Listeners(li => { li.Render.Fn = "addKeyMapBazneshastegi"; })
    .Title("گزارش کسور بازنشستگی")
    .Layout(LayoutType.Fit)
            .ID("RptKosorBazneshastegi")
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.Panel()
                .Border(false)
                .ButtonAlign(Alignment.Center)
                .Buttons(
                    Html.X().Button()
                        .Text("چاپ")
                        .Icon(Ext.Net.Icon.Printer)
                                .Listeners(l => l.Click.Handler = "PrintRptKosorBazneshastegi()"),
                        Html.X().Button()
                        .Text("خروجی اکسل")
                        .Icon(Ext.Net.Icon.PageExcel)
                        .Listeners(l => l.Click.Handler = "ExcelKosorBazneshastegi()"),
                    Html.X().Button()
                        .Text("خروج")
                        .Icon(Ext.Net.Icon.DoorOut)
                                .Listeners(l => l.Click.Handler = "destroyRptKosorBazneshastegi()")
                )
                .Items(
                    X.FieldSet()
                        .Border(false)
                        .PaddingSpec("0 7px 7px 7px")
                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                        .Defaults(new { Margin = 2 })
                        .Items(
                                X.Label("سال:").ItemID("lblYear"),
                                    X.ComboBox()
                                        .ItemID("CboYear")
                                        .Editable(true)
                                        .ForceSelection(true)
                                        .TypeAhead(true)
                                        .AllowBlank(false)
                                        .BlankText("لطفا سال را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Listeners(l =>
                                        {
                                            l.AfterRender.Handler = "setValueYearRptKosorB()";
                                            l.Select.Handler = "setYearClassRptKosorB()";
                                        })
                                        .Items(
                                            new ListItem("1387", "1387"),
                                            new ListItem("1388", "1388"),
                                            new ListItem("1389", "1389"),
                                            new ListItem("1390", "1390"),
                                            new ListItem("1391", "1391"),
                                            new ListItem("1392", "1392"),
                                            new ListItem("1393", "1393"),
                                            new ListItem("1394", "1394"),
                                            new ListItem("1395", "1395"),
                                            new ListItem("1396", "1396"),
                                            new ListItem("1397", "1397"),
                                            new ListItem("1398", "1398"),
                                            new ListItem("1399", "1399"),
                                            new ListItem("1400", "1400"),
                                            new ListItem("1401", "1401"),
                                                new ListItem("1402", "1402"),
                                            new ListItem("1403", "1403")
                                    ),
                                    X.Label("ماه:").ItemID("lblMonth"),
                                    X.ComboBox()
                                        .ItemID("CboMonth")
                                        .Editable(true)
                                        .ForceSelection(true)
                                        .TypeAhead(true)
                                        .AllowBlank(false)
                                        .BlankText("لطفا ماه را انتخاب کنید.")
                                        .Listeners(l =>
                                        {
                                            l.AfterRender.Handler = "setValueMonthRptKosorB()";
                                            l.Select.Handler = "setMonthClassRptKosorB()";
                                        })
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Items(
                                            new ListItem("فروردین", "01"),
                                            new ListItem("اردیبهشت", "02"),
                                            new ListItem("خرداد", "03"),
                                            new ListItem("تیر", "04"),
                                            new ListItem("مرداد", "05"),
                                            new ListItem("شهریور", "06"),
                                            new ListItem("مهر", "07"),
                                            new ListItem("آبان", "08"),
                                            new ListItem("آذر", "09"),
                                            new ListItem("دی", "10"),
                                            new ListItem("بهمن", "11"),
                                            new ListItem("اسفند", "12")
                                        ),
                                    X.Label("نوبت پرداخت:").ItemID("lblNobatePardakht"),
                                    X.ComboBox()
                                        .ItemID("CboNobatePardakht")
                                        .Editable(false)
                                        .TypeAhead(true)
                                        .AllowBlank(false)
                                        .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                                            .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueNobatePardakhtRptKosorB()";
                                        l.Select.Handler = "setNobatePardakhtCalssRptKosorB()";
                                    })
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Items(
                                            new ListItem("یک", "1"),
                                            new ListItem("دو", "2"),
                                            new ListItem("سه", "3"),
                                            new ListItem("چهار", "4"),
                                            new ListItem("پنج", "5")
                                        ),
                                    X.Label("شماره فیش:").ItemID("lblShFish"),
                                    X.TextField()
                                        .ItemID("txtShFish")
                                        .AllowBlank(false)
                                        .BlankText("لطفا شماره فیش را وارد کنید."),
                                    X.Label("تاریخ واریز:").ItemID("lblDateVariz"),
                                    X.PDateField()
                                    .MaskRe("[0-9,/]")
                                        .ItemID("txtDateVariz")
                                        .AllowBlank(false)
                                        .BlankText("لطفا تاریخ واریز را وارد کنید.")
                            )
                        )),
                Html.X().Panel()
                    .Border(true)
                        .Listeners(L => L.AfterRender.Handler = "setSizeRptPanelRptKosorB()")
                    .AutoScroll(true)
                            .ItemID("RptPanelRptKosorB")
        //.Html("<center><object style='width: 1200px;height: 550px;border: 1px solid #ccc;' type='application/pdf' data='/RptListKhadamatDarmani/GeneratePDF?Year=" + ViewBag.Year + "&Month=" + ViewBag.Month + "&nobatPardakht=" + ViewBag.nobatPardakht + "'></object></center>")
            )

)
)
<script type="text/javascript">
    function setSizeRptPanelRptKosorB() {
        Ext.getCmp('RptKosorBazneshastegi').queryById('RptPanelRptKosorB').setSize(App.PayWin.getWidth() - 20, App.PayWin.getHeight() - 165);
    }
    function destroyRptKosorBazneshastegi() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.getCmp(tabId).destroy();
    }
    function setValueMonthRptKosorB() {
        var CboMonth = Ext.getCmp('RptKosorBazneshastegi').queryById('CboMonth');
        CboMonth.setValue('@ViewBag.Month');
    }
    function setValueYearRptKosorB() {
        var CboYear = Ext.getCmp('RptKosorBazneshastegi').queryById('CboYear');
        CboYear.setValue('@ViewBag.Year');
    }
    function setMonthClassRptKosorB() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetMonthClass',
            params: {
                Month: Ext.getCmp(tabId).queryById("CboMonth").getValue()
            }
        });
    }
    function setYearClassRptKosorB() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetYearClass',
            params: {
                Year: Ext.getCmp(tabId).queryById("CboYear").getValue()
            }
        });
    }
    function RptKosorB() {
        var CboNobatePardakht = Ext.getCmp('RptKosorBazneshastegi' + '@ViewBag.State').queryById('CboNobatePardakht');
        CboNobatePardakht.setValue('@ViewBag.nobatePardakht');
    }
    function setNobatePardakhtCalssRptKosorB() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/setNobatePardakhtCalss',
            params: {
                NobatePardakht: Ext.getCmp(tabId).queryById("CboNobatePardakht").getValue()
            }
        });
    }
    function setValueNobatePardakhtRptKosorB() {
        var CboNobatePardakht = Ext.getCmp('RptKosorBazneshastegi' + '@ViewBag.State').queryById('CboNobatePardakht');
        CboNobatePardakht.setValue('@ViewBag.nobatePardakht');
    }
    function setNobatePardakhtCalssRptKosorB() {
        var tabId = App.FirstTabPay.activeTab.id;
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/setNobatePardakhtCalss',
            params: {
                NobatePardakht: Ext.getCmp(tabId).queryById("CboNobatePardakht").getValue()
            }
        });
    }
    function PrintRptKosorBazneshastegi() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var CboNobatePardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var txtShFish = Ext.getCmp(tabId).queryById('txtShFish');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var txtDateVariz = Ext.getCmp(tabId).queryById('txtDateVariz');
        var height = App.PayWin.getHeight() - 250;
        if (txtDateVariz.validate() == true && txtShFish.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboNobatePardakht.validate() == true) {

            Ext.getCmp(tabId).queryById('RptPanelRptKosorB').update("<center><object class='se-pre-con' style='width: 100%;height:" + height + "px;border: 1px solid #ccc;' type='application/pdf' data='/PayRoll/Reports/GeneratePDFRptKosorBazneshastegi?Year=" + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + CboNobatePardakht.getValue() + "&Sh_Fish=" + txtShFish.getValue() + "&DateVariz=" + txtDateVariz.rawValue + "'></object></center>");

        }
        else {
            return;
        }
    }
    function ExcelKosorBazneshastegi() {
        var tabId = App.FirstTabPay.activeTab.id;
        var CboYear = Ext.getCmp(tabId).queryById('CboYear');
        var CboNobatePardakht = Ext.getCmp(tabId).queryById('CboNobatePardakht');
        var txtShFish = Ext.getCmp(tabId).queryById('txtShFish');
        var CboMonth = Ext.getCmp(tabId).queryById('CboMonth');
        var txtDateVariz = Ext.getCmp(tabId).queryById('txtDateVariz');
        if (txtDateVariz.validate() == true && txtShFish.validate() == true && CboYear.validate() == true && CboMonth.validate() == true && CboNobatePardakht.validate() == true) {

            window.location.href = '@Url.Content("~/PayRoll/Reports/GenerateExcelRptKosorBazneshastegi/")' + '?Year=' + CboYear.getValue() + "&Month=" + CboMonth.getValue() + "&nobatPardakht=" + CboNobatePardakht.getValue() + "&Sh_Fish=" + txtShFish.getValue() + "&DateVariz=" + txtDateVariz.rawValue;

        }
        else {
            return;
        }
    }
    var addKeyMapBazneshastegi = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.RptKosorBazneshastegi.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                        var nextfld;

                       /* if (keyfield.itemId == "CboMonth") {
                            nextfld = App.RptKosorBazneshastegi.queryById('btnPrintGh');
                        }
                        else {*/
                            nextfld = keyfield.nextSibling().nextSibling();
                            nextfld.selectText();
                       /* }*/
                        nextfld.focus();
                        nextfld.selectText();
                }
            }]
        });
    };
</script>
