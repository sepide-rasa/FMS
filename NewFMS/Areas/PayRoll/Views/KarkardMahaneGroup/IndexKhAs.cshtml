@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

<style>
    td {
        text-align: left;
    }
</style>

@(Html.X().Window()//.Listeners(l => l.AfterRender.Handler = "SetDefultItem();")
    .Closable(true)
    .CloseAction(CloseAction.Destroy)
    .Layout(LayoutType.Fit)
    .Modal(true)
    .Width(530)
    .ID("KarkardMahaneKhAsWin")
        //.Title("سایر پرداخت ها")
    .ButtonAlign(Alignment.Center)
    .Buttons(
        Html.X().Button()
            .Text("ادامه")
            .Icon(Ext.Net.Icon.PageGo)
            .Listeners(l => l.Click.Handler = "NextKarkardMahane()"),
        Html.X().Button()
            .Text("راهنما")
            .Icon(Ext.Net.Icon.Help)
            .Listeners(l => l.Click.Handler = "HelpKarkardMahane()"),
        Html.X().Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .Listeners(l => l.Click.Handler = "App.KarkardMahaneKhAsWin.destroy()")
    )
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .PaddingSpec("4px 12px 4px 12px")
            .Items(
                X.FieldSet()
                    .Border(true)
                    .Title("مشخصات کارکرد")
                    .PaddingSpec("0 7px 7px 7px")
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                    .Defaults(new { Margin = 2 })
                    .Items(
                        X.Label("سازمان:"),
                        X.ComboBox()
                                        .ItemID("CboOrgan")
                                        .TypeAhead(true)
                                        .AutoFocus(true)
                                        .Editable(true)
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .BlankText("لطفا سازمان را انتخاب کنید.")
                                            //.Listeners(l => l.Change.Handler = "if(App.KarkardMahaneKhAsWin.queryById('CboCostCenter').getValue()==2){App.KarkardMahaneWin.queryById('CboCostCenterType').getStore().load();}")
                                        .AllowBlank(false)
                                        .ForceSelection(true)
                                        .DisplayField("fldTitle")
                                        .ValueField("fldId")
                                        .EmptyText("سازمان ...")
                                        .ColSpan(3)
                                        .Width(375)
                                        .Store(X.Store()
                                            .Model(X.Model()
                                                .IDProperty("fldId")
                                                .Fields(
                                                    new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                    new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                                )
                                            )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetOrgan"))
                                                .Reader(X.JsonReader().Root("data"))
                                            )
                                            .Listeners(l => l.Load.Handler = "setdefaultValueKarkardMahaneKhAsWin()")
                                            ),
                        X.Label("سال:"),
                        X.ComboBox()
                            .ItemID("CboYear")
                            .Editable(false)
                            .TypeAhead(true)
                                .AllowBlank(false)
                                .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueYear()";
                                        l.Change.Handler = "setYearClass()";
                                    })
                            .BlankText("لطفا سال را انتخاب کنید.")
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .Items(
                                new ListItem("1387", "1387"),
                                new ListItem("1388", "1388"),
                                new ListItem("1389", "1389"),
                                new ListItem("1390", "1390"),
                                new ListItem("1391", "1391"),
                                new ListItem("1392", "1392"),
                                new ListItem("1393", "1393"),
                                new ListItem("1394", "1394"),
                                new ListItem("1395", "1395"),
                                new ListItem("1396", "1396"),
                                new ListItem("1397", "1397"),
                                new ListItem("1398", "1398"),
                                new ListItem("1399", "1399"),
                                new ListItem("1400", "1400"),
                                new ListItem("1401", "1401"),
                                    new ListItem("1402", "1402"),
                                            new ListItem("1403", "1403")
                        ),
                        X.Label("ماه:").ItemID("lblMonth"),
                        X.ComboBox()
                            .ItemID("CboMonth")
                            .Editable(false)
                            .TypeAhead(true)
                            .AllowBlank(false)
                                .BlankText("لطفا ماه را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueMonth()";
                                        l.Change.Handler = "setMonthClass()";
                                    })
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .Items(
                                new ListItem("فروردین", "01"),
                                new ListItem("اردیبهشت", "02"),
                                new ListItem("خرداد", "03"),
                                new ListItem("تیر", "04"),
                                new ListItem("مرداد", "05"),
                                new ListItem("شهریور", "06"),
                                new ListItem("مهر", "07"),
                                new ListItem("آبان", "08"),
                                new ListItem("آذر", "09"),
                                new ListItem("دی", "10"),
                                new ListItem("بهمن", "11"),
                                new ListItem("اسفند", "12")
                            ),
                        X.Label("نوبت پرداخت:").ItemID("lblNobatePardakht"),
                        X.ComboBox()
                            .ItemID("CboNobatePardakht")
                            .Editable(false)
                            .TypeAhead(true)
                            .AllowBlank(false)
                                .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                                    .Listeners(l =>
                                    {
                                        l.AfterRender.Handler = "setValueNobatePardakht()";
                                        l.Change.Handler = "setNobatePardakhtCalss()";
                                    })
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .Items(
                                new ListItem("یک", "1"),
                                new ListItem("دو", "2"),
                                new ListItem("سه", "3"),
                                new ListItem("چهار", "4"),
                                new ListItem("پنج", "5")
                                )//.SelectedItems(new { Value = "1" })
                                ,
                            X.Label("چارت سازمانی:").ItemID("lblChartOrgan"),
                                    X.ComboBox()
                                        .ItemID("CboChartOrgan")
                                        .Editable(false)
                                        .AllowBlank(false)
                                            .TypeAhead(true)
                                .BlankText("لطفا چارت را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldName")
                                        .ValueField("fldId")
                                        .EmptyText("چارت سازمانی")
                                        .ValueNotFoundText("Loading...")
                                        .Store(X.Store().Listeners(ls => ls.Load.Handler = "setValueChartOrgan()")
                                            .Model(X.Model()
                                                .IDProperty("fldId")
                                                .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                )
                                            )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetChartOrgan"))
                                                .Reader(X.JsonReader().Root("data"))
                                            )
                                        )
                        )
            )
    )
)

<script type="text/javascript">
    function setdefaultValueKarkardMahaneKhAsWin() {
        App.KarkardMahaneKhAsWin.queryById('CboOrgan').select(App.KarkardMahaneKhAsWin.queryById('CboOrgan').store.getAt(0));
    }
    function HelpKarkardMahane() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/KarkardMahaneGroup/HelpKarkardMahaneKhas',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function setYearClass() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetYearClass',
            params: {
                Year: App.KarkardMahaneKhAsWin.queryById("CboYear").getValue()
            }
        });
    }

    function setMonthClass() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/SetMonthClass',
            params: {
                Month: App.KarkardMahaneKhAsWin.queryById("CboMonth").getValue()
            }
        });
    }

    function setNobatePardakhtCalss() {
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Pardakhtha/setNobatePardakhtCalss',
            params: {
                NobatePardakht: App.KarkardMahaneKhAsWin.queryById("CboNobatePardakht").getValue()
            }
        });
    }
    function setValueYear() {
        var CboYear = App.KarkardMahaneKhAsWin.queryById('CboYear');
        CboYear.setValue('@ViewBag.Year');
    }

    function setValueNobatePardakht() {
        var CboNobatePardakht = App.KarkardMahaneKhAsWin.queryById('CboNobatePardakht');
        CboNobatePardakht.setValue('@ViewBag.nobatePardakht');
    }
    function setValueMonth() {
        var CboMonth = App.KarkardMahaneKhAsWin.queryById('CboMonth');
        CboMonth.setValue('@ViewBag.Month');
    }


    function setValueChartOrgan() {
        var CboChartOrgan = App.KarkardMahaneKhAsWin.queryById('CboChartOrgan');
        if (CboChartOrgan.store.data.length > 0) {
            CboChartOrgan.setValue(CboChartOrgan.store.getAt(0));
        }
    }

    function NextKarkardMahane() {
        var CboYear = App.KarkardMahaneKhAsWin.queryById('CboYear').getValue();
        var CboMonth = App.KarkardMahaneKhAsWin.queryById('CboMonth').getValue();
        var nobatPardakht = App.KarkardMahaneKhAsWin.queryById('CboNobatePardakht');
        var CboChartOrgan = App.KarkardMahaneKhAsWin.queryById('CboChartOrgan');
        var CboOrgan = App.KarkardMahaneKhAsWin.queryById('CboOrgan');


        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });

        var valid = true;
        if (nobatPardakht.validate() == false)
            valid = false;
        if (CboChartOrgan.validate() == false)
            valid = false;
        if (CboOrgan.validate() == false)
            valid = false;

        var FieldName = "fldChartOrganId";
        var CostCenter_ChartId = CboChartOrgan.getValue();
        

        if (valid == false) {
            Ext.net.Mask.hide();
            return;
        }

       /* App.KarkardMahaneKhAsWin.destroy();
        Ext.net.DirectMethod.request({
            url: '/PayRoll/KarkardMahaneGroup/IndexGroup?containerId=FirstTabPay&FieldName=' + FieldName + '&Sal=' + CboYear + '&Mah=' + CboMonth + '&NobatPardakht=' + nobatPardakht.getValue() + '&CostCenter_ChartId=' + CostCenter_ChartId + "&Flag=true",
            success: function () {
            }
        });*/

        Ext.net.DirectMethod.request({
            url: '/PayRoll/KarkardMahane/CheckCloseHoghough',
            params: {
                Year: CboYear,
                Month: CboMonth,
                OrganId: CboOrgan.getValue()
            },
            success: function (data) {
                if (data.FlagC == false) {/*حقوق بسته نشده داشتیم*/
                    Ext.MessageBox.show({
                        title: "هشدار",
                        msg: "حقوق ماه های گذشته بسته نشده است.آیا تمایل به بسته شدن آن دارید؟",
                        icon: Ext.MessageBox.WARNING,
                        buttons: Ext.MessageBox.YESNO,
                        fn: function (btn) {
                            if (btn == 'yes') {
                                App.KarkardMahaneKhAsWin.destroy();
                                Ext.net.DirectMethod.request({
                                    url: '/PayRoll/KarkardMahaneGroup/IndexGroup?containerId=FirstTabPay&FieldName=' + FieldName + '&Sal=' + CboYear + '&Mah=' + CboMonth
                                        + '&NobatPardakht=' + nobatPardakht.getValue() + '&CostCenter_ChartId='
                                        + CostCenter_ChartId + "&Flag=true"+"&OrganId="+CboOrgan.getValue(),
                                    success: function () {
                                        /*Ext.net.Mask.hide();*/
                                    }
                                });
                            }
                            else if (btn == 'no') {
                                Ext.net.Mask.hide();
                            }
                        }
                    });
                }
                else {
                    App.KarkardMahaneKhAsWin.destroy();
                    Ext.net.DirectMethod.request({
                        url: '/PayRoll/KarkardMahaneGroup/IndexGroup?containerId=FirstTabPay&FieldName=' + FieldName + '&Sal=' + CboYear + '&Mah=' + CboMonth +
                            '&NobatPardakht=' + nobatPardakht.getValue() + '&CostCenter_ChartId=' + CostCenter_ChartId + "&Flag=false"+"&OrganId="+CboOrgan.getValue(),
                        success: function () {
                            /*Ext.net.Mask.hide();*/
                        }
                    });
                }
            }
        });
    }

</script>