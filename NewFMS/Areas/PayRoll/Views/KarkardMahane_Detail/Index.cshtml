@model NewFMS.Models.KarkardMahane
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<br />
@(Html.X().Panel()
        .ID("KarkardMahane_Detail")
            .Title("جزئیات کارکرد ماهانه")
                    .Listeners(li => li.AfterRender.Handler = "KarkardMahane_DetailSetSize();")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
        .Border(false)
       .Items(
    X.Panel().Border(false).Items(X.Label()),
        X.Panel().Border(false).Buttons(
        //X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ItemID("btnSave")
        //    .Listeners(l => { l.Click.Handler = "SaveKarkardMahane_Detail();"; })
             X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)
                .OnClientClick("App.KarkardMahane_Detail.destroy()")
        ).ButtonAlign(Ext.Net.Alignment.Center)
        .Items(
            X.Panel().Border(false)
             .Layout(LayoutType.VBox)
                         .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.FieldSet().Border(true).Title("انتخاب ماه و سال")
                //.Height(50)
                     .Defaults(new { Margin = 2 })
                    .Layout(LayoutType.Table)
                    .LayoutConfig(new TableLayoutConfig { Columns = 4 })
                .Items(
                    X.Hidden().ItemID("fldId"),
                        X.Label().Text("سال:")
                            , X.ComboBox()
                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                .ItemID("CboYear")
                                .DisplayField("fldYear")
                                .ValueField("fldYear")
                                .TypeAhead(true)
                                .Editable(false)
                                .AllowBlank(false)
                                .BlankText("لطفا سال را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .ForceSelection(true)
                                .TriggerAction(TriggerAction.All)
                                .Store(X.Store()
                                .Model(X.Model()
                                .IDProperty("fldYear")
                                    .Fields(
                                        new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" }
                                    )
                                )
                                    .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetSalVorod"))
                                            .Reader(X.JsonReader().Root("data"))
                                            ).Listeners(l => l.Load.Handler = "SetDefultSal();")
                            )
                                .Listeners(l => l.Select.Handler = "ReloadKarkard()")
                                
                            , X.Label().Text("ماه:")
                            , X.ComboBox()
                            .LabelAlign(Ext.Net.LabelAlign.Top)
                            .ItemID("CboMonth")
                            .Editable(false)
                            .TypeAhead(true)
                            .BlankText("لطفا ماه را انتخاب کنید.")
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .Items(
                                new ListItem("فروردین", "1"),
                                new ListItem("اردیبهشت", "2"),
                                new ListItem("خرداد", "3"),
                                new ListItem("تیر", "4"),
                                new ListItem("مرداد", "5"),
                                new ListItem("شهریور", "6"),
                                new ListItem("مهر", "7"),
                                new ListItem("آبان", "8"),
                                new ListItem("آذر", "9"),
                                new ListItem("دی", "10"),
                                new ListItem("بهمن", "11"),
                                new ListItem("اسفند", "12")
                                )
                                .SelectedItems(new { Value = "1" })
                                    .Listeners(l => l.Select.Handler = "ReloadKarkard()"),
                                    X.Label("سازمان:"),
                                    X.ComboBox()
                                    .ItemID("CboOrgan")
                                    .TypeAhead(true)
                                    .ColSpan(3)
                                    .Editable(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .BlankText("لطفا سازمان را انتخاب کنید.")
                                    .Listeners(l => l.Select.Handler = "ReloadKarkard()")
                                    .AllowBlank(false)
                                    .ForceSelection(true)
                                    .DisplayField("fldTitle")
                                    .ValueField("fldId")
                                    .EmptyText("سازمان ...")
                                    .Width(318)
                                    .Store(X.Store()
                                        .Model(X.Model()
                                            .IDProperty("fldId")                                    
                                            .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                            )
                                        )
                                        .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetOrgan"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                                .Listeners(l => l.Load.Handler = "setdefaultValueKarkardMahane_Detail()")
                                        )
                )
            )
        ),
            X.Panel().Border(false)//.Height(250)
            .Items(
                    X.GridPanel()
                                    .AutoScroll(true)
                                        .Listeners(l => l.ItemClick.Handler = "ReloadGridDetail();")
                                    .ItemID("GridHeader")
                                    .BottomBar(X.PagingToolbar())
                                    .Flex(2)
                                    .Store(
                                            X.StoreFor(Model._KarKardeMahane)
                                            .Proxy(Html.X().AjaxProxy()
                                            .Url(Url.Action("Read"))
                                            .Reader(Html.X().JsonReader().Root("data"))
                                           // .ExtraParams(l => l.Add(new { mah = App.KarkardMahane_Detail.queryById("CboMonth").getValue(), sal = App.KarkardMahane_Detail.queryById("CboYear").getValue() }))
                                            ).AutoLoad(false)
                                                    .Parameters(ps => ps.Add(new StoreParameter("OrganId", "App.KarkardMahane_Detail.queryById('CboOrgan').getValue()", ParameterMode.Raw)))
                                    .PageSize(9)
                                    .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = "App.KarkardMahane_Detail.queryById('GridHeader').selModel.refresh();")*/)

                                    .View(
                                        Html.X().GridView()
                                            .LoadingText("در حال بارگذاری...")
                                            .RTL(true))
                                                .Plugins(X.FilterHeader().Remote(true))
                                        .ColumnModel(
                                            Html.X().RowNumbererColumn(),
                                                Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldName_Father).Text("نام و نام خانوادگی").Flex(2),
                                            Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldCodemeli).Text("کد ملی").Flex(2),
                                            Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(2),
                                            Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldYear).Text("سال").Flex(2),
                                            Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldMonth).Text("ماه").Flex(2),
                                            Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldNobatePardakhtS).Text("نوبت پرداخت").Flex(2),
                                            Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldKarkard).Text("کارکرد(روز)").Flex(2),
                                            Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldId).Text("karkardId").Hidden(true),
                                            Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldStatusId).Text("وضعیت").Hidden(true).Flex(1),/*فعال1:   2:غیرفعال  3:بازنشسته*/
                                            Html.X().Column().DataIndex(Model._KarKardeMahane, m => m.fldStatusTitle).Text("وضعیت").Hidden(true).Flex(1)
                                            )
                                    .SelectionModel(
                                        Html.X().RowSelectionModel()
                                            .Mode(Ext.Net.SelectionMode.Single)
                                            )
            ),
               X.Panel()
                                    .ItemID("PnlGridDetail")
                                    .Title("جزئیات کارکرد ماهانه")
                                    .Border(false)
                                    .Layout(Ext.Net.LayoutType.Fit)
                                    .Items(
                                            X.GridPanel()
                                                      .TopBar(
                                    Html.X().Toolbar()
                                    .Items(
                                    X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)//.ToolTip("کلید میانبر F8")
                                            .Listeners(li => li.Click.Handler = "NewKarkardMahane_Detail();"),
                                        X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)//.ToolTip("کلید میانبر F2")
                                                .Listeners(Li => Li.Click.Handler = "EditKarkardMahane_Detail();"),
                                        X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)//.ToolTip("کلید میانبر F9")
                                            .Listeners(de =>
                                            {
                                                de.Click.Handler = "if (App.KarkardMahane_Detail.queryById('GridHeader').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteKarkardMahane_Detail();";
                                            }),
                                            X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)//.ToolTip("کلید میانبر F2")
                                                    .Listeners(Li => Li.Click.Handler = "HelpKarkardMahane_Detail();")
                                    )
                                )
                                                  .BottomBar(X.PagingToolbar())
                                            .AutoScroll(true)
                                                .ID("GridDetailKarkardMahane_Detail")
                                            .Flex(2)//.Height(187)
                                            .Store(
                                                       X.StoreFor(Model.KarKardDetail)
                                                    .PageSize(9)
                                                    .RemotePaging(true)
        /*.Listeners(l => l.DataChanged.Handler = " App.KarkardMahane_Detail.queryById('GridDetail').selModel.refresh();")*/
                            )
                                            .View(
                                                Html.X().GridView()
                                                    .LoadingText("در حال بارگذاری...")
                                                    .RTL(true)
                            )
                                            .ColumnModel(
                                                Html.X().RowNumbererColumn(),
                                                            Html.X().Column().DataIndex(Model.KarKardDetail, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                                            Html.X().Column().DataIndex(Model.KarKardDetail, m => m.fldKarkardMahaneId).Text("کد").Hidden(true).Flex(1),
                                                            Html.X().Column().DataIndex(Model.KarKardDetail, m => m.fldKarkard).Text("تعداد روز").Flex(4),
                                                            Html.X().Column().DataIndex(Model.KarKardDetail, m => m.fldWorkShopNum).Text("شماره کارگاه بیمه").Flex(4),
                                                            Html.X().Column().DataIndex(Model.KarKardDetail, m => m.fldWorkShopName).Text("نام کارگاه بیمه").Flex(10)
                                                        )
                                            .SelectionModel(
                                                Html.X().RowSelectionModel()
                                                    .Mode(Ext.Net.SelectionMode.Single)
                                    )
                        )
    )
)
<script type="text/javascript">

    /*App.PayWin.addListener('resize', function () {
        App.KarkardMahane_Detail.setWidth(App.PayWin.getWidth());
    });
    App.PayWin.addListener('resize', function () {
        var grid = App.KarkardMahane_Detail.queryById('GridDetail');
        grid.setHeight(App.PayWin.getHeight()-260);
    });*/
    function setdefaultValueKarkardMahane_Detail() {
        App.KarkardMahane_Detail.queryById('CboOrgan').select(App.KarkardMahane_Detail.queryById('CboOrgan').store.getAt(0));
    }
    function HelpKarkardMahane_Detail() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/KarkardMahane_Detail/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function KarkardMahane_DetailSetSize() {
        var grid = App.KarkardMahane_Detail.queryById('GridHeader');
        grid.setHeight((App.PayWin.getHeight() - 285) / 2);
        var GridDetail = App.KarkardMahane_Detail.queryById('GridDetailKarkardMahane_Detail');
        GridDetail.setHeight((App.PayWin.getHeight() - 285) / 2);        
    }
    function SetDefultSal() {
        App.KarkardMahane_Detail.queryById('CboYear').setValue('@ViewBag.Sal');
        ReloadKarkard();
    }
    function ReloadKarkard() {        
       var YearId = App.KarkardMahane_Detail.queryById('CboYear').getValue();
       var MonthId = App.KarkardMahane_Detail.queryById('CboMonth').getValue();
       var OrganId = App.KarkardMahane_Detail.queryById('CboOrgan').getValue();

       if (YearId != null && MonthId != null && OrganId != null) {
            App.KarkardMahane_Detail.queryById('GridHeader').getStore().getProxy().setExtraParam("mah", MonthId);
            App.KarkardMahane_Detail.queryById('GridHeader').getStore().getProxy().setExtraParam("sal", YearId);
            App.KarkardMahane_Detail.queryById('GridHeader').getStore().getProxy().setExtraParam("OrganId", OrganId);

            App.KarkardMahane_Detail.queryById('GridHeader').getStore().load();
            App.KarkardMahane_Detail.queryById('GridHeader').getSelectionModel().clearSelections();
            App.KarkardMahane_Detail.queryById('GridDetailKarkardMahane_Detail').store.loadData('');
            App.KarkardMahane_Detail.queryById('GridDetailKarkardMahane_Detail').getSelectionModel().clearSelections();            
            
            /* Ext.net.DirectMethod.request({
                url: '/PayRoll/KarkardMahane_Detail/ReloadKarkard?YearId=' + YearId + '&MonthId=' + MonthId,
                success: function (result) {
                    App.KarkardMahane_Detail.queryById('GridHeader').getStore().loadData(result);
                }
            });*/
        }
    }
    function ReloadGridDetail() {
        var SelectedRow = App.KarkardMahane_Detail.queryById('GridHeader').selModel.getLastSelected();

        Ext.net.DirectMethod.request({
            url: '/PayRoll/KarkardMahane_Detail/Rload?KarkardMahaneId=' + SelectedRow.data.fldId,

            success: function (result) {
                App.KarkardMahane_Detail.queryById('GridDetailKarkardMahane_Detail').getStore().loadData(result);
            }
        });
    }
    function EditKarkardMahane_Detail() {
        var SelectedRow = App.KarkardMahane_Detail.queryById('GridDetailKarkardMahane_Detail').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KarkardMahane_Detail/new',
                params: {
                    id: SelectedRow.data.fldId,
                    KarkardMahaneId: SelectedRow.data.fldKarkardMahaneId,
                    OrganId: App.KarkardMahane_Detail.queryById('CboOrgan').getValue()
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewKarkardMahane_Detail() {
        var SelectedRow = App.KarkardMahane_Detail.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            if (SelectedRow.data.fldStatusId == 1) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/PayRoll/KarkardMahane_Detail/new',
                    params: {
                        id: 0,
                        KarkardMahaneId: SelectedRow.data.fldId,
                        OrganId: App.KarkardMahane_Detail.queryById('CboOrgan').getValue()
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });

            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "وضعیت فرد مورد نظر " + SelectedRow.data.fldStatusTitle + " است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteKarkardMahane_Detail() {
        var SelectedHeaderRow = App.KarkardMahane_Detail.queryById('GridDetailKarkardMahane_Detail').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/PayRoll/KarkardMahane_Detail/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId,
                                OrganId: App.KarkardMahane_Detail.queryById('CboOrgan').getValue()
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                ReloadGridDetail();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EnterNext() {
      /*  var keyfield = App.KarkardMahane_Detail.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld;
        if (keyfield.itemId == "txtDesc") {
            nextfld = App.KarkardMahane_Detail.queryById('btnSave');
        }
        else {
            nextfld = keyfield.nextSibling().nextSibling();
            nextfld.selectText();
        }
        nextfld.focus();*/
    }
</script>