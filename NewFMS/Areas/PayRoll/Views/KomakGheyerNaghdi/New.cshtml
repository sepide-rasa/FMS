@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
    .Listeners(li => { li.AfterRender.Handler = "LoadKomakGheyerNaghdi();"; li.Render.Fn = "addKeyMapNewKomakGheyerNaghdi"; })
    .Width(520)
        //   .Height(300)
    .Resizable(false)
    .Title("اطلاعات کمک غیرنقدی جدید")
    .ID("NewKomakGheyerNaghdi")
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel()
            .ButtonAlign(Ext.Net.Alignment.Center)
            .Border(false)
            .KeyMap(Html.X().KeyMap()
                .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                .Binding(b =>
                {
                    b.Add(Html.X().KeyBinding()
                    .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                    .Handler("checkSaveKomakGheyerNaghdi(); ")
                    );

                }))
            .DefaultButton("btn")
            .Layout(Ext.Net.LayoutType.VBox)
            .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Buttons(
                X.Button()
                    .Text("ذخیره")
                    .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
                            .Listeners(l => l.Click.Handler = "checkSaveKomakGheyerNaghdi();")
                    .ItemID("btnSave"),
                X.Button()
                    .Text("خروج")
                    .Icon(Ext.Net.Icon.DoorOut)
                    .ToolTip("کلید میانبر Esc")
                    .OnClientClick("App.NewKomakGheyerNaghdi.destroy();")
                    )
            .Items(
                X.FieldSet()
                        .ItemID("Panel").Title("اطلاعات کمک غیرنقدی")
                    .Layout(Ext.Net.LayoutType.Table)
                    .Border(true)
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                    .Defaults(new { Margin = 2 })
                        .Items(
                            X.Hidden().ItemID("fldId"),
                                X.Hidden().ItemID("fldPersonalId"),
                          //X.Label().Text("سال:")
                          //      , X.ComboBox()
                          //          .LabelAlign(Ext.Net.LabelAlign.Top)
                          //          .ItemID("CboYear")
                          //          .DisplayField("fldYear")
                          //          .ValueField("fldYear")
                          //          .TypeAhead(true)
                          //          .Editable(false)
                          //          .AllowBlank(false)
                          //          .BlankText("لطفا سال را انتخاب کنید.")
                          //          .QueryMode(DataLoadMode.Local)
                          //          .ForceSelection(true)
                          //          .TriggerAction(TriggerAction.All)
                          //              .Store(X.Store()
                          //              .Model(X.Model()
                          //          .IDProperty("fldYear")
                          //                      .Fields(
                          //                          new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" }
                          //                      )
                          //                  )
                          //                          .Proxy(X.AjaxProxy()
                          //                          .Url(Url.Action("GetSal"))
                          //                                      .Reader(X.JsonReader().Root("data"))
                          //                  ).Listeners(li => li.Load.Handler = "LoadKomakGheyerNaghdi();")
                          //              )
                          //              .Listeners(l => l.Select.Handler = "ShowMaliat();")
                          //      , X.Label().Text("ماه:")
                          //      , X.ComboBox()
                          //      .LabelAlign(Ext.Net.LabelAlign.Top)
                          //      .ItemID("CboMonth")
                          //      .Editable(false)
                          //      .TypeAhead(true)
                          //      .BlankText("لطفا ماه را انتخاب کنید.")
                          //      .QueryMode(DataLoadMode.Local)
                          //      .TriggerAction(TriggerAction.All)
                          //          .Listeners(l => l.Select.Handler = "ShowMaliat();")
                          //      .Items(
                          //          new ListItem("فروردین", "1"),
                          //          new ListItem("اردیبهشت", "2"),
                          //          new ListItem("خرداد", "3"),
                          //          new ListItem("تیر", "4"),
                          //          new ListItem("مرداد", "5"),
                          //          new ListItem("شهریور", "6"),
                          //          new ListItem("مهر", "7"),
                          //          new ListItem("آبان", "8"),
                          //          new ListItem("آذر", "9"),
                          //          new ListItem("دی", "10"),
                          //          new ListItem("بهمن", "11"),
                          //          new ListItem("اسفند", "12")
                          //          )
                          //          .SelectedItems(new { Value = "1" })
                          //              ,
                     X.Label("مبلغ:")
                        , X.TextField()
                        .ItemID("txtMablagh")
                        .Text("0")
                        .AutoFocus(true)
                        .MaxLength(13)
                        .EnforceMaxLength(true)
                        .MaskRe("/[0-9]/")
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .AllowBlank(false)
                        .BlankText("لطفا مبلغ را وارد کنید.")
                        .Listeners(l => { l.Change.Handler = "App.NewKomakGheyerNaghdi.queryById('txtMablagh').setValue(accounting.formatNumber(App.NewKomakGheyerNaghdi.queryById('txtMablagh').getValue()));CheckInt(App.NewKomakGheyerNaghdi.queryById('txtMablagh'));ShowMaliat();"; })
        //   .MsgTarget(Ext.Net.MessageTarget.Side)
                                , X.Label("مالیات:")
                        , X.TextField()
                        .ItemID("txtMaliyat")
                        .Text("0")
                        .MaskRe("/[0-9]/")
                        .MaxLength(13)
                        .EnforceMaxLength(true)
                        .ReadOnly(true)
                        .Listeners(l => { l.Change.Handler = "App.NewKomakGheyerNaghdi.queryById('txtMaliyat').setValue(accounting.formatNumber(App.NewKomakGheyerNaghdi.queryById('txtMaliyat').getValue()));CheckInt(App.NewKomakGheyerNaghdi.queryById('txtMaliyat'));"; })
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                        .AllowBlank(false)
                        .BlankText("لطفا مالیات را وارد کنید.")
        // .MsgTarget(Ext.Net.MessageTarget.Side)
                                    ,
                            X.Label("نوع مستمر:"),
                    X.ComboBox()
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                    .ItemID("CboNoeMostamer")
                    .Editable(false)
                    .TypeAhead(true)
                        .BlankText("لطفا نو مستمر را انتخاب کنید.")
                    .QueryMode(DataLoadMode.Local)
                    .TriggerAction(TriggerAction.All)
                    .Items(
                            new ListItem("مستمر", "1"),
                            new ListItem("غیر مستمر", "0")
                    )
                        .SelectedItems(new { Value = "1" })
                    .Listeners(l => l.Select.Handler = "ShowMaliat();")
                    ,
                    X.Label().Text("شماره حساب(Ins):"),
                X.TextField()
                    .ItemID("txtShomareHesab")
                .ReadOnly(true)
                .AllowBlank(false)
                .BlankText("لطفا شماره حساب را انتخاب نمایید.")
           //     .MsgTarget(Ext.Net.MessageTarget.Side)
                    //.Icon(Icon.Add)
                        .Listeners(li =>
                        {
                            li.SpecialKey.Handler = "SearchShomareHesab(e.getKey());";
                           // li.IconClick.Handler = "Ext.net.DirectMethod.request({url:'/PayRoll/SearchInsuranceWorkshop/Index?State=1})";
                        })
                        
        )
    ))
)

<script type="text/javascript">

    var ShomareHesabId = 0;
    var ErrMaliat = 0;
    var ErrMaliatTxt = "";
    function SearchShomareHesab(Code) {
        if (Code == 45) {
            Ext.net.DirectMethod.request({
                url: '/PayRoll/SearchShomareHesabs/Index?State=1&PersonalId=' + '@ViewBag.PersonalId'+"&OrganId="+'@ViewBag.OrganId'
            });
        }
    }
    var h;
    function ShowMaliat() {
        var txtMablagh = App.NewKomakGheyerNaghdi.queryById('txtMablagh');
        /*var CboYear = App.NewKomakGheyerNaghdi.queryById('CboYear');
        var CboMonth = App.NewKomakGheyerNaghdi.queryById('CboMonth');*/
        var CboNoeMostamer = App.NewKomakGheyerNaghdi.queryById('CboNoeMostamer');
        var NoeMostamar = true;
        if (CboNoeMostamer.getValue() == "0")
            NoeMostamar = false;

        var m = 0;
        if (txtMablagh.getValue().replace(',', '').replace(',', '').replace(',', '').replace(',', '').replace(',', '') != "")
            m = txtMablagh.getValue().replace(',', '').replace(',', '').replace(',', '').replace(',', '').replace(',', '');

        Ext.net.DirectMethod.request({
            url: '/PayRoll/KomakGheyerNaghdi/CalcMaliat',
            params: {
                sal: '@ViewBag.Year',
                mah: '@ViewBag.Month',
                mablagh: m,
                personalId: '@ViewBag.PersonalId',
                Type: NoeMostamar,
                OrganId: '@ViewBag.OrganId'
            },
            success: function (data) {
                var txtMaliyat = App.NewKomakGheyerNaghdi.queryById('txtMaliyat');
                if (data.Msg == "") {
                    ErrMaliat = 0;
                    txtMaliyat.setValue(data.MablaghMaliat);
                    ErrMaliatTxt = "";
                }
                else {
                    ErrMaliat = 1;
                    txtMaliyat.setValue(0);
                    ErrMaliatTxt = data.Msg;
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: Ext.MessageBox.INFO,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });
    }
    function LoadKomakGheyerNaghdi() {
        if ('@ViewBag.Id' != '0') {
            /*Edit*/
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KomakGheyerNaghdi/Details',
                params: {
                    id: '@ViewBag.Id',
                    OrganId: '@ViewBag.OrganId'
                },
                success: function (data) {
                    /* var CboYear = App.NewKomakGheyerNaghdi.queryById('CboYear');
                     CboYear.setValue(data.fldYear);
                     var CboMonth = App.NewKomakGheyerNaghdi.queryById('CboMonth');
                     CboMonth.setValue(data.fldMonth);*/
                    var CboNoeMostamer = App.NewKomakGheyerNaghdi.queryById('CboNoeMostamer');
                    CboNoeMostamer.setValue(data.fldNoeMostamer);
                    var txtMablagh = App.NewKomakGheyerNaghdi.queryById('txtMablagh');
                    txtMablagh.setValue(data.fldMablagh);
                    var txtMaliyat = App.NewKomakGheyerNaghdi.queryById('txtMaliyat');
                    txtMaliyat.setValue(data.fldMaliyat);
                    var txtShomareHesab = App.NewKomakGheyerNaghdi.queryById('txtShomareHesab');
                    txtShomareHesab.setValue(data.fldShomareHesab);
                    var fldPersonalId = App.NewKomakGheyerNaghdi.queryById('fldPersonalId');
                    fldPersonalId.setValue(data.fldPersonalId);
                    var Id = App.NewKomakGheyerNaghdi.queryById('fldId');
                    Id.setValue(data.fldId);
                    ShomareHesabId = data.fldShomareHesabId;
                }
            });
        }
        else {
            var fldPersonalId = App.NewKomakGheyerNaghdi.queryById('fldPersonalId');
            fldPersonalId.setValue('@ViewBag.PersonalId');
            ShowMaliat();
           /* var CboYear = App.NewKomakGheyerNaghdi.queryById('CboYear');
            CboYear.setValue('ViewBag.Sal');*/
        }
    }
    function checkSaveKomakGheyerNaghdi() {
        var SelectedRow = App.KomakGheyerNaghdi.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow.data.fldStatusId == 1) {
            SaveKomakGheyerNaghdi();
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "وضعیت فرد مورد نظر " + SelectedRow.data.fldStatusTitle + " است.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function SaveKomakGheyerNaghdi() {
        var txtShomareHesab = App.NewKomakGheyerNaghdi.queryById('txtShomareHesab');
        /*var CboYear = App.NewKomakGheyerNaghdi.queryById('CboYear');
        var CboMonth = App.NewKomakGheyerNaghdi.queryById('CboMonth');*/
        var CboNoeMostamer = App.NewKomakGheyerNaghdi.queryById('CboNoeMostamer');
        var txtMablagh = App.NewKomakGheyerNaghdi.queryById('txtMablagh');
        var txtMaliyat = App.NewKomakGheyerNaghdi.queryById('txtMaliyat');
        var Id = App.NewKomakGheyerNaghdi.queryById('fldId');
        var PersonalId = App.NewKomakGheyerNaghdi.queryById('fldPersonalId');

        var er = false;

        if (txtShomareHesab.validate() == false) {
            er = true;
        }
       /* if (CboYear.validate() == false) {
            er = true;
        }
        if (CboMonth.validate() == false) {
            er = true;
        }*/
        if (CboNoeMostamer.validate() == false) {
            er = true;
        }
        if (txtMablagh.validate() == false) {
            er = true;
        }
        if (txtMaliyat.validate() == false) {
            er = true;
        }
        if (er == true)
            return;



        if (ErrMaliat == 1) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: ErrMaliatTxt,
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
        else {

            var NoeMostamar = true;
            if (CboNoeMostamer.getValue() == "0")
                NoeMostamar = false;

            Ext.net.DirectMethod.request({
                url: '/PayRoll/KomakGheyerNaghdi/Save',
                params: {
                    fldId: Id.getValue(),
                    fldNoeMostamer: NoeMostamar,
                    fldMablagh: txtMablagh.getValue().replace(',', '').replace(',', '').replace(',', '').replace(',', '').replace(',', ''),
                    fldMaliyat: txtMaliyat.getValue().replace(',', '').replace(',', '').replace(',', '').replace(',', '').replace(',', ''),
                    fldPersonalId: PersonalId.getValue(),
                    fldShomareHesabId: ShomareHesabId,
                    /* fldYear: CboYear.getValue(),
                     fldMonth: CboMonth.getValue()*/
                    fldYear: '@ViewBag.Year',
                    fldMonth: '@ViewBag.Month',
                    OrganId: '@ViewBag.OrganId'
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Err == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    ClearKomakGheyerNaghdi();
                    ReloadGridDetailKomak();
                    /* App.EtelaatKomakGheyerNaghdi.queryById('GridHeader').store.load();
                     App.EtelaatKomakGheyerNaghdi.queryById('GridDetail').getStore().loadData("");*/
                }

            });
        }
    }
    function ClearKomakGheyerNaghdi() {
        App.NewKomakGheyerNaghdi.queryById('CboNoeMostamer').setValue("");
        App.NewKomakGheyerNaghdi.queryById('txtMaliyat').setValue("");
        App.NewKomakGheyerNaghdi.queryById('txtMablagh').setValue("");
        App.NewKomakGheyerNaghdi.queryById('txtShomareHesab').setValue("");
        /*  App.NewKomakGheyerNaghdi.queryById('fldPersonalId').setValue(0);*/
        App.NewKomakGheyerNaghdi.queryById('fldId').setValue(0);
        ShomareHesabId = 0;
    }

    var addKeyMapNewKomakGheyerNaghdi = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.NewKomakGheyerNaghdi.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtMablagh") {
                        nextfld = App.NewKomakGheyerNaghdi.queryById('CboNoeMostamer');
                    }
                    else if (keyfield.itemId == "txtShomareHesab") {
                        nextfld = App.NewKomakGheyerNaghdi.queryById('btnSave');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                }
            }]
        });
    }


</script>
