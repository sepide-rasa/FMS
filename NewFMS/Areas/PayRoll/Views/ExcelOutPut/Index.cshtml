@model IEnumerable<NewFMS.WCF_Common_Pay.OBJ_Items_Estekhdam>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<style>
    .x-mcombo-item-unchecked {
        background-position: right;
        padding-right: 20px;
    }
    .x-mcombo-item-checked {
        background-position: right;
        padding-right: 20px;
    }
</style>

@(Html.X().Panel().AutoScroll(true)
                .Layout(Ext.Net.LayoutType.Fit)
                .ID("ExcelOutPut").Listeners(l => l.Render.Handler = "setSizeExcelOutPut()")
                .Title("خروجی اکسل")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
        .Border(false)
            .Buttons(
                    X.Button().Text("خروجی اکسل").Icon(Ext.Net.Icon.Disk).Listeners(l => { l.Click.Handler = "CreatExcelKoli();"; })
                        , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help).Listeners(l => { l.Click.Handler = "HelpExcelOutPut();"; })
                    ,X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)
                        .OnClientClick("App.ExcelOutPut.destroy()")
            ).ButtonAlign(Ext.Net.Alignment.Center)
       .Items(
                X.Panel().AutoScroll(true)
                    .Layout(Ext.Net.LayoutType.VBox)
                .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                .Defaults(new { Margin = 10 })
            .Border(false)
            
        .Items(

                          X.FieldSet().Border(true).Title("انتخاب ماه و سال")
                        .Height(80)
                             .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                        .Items(
                            X.Hidden().ItemID("fldId"),
                                X.Label().Text("از سال:")
                                    , X.ComboBox()
                                    .Width(80)
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .ItemID("CboYear")
                                        .DisplayField("fldYear")
                                        .ValueField("fldYear")
                                        .TypeAhead(true)
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .BlankText("لطفا سال را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                        .Store(X.Store()
                                        .Model(X.Model()
                                        .IDProperty("fldYear")
                                            .Fields(
                                                new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" }
                                            )
                                        )
                                            .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetSal"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    ).Listeners(l => l.Load.Handler = "SetDefultSal();")
                                    )
        //.Listeners(l => l.Select.Handler = "ReloadKarkard()")
                                    , X.Label().Text("ماه:")
                                        , X.ComboBox()
                                        .Width(80)
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .ItemID("CboMonth")
                                    .Editable(false)
                                    .TypeAhead(true)
                                    .BlankText("لطفا ماه را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("فروردین", "1"),
                                        new ListItem("اردیبهشت", "2"),
                                        new ListItem("خرداد", "3"),
                                        new ListItem("تیر", "4"),
                                        new ListItem("مرداد", "5"),
                                        new ListItem("شهریور", "6"),
                                        new ListItem("مهر", "7"),
                                        new ListItem("آبان", "8"),
                                        new ListItem("آذر", "9"),
                                        new ListItem("دی", "10"),
                                        new ListItem("بهمن", "11"),
                                        new ListItem("اسفند", "12")
                                        )
                                        .SelectedItems(new { Value = "1" })
                                        ,
                                             X.Label().Text("تا سال:")
                                        , X.ComboBox()
                                        .Width(80)
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .ItemID("CboTaYear")
                                            .DisplayField("fldYear")
                                            .ValueField("fldYear")
                                            .TypeAhead(true)
                                            .Editable(false)
                                            .AllowBlank(false)
                                            .BlankText("لطفا سال را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .TriggerAction(TriggerAction.All)
                                            .Store(X.Store()
                                            .Model(X.Model()
                                            .IDProperty("fldYear")
                                                .Fields(
                                                    new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" }
                                                )
                                            )
                                                .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetSal"))
                                                        .Reader(X.JsonReader().Root("data"))
                                                        ).Listeners(l => l.Load.Handler = "SetDefultSal();")
                                        )
        //.Listeners(l => l.Select.Handler = "ReloadKarkard()")
                                        , X.Label().Text("ماه:")
                                            , X.ComboBox()
                                            .Width(80)
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .ItemID("CboTaMonth")
                                        .Editable(false)
                                        .TypeAhead(true)
                                        .BlankText("لطفا ماه را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Items(
                                            new ListItem("فروردین", "1"),
                                            new ListItem("اردیبهشت", "2"),
                                            new ListItem("خرداد", "3"),
                                            new ListItem("تیر", "4"),
                                            new ListItem("مرداد", "5"),
                                            new ListItem("شهریور", "6"),
                                            new ListItem("مهر", "7"),
                                            new ListItem("آبان", "8"),
                                            new ListItem("آذر", "9"),
                                            new ListItem("دی", "10"),
                                            new ListItem("بهمن", "11"),
                                            new ListItem("اسفند", "12")
                                            )
                                            .SelectedItems(new { Value = "1" })
        //.Listeners(l => l.Select.Handler = "ReloadKarkard()")
        ,X.Label("نوبت پرداخت:"),
                            X.ComboBox()
                            .Width(80)
                            .ItemID("CboNobatePardakht")
                            .Editable(false)
                            .TypeAhead(true)
                            .AllowBlank(false)
                            .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .Items(
                                new ListItem("یک", "1"),
                                new ListItem("دو", "2"),
                                new ListItem("سه", "3"),
                                new ListItem("چهار", "4"),
                                new ListItem("پنج", "5")
                                )
                                .SelectedItems(new { Value = "1" })

            , X.Label("نوع گزارش:"),
                                X.ComboBox()
                                .Width(80)
                                .ItemID("CboReportType")
                                .Editable(false)
                                .TypeAhead(true)
                                .AllowBlank(false)
                                .BlankText("لطفا نوبت پرداخت را انتخاب کنید.")
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .Items(
                                    new ListItem("با معوقه", "1"),
                                    new ListItem("بدون معوقه", "2")
                                    )
                                    .SelectedItems(new { Value = "1" }),
                                    X.Label().Text("سازمان:")
                                        , X.MultiCombo()
                                            .Width(190)
                                            .ColSpan(7)
                                            .ItemID("CboOrgan")
                                            .DisplayField("fldName")
                                            .ValueField("fldId")
                                            .TypeAhead(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا سازمان را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .Editable(false)
                                            .TriggerAction(TriggerAction.All)
                                            .Store(X.Store().Listeners(l => l.Load.Handler = "SetDefultOrgan_Excel()")
                                            .Model(X.Model()
                                            .IDProperty("fldId")
                                            .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                        )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetOrgan"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    )
                                    )
                        )
                    ,
                X.FieldSet()
                .Width(920)
                .Border(true)
                .Layout(Ext.Net.LayoutType.HBox)
                .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.Middle })
                .Items(
                 X.FieldSet()
                .Width(645)
                .Border(false)
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                .Items(
              
                            X.FieldSet().Title("اطلاعات کارگزینی")
                            .Width(620)
                                    .Border(true)
                       .Defaults(new { Margin = 2 })
                                    .Layout(LayoutType.Table)
                                    .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                .Items(
                          X.Checkbox()//.MarginSpec("0px 0px 0px 50px")
                                    .ItemID("CheckedName")
                                    , X.Label("نام")
        //.FieldLabel("نام").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                            , X.Checkbox().PaddingSpec("0 40px 0 0")
                                    .ItemID("CheckedFamily")
                                        , X.Label("نام خانوادگی")
        //    .FieldLabel("نام خانوادگی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                            , X.Checkbox().PaddingSpec("0 40px 0 0")
                                    .ItemID("CheckedFather")
                                                , X.Label("نام پدر")
        // .FieldLabel("نام پدر").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                        .ItemID("CheckedMeliCode")
                                                    , X.Label("کدملی")
        // .FieldLabel("نام پدر").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox()
                                         .ItemID("CheckedJensiyat")
                                                , X.Label("جنسیت")
        //  .FieldLabel("جنسیت").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                            , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedShomareShenasname")
                                                , X.Label("شماره شناسنامه")
        //.FieldLabel("شماره شناسنامه").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedTarikhTavalod")
                                                  , X.Label("تاریخ تولد")
        //         .FieldLabel("تاریخ تولد").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                        .ItemID("CheckedTarikhSodoor")
                                                      , X.Label("تاریخ صدور")

                                                           , X.Checkbox()
                                                        .ItemID("CheckedCityTavalod")
                                                   , X.Label("شهر محل تولد")
                                                   
                                                        , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedCity")
                                               , X.Label("شهر محل صدور")
        //          .FieldLabel("شهر محل صدور").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                            , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedAddres")
                                                      , X.Label("آدرس")
        //          .FieldLabel("آدرس").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckeCodePosti")
                                                  , X.Label("کد پستی")
        //        .FieldLabel("کد پستی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                        , X.Checkbox()
                                                .ItemID("CheckedStatusEsargari")
                                             , X.Label("وضعیت ایثارگری")
        //           .FieldLabel("وضعیت ایثارگری").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedShomarePersoneli")
                                                 , X.Label("شماره پرسنلی")
        //          .FieldLabel("شماره پرسنلی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                            , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedReshteTahsili")
                                                , X.Label("رشته تحصیلی")
        //          .FieldLabel("رشته تحصیلی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedStatusNezamVazife")
                                               , X.Label("وضعیت نظام وظیفه")
        //              .FieldLabel("وضعیت نظام وظیفه").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                        , X.Checkbox()
                                                .ItemID("CheckedOrganizationalPosts")
                                              , X.Label("پست مصوب")
        //         .FieldLabel("پست سازمانی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                        .ItemID("CheckedOrganizationalPostsEjraee")
                                                    , X.Label("پست اجرائی")
                                                    
                                                        , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedRasteShoghli")
                                                , X.Label("رسته شغلی")
        //          .FieldLabel("رسته شغلی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                            , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedReshteShoghli")
                                                , X.Label("رشته شغلی")
        //           .FieldLabel("رشته شغلی").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")


                                                    , X.Checkbox()
                                                .ItemID("CheckedTMojavezEstekhdam")
                                                , X.Label("تاریخ مجوز استخدام")
        //                 .FieldLabel("تاریخ مجوز استخدام").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")



                                                    , X.Checkbox()
                                                    .ItemID("CheckedTarikhEstekhdam").PaddingSpec("0 40px 0 0")
                                                , X.Label("تاریخ استخدام")
        //          .FieldLabel("تاریخ استخدام").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                    , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedTabaghe")
                                                 , X.Label("طبقه")
        //          .FieldLabel("طبقه").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                                            , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedMeliyat")
                                              , X.Label("ملیت")
        //               .FieldLabel("ملیت").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")
                                                            , X.Checkbox()
                                                .ItemID("CheckedShMojavezEstekhdam")
                                                , X.Label("شماره مجوز استخدام")
        //                 .FieldLabel("شماره مجوز استخدام").LabelAlign(Ext.Net.LabelAlign.Left).LabelSeparator("")

                                    , X.Checkbox()
                                                    .ItemID("CheckedMadraka").PaddingSpec("0 40px 0 0")
                                            , X.Label("مقطع تحصیلی")

                                                    , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                .ItemID("CheckedEsargaria")
                                            , X.Label("شرح ایثارگری")

                                                            , X.Checkbox().PaddingSpec("0 40px 0 0")
                                            .ItemID("CheckedStatusPer")
                                            , X.Label("وضعیت")

                                                      , X.Checkbox()
                                                    .ItemID("CheckedMahalKhedmat")
                                                    , X.Label("محل خدمت")
                                                            , X.Checkbox().PaddingSpec("0 40px 0 0")
                                                        .ItemID("CheckedSanavatKhedmat")
                                                            , X.Label("سنوات خدمت"), X.Checkbox().PaddingSpec("0 40px 0 0")
                                                            .ItemID("CheckedTel")
                                                                , X.Label("تلفن"), X.Checkbox().PaddingSpec("0 40px 0 0")
                                                            .ItemID("CheckedMobile")
                                                            , X.Label("موبایل")
                       )
                          ,
                              X.FieldSet()
                                    .Border(true)
                                    .Title("اطلاعات حقوقی")
                                    .Width(620)
                                    .Defaults(new { Margin = 2 })
                                    .Layout(LayoutType.Table)
                                    .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                                .Items(
                                 X.Checkbox()
                                .ItemID("CheckedTypeBime")
                                , X.Label("نوع بیمه")

                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                .ItemID("CheckedShomareBime")
                                , X.Label("شماره بیمه")

                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                .ItemID("CheckedBimeOmr")
                                , X.Label("بیمه عمر")

                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                .ItemID("CheckedBimeTakmili")
                                , X.Label("بیمه تکمیلی")


                                , X.Checkbox()
                                .ItemID("CheckedPasAndaz")
                                , X.Label("پس انداز")

                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                .ItemID("CheckedCostCenter")
                                , X.Label("مرکز هزینه")

                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                .ItemID("CheckedMazadCSal")
                                , X.Label("مازاد 30 سال")

                                    , X.Checkbox().PaddingSpec("0 40px 0 0")
                                .ItemID("CheckedMashagheleSakhtVaZianAvar")
                                , X.Label("مشاغل سخت و زیان آور")
                                    
                                    , X.Checkbox()
                                .ItemID("CheckedMasuliyatPayanKhedmat")
                                , X.Label("سنوات پایان خدمت")

                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                .ItemID("CheckedJobeCode")
                                , X.Label("کد شغلی بیمه")

                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                .ItemID("CheckedInsuranceWorkShop")
                                , X.Label("کارگاه بیمه")

                                , X.Checkbox().PaddingSpec("0 40px 0 0")
                                .ItemID("CheckedHamsarKarmand")
                                , X.Label("همسر کارمند")

                       )
                ,
                              X.FieldSet()
                                    .Border(true)
                                    .Title("اطلاعات حکم")
                                    .Width(620)
                                    .Defaults(new { Margin = 2 })
                                    .Layout(LayoutType.Table)
                                    .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                                .Items(
                                     X.Checkbox()
                                    .ItemID("CheckedTarikhEjra")
                                    , X.Label("تاریخ اجرا")
                                    ,
                                    X.Checkbox().PaddingSpec("0 40px 0 0")
                                        .ItemID("CheckedTarikhSodoorHokm")
                                    , X.Label("تاریخ صدور")
                                    ,
                                        X.Checkbox().PaddingSpec("0 60px 0 0")
                                    .ItemID("CheckedTarikhEtmam")
                                    , X.Label("تاریخ اتمام")
                                    ,
                                        X.Checkbox().PaddingSpec("0 60px 0 0")
                                    .ItemID("CheckedStatusTaahol")
                                            , X.Label("نوع تاهل")
                                            ,
                                        X.Checkbox()
                                        .ItemID("CheckedShomarePostSazmani")
                                            , X.Label("شماره پست سازمانی")
                                        ,
                                    X.Checkbox().PaddingSpec("0 40px 0 0")
                                    .ItemID("CheckedMoreGroup")
                                            , X.Label("گروه بالاتر")
                                            ,
                                        X.Checkbox().PaddingSpec("0 60px 0 0")
                                        .ItemID("CheckedGroup")
                                            , X.Label("گروه")
                                        ,
                                        X.Checkbox().PaddingSpec("0 60px 0 0")
                                    .ItemID("CheckedTedadFarzand")
                                        , X.Label("تعداد فرزند")
                                ,
                                    X.Checkbox()
                                    .ItemID("CheckedTedadAfradTahteTakafol")
                                    , X.Label("تعداد افراد تحت تکفل")
                                        ,
                                X.Checkbox().PaddingSpec("0 40px 0 0")
                                .ItemID("CheckedCodeShoghl")
                                , X.Label("کد شغل")
                                ,
                                    X.Checkbox().PaddingSpec("0 60px 0 0")
                                    .ItemID("CheckedShomareHokm")
                                    , X.Label("شماره حکم")

                                , X.Checkbox().PaddingSpec("0 60px 0 0")
                                .ItemID("CheckedNoeEstekhdama")
                                , X.Label("نوع استخدام")
                                       ,
                                        X.Checkbox()
                                        .ItemID("CheckedJameHokm")
                                        , X.Label("جمع حکم")
                                            ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                            .ItemID("CheckedErtegha")
                                            , X.Label("تاریخ ارتقا گروه")
                                    )
                   ,
                                  X.FieldSet()
                                        .Border(true)
                                        .Title("اطلاعات حقوق دستمزد")
                                        .Width(620)
                                        .Defaults(new { Margin = 2 })
                                        .Layout(LayoutType.Table)
                                        .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                                    .Items(
                                        X.Checkbox()
                                        .ItemID("CheckedKarkard")
                                        , X.Label("کارکرد")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedGheybat")
                                        , X.Label("غیبت")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedTedadEzafeKar")
                                        , X.Label("اضافه کاری")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                            .ItemID("CheckedMamooriyat")
                                        , X.Label("ماموریت")
                                        ,
                                            X.Checkbox()
                                        .ItemID("CheckedTedadTatilKar")
                                        , X.Label("تعطیل کاری")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedTedadNobatKari")
                                        , X.Label("نوبت کاری")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedBimeOmrM")
                                        , X.Label("بیمه عمر")
                                            ,
                                        X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedBimeOmrKarFarma")
                                        , X.Label("عمر سهم کارفرما")
                                        ,
                                                X.Checkbox()
                                        .ItemID("CheckedBimeTakmily")
                                        , X.Label("بیمه تکمیلی")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedBimeTakmilyKarFarma")
                                        , X.Label("تکمیلی سهم کارفرما")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedHaghDarman")
                                        , X.Label("حق درمان")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedHaghDarmanKarfFarma")
                                        , X.Label("درمان سهم کارفرما")
                                        ,
                                            X.Checkbox()
                                        .ItemID("CheckedHaghDarmanDolat")
                                        , X.Label("درمان سهم دولت")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedBimePersonal")
                                        , X.Label("بیمه پرسنل")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedBimeKarFarma")
                                        , X.Label("بیمه سهم کارفرما")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedBimeBikari")
                                        , X.Label("بیمه بیکاری")
                                        ,
                                            X.Checkbox()
                                        .ItemID("CheckedBimeMashaghel")
                                        , X.Label("بیمه مشاغل")
                                        ,
                                                X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedMosaede")
                                        , X.Label("مساعده")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedGhestVam")
                                        , X.Label("قسط وام")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedPasAndazM")
                                        , X.Label("پس انداز")
                                        , 
                                        X.Checkbox()
                                        .ItemID("CheckedMashmolBime")
                                        , X.Label("مشمول بیمه")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedMashmolMaliyat")
                                        , X.Label("مشمول مالیات")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedMogharari")
                                        , X.Label("مقرری")
                                        ,
                                            X.Checkbox().PaddingSpec("0 30px 0 0")
                                        .ItemID("CheckedMaliyat")
                                        , X.Label("مالیات")
                                        , 
                                        X.Checkbox()
                                        .ItemID("CheckedkhalesPardakhti")
                                        , X.Label("خالص پرداختی")

                                        , X.Checkbox()
                                        .ItemID("CheckedShomareHesab").PaddingSpec("0 30px 0 0")
                                        , X.Label("شماره حساب")
                                    
                                    )
                                )
                                , 
                                 X.FieldSet().Title("آیتم های حقوقی")
                .Width(250)
                .Border(true)
                 //   .Layout(Ext.Net.LayoutType.Fit)
                .Items(
                      X.GridPanel().AutoScroll(true).Border(false)
                                                    .ID("GridItems")
                                                    .Height(600)
                                                         //.Width(190)
                                            .Store(
                                                X.StoreForModel()
                                                         .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("ReadItems"))
                            .Reader(Html.X().JsonReader().Root("data"))
                                    ).PageSize(20000)
                                                    )
                                                
                                                .HideHeaders(true)
                                                 .ColumnModel(
                                                             Html.X().Column().DataIndex(Model, m => m.fldId).Hidden(true),
                                                             Html.X().Column().DataIndex(Model, m => m.fldNameEN).Hidden(true),
                                                         Html.X().Column().DataIndex(Model, m => m.fldTitle).Flex(1)
                                                     )
                                                     .SelectionModel(
                            Html.X().CheckboxSelectionModel()
                                .Mode(Ext.Net.SelectionMode.Multi)
                        )
                )
                                )
                                ,
                    X.FieldSet()
                                    .Border(true)//.PaddingSpec("0 100px 0 0")
                                .Width(920)
                                .Title("فیلترینگ")
                                .Defaults(new { Margin = 2 })
                                .Layout(LayoutType.Table)
                                .LayoutConfig(new TableLayoutConfig { Columns = 6 })
                            .Items(
                            X.FieldSet()
                                        .Border(false)
                                        .Width(210)
                                        .Defaults(new { Margin = 2 })
                                        .Layout(LayoutType.Table)
                                        .LayoutConfig(new TableLayoutConfig { Columns = 3 })
                                        .Items(
                                              /*  X.Checkbox()
                                                .ItemID("CheckedStatusP")
                                                .Listeners(l => l.Change.Handler = "CheckCheckedStatusP()")
                                              , X.Label("وضعیت")
                                              , X.ComboBox()
                                                .Width(100)
                                                .ItemID("CboStatusP")
                                                .TypeAhead(true)
                                                .Disabled(true)
                                                .BlankText("لطفا وضعیت را انتخاب کنید.")
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .AllowBlank(false)
                                                .TriggerAction(TriggerAction.All)
                                                    .DisplayField("fldName")
                                                .ValueField("fldId")
                                                .Editable(false)
                                                    .EmptyText("وضعیت ...")
                                                .SelectedItems(new { Value = "1" })
                                                .Store(X.Store()
                                                    .Model(X.Model()
                                                        .IDProperty("fldId")
                                                        .Fields(
                                                            new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                        )
                                                        )
                                                    .Proxy(X.AjaxProxy()
                                                            .Url(Url.Action("GetStatus"))
                                                        .Reader(X.JsonReader().Root("data"))
                                                        )
                                                )
                                                ,*/
                                    X.Checkbox()
                                            .ItemID("CheckedCboTypeBime")
                                            .Listeners(l => l.Change.Handler = "CheckCheckedTypeBime()")
                                        , X.Label("نوع بیمه")
                                            , X.ComboBox()
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .ItemID("CboTypeBime")
                                            .TypeAhead(true)
                                                .Editable(false)
                                                    .Width(100)
                                                    .Disabled(true)
                                        .BlankText("لطفا نوع بیمه را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldTitle")
                                        .ValueField("fldId")
                                        .EmptyText("نوع بیمه")
                                        .SelectedItems(new { Value = "1" })
                                        .Store(X.Store()
                                            .Model(X.Model()
                                            .IDProperty("fldId")
                                                .Fields(
                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                                )
                                            )
                                            .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetTypeBime"))
                                                .Reader(X.JsonReader().Root("data"))
                                            )
                                            )
                                            ,
                                            X.Checkbox()
                                            .ItemID("CheckedCboCostCenter")
                                                .Listeners(l => l.Change.Handler = "CheckCheckedCboCostCenter()")
                                            , X.Label("مرکز هزینه")
                                                , X.ComboBox()
                                                    .Width(100)
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .ItemID("CboCostCenter")
                                            .TypeAhead(true)
                                            .Editable(false)
                                                    .Disabled(true)
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("Name")
                                            .ValueField("ID")
                                            .EmptyText("مرکز هزینه")
                                            .SelectedItems(new { Value = "1" })
                                            .Store(X.Store()
                                                .Model(X.Model()
                                                    .IDProperty("ID")
                                                    .Fields(
                                                    new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                    new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                    )
                                                )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetCostCenter"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                )
        //  .Listeners(li => li.DataChanged.Handler = "LoadPersonalInfo();")
                                            )
                                            ,
                                            X.Checkbox()
                                                .ItemID("CheckedCboInsuranceWorkShop")
                                                    .Listeners(l => l.Change.Handler = "CheckCheckedCboInsuranceWorkShop()")
                                                    , X.Label("کارگاه بیمه")
                                                    , X.ComboBox()
                                                    .Width(100)
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                                .ItemID("CboInsuranceWorkShop")
                                                .TypeAhead(true)
                                                    .Disabled(true)
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("WorkShopName")
                                                .ValueField("ID")
                                        .Editable(false)
                                            .SelectedItems(new { Value = "1" })
                                            .EmptyText("کارگاه بیمه")
                                            .Store(X.Store()
                                                .Model(X.Model()
                                                    .IDProperty("ID")
                                                    .Fields(
                                                    new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                    new ModelField("WorkShopName", ModelFieldType.String) { Mapping = "WorkShopName" }
                                                    )
                                                )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetInsuranceWorkShop"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                )
        // .Listeners(li => li.DataChanged.Handler = "LoadPersonalInfo();")
                                            )
                                )
                                            ,
                                    X.FieldSet()
                                        .Border(false)
                                        .Width(210)
                                        .Defaults(new { Margin = 2 })
                                        .Layout(LayoutType.Table)
                                        .LayoutConfig(new TableLayoutConfig { Columns = 3 })
                                    .Items(
                                            X.Checkbox()
                                            .ItemID("CheckedStatus")
                                            .Listeners(l => l.Change.Handler = "CheckCheckedStatus()")
                                          , X.Label("وضعیت کارگزینی")
                                          ,X.ComboBox()
                                          .Width(120)
                                            .ItemID("CboStatus")
                                            .TypeAhead(true)
                                            .Disabled(true)
                                            .BlankText("لطفا وضعیت را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .AllowBlank(false)
                                            .TriggerAction(TriggerAction.All)                                            
                                                     .DisplayField("Name")
                                            .ValueField("ID")
                                                .Editable(false)
                                                    .EmptyText("وضعیت ...")
                                                .SelectedItems(new { Value = "1" })
                                                .Store(X.Store()
                                                           .Model(X.Model()
                                                    .IDProperty("ID")
                                                    .Fields(
                                                    new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                                                    new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                    )
                                                )
                                                .Proxy(X.AjaxProxy()
                                                        .Url(Url.Action("GetStatusHoghughi"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    )
                                            )
                                            ,
                                            X.Checkbox()
                                            .ItemID("CheckedGender")
                                                .Listeners(l => l.Change.Handler = "CheckCheckedGender()")
                                            , X.Label("جنسیت")
                                            , X.ComboBox()
                                                .Width(120)
                                                .Disabled(true)
                                            .ItemID("CboGender")
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .BlankText("لطفا جنسیت را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                                .AllowBlank(false)
                                            .SelectedItems(new { Value = "1" })                                            
                                            .EmptyText("جنسیت...")
                                            .Items(
                                                new ListItem("مرد", "1"),
                                                new ListItem("زن", "0")
                                                )
                                                    ,
                                            X.Checkbox()
                                            .ItemID("CheckedEsargari")
                                                .Listeners(l => l.Change.Handler = "CheckCheckedEsargari()")
                                            , X.Label("ایثارگری")
                                            , X.ComboBox()
                                            .ItemID("CboEsargari")
                                                .Width(120)
                                                .Disabled(true)
                                            .TypeAhead(true)
                                            .Editable(false)
                                            .QueryMode(DataLoadMode.Local)
                                            .BlankText("لطفا ایثارگری را انتخاب کنید.")
                                            .ForceSelection(true)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldName")
                                            .ValueField("fldId")
                                            .EmptyText("ایثارگری ...")
                                            .SelectedItems(new { Value = "1" })
                                            .Store(X.Store()
                                                .Model(X.Model()
                                                    .IDProperty("fldId")
                                                    .Fields(
                                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                            )
                                                    )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetEsargari"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    )
                                                )
                                    )
                                    ,
                                    X.FieldSet()
                                            .Border(false)
                                        .Width(120)
                                       // .Defaults(new { Margin = 2 })
                                        .Layout(LayoutType.Table)
                                        .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                    .Items(
                                         X.Checkbox()
                                        .ItemID("CheckedMadrak")
                                            .Listeners(l => l.Change.Handler = "CheckCheckedMadrak()")
                                        , X.Label("مقطع تحصیلی")
                                        , X.ComboBox().ColSpan(2)
                                            .Width(100)
                                                .Disabled(true)
                                        .AllowBlank(false)
                                        .ItemID("CboMadrak")
                                        .TypeAhead(true)
                                        .BlankText("لطفا مقطع تحصیلی را انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldName")
                                        .ValueField("fldId")
                                        .EmptyText("مقطع تحصیلی ...")
                                        .Editable(false)
                                        .SelectedItems(new { Value = "4" })
                                        .Store(X.Store()
                                            .Model(X.Model()
                                                .IDProperty("fldId")
                                                .Fields(
                                                    new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                    new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                )
                                                )
                                            .Proxy(X.AjaxProxy()
                                                .Url(Url.Action("GetMadrakTahsili"))
                                                .Reader(X.JsonReader().Root("data"))
                                                )
                                        )
                                        ,
                                                X.Button().Icon(Ext.Net.Icon.PreviousGreen)
                                                .ItemID("btnOk1")
                                                .Disabled(true)
                                                .Listeners(l=>l.Click.Handler="AddItem1()")
                                            ,
                                                        X.Button().Icon(Ext.Net.Icon.NextGreen)
                                                    .ItemID("btnCancle1")
                                                    .Disabled(true)
                                                        .Listeners(l => l.Click.Handler = "DelItem1()")
                                    )
                                    ,X.FieldSet()
                                        .Border(false)
                                        .Width(110)
                                       // .Defaults(new { Margin = 2 })
                                        .Layout(LayoutType.Table)
                                        .LayoutConfig(new TableLayoutConfig { Columns = 1 })
                                    .Items(
                                            X.GridPanel().AutoScroll(true)
                                                .ID("GridMadrakTahsili")
                                            .Height(100)
                                                 .Width(90)
                                        .Store(
                                            X.StoreForModel()
                                            ).HideHeaders(true)
                                             .ColumnModel(
                                                     Html.X().Column().DataIndex(Model, m => m.fldId).Hidden(true),
                                                     Html.X().Column().DataIndex(Model, m => m.fldTitle).Flex(1)
                                             )
                                    )
                                         ,
                                        X.FieldSet()
                                                .Border(false)
                                            .Width(120)
        // .Defaults(new { Margin = 2 })
                                            .Layout(LayoutType.Table)
                                            .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                        .Items(
                                             X.Checkbox()
                                            .ItemID("CheckedNoeEstekhdam")
                                                .Listeners(l => l.Change.Handler = "CheckCheckedNoeEstekhdam()")
                                            , X.Label("نوع استخدام")
                                            , X.ComboBox().ColSpan(2)
                                                .Width(100)
                                                .Disabled(true)
                                            .ItemID("CboNoeEstekhdam")
                                            .TypeAhead(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا نوع استخدام را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldName")
                                            .ValueField("fldId")
                                                .Editable(false)
                                            .SelectedItems(new { Value = "1" })
                                            .EmptyText("نوع استخدام ...")
                                            .Store(X.Store()
                                                .Model(X.Model()
                                                    .IDProperty("fldId")
                                                    .Fields(
                                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                        new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                                    )
                                                    )
                                                .Proxy(X.AjaxProxy()
                                                    .Url(Url.Action("GetNoeEstekhdam"))
                                                    .Reader(X.JsonReader().Root("data"))
                                                    )
                                            )
                                            ,
                                                        X.Button().Icon(Ext.Net.Icon.PreviousGreen)
                                                        .ItemID("btnOk2")
                                                    .Listeners(l => l.Click.Handler = "AddItem2()")
                                                .Disabled(true)
                                                ,
                                                            X.Button().Icon(Ext.Net.Icon.NextGreen)
                                                            .ItemID("btnCancle2")
                                                        .Listeners(l => l.Click.Handler = "DelItem2()")
                                                .Disabled(true)
                                        )
                                        , X.FieldSet()
                                            .Border(false)
                                            .Width(110)
        // .Defaults(new { Margin = 2 })
                                            .Layout(LayoutType.Table)
                                            .LayoutConfig(new TableLayoutConfig { Columns = 1 })
                                        .Items(
                                          X.GridPanel().AutoScroll(true)
                            .ID("GridNoeEstekhdam")                            
                            .Height(100)
                                 .Width(90)
                        .Store(
                            X.StoreForModel()
                            ).HideHeaders(true)
                                 .ColumnModel(
                                        Html.X().Column().DataIndex(Model, m => m.fldId).Hidden(true),
                                     Html.X().Column().DataIndex(Model, m => m.fldTitle).Flex(1)
                             )
                                        )
                            )
            
        )
    )
)

<script>
    function setSizeExcelOutPut() {
        App.ExcelOutPut.setHeight(App.PayWin.getHeight() - 190);
    }
    function SetDefultSal() {        
        App.ExcelOutPut.queryById('CboYear').setValue('@ViewBag.Sal');
        App.ExcelOutPut.queryById('CboTaYear').setValue('@ViewBag.Sal');
    }

    function SetDefultOrgan_Excel() {
        App.ExcelOutPut.queryById('CboOrgan').select(App.ExcelOutPut.queryById('CboOrgan').store.getAt(0));
    }

    function CreatExcelKoli() {
        App.ExcelOutPut.body.mask("در حال بارگذاری");

        var CboYear = App.ExcelOutPut.queryById('CboYear');
        var CboOrgan = App.ExcelOutPut.queryById('CboOrgan');        
        var CboMonth = App.ExcelOutPut.queryById('CboMonth');
        var CboTaYear = App.ExcelOutPut.queryById('CboTaYear');
        var CboTaMonth = App.ExcelOutPut.queryById('CboTaMonth');
        var CboNobatePardakht = App.ExcelOutPut.queryById('CboNobatePardakht');
        var CboReportType = App.ExcelOutPut.queryById('CboReportType');

        var CheckedName = App.ExcelOutPut.queryById('CheckedName').getValue();
        var CheckedFamily = App.ExcelOutPut.queryById('CheckedFamily').getValue();
        var CheckedFather = App.ExcelOutPut.queryById('CheckedFather').getValue();
        var CheckedMeliCode = App.ExcelOutPut.queryById('CheckedMeliCode').getValue();
        var CheckedJensiyat = App.ExcelOutPut.queryById('CheckedJensiyat').getValue();
        var CheckedShomareShenasname = App.ExcelOutPut.queryById('CheckedShomareShenasname').getValue();
        var CheckedTarikhTavalod = App.ExcelOutPut.queryById('CheckedTarikhTavalod').getValue();
        var CheckedCity = App.ExcelOutPut.queryById('CheckedCity').getValue();
        var CheckedAddres = App.ExcelOutPut.queryById('CheckedAddres').getValue();
        var CheckeCodePosti = App.ExcelOutPut.queryById('CheckeCodePosti').getValue();
        var CheckedStatusEsargari = App.ExcelOutPut.queryById('CheckedStatusEsargari').getValue();
        var CheckedShomarePersoneli = App.ExcelOutPut.queryById('CheckedShomarePersoneli').getValue();
        var CheckedReshteTahsili = App.ExcelOutPut.queryById('CheckedReshteTahsili').getValue();
        var CheckedStatusNezamVazife = App.ExcelOutPut.queryById('CheckedStatusNezamVazife').getValue();
        var CheckedOrganizationalPosts = App.ExcelOutPut.queryById('CheckedOrganizationalPosts').getValue();
        var CheckedOrganizationalPostsEjraee = App.ExcelOutPut.queryById('CheckedOrganizationalPostsEjraee').getValue();
        var CheckedMahalKhedmat = App.ExcelOutPut.queryById('CheckedMahalKhedmat').getValue();
        var CheckedSanavatKhedmat = App.ExcelOutPut.queryById('CheckedSanavatKhedmat').getValue();
        var CheckedTel = App.ExcelOutPut.queryById('CheckedTel').getValue();
        var CheckedMobile = App.ExcelOutPut.queryById('CheckedMobile').getValue();
        var CheckedJameHokm = App.ExcelOutPut.queryById('CheckedJameHokm').getValue();
        var CheckedErtegha = App.ExcelOutPut.queryById('CheckedErtegha').getValue();

        var CheckedRasteShoghli = App.ExcelOutPut.queryById('CheckedRasteShoghli').getValue();
        var CheckedReshteShoghli = App.ExcelOutPut.queryById('CheckedReshteShoghli').getValue();
        var CheckedTarikhEstekhdam = App.ExcelOutPut.queryById('CheckedTarikhEstekhdam').getValue();
        var CheckedTabaghe = App.ExcelOutPut.queryById('CheckedTabaghe').getValue();
        var CheckedMeliyat = App.ExcelOutPut.queryById('CheckedMeliyat').getValue();
        var CheckedShMojavezEstekhdam = App.ExcelOutPut.queryById('CheckedShMojavezEstekhdam').getValue();
        var CheckedTMojavezEstekhdam = App.ExcelOutPut.queryById('CheckedTMojavezEstekhdam').getValue();
        var CheckedReshteShoghli = App.ExcelOutPut.queryById('CheckedReshteShoghli').getValue();
        var CheckedTarikhSodoor = App.ExcelOutPut.queryById('CheckedTarikhSodoor').getValue();
        var CheckedCityTavalod = App.ExcelOutPut.queryById('CheckedCityTavalod').getValue();
        var CheckedMadraka = App.ExcelOutPut.queryById('CheckedMadraka').getValue();
        var CheckedEsargaria = App.ExcelOutPut.queryById('CheckedEsargaria').getValue();
        var CheckedNoeEstekhdama = App.ExcelOutPut.queryById('CheckedNoeEstekhdama').getValue();
        var CheckedStatusPer = App.ExcelOutPut.queryById('CheckedStatusPer').getValue();

        var CheckedTypeBime = App.ExcelOutPut.queryById('CheckedTypeBime').getValue();
        var CheckedShomareBime = App.ExcelOutPut.queryById('CheckedShomareBime').getValue();
        var CheckedBimeOmr = App.ExcelOutPut.queryById('CheckedBimeOmr').getValue();
        var CheckedBimeTakmili = App.ExcelOutPut.queryById('CheckedBimeTakmili').getValue();
        var CheckedMashagheleSakhtVaZianAvar = App.ExcelOutPut.queryById('CheckedMashagheleSakhtVaZianAvar').getValue();
        var CheckedCostCenter = App.ExcelOutPut.queryById('CheckedCostCenter').getValue();
        var CheckedMazadCSal = App.ExcelOutPut.queryById('CheckedMazadCSal').getValue();
        var CheckedPasAndaz = App.ExcelOutPut.queryById('CheckedPasAndaz').getValue();
        var CheckedShomareHesab=App.ExcelOutPut.queryById('CheckedShomareHesab').getValue();
        var CheckedMasuliyatPayanKhedmat = App.ExcelOutPut.queryById('CheckedMasuliyatPayanKhedmat').getValue();
        var CheckedJobeCode = App.ExcelOutPut.queryById('CheckedJobeCode').getValue();
        var CheckedInsuranceWorkShop = App.ExcelOutPut.queryById('CheckedInsuranceWorkShop').getValue();
        var CheckedHamsarKarmand = App.ExcelOutPut.queryById('CheckedHamsarKarmand').getValue();

        var CheckedTarikhEjra = App.ExcelOutPut.queryById('CheckedTarikhEjra').getValue();
        var CheckedTarikhSodoorHokm = App.ExcelOutPut.queryById('CheckedTarikhSodoorHokm').getValue();
        var CheckedTarikhEtmam = App.ExcelOutPut.queryById('CheckedTarikhEtmam').getValue();
        var CheckedStatusTaahol = App.ExcelOutPut.queryById('CheckedStatusTaahol').getValue();
        var CheckedShomarePostSazmani = App.ExcelOutPut.queryById('CheckedTypeBime').getValue();
        var CheckedMoreGroup = App.ExcelOutPut.queryById('CheckedMoreGroup').getValue();
        var CheckedGroup = App.ExcelOutPut.queryById('CheckedGroup').getValue();
        var CheckedTedadFarzand = App.ExcelOutPut.queryById('CheckedTedadFarzand').getValue();
        var CheckedTedadAfradTahteTakafol = App.ExcelOutPut.queryById('CheckedTedadAfradTahteTakafol').getValue();
        var CheckedCodeShoghl = App.ExcelOutPut.queryById('CheckedCodeShoghl').getValue();
        var CheckedShomareHokm = App.ExcelOutPut.queryById('CheckedShomareHokm').getValue();

        var CheckedKarkard = App.ExcelOutPut.queryById('CheckedKarkard').getValue();
        var CheckedGheybat = App.ExcelOutPut.queryById('CheckedGheybat').getValue();
        var CheckedTedadEzafeKar = App.ExcelOutPut.queryById('CheckedTedadEzafeKar').getValue();
        var CheckedBimeOmrKarFarma = App.ExcelOutPut.queryById('CheckedBimeOmrKarFarma').getValue();
        var CheckedMamooriyat = App.ExcelOutPut.queryById('CheckedMamooriyat').getValue();
        var CheckedTedadTatilKar = App.ExcelOutPut.queryById('CheckedTedadTatilKar').getValue();
        var CheckedBimeOmrM = App.ExcelOutPut.queryById('CheckedBimeOmrM').getValue();
        var CheckedBimeTakmily = App.ExcelOutPut.queryById('CheckedBimeTakmily').getValue();
        var CheckedBimeTakmilyKarFarma = App.ExcelOutPut.queryById('CheckedBimeTakmilyKarFarma').getValue();
        var CheckedHaghDarmanKarfFarma = App.ExcelOutPut.queryById('CheckedHaghDarmanKarfFarma').getValue();
        var CheckedHaghDarmanDolat = App.ExcelOutPut.queryById('CheckedHaghDarmanDolat').getValue();
        var CheckedHaghDarman = App.ExcelOutPut.queryById('CheckedHaghDarman').getValue();
        var CheckedBimePersonal = App.ExcelOutPut.queryById('CheckedBimePersonal').getValue();
        var CheckedBimeKarFarma = App.ExcelOutPut.queryById('CheckedBimeKarFarma').getValue();
        var CheckedBimeBikari = App.ExcelOutPut.queryById('CheckedBimeBikari').getValue();
        var CheckedBimeMashaghel = App.ExcelOutPut.queryById('CheckedBimeMashaghel').getValue();
        var CheckedTedadNobatKari = App.ExcelOutPut.queryById('CheckedTedadNobatKari').getValue();
        var CheckedMosaede = App.ExcelOutPut.queryById('CheckedMosaede').getValue();
        var CheckedGhestVam = App.ExcelOutPut.queryById('CheckedGhestVam').getValue();
        var CheckedPasAndazM = App.ExcelOutPut.queryById('CheckedPasAndazM').getValue();
        var CheckedMashmolBime = App.ExcelOutPut.queryById('CheckedMashmolBime').getValue();
        var CheckedMashmolMaliyat = App.ExcelOutPut.queryById('CheckedMashmolMaliyat').getValue();
        var CheckedMogharari = App.ExcelOutPut.queryById('CheckedMogharari').getValue();
        var CheckedMaliyat = App.ExcelOutPut.queryById('CheckedMaliyat').getValue();
        var CheckedkhalesPardakhti = App.ExcelOutPut.queryById('CheckedkhalesPardakhti').getValue();


        var Checked = "";
        if (CheckedName == true)
            Checked = Checked + "Name" + ";";
        if (CheckedFamily == true)
            Checked = Checked + "Family" + ";";
        if (CheckedFather == true)
            Checked = Checked + "Father" + ";";
        if (CheckedMeliCode == true)
            Checked = Checked + "MeliCode" + ";";
        if (CheckedJensiyat == true)
            Checked = Checked + "Jensiyat" + ";";
        if (CheckedShomareShenasname == true)
            Checked = Checked + "ShomareShenasname" + ";";
        if (CheckedTarikhTavalod == true)
            Checked = Checked + "TarikhTavalod" + ";";
        if (CheckedCity == true)
            Checked = Checked + "City" + ";";
        if (CheckedAddres == true)
            Checked = Checked + "Addres" + ";";
        if (CheckeCodePosti == true)
            Checked = Checked + "CodePosti" + ";";
        if (CheckedStatusEsargari == true)
            Checked = Checked + "StatusEsargari" + ";";
        if (CheckedShomarePersoneli == true)
            Checked = Checked + "ShomarePersoneli" + ";";
        if (CheckedReshteTahsili == true)
            Checked = Checked + "ReshteTahsili" + ";";
        if (CheckedStatusNezamVazife == true)
            Checked = Checked + "StatusNezamVazife" + ";";
        if (CheckedOrganizationalPosts == true)
            Checked = Checked + "OrganizationalPosts" + ";";

        if (CheckedMahalKhedmat == true)
            Checked = Checked + "MahalKhedmat" + ";";
        if (CheckedSanavatKhedmat == true)
            Checked = Checked + "SanavatKhedmat" + ";";
        if (CheckedTel == true)
            Checked = Checked + "Tel" + ";";
        if (CheckedMobile == true)
            Checked = Checked + "Mobile" + ";";
        if (CheckedOrganizationalPostsEjraee == true)
            Checked = Checked + "OrganizationalPostsEjraee" + ";";
        if (CheckedJameHokm == true)
            Checked = Checked + "JameHokm" + ";";
        if (CheckedErtegha == true)
            Checked = Checked + "Ertegha" + ";";

        if (CheckedRasteShoghli == true)
            Checked = Checked + "RasteShoghli" + ";";
        if (CheckedReshteShoghli == true)
            Checked = Checked + "ReshteShoghli" + ";";
        if (CheckedTarikhEstekhdam == true)
            Checked = Checked + "TarikhEstekhdam" + ";";
        if (CheckedTabaghe == true)
            Checked = Checked + "Tabaghe" + ";";
        if (CheckedMeliyat == true)
            Checked = Checked + "Meliyat" + ";";
        if (CheckedShMojavezEstekhdam == true)
            Checked = Checked + "ShMojavezEstekhdam" + ";";
        if (CheckedTMojavezEstekhdam == true)
            Checked = Checked + "TMojavezEstekhdam" + ";";
        if (CheckedTarikhSodoor == true)
            Checked = Checked + "TarikhSodoor" + ";";
        if (CheckedCityTavalod == true)
            Checked = Checked + "CityTavalod" + ";";
        if (CheckedMadraka == true)
            Checked = Checked + "MadrakTitle" + ";";
        if (CheckedEsargaria == true)
            Checked = Checked + "SharhEsargari" + ";";
        if (CheckedNoeEstekhdama == true)
            Checked = Checked + "NoeEstekhdamTitle" + ";";
        if (CheckedStatusPer == true)
            Checked = Checked + "StatusTitle" + ";";

        if (CheckedTypeBime == true)
            Checked = Checked + "TypeBime" + ";";
        if (CheckedShomareBime == true)
            Checked = Checked + "ShomareBime" + ";";
        if (CheckedBimeOmr == true)
            Checked = Checked + "BimeOmr" + ";";
        if (CheckedBimeTakmili == true)
            Checked = Checked + "BimeTakmili" + ";";
        if (CheckedMashagheleSakhtVaZianAvar == true)
            Checked = Checked + "MashagheleSakhtVaZianAvar" + ";";
        if (CheckedCostCenter == true)
            Checked = Checked + "CostCenter" + ";";
        if (CheckedMazadCSal == true)
            Checked = Checked + "MazadCSal" + ";";
        if (CheckedPasAndaz == true)
            Checked = Checked + "PasAndaz" + ";";
        if (CheckedShomareHesab == true)
            Checked = Checked + "ShomareHesab" + ";";
        if (CheckedMasuliyatPayanKhedmat == true)
            Checked = Checked + "MasuliyatPayanKhedmat" + ";";
        if (CheckedJobeCode == true)
            Checked = Checked + "JobeCode" + ";";
        if (CheckedInsuranceWorkShop == true)
            Checked = Checked + "InsuranceWorkShop" + ";";
        if (CheckedHamsarKarmand == true)
            Checked = Checked + "HamsarKarmand" + ";";

        if (CheckedTarikhEjra == true)
            Checked = Checked + "TarikhEjra" + ";";
        if (CheckedTarikhSodoorHokm == true)
            Checked = Checked + "TarikhSodoorHokm" + ";";
        if (CheckedTarikhEtmam == true)
            Checked = Checked + "TarikhEtmam" + ";";
        if (CheckedStatusTaahol == true)
            Checked = Checked + "StatusTaahol" + ";";
        if (CheckedShomarePostSazmani == true)
            Checked = Checked + "ShomarePostSazmani" + ";";
        if (CheckedMoreGroup == true)
            Checked = Checked + "MoreGroup" + ";";
        if (CheckedGroup == true)
            Checked = Checked + "Group" + ";";
        if (CheckedTedadFarzand == true)
            Checked = Checked + "TedadFarzand" + ";";
        if (CheckedTedadAfradTahteTakafol == true)
            Checked = Checked + "TedadAfradTahteTakafol" + ";";
        if (CheckedCodeShoghl == true)
            Checked = Checked + "CodeShoghl" + ";";
        if (CheckedShomareHokm == true)
            Checked = Checked + "ShomareHokm" + ";";


        if (CheckedKarkard == true)
            Checked = Checked + "Karkard" + ";";
        if (CheckedGheybat == true)
            Checked = Checked + "Gheybat" + ";";
        if (CheckedTedadEzafeKar == true)
            Checked = Checked + "TedadEzafeKar" + ";";
        if (CheckedBimeOmrKarFarma == true)
            Checked = Checked + "BimeOmrKarFarma" + ";";
        if (CheckedMamooriyat == true)
            Checked = Checked + "Mamooriyat" + ";";
        if (CheckedTedadTatilKar == true)
            Checked = Checked + "TedadTatilKar" + ";";
        if (CheckedBimeOmrM == true)
            Checked = Checked + "BimeOmrM" + ";";
        if (CheckedBimeTakmily == true)
            Checked = Checked + "BimeTakmily" + ";";
        if (CheckedBimeTakmilyKarFarma == true)
            Checked = Checked + "BimeTakmilyKarFarma" + ";";
        if (CheckedHaghDarmanKarfFarma == true)
            Checked = Checked + "HaghDarmanKarfFarma" + ";";
        if (CheckedHaghDarmanDolat == true)
            Checked = Checked + "HaghDarmanDolat" + ";";
        if (CheckedHaghDarman == true)
            Checked = Checked + "HaghDarman" + ";";
        if (CheckedBimePersonal == true)
            Checked = Checked + "BimePersonal" + ";";
        if (CheckedBimeKarFarma == true)
            Checked = Checked + "BimeKarFarma" + ";";
        if (CheckedBimeBikari == true)
            Checked = Checked + "BimeBikari" + ";";
        if (CheckedBimeMashaghel == true)
            Checked = Checked + "BimeMashaghel" + ";";
        if (CheckedTedadNobatKari == true)
            Checked = Checked + "TedadNobatKari" + ";";
        if (CheckedMosaede == true)
            Checked = Checked + "Mosaede" + ";";
        if (CheckedGhestVam == true)
            Checked = Checked + "GhestVam" + ";";
        if (CheckedPasAndazM == true)
            Checked = Checked + "PasAndazM" + ";";
        if (CheckedMashmolBime == true)
            Checked = Checked + "MashmolBime" + ";";
        if (CheckedMashmolMaliyat == true)
            Checked = Checked + "MashmolMaliyat" + ";";
        if (CheckedMogharari == true)
            Checked = Checked + "Mogharari" + ";";
        if (CheckedMaliyat == true)
            Checked = Checked + "Maliyat" + ";";
        if (CheckedkhalesPardakhti == true)
            Checked = Checked + "khalesPardakhti" + ";";
        

        var CheckedStatus = App.ExcelOutPut.queryById('CheckedStatus').getValue();
        var CheckedEsargari = App.ExcelOutPut.queryById('CheckedEsargari').getValue();
        var CheckedGender = App.ExcelOutPut.queryById('CheckedGender').getValue();
        var CheckedMadrak = App.ExcelOutPut.queryById('CheckedMadrak').getValue();
        var CheckedNoeEstekhdam = App.ExcelOutPut.queryById('CheckedNoeEstekhdam').getValue();

        var CboStatus = App.ExcelOutPut.queryById('CboStatus');
        var CboGender = App.ExcelOutPut.queryById('CboGender');
        var CboEsargari = App.ExcelOutPut.queryById('CboEsargari');

        var Status = "";
        if (CheckedStatus == true) {
            Status = CboStatus.getValue();
        }
        var Gender = "";
        if (CheckedGender == true) {
            Gender = CboGender.getValue();
        }
        var Esargari = "";
        if (CheckedEsargari == true) {
            Esargari = CboEsargari.getValue();
        }

        var NoeEstekhdam = "";
        if (CheckedNoeEstekhdam == true) {
            var Grid1 = App.GridNoeEstekhdam;
            for (var i = 0; i < Grid1.selModel.store.count() ; i++) {
                row = Grid1.selModel.store.data.items[i];
                NoeEstekhdam = NoeEstekhdam + row.data.fldId + ",";
            }
        }

        var Madrak = "";
        if (CheckedMadrak == true) {
            var Grid2 = App.GridMadrakTahsili;
            for (var i = 0; i < Grid2.selModel.store.count() ; i++) {
                row = Grid2.selModel.store.data.items[i];
                Madrak = Madrak + row.data.fldId + ",";
                /*ListMadrak.push({
                    'fldId': row.data.fldId,
                    'fldTitle': row.data.fldTitle
                });*/
            }
        }


       /* var CheckedStatusP = App.ExcelOutPut.queryById('CheckedStatusP').getValue();*/
        var CheckedCboTypeBime = App.ExcelOutPut.queryById('CheckedCboTypeBime').getValue();
        var CheckedCboCostCenter = App.ExcelOutPut.queryById('CheckedCboCostCenter').getValue();
        var CheckedCboInsuranceWorkShop = App.ExcelOutPut.queryById('CheckedCboInsuranceWorkShop').getValue();

       /* var CboStatusP = App.ExcelOutPut.queryById('CboStatusP');*/
        var CboTypeBime = App.ExcelOutPut.queryById('CboTypeBime');
        var CboCostCenter = App.ExcelOutPut.queryById('CboCostCenter');
        var CboInsuranceWorkShop = App.ExcelOutPut.queryById('CboInsuranceWorkShop');

        var StatusP = "";
       /* if (CheckedStatusP == true) {
            StatusP = CboStatusP.getValue();
        }*/
        var Bime = "";
        if (CheckedCboTypeBime == true) {
            Bime = CboTypeBime.getValue();
        }
        var Hazine = "";
        if (CheckedCboCostCenter == true) {
            Hazine = CboCostCenter.getValue();
        }
        var Kargah = "";
        if (CheckedCboInsuranceWorkShop == true) {
            Kargah = CboInsuranceWorkShop.getValue();
        }

        var ItemEstekhdams = "";
        var SelectedItems = App.GridItems.getSelectionModel().getSelection();
        for (var i = 0; i < SelectedItems.length ; i++) {
            /*ItemEstekhdams = ItemEstekhdams + SelectedItems[i].data.fldId;*/
            Checked = Checked + SelectedItems[i].data.fldNameEN + ";";
        }
        if (CboReportType.getValue() == "1")
            window.location.href = '@Url.Content("~/PayRoll/ExcelOutPut/CreateExcel/")' + '?Checked=' + Checked + /*'&StatusP=' + StatusP + */ '&Gender=' + Gender +
                '&Esargari=' + Esargari + '&Madrak=' + Madrak + '&NoeEstekhdam=' + NoeEstekhdam + '&Status=' + Status + '&Bime=' + Bime + '&Hazine='
                + Hazine + '&Kargah=' + Kargah + '&ItemEstekhdams=' + ItemEstekhdams + '&Year=' + CboYear.getValue() + '&Month=' + CboMonth.getValue() +
                '&TaYear=' + CboTaYear.getValue() + '&TaMonth=' + CboTaMonth.getValue() + '&NobatePardakht=' + CboNobatePardakht.getValue() + '&Organ=' + CboOrgan.getValue().toString();
        else
            window.location.href = '@Url.Content("~/PayRoll/ExcelOutPut/CreateExcelBedoneMoavaghe/")' + '?Checked=' + Checked + /*'&StatusP=' + StatusP + */ '&Gender=' + Gender +
          '&Esargari=' + Esargari + '&Madrak=' + Madrak + '&NoeEstekhdam=' + NoeEstekhdam + '&Status=' + Status + '&Bime=' + Bime + '&Hazine='
          + Hazine + '&Kargah=' + Kargah + '&ItemEstekhdams=' + ItemEstekhdams + '&Year=' + CboYear.getValue() + '&Month=' + CboMonth.getValue() +
          '&TaYear=' + CboTaYear.getValue() + '&TaMonth=' + CboTaMonth.getValue() + '&NobatePardakht=' + CboNobatePardakht.getValue() + '&Organ=' + CboOrgan.getValue().toString();

        App.ExcelOutPut.body.mask().hide();
    }
    function HelpExcelOutPut() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/ExcelOutPut/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function CheckCheckedStatusP() {
        var CheckedStatusP = App.ExcelOutPut.queryById('CheckedStatusP').getValue();
        var CboStatusP = App.ExcelOutPut.queryById('CboStatusP');
        if (CheckedStatusP == true)
            CboStatusP.setDisabled(false);
        else
            CboStatusP.setDisabled(true);
    }
    function CheckCheckedTypeBime() {
        var CheckedCboTypeBime = App.ExcelOutPut.queryById('CheckedCboTypeBime').getValue();
        var CboTypeBime = App.ExcelOutPut.queryById('CboTypeBime');
        if (CheckedCboTypeBime == true)
            CboTypeBime.setDisabled(false);
        else
            CboTypeBime.setDisabled(true);
    }
    function CheckCheckedCboCostCenter() {
        var CheckedCboCostCenter = App.ExcelOutPut.queryById('CheckedCboCostCenter').getValue();
        var CboCostCenter = App.ExcelOutPut.queryById('CboCostCenter');
        if (CheckedCboCostCenter == true)
            CboCostCenter.setDisabled(false);
        else
            CboCostCenter.setDisabled(true);
    }
    function CheckCheckedCboInsuranceWorkShop() {
        var CheckedCboInsuranceWorkShop = App.ExcelOutPut.queryById('CheckedCboInsuranceWorkShop').getValue();
        var CboInsuranceWorkShop = App.ExcelOutPut.queryById('CboInsuranceWorkShop');
        if (CheckedCboInsuranceWorkShop == true)
            CboInsuranceWorkShop.setDisabled(false);
        else
            CboInsuranceWorkShop.setDisabled(true);
    }


    function CheckCheckedStatus() {
        var CheckedStatus = App.ExcelOutPut.queryById('CheckedStatus').getValue();
        var CboStatus = App.ExcelOutPut.queryById('CboStatus');
        if (CheckedStatus == true)
            CboStatus.setDisabled(false);
        else
            CboStatus.setDisabled(true);
    }
    function CheckCheckedGender() {
        var CheckedGender = App.ExcelOutPut.queryById('CheckedGender').getValue();
        var CboGender = App.ExcelOutPut.queryById('CboGender');
        if (CheckedGender == true)
            CboGender.setDisabled(false);
        else
            CboGender.setDisabled(true);
    }
    function CheckCheckedEsargari() {
        var CheckedEsargari = App.ExcelOutPut.queryById('CheckedEsargari').getValue();
        var CboEsargari = App.ExcelOutPut.queryById('CboEsargari');
        if (CheckedEsargari == true)
            CboEsargari.setDisabled(false);
        else
            CboEsargari.setDisabled(true);
    }
    function CheckCheckedMadrak() {
        var CheckedMadrak = App.ExcelOutPut.queryById('CheckedMadrak').getValue();
        var CboMadrak = App.ExcelOutPut.queryById('CboMadrak');
        var btnCancle1 = App.ExcelOutPut.queryById('btnCancle1');
        var btnOk1 = App.ExcelOutPut.queryById('btnOk1');
        var GridMadrakTahsili = App.ExcelOutPut.queryById('GridMadrakTahsili');
        if (CheckedMadrak == true) {
            CboMadrak.setDisabled(false);
            btnCancle1.setDisabled(false);
            btnOk1.setDisabled(false);
            GridMadrakTahsili.setDisabled(false);
        }
        else {
            CboMadrak.setDisabled(true);
            btnCancle1.setDisabled(true);
            btnOk1.setDisabled(true);
            GridMadrakTahsili.setDisabled(true);
        }
    }
    function CheckCheckedNoeEstekhdam() {
        var CheckedNoeEstekhdam = App.ExcelOutPut.queryById('CheckedNoeEstekhdam').getValue();
        var CboNoeEstekhdam = App.ExcelOutPut.queryById('CboNoeEstekhdam');
        var btnCancle2 = App.ExcelOutPut.queryById('btnCancle2');
        var btnOk2 = App.ExcelOutPut.queryById('btnOk2');
        var GridNoeEstekhdam = App.ExcelOutPut.queryById('GridNoeEstekhdam');
        if (CheckedNoeEstekhdam == true) {
            CboNoeEstekhdam.setDisabled(false);
            btnCancle2.setDisabled(false);
            btnOk2.setDisabled(false);
            GridNoeEstekhdam.setDisabled(false);
            /*   var group1 = App.treeNoeEstekhdam.getRootNode().childNodes[0];
               group1.set('visible', false);*/
        }
        else {
            CboNoeEstekhdam.setDisabled(true);
            btnCancle2.setDisabled(true);
            btnOk2.setDisabled(true);
            GridNoeEstekhdam.setDisabled(true);
        }
    }
    function AddItem2() {
        var CboNoeEstekhdam = App.ExcelOutPut.queryById('CboNoeEstekhdam');
        /* var treeNoeEstekhdam = App.ExcelOutPut.queryById('treeNoeEstekhdam');
       var root = App.treeNoeEstekhdam.getRootNode();
        root.appendChild({ text: CboNoeEstekhdam.getDisplayValue(), itemId: CboNoeEstekhdam.getValue() });*/
        var tekrari = 0;
        var Grid1 = App.GridNoeEstekhdam;
        for (var i = 0; i < Grid1.selModel.store.count() ; i++) {
            row = Grid1.selModel.store.data.items[i];
            if (row.data.fldId == CboNoeEstekhdam.getValue())
                tekrari = 1;
        }
        if (tekrari == 0 && CboNoeEstekhdam.getDisplayValue() != "") {
            App.GridNoeEstekhdam.store.insert(App.GridNoeEstekhdam.getStore().count(), {
                fldTitle: CboNoeEstekhdam.getDisplayValue(),
                fldId: CboNoeEstekhdam.getValue()
            });
        }
    }
    function DelItem2() {
        App.GridNoeEstekhdam.deleteSelected();
    }
    function AddItem1() {
        var CboMadrak = App.ExcelOutPut.queryById('CboMadrak');
        /* var treeNoeEstekhdam = App.ExcelOutPut.queryById('treeNoeEstekhdam');
       var root = App.treeNoeEstekhdam.getRootNode();
        root.appendChild({ text: CboNoeEstekhdam.getDisplayValue(), itemId: CboNoeEstekhdam.getValue() });*/
        var tekrari = 0;
        var Grid2 = App.GridMadrakTahsili;
        for (var i = 0; i < Grid2.selModel.store.count() ; i++) {
            row = Grid2.selModel.store.data.items[i];
            if (row.data.fldId == CboMadrak.getValue())
                tekrari = 1;
        }
        if (tekrari == 0 && CboMadrak.getDisplayValue() != "") {
            App.GridMadrakTahsili.store.insert(App.GridMadrakTahsili.getStore().count(), {
                fldTitle: CboMadrak.getDisplayValue(),
                fldId: CboMadrak.getValue()
            });
        }
    }
    function DelItem1() {
        App.GridMadrakTahsili.deleteSelected();
    }
</script>
