@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using Ext.Net.Utilities;
@{
    var X = Html.X();
}
<script src="~/Scripts/accounting.js"></script>

@(Html.X().Window()
    .Width(550)
    .Modal(true)
    .Title("به تعویق انداختن کسورات")
    .Closable(true)
    .ID("TavighKosurat")
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
        //.ToolTip("کلید میانبر F8")
            .Listeners(l =>
            {
                l.Click.Handler = "SaveTavighKosurat();";
            }),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
        //.ToolTip("کلید میانبر Esc")
            .OnClientClick("App.TavighKosurat.destroy()"))
    .Items(
        X.Panel()
            .Border(false)
            .Items(
                X.FieldSet()
                    .Title("مشخصات")
                    .Border(true)
                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                    .Defaults(new { Margin = 2 })
                    .Items(
                        X.Hidden().ItemID("fldId"),
                        X.Label("نام و نام خانوادگی:"),
                        X.TextField()
                            .ItemID("txtName")
                            .AllowBlank(false),
                        X.Label("کد ملی:"),
                        X.TextField()
                            .ItemID("txtNationalCode")
                            .AllowBlank(false),
                        X.Label("شماره پرسنلی:"),
                        X.TextField()
                            .ItemID("txtShomarePersoneli")
                            .AllowBlank(false),
                        X.Label("نوع پارامترها:"),
                        X.ComboBox()
                            .ItemID("CboParametrha")
                            .TypeAhead(true)
                            .Editable(true)
                            .AllowBlank(false)
                            .AutoFocus(true)
                            .BlankText("لطفا نوع پارامتر را انتخاب کنید.")
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .TriggerAction(TriggerAction.All)
                            .DisplayField("fldParametrName")
                            .ValueField("fldId")
        //.SelectedItems(new { Value = "1" })
                            .Store(X.Store().Listeners(li => li.Load.Handler = "LoadKosouratParametri()")
                                .Model(X.Model()
                                    .IDProperty("fldId")
                                    .Fields(
                                        new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                        new ModelField("fldParametrName", ModelFieldType.String) { Mapping = "fldParametrName" }
                                            )
                                        )
                                .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetKosouratParametri"))
                                    .Reader(X.JsonReader().Root("data"))
                                        .ExtraParams(p => p.Add(new { OrganId=ViewBag.OrganId}))
                                    )
                                ),
                     
                        //X.Label().Text("تاریخ:"),
                        //X.FieldSet()
                        //    .Border(false)
                        //    .ColSpan(3)
                        //    .PaddingSpec("0 0 0 0")
                        //    .Layout(LayoutType.HBox)
                        //    .Items(
                                X.Label("ماه:"),
                                X.ComboBox()
                                        .ItemID("txtMonth")
                                    .Editable(true)
                                        .ForceSelection(true)
                                .AutoFocus(true)
                                    .TypeAhead(true)
                                    .AllowBlank(false)
                                    .BlankText("لطفا ماه را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .Items(
                                        new ListItem("فروردین", "01"),
                                        new ListItem("اردیبهشت", "02"),
                                        new ListItem("خرداد", "03"),
                                        new ListItem("تیر", "04"),
                                        new ListItem("مرداد", "05"),
                                        new ListItem("شهریور", "06"),
                                        new ListItem("مهر", "07"),
                                        new ListItem("آبان", "08"),
                                        new ListItem("آذر", "09"),
                                        new ListItem("دی", "10"),
                                        new ListItem("بهمن", "11"),
                                        new ListItem("اسفند", "12")
                                        )
                                //X.TextField()
                                //    .ItemID("txtMonth")
                                //    .Text("0")
                                //    .MaskRe("/[0-9]/")
                                //    .Width(30)
                                //    .MaxLength(2)
                                //    .MinLength(2)
                                //    .EnforceMaxLength(true)
                                //    .AllowBlank(false)
                                //    .PaddingSpec("0 0 0 6px")
                                //    .BlankText("لطفا ماه را وارد کنید."),
                                //X.Label().Text("/").MarginSpec("0 5px 0 0")
                                ,X.Label("سال:"),
                                //X.TextField()
                                //    .ItemID("txtYear")
                                //    .MaxLength(4)
                                //    .MinLength(4)
                                //    .EnforceMaxLength(true)
                                //    .Text("0")
                                //    .MaskRe("/[0-9]/")
                                //    .Width(50)
                                //    .AllowBlank(false)
                                //    .BlankText("لطفا سال را وارد کنید.")
                                  X.ComboBox()
                        .LabelAlign(Ext.Net.LabelAlign.Top)
                            .ItemID("txtYear")
                            .DisplayField("fldYear")
                        .ValueField("fldYear")
                        .TypeAhead(true)
                        .Editable(false)
                        .AllowBlank(false)
                        .BlankText("لطفا سال را انتخاب کنید.")
                        .QueryMode(DataLoadMode.Local)
                        .ForceSelection(true)
                        .TriggerAction(TriggerAction.All)
                            .Store(X.Store()//.Listeners(l => l.Load.Handler = "SetDefultYear();")
                        .Model(X.Model()
                        .IDProperty("fldYear")
                            .Fields(
                                new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" }
                            )
                        )
                            .Proxy(X.AjaxProxy()
                            .Url(Url.Action("GetSal"))
                            .Reader(X.JsonReader().Root("data"))
                                    )
                        )
                            //)
                       
                  )
                )
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                    )
)

<script type="text/javascript">


    function LoadKosouratParametri() {
        var txtMonth = App.TavighKosurat.queryById('txtMonth');
        var txtYear = App.TavighKosurat.queryById('txtYear');
        txtMonth.setValue('@ViewBag.MonthTavigh');
        txtYear.setValue('@ViewBag.SalTavigh');
      /*  if ('ViewBag.NoePardakht'==0) {تعدادی
            txtMonth.setReadOnly(true);
            txtYear.setReadOnly(true);
        }
        else {
            txtMonth.setReadOnly(false);
            txtYear.setReadOnly(false);
        }*/

            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratParametri/DetailsHeader',
                params: {
                    id: '@ViewBag.PersonalId',
                    OrganId: '@ViewBag.OrganId'
            },
            success: function (data) {
                var txtName = App.TavighKosurat.queryById('txtName');
                txtName.setValue(data.fldName);
                txtName.setReadOnly(true);
                txtName.setFieldStyle("background-image:none;background-color:#dfe8f6");

                var txtNationalCode = App.TavighKosurat.queryById('txtNationalCode');
                txtNationalCode.setValue(data.fldNationalCode);
                txtNationalCode.setReadOnly(true);
                txtNationalCode.setFieldStyle("background-image:none;background-color:#dfe8f6");

                var txtShomarePersoneli = App.TavighKosurat.queryById('txtShomarePersoneli');
                txtShomarePersoneli.setValue(data.fldShomarePersoneli);
                txtShomarePersoneli.setReadOnly(true);
                txtShomarePersoneli.setFieldStyle("background-image:none;background-color:#dfe8f6");

                var CboParametrha = App.TavighKosurat.queryById('CboParametrha');
                CboParametrha.setValue('@ViewBag.ParametrId');
                CboParametrha.setReadOnly(true);
                CboParametrha.setFieldStyle("background-image:none;background-color:#dfe8f6");
                Ext.net.Mask.hide();
            }
        });
    }

    function SaveTavighKosurat() {

        var txtMonth = App.TavighKosurat.queryById('txtMonth');
        var txtYear = App.TavighKosurat.queryById('txtYear');
        var Id = App.TavighKosurat.queryById('fldId');
        var er = false;


        if (txtMonth.validate() == false) {
            er = true;
        }

        if (txtYear.validate() == false) {
            er = true;
        }

        if (er == true)
            return;


        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });

        Ext.net.DirectMethod.request({
            url: '/PayRoll/KosuratParametri/SaveTavigh',
            params: {
                fldKosuratId: '@ViewBag.id',
                fldYear: txtYear.getValue(),
                fldMonth: txtMonth.getValue(),
                NoePardakht:'@ViewBag.NoePardakht',
                Year:'@ViewBag.Sal',
                Month: '@ViewBag.Month',
                OrganId: '@ViewBag.OrganId'
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Err == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK,
                    fn: function (btn) {
                        if (btn == 'ok' && data.Err != 1) {
                            App.TavighKosurat.destroy();
                        }
                    }
                });
                Ext.net.Mask.hide();
            }
        });
    }

</script>