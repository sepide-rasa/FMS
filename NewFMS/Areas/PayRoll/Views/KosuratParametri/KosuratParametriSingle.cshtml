@model NewFMS.Models.KosorateParametri_Personal
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{
    var X = Html.X();
    NewFMS.WCF_Common.CommonService servic = new NewFMS.WCF_Common.CommonService();
    NewFMS.WCF_Common.ClsError Err = new NewFMS.WCF_Common.ClsError();
}
<script src="~/Scripts/accounting.js"></script>

@(X.Panel()
    .Title("کسورات پارامتری")
    .Border(false)
    .ID("KosouratParametriSingle")
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Listeners(li => li.AfterRender.Handler = "setHeightGridKo();")
    .Items(
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(Ext.Net.LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .ItemID("GridHeader")
                    .BottomBar(X.PagingToolbar())
                    .Listeners(l =>l.ItemClick.Handler = "ReloadKosouratParametriSingle();")
                    .Store(
                        X.StoreFor(Model.Personal)
                        .Listeners(l => l.DataChanged.Handler = "App.KosouratParametriSingle.queryById('GridHeader').selModel.refresh();")
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("ReadHeader"))
                                .Reader(Html.X().JsonReader().Root("data"))
                                            .ExtraParams(p => p.Add(new { OrganId = ViewBag.OrganId }))
                        )
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                             Html.X().RowNumbererColumn(),
                                Html.X().Column().DataIndex(Model.Personal, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                Html.X().Column().DataIndex(Model.Personal, m => m.fldName_Father).Text("نام و نام خانوادگی").Flex(5).Wrap(true),
                                Html.X().Column().DataIndex(Model.Personal, m => m.fldCodemeli).Text("کد ملی").Flex(2),
                                Html.X().Column().DataIndex(Model.Personal, m => m.fldSh_Personali).Text("شماره پرسنلی").Flex(2),
                            Html.X().Column().DataIndex(Model.Personal, m => m.fldJobeCode).Text("کد شغلی بیمه").Flex(2),
                                        Html.X().Column().DataIndex(Model.Personal, m => m.fldStatusId).Text("وضعیت").Hidden(true).Flex(1),/*فعال1:   2:غیرفعال  3:بازنشسته*/
                                        Html.X().Column().DataIndex(Model.Personal, m => m.fldStatusTitle).Text("وضعیت").Hidden(true).Flex(1)
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)                           
                    ),
                X.GridPanel()
                    .AutoScroll(true)
                        .TopBar(
                            Html.X().Toolbar()
                                .Items(
                                    X.Button()
                                        .Text("جدید")
                                        .Icon(Ext.Net.Icon.Add)
        //.ToolTip("کلید میانبر F8")
                                        .Listeners(li => li.Click.Handler = "NewKosouratParametriSingle();"),
                                    X.Button()
                                        .Text("ویرایش")
                                        .Icon(Ext.Net.Icon.Pencil)
        //.ToolTip("کلید میانبر F2")
                                                .Listeners(li => li.Click.Handler = "EditKosouratParametriSingle();"),
                                        X.Button()
                                            .Text("تغییر وضعیت")
                                            .Icon(Ext.Net.Icon.Reload)
                                                .Listeners(li => li.Click.Handler = "ChangeStatusKosouratParametriSingle();"),
                                    X.Button()
                                        .Text("به تعویق انداختن")
                                        .Icon(Ext.Net.Icon.DateGo)
                                        .Listeners(li => li.Click.Handler = "TavighKosouratParametriSingle();")
                                        ,
                                         X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)//.ToolTip("کلید میانبر F9")
                                                .Listeners(de =>
                                                {
                                                    de.Click.Handler = "if (App.KosouratParametriSingle.queryById('GridDetailKParametri').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteKosouratParametriSingle();";
                                                })
                                                , X.Button().Listeners(li => li.Click.Handler = "RptSooratHesabKosurat();")
                                            .Hidden(!servic.Permission(706, Convert.ToInt32(@ViewBag.OrganId/*Session["OrganId"]*/), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                        .Text("صورتحساب")
                                        .IconCls("SooratHesab")

                                                    , X.Button().Listeners(li => li.Click.Handler = "RptSooratHesabKoliKosurat();")
                                                .Hidden(!servic.Permission(707, Convert.ToInt32(@ViewBag.OrganId/*Session["OrganId"]*/), Session["Username"].ToString(), Session["Password"].ToString(), out Err))
                                        .Text("صورتحساب کلی")
                                        .IconCls("SooratHesabKoli")
                                        
                            )
                        )
                        .ItemID("GridDetailKParametri")
                            .Store(X.StoreFor(Model.Kosorat).AutoLoad(false)
                                                        .Proxy(Html.X().AjaxProxy()
                                                            .Url(Url.Action("ReadKosorateParametri"))
                                                    .Reader(Html.X().JsonReader().Root("data")))
                        .Listeners(l => l.DataChanged.Handler = "App.KosouratParametriSingle.queryById('GridDetailKParametri').selModel.refresh();")
                        )
                    .Title("کسورات پارامتری")
                    .BottomBar(X.PagingToolbar().HideRefresh(true))
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                        )
                                .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                                Html.X().Column().DataIndex(Model.Kosorat, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                    Html.X().Column().DataIndex(Model.Kosorat, m => m.fldNoePardakht).Text("نوع پرداخت").Flex(1).Hidden(true),
                                Html.X().Column().DataIndex(Model.Kosorat, m => m.fldParametrId).Text("کد پارامتر").Flex(1).Hidden(true),
                            Html.X().Column().DataIndex(Model.Kosorat, m => m.fldParamTitle).Text("عنوان پارامتر").Wrap(true).Flex(4),
                            Html.X().Column().DataIndex(Model.Kosorat, m => m.fldTedad).Text("تعداد").Flex(1),
                            Html.X().Column().DataIndex(Model.Kosorat, m => m.fldTarikhePardakht).Text("تاریخ پرداخت").Flex(2),
                            Html.X().Column().DataIndex(Model.Kosorat, m => m.fldMablagh).Text("مبلغ").Renderer("seperateK").Flex(2),
                            Html.X().Column().DataIndex(Model.Kosorat, m => m.fldstatusName).Text("وضعیت").Flex(2),
                                Html.X().Column().DataIndex(Model.Kosorat, m => m.fldDesc).Text("توضیحات").Flex(2),
                            Html.X().Column().DataIndex(Model.Kosorat, m => m.fldNoePardakhtName).Text("نوع پرداخت").Flex(2),
                            Html.X().Column().DataIndex(Model.Kosorat, m => m.fldStatus).Text("وضعیت").Flex(1).Hidden(true),
                                Html.X().Column().DataIndex(Model.Kosorat, m => m.fldDateDeactive).Text("تاریخ غیرفعالی").Flex(2)
                        )
                )
            )
)

<script type="text/javascript">
    var ParametrDefult = "";
    var seperateK = function (value, metadata, record, rowIndex, colIndex, store) {
        return value.toLocaleString();
    };

    function setHeightGridKo() {
        App.KosouratParametriSingle.queryById('GridHeader').setHeight(((App.PayWin.getHeight() - 170) / 2) - 10);
        App.KosouratParametriSingle.queryById('GridDetailKParametri').setHeight(((App.PayWin.getHeight() - 170) / 2) + 10);
        Ext.net.Mask.hide();
    }
    function RptSooratHesabKosurat() {
        var SelectedRow = App.KosouratParametriSingle.queryById('GridDetailKParametri').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratParametri/PrintSooratHesabKosurat',
                params: {
                    KosouratId: SelectedRow.data.fldId,
                    PersonalId: 0,
                    OrganId:'@ViewBag.OrganId'
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function RptSooratHesabKoliKosurat() {
        var SelectedRow = App.KosouratParametriSingle.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratParametri/PrintSooratHesabKosurat',
                params: {
                    KosouratId: 0,
                    PersonalId: SelectedRow.data.fldId,
                    OrganId: '@ViewBag.OrganId'
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک شخص را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ChangeStatusKosouratParametriSingle() {
        var SelectedRow = App.KosouratParametriSingle.queryById('GridDetailKParametri').selModel.getLastSelected();
        if (SelectedRow != null) {
            var Last = "1";
            if (SelectedRow.data.fldStatus)
                Last = "0";

            var NoePardakht=0;
            if(SelectedRow.data.fldNoePardakht)
                NoePardakht=1;

            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratParametri/ChangeStatus',
                params: {
                    id: SelectedRow.data.fldId,
                    State: 1,
                    LastStatus: Last,
                    NoePardakht: NoePardakht,
                    OrganId: '@ViewBag.OrganId'
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function TavighKosouratParametriSingle() {
        var SelectedRowHeader = App.KosouratParametriSingle.queryById('GridHeader').selModel.getLastSelected();
        var SelectedRow = App.KosouratParametriSingle.queryById('GridDetailKParametri').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratParametri/TavighKosurat',
                params: {
                    PersonalId: SelectedRowHeader.data.fldId,
                    id: SelectedRow.data.fldId,
                    ParametrId: SelectedRow.data.fldParametrId,
                    OrganId: '@ViewBag.OrganId'
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ReloadKosouratParametriSingle() {
        var SelectedRow = App.KosouratParametriSingle.queryById('GridHeader').selModel.getLastSelected();
      /*  Ext.net.DirectMethod.request({
            url: '/PayRoll/KosuratParametri/Reload',
            params:{
                PersonalId:SelectedRow.data.fldId
            },
            success: function (result) {
                App.KosouratParametriSingle.queryById('GridDetailKParametri').getStore().loadData(result);
            }
        });*/

        App.KosouratParametriSingle.queryById('GridDetailKParametri').getStore().getProxy().setExtraParam("PersonalId", SelectedRow.data.fldId);
        App.KosouratParametriSingle.queryById('GridDetailKParametri').getStore().getProxy().setExtraParam("OrganId",'@ViewBag.OrganId');
        App.KosouratParametriSingle.queryById('GridDetailKParametri').getStore().load();
    }

    function EditKosouratParametriSingle() {
       
        var SelectedRow = App.KosouratParametriSingle.queryById('GridDetailKParametri').selModel.getLastSelected();
        var SelectedRowHeader = App.KosouratParametriSingle.queryById('GridHeader').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratParametri/CheckStatusFlag',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function (data) {
                    Ext.net.Mask.hide();
                    if (data.Flag == 3) {
                        Ext.MessageBox.show({
                            title: "خطا",
                            msg: "کاربر گرامی به دلیل بسته شدن حقوق شما مجاز به ویرایش اطلاعات نمی باشید.",
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK,
                        });
                        return;
                    }
                    if (data.Flag == 4) {
                        Ext.MessageBox.show({
                            title: "هشدار",
                            msg: " آیتم مورد نظر در محاسبات استفاده شده است." + " در صورت ویرایش آیتم مورد نظر، محاسبات حقوق حذف خواهد گردید. " + " آیا مایل به ادامه عملیات هستید؟",
                            icon: Ext.MessageBox.WARNING,
                            buttons: Ext.MessageBox.YESNO,
                            fn: function (btn) {
                                if (btn == 'yes') {
                                    Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                                    Ext.net.DirectMethod.request({
                                        url: '/PayRoll/KosuratParametri/NewKosorateParametriSingle',
                                        params: {
                                            PersonalId: SelectedRowHeader.data.fldId,
                                            Id: SelectedRow.data.fldId,
                                            DelCalc: 1,
                                            OrganId: '@ViewBag.OrganId'
                                        },
                                        success: function () {
                                            Ext.net.Mask.hide();
                                        }
                                    });
                                }
                            }
                        });
                    }
                    else {
                        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                        Ext.net.DirectMethod.request({
                            url: '/PayRoll/KosuratParametri/NewKosorateParametriSingle',
                            params: {
                                PersonalId: SelectedRowHeader.data.fldId,
                                Id: SelectedRow.data.fldId,
                                DelCalc: 0,
                                OrganId: '@ViewBag.OrganId'
                            },
                            success: function () {
                                Ext.net.Mask.hide();
                            }
                        });
                    }
                }
            });

        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

   /* function EditKosouratParametriSingle() {
        var SelectedRow = App.KosouratParametriSingle.queryById('GridDetailKParametri').selModel.getLastSelected();
        var SelectedRowHeader = App.KosouratParametriSingle.queryById('GridHeader').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratParametri/NewKosorateParametriSingle',
                params: {
                    PersonalId: SelectedRowHeader.data.fldId,
                    Id: SelectedRow.data.fldId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }*/

    function NewKosouratParametriSingle() {
        var SelectedRow = App.KosouratParametriSingle.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            if (SelectedRow.data.fldStatusId == 1) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratParametri/NewKosorateParametriSingle',
                params: {
                    PersonalId: SelectedRow.data.fldId,
                    Id: 0,
                    OrganId: '@ViewBag.OrganId'
                },
                success: function () {
                    /*Ext.net.Mask.hide();*/
                }
            });
            }
            else {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "وضعیت فرد مورد نظر " + SelectedRow.data.fldStatusTitle + " است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک شخص را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteKosouratParametriSingle() {
        var SelectedRow = App.KosouratParametriSingle.queryById('GridDetailKParametri').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/KosuratParametri/CheckStatusFlag',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function (data) {
                    Ext.net.Mask.hide();
                    if (data.Flag == 3) {
                        Ext.MessageBox.show({
                            title: "خطا",
                            msg: "کاربر گرامی به دلیل بسته شدن حقوق شما مجاز به حذف اطلاعات نمی باشید.",
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK,
                        });
                        return;
                    }
                    if (data.Flag == 4) {
                        Ext.MessageBox.show({
                            title: "هشدار",
                            msg: " آیتم مورد نظر در محاسبات استفاده شده است." + " در صورت حذف آیتم مورد نظر، محاسبات حقوق حذف خواهد گردید. " + " آیا مایل به ادامه عملیات هستید؟",
                            icon: Ext.MessageBox.WARNING,
                            buttons: Ext.MessageBox.YESNO,
                            fn: function (btn) {
                                if (btn == 'yes') {
                                    Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                                    Ext.net.DirectMethod.request({
                                        url: '/PayRoll/KosuratParametri/Delete',
                                        params: {
                                            id: SelectedRow.data.fldId,
                                            DelCalc: 1,
                                            OrganId: '@ViewBag.OrganId'
                                        },
                                        success: function (data) {
                                            Ext.net.Mask.hide();
                                            var ico = Ext.MessageBox.INFO;
                                            if (data.Er == 1)
                                                ico = Ext.MessageBox.ERROR;
                                            Ext.MessageBox.show({
                                                title: data.MsgTitle,
                                                msg: data.Msg,
                                                icon: ico,
                                                buttons: Ext.MessageBox.OK
                                            });
                                            ReloadKosouratParametriSingle();
                                        }
                                    });
                                }
                            }
                        });
                    }
                    else {
                        Ext.MessageBox.show({
                            title: "هشدار",
                            msg: "آیا برای حذف مطمئن هستید؟",
                            icon: Ext.MessageBox.WARNING,
                            buttons: Ext.MessageBox.YESNO,
                            fn: function (btn) {
                                if (btn == 'yes') {
                                    Ext.net.DirectMethod.request({
                                        url: '/PayRoll/KosuratParametri/Delete',
                                        params: {
                                            id: SelectedRow.data.fldId,
                                            DelCalc: 0,
                                            OrganId: '@ViewBag.OrganId'
                                        },
                                        success: function (data) {
                                            Ext.net.Mask.hide();
                                            var ico = Ext.MessageBox.INFO;
                                            if (data.Er == 1)
                                                ico = Ext.MessageBox.ERROR;
                                            Ext.MessageBox.show({
                                                title: data.MsgTitle,
                                                msg: data.Msg,
                                                icon: ico,
                                                buttons: Ext.MessageBox.OK
                                            });
                                            ReloadKosouratParametriSingle();
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>
