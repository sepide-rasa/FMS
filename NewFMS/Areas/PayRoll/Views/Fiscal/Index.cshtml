@model IEnumerable<NewFMS.WCF_PayRoll.OBJ_Fiscal_Detail>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}
<script src="~/Scripts/accounting.js"></script>
<script>
    var template = '<span>{0}</span>';

    var Rial = function (value) {
        return Ext.String.format(template, accounting.formatNumber(value));
    };


</script>



@(X.Panel().Title("جدول مالیاتی").Border(false).Listeners(li => li.AfterRender.Handler = "FiscalSetSize() ;")
        .ID("Fiscal")
            .Closable(true)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)

                .Items(
                  
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button().Text("جدید").Icon(Ext.Net.Icon.Add).ToolTip("کلید میانبر F8")
                                .Listeners(li => li.Click.Handler = "NewDetail();"),
                            X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).ToolTip("کلید میانبر F2")
                                .Listeners(Li => Li.Click.Handler = "EditHeader();"),
                            X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).ToolTip("کلید میانبر F9")
                                .Listeners(de =>
                                {
                                    de.Click.Handler = "if (App.Fiscal.queryById('GridHeader').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteHeader();";
                                })
                                  , X.Button().Text("عناوین مشمول مالیات").Icon(Ext.Net.Icon.ArrowRedo)
                                .Listeners(Li => Li.Click.Handler = "FiscalTitle1();")
                                , X.Button().Text("کپی عناوین مشمول مالیاتی").Icon(Ext.Net.Icon.ArrowRedo)
                                .Listeners(Li => Li.Click.Handler = "copyFiscal();")
                                , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                                    .Listeners(l => { l.Click.Handler = "HelpFiscal();"; })   
                        )
                    )
                    .ItemID("GridHeader").Flex(2)
                    .BottomBar(X.PagingToolbar())
                  //  .Height(240)
                    .ColumnWidth(0.6)
                    
                    .Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("ReadHeader"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(9)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                        
                   //     .Listeners(l => l.DataChanged.Handler = " App.Fiscal.queryById('GridHeader').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                            Html.X().Column().DataIndex(Model, m => m.fldId).Hidden(true).Text("کد").Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldEffectiveDate).Text("تاریخ اجرا").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldDateOfIssue).Text("تاریخ صدور").Flex(15)

                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                            .Listeners(l =>
                            {
                                l.Select.Handler = "ReloadFiscal();";
                            })
                    )

                    , X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)//.ToolTip("کلید میانبر Ctrl+F2")
                                .Listeners(li => li.Click.Handler = "EditFiscal();"),
                            X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)//.ToolTip("کلید میانبر Ctrl+F9")
                            .Listeners(de =>
                            {
                                de.Click.Handler = "if (App.Fiscal.queryById('Grid').selModel.getLastSelected() == null ) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteFiscal();";

                            })
                        )
                    )
                    .Title("محدوده مالیاتی")
                    .ItemID("Grid").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    //.Height(300)
                    .ColumnWidth(0.6)
                    .Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                        .Proxy(Html.X().AjaxProxy()
                           // .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(8)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                       // .Listeners(l => l.DataChanged.Handler = " App.Fiscal.queryById('Grid').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                  //  .Plugins(X.FilterHeader().Remote(true))
                        .ColumnModel(
                            Html.X().RowNumbererColumn(),
                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldFiscalHeaderId).Text("fldFiscalHeaderId").Hidden(true).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldAmountFrom).Text("از مبلغ").Renderer("Rial").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldAmountTo).Text("تا مبلغ").Renderer("Rial").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldPercentTaxOnWorkers).Text("درصد مالیات کارگران").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldTaxationOfEmployees).Text("درصد مالیات کارمندان").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldTax).Text("مالیات ثابت").Renderer("Rial").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(2)

                        )
                )
            )
        )


<script type="text/javascript">
    function HelpFiscal() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/PayRoll/Fiscal/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function FiscalSetSize() {
        var grid = App.Fiscal.queryById('GridHeader');
        grid.setHeight((App.PayWin.getHeight() - 170) / 2);
        var GridDetail = App.Fiscal.queryById('Grid');
        GridDetail.setHeight((App.PayWin.getHeight() - 170) / 2);
    }
    function ReloadFiscal() {
        var SelectedRow = App.Fiscal.queryById('GridHeader').selModel.getLastSelected();

        Ext.net.DirectMethod.request({
            url: '/PayRoll/Fiscal/Rload?FiscalHeaderId=' + SelectedRow.data.fldId,

            success: function (result) {
                App.Fiscal.queryById('Grid').getStore().loadData(result);

            }

        });
    }
    function FiscalTitle1() {
        var SelectedRow = App.Fiscal.queryById('GridHeader').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/Fiscal/FiscalTitle',
                params: {
                    id: SelectedRow.data.fldId,
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EditFiscal() {
        var SelectedRow = App.Fiscal.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/Fiscal/New',
                params: {
                    id: SelectedRow.data.fldId,
                    State: 2
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewDetail() {
        var SelectedRow = App.Fiscal.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/Fiscal/New',
                params: {
                    id: SelectedRow.data.fldId,
                    State: 1
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        } else {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/Fiscal/New',
                params: {
                    id: 0,
                    State: 1
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }

    }
    function EditHeader() {
        var SelectedRow = App.Fiscal.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/Fiscal/NewHeader',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function (data) {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteHeader() {
        var SelectedHeaderRow = App.Fiscal.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Fiscal/DeleteHeader',
                            params: {
                                id: SelectedHeaderRow.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.Fiscal.queryById('GridHeader').store.load();
                                App.Fiscal.queryById('Grid').getStore().loadData("");
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteFiscal() {
        var SelectedRow = App.Fiscal.queryById('Grid').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/Fiscal/Delete',
                            params: {
                                id: SelectedRow.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.Fiscal.queryById('Grid').store.load();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function copyFiscal() {
        var SelectedRow = App.Fiscal.queryById('GridHeader').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/PayRoll/Fiscal/CopyFiscal',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را برای مبدا کپی انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }


</script>