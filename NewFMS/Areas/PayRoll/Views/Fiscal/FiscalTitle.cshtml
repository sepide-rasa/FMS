@model IEnumerable<NewFMS.WCF_Common_Pay.OBJ_ItemsEstekhdam_FiscalTitle>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window().Modal(true)
.Width(515).Height(415)
    .Title("عناوین مشمول مالیات")
        .ID("FiscalTitle")
    .Closable(true)
    .Items(
        X.FormPanel().Border(false)
              .PaddingSpec("5 0 5 0")
        .DefaultButton("btn")
        .Buttons(
                X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ToolTip("کلید میانبر F8")
               .Listeners(l =>
               {
                   l.Click.Handler = "SaveFiscalTitle();";

               })
                       .ItemID("btnSaveFiscalTitle")

            ,
            X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                    .OnClientClick("App.FiscalTitle.destroy()")
        ).Border(false).ButtonAlign(Ext.Net.Alignment.Center)
        .TitleAlign(Ext.Net.TitleAlign.Center)
        .Items(
                X.Panel().Border(false)

            .Items(
                X.FieldSet().Border(false)
                .Center()
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns =2 })
                .Items(
                X.Hidden().ItemID("fldId")
                    , X.Label().Text("نوع استخدام:"),
                   X.ComboBox()
                    //.LabelAlign(Ext.Net.LabelAlign.Top)
                    //.FieldLabel("نوع استخدام")
                    .ItemID("txtAnvaeEstekhdam")
                    .Width(180)
                    .TypeAhead(true)
                    .BlankText("لطفا نوع استخدام را انتخاب کنید.")
                    .QueryMode(DataLoadMode.Local)
                    .ForceSelection(true)
                    .TriggerAction(TriggerAction.All)
                    .DisplayField("Name")
                    .ValueField("ID")
                    .EmptyText("آیتم استخدام")
                    .Store(X.Store()
                        .Model(X.Model()
                            .IDProperty("ID")
                            .Fields(
                            new ModelField("ID", ModelFieldType.String) { Mapping = "ID" },
                            new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                            )
                        )
                        .Proxy(X.AjaxProxy()
                        .Url(Url.Action("GetAnvaeEstekhdam"))
                        .Reader(X.JsonReader().Root("data"))
                        )
                    )
                         .Listeners(li => li.Select.Handler = "if( App.FiscalTitle.queryById('txtAnvaeEstekhdam').getValue()!='')ReloadItem();")

                    )

                )
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
            ),
                X.Panel().Border(false)//.Width(500)
                .Items(
                    X.GridPanel().AutoScroll(true)
                    .ItemID("Grid")
                    .Height(305)
                    .ColumnWidth(0.6)
                    .Store(
                        X.StoreForModel()

                    )
                    .View(
                            Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)

                    )

                    .ColumnModel(
                            Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                            Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("عنوان استخدام").Flex(2)
                           // Html.X().ComponentColumn().HeaderItems(X.Checkbox().Listeners(k => k.Change.Handler = "SelectAllFiscalTitle();").ItemID("SelectAll")).Align(Alignment.Center).DataIndex(Model, m => m.fldMashmul).Flex(1).Editor(true).Component(X.Checkbox())
                    )
                        .Plugins(
                                Html.X().CellEditing().ClicksToEdit(1)
                                )

                    .SelectionModel(
                        Html.X().CheckboxSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Multi)
                    )
                )
        )
)
@(Html.X().KeyMap()
                .ID("FiscalTitleMap")
                .Target("={App.FiscalTitle.getTargetEl()}")
            .Binding(b =>
            {
                b.Add(Html.X().KeyBinding()
                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                .Handler("if(App.HogTab.activeTab.id=='FiscalTitle')SaveFiscalTitle(); ")
                );

            }))
<script type="text/javascript">
    function SelectAllFiscalTitle() {
        var SelectedRow = App.FiscalTitle.queryById('Grid');
        var All = App.FiscalTitle.queryById("SelectAll");
        if (All.getValue() == true) {
            for (var i = 0; i < SelectedRow.selModel.store.count() ; i++) {
                FiscalTitle = SelectedRow.selModel.store.data.items[i];
                FiscalTitle.set('fldMashmul', true);

            }
        }
        else {
            for (var i = 0; i < SelectedRow.selModel.store.count() ; i++) {
                FiscalTitle = SelectedRow.selModel.store.data.items[i];
                FiscalTitle.set('fldMashmul', false);

            }
        }
    }

    function SaveFiscalTitle() {
        var AnvaeEstekhdam = App.FiscalTitle.queryById('txtAnvaeEstekhdam').getValue();
        var FiscalTitleVal = new Array();
        var fldItemEstekhdamId;
        var fldMashmul;
        var SelectedRow = App.FiscalTitle.queryById('Grid').getSelectionModel().getSelection();
        for (var i = 0; i < SelectedRow.length ; i++) {
            /*FiscalTitle = SelectedRow.selModel.store.data.items[i];
            fldMashmul = FiscalTitle.data.fldMashmul;
            if (fldMashmul == true) {
                fldItemEstekhdamId = FiscalTitle.data.fldId;*/

            FiscalTitleVal.push({
                'fldItemEstekhdamId': SelectedRow[i].data.fldId,
                'fldMashmul':true,
                'fldFiscalHeaderId': '@ViewBag.FiscalId',
                    'fldAnvaEstekhdamId': AnvaeEstekhdam
                });
           /* }*/
        }
        var Id = App.FiscalTitle.queryById('fldId');
        var er = false;
        if (er == true)
            return;
        var data = {
            FiscalTitleVal: FiscalTitleVal,
            fldFiscalHeaderId:'@ViewBag.FiscalId',
            fldAnvaEstekhdamId: AnvaeEstekhdam
        };
        $.ajax({
            type: "POST",
            url: '/PayRoll/Fiscal/SaveFiscalTitle',
            datatype: "json",
            data: JSON.stringify(data),
            contentType: 'application/json',
            success: function (data1) {
                var result = data1;/* JSON.parse(data1);*/
                var ico = Ext.MessageBox.INFO;
                if (result.Er == 1)
                    ico = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: result.MsgTitle,
                    msg: result.Msg,
                    icon: ico,
                    buttons: Ext.MessageBox.OK
                });
            },
            failure: function (data1) {
                alert(data.data1);
            }
        });
    }
    function ClearFiscalTitle() {
        App.MoteghayerhaHoghoghi.queryById('fldId').setValue(0);
    }

  /*  function EnterNext() {
        var keyfield = App.FiscalTitle.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }*/
    function ReloadItem() {
        var Id = 0;
        if ('@ViewBag.FiscalId' != '0')
            Id = '@ViewBag.FiscalId';

        Ext.net.DirectMethod.request({
            url: '/PayRoll/Fiscal/ReloadItem',
            params: {
                Estekhdam: App.FiscalTitle.queryById('txtAnvaeEstekhdam').getValue(),
                FiscalId: Id
            },
            success: function (data) {
                var store = App.FiscalTitle.queryById("Grid").store;
                store.load({ start: 0, limit: store.count(), page: 1 });
                store.loadData(data.data);

                if (data.checkId.length != 0) {
                    for (var j = 0; j < data.checkId.length; j++) {
                        var index = App.FiscalTitle.queryById('Grid').getStore().findExact("fldId", data.checkId[j]);
                        App.FiscalTitle.queryById('Grid').getSelectionModel().select(index, true);
                    }
                }
            }
        });

    }
</script>