@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@{
    var X = Html.X();
}

<style>
    td {
        text-align: left;
    }
</style>
@(Html.X().Window().Modal(true)
.Width(280).Height(170)
    .Title("جدول مالیاتی جدید")
        .ID("NewFiscalHeader")
            .Listeners(li => { li.AfterRender.Handler = "LoadFiscalHeader();"; li.Render.Fn = "addKeyMapNewFiscalHeader"; })
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.FormPanel().Border(false)

        .DefaultButton("btn")
        .Buttons(
                X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ToolTip("کلید میانبر F8")
               .Listeners(l =>
               {
                   l.Click.Handler = "SaveFiscalHeader();";

               })
                   .ItemID("btnSaveHeader")

            ,
            X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                .OnClientClick("App.NewFiscalHeader.destroy()")
        ).Border(false).ButtonAlign(Ext.Net.Alignment.Center)
        .TitleAlign(Ext.Net.TitleAlign.Center)
        .Items(
                X.Panel().Border(false)
                     .PaddingSpec("5 0 5 0")
            .Items(
                X.FieldSet().Border(true).Title("جدول مالیاتی جدید").PaddingSpec("5 5 5 5")
                .Center()
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                .Items(
                X.Hidden().ItemID("fldId"),
                 X.Label().Text("تاریخ اجرا:"),
                   X.PDateField()
                        .ItemID("txtEffectiveDate")
                                .MaskRe("/[0-9 /]/")
                                .MaxLength(10)
                                .EnforceMaxLength(true)
                   // .FieldLabel("تاریخ اجرا")
                    .MsgTarget(Ext.Net.MessageTarget.Side)
                    .AllowBlank(false)
                    .BlankText("لطفا تاریخ اجرا را وارد کنید.")
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                    .AutoFocus(true)
                         , X.Label().Text("تاریخ صدور:")
                   , X.PDateField()
                        .ItemID("txtDateOfIssue")
                                .MaskRe("/[0-9 /]/")
                                .MaxLength(10)
                                .EnforceMaxLength(true)
                    //.FieldLabel("تاریخ صدور")
                    .LabelAlign(Ext.Net.LabelAlign.Top)
                    .AllowBlank(false)
                    .BlankText("لطفا تاریخ صدور را وارد کنید.")
                    .MsgTarget(Ext.Net.MessageTarget.Side)

                    )

                )
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
            )
        )
)
@(Html.X().KeyMap()
            .ID("NewFiscalHeaderMap")
            .Target("={App.NewFiscalHeader.getTargetEl()}")
            .Binding(b =>
            {
                b.Add(Html.X().KeyBinding()
                .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                .Handler("if(App.HogTab.activeTab.id=='Fiscal')SaveFiscalHeader(); ")
                );

            }))
<script type="text/javascript">
    function LoadFiscalHeader() {
        if ('@ViewBag.Id'!='0')
        Ext.net.DirectMethod.request({
            url: '/Fiscal/HeaderDetails',
            params: {
                id: '@ViewBag.Id'
            },
            success: function (data) {
                var txtEffectiveDate = App.NewFiscalHeader.queryById('txtEffectiveDate');
                txtEffectiveDate.setRawValue(data.fldEffectiveDate);
                var txtDateOfIssue = App.NewFiscalHeader.queryById('txtDateOfIssue');
                txtDateOfIssue.setRawValue(data.fldDateOfIssue);
                var Id = App.NewFiscalHeader.queryById('fldId');
                Id.setValue(data.fldId);

            }
        });
    }
    function SaveFiscalHeader() {

        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        var txtEffectiveDate = App.NewFiscalHeader.queryById('txtEffectiveDate');
        var txtDateOfIssue = App.NewFiscalHeader.queryById('txtDateOfIssue');
        var Id = App.NewFiscalHeader.queryById('fldId');
        var er = false;

        if (txtEffectiveDate.validate() == false) {
            er = true;
        }
        if (txtDateOfIssue.validate() == false) {
            er = true;
        }


        if (er == true)
            return;

        Ext.net.DirectMethod.request({
            url: '/Fiscal/SaveHeader',
            params: {
                fldId: Id.getValue(),
                fldEffectiveDate: txtEffectiveDate.rawValue,
                fldDateOfIssue: txtDateOfIssue.rawValue
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });

                App.Fiscal.queryById('GridHeader').store.load();
                ClearHeader();
                Ext.net.Mask.hide();
            }

        });
    }
    function ClearHeader() {
        App.NewFiscalHeader.queryById('txtEffectiveDate').setValue("");
        App.NewFiscalHeader.queryById('txtDateOfIssue').setValue("");
        App.NewFiscalHeader.queryById('fldId').setValue(0);
    }
    var addKeyMapNewFiscalHeader = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.NewFiscalHeader.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtDateOfIssue") {
                        nextfld = App.NewFiscalHeader.queryById('btnSaveHeader');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                }
            }]
        });
    }
</script>