@model IEnumerable<NewFMS.Models.spr_tblReferralRulesSelectRecivers>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{
    var X = Html.X();
}


@(Html.X().Window()//.Listeners(l=>l.AfterRender.Handler="CheckHide()")
    .Width(600)
    .Height(300)
    .Title("گیرندگان")
    .ID("SearchReferralRules")
    .Closable(true)
    .Modal(true)
    .Layout(Ext.Net.LayoutType.Fit)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.GridPanel()//.Height(300)
                    .AutoScroll(true)
                    .Border(false)
                    .TopBar(
                        Html.X().Toolbar()
                            .Items(
                                X.Button()
                                    .Text("انتخاب")
                                    .Icon(Ext.Net.Icon.ArrowRedo)
                                    .Listeners(li => li.Click.Handler = "NextSearchReferralRules();")
                                )
                        )
                    .ItemID("GridSearchReferralRules")
                    .Store(
                        X.StoreForModel()

                    .Listeners(l => l.Load.Handler = "LoadSavedData();")
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
                                                    .ExtraParams(x => x.Add(new { CommId = @ViewBag.CommId, SearchType = @ViewBag.SearchType }))
                        )
                        .PageSize(20000)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
            .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                                         Html.X().Column().DataIndex(Model, m => m.fldId_Type).Text("fldId_Type").Hidden(true),
                                 Html.X().Column().DataIndex(Model, m => m.fldid).Text("کد").Hidden(true),
                                             Html.X().Column().DataIndex(Model, m => m.fldType).Text("fldtype").Hidden(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldReceiverComisionName).Text("نام").Flex(2)
                    )
                   // .Listeners(a => a.CellDblClick.Handler = "NextSearchReferralRules();")
                    .SelectionModel(
                        Html.X().CheckboxSelectionModel().CheckOnly(true)
                            .Mode(Ext.Net.SelectionMode.Multi)
                    )

            )
        )
)

<script type="text/javascript">
    function CheckHide() {
        Runevesht = App.PnlAsliLetter.queryById('fieldsetRunevesht');
        if ('@ViewBag.State' == "1") {
            Runevesht.hide();
            App.SearchReferralRules.queryById('GridSearchReferralRules').setHeight(450);
        }
        else if ('@ViewBag.State' == "2") {
            Runevesht.show();
        }
    }
    function LoadSavedData() {
        var CommSelected = "";
        if ('@ViewBag.State' == "1"){
            CommSelected = App.PnlAsliLetter.queryById('RecieverSelected').getValue();
            App.SearchReferralRules.setTitle("گیرندگان");
        }
        else if ('@ViewBag.State' == "2"){
            CommSelected = App.PnlAsliLetter.queryById('RuneveshtSelected').getValue();
            App.SearchReferralRules.setTitle("رونوشت گیرندگان");
        }
        else if ('@ViewBag.State' == "3"){
            CommSelected = App.PnlAsliLetterV.queryById('RecieverSelected').getValue();
            App.SearchReferralRules.setTitle("گیرندگان");
        }
        else if ('@ViewBag.State' == "4"){
            CommSelected = App.PnlAsliLetterV.queryById('SenderSelected').getValue();
            App.SearchReferralRules.setTitle("فرستندگان");
        }
        else if ('@ViewBag.State' == "5") {
            CommSelected = App.PnlAsliLetterV.queryById('RuneveshtSelected').getValue();
            App.SearchReferralRules.setTitle("رونوشت گیرندگان");
        }

        if (CommSelected != "") {
            var u = CommSelected.split(";");
            for (var j = 0; j < u.length-1; j++) {
                var index = App.SearchReferralRules.queryById('GridSearchReferralRules').getStore().findExact("fldId_Type", u[j]);
                App.SearchReferralRules.queryById('GridSearchReferralRules').getSelectionModel().select(index, true);
            }
        }
    }
    function NextSearchReferralRules() {
        var SelectedRow = App.SearchReferralRules.queryById('GridSearchReferralRules').getSelectionModel().getSelection();

        if (SelectedRow != null) {
            if ('@ViewBag.State' == "1") {
                App.PnlAsliLetter.queryById('RecieverSelected').setValue("");
                App.PnlAsliLetter.queryById('txtReceiver').setValue("");
                for (var i = 0; i < SelectedRow.length; i++) {
                    App.PnlAsliLetter.queryById('RecieverSelected').setValue(App.PnlAsliLetter.queryById('RecieverSelected').getValue() + SelectedRow[i].data.fldId_Type + ";");
                    App.PnlAsliLetter.queryById('txtReceiver').setValue(App.PnlAsliLetter.queryById('txtReceiver').getValue() + SelectedRow[i].data.fldReceiverComisionName + "،");
                }

            }
            else if ('@ViewBag.State' == "2") {
                var grid = App.PnlAsliLetter.queryById('GridRunevesht');
                var ss = App.PnlAsliLetter.queryById('RuneveshtSelected').getValue();


                App.PnlAsliLetter.queryById('RuneveshtSelected').setValue("");
                for (var i = 0; i < SelectedRow.length; i++) {
                    var HaveId = 0;
                    for (var j = 0; j < grid.selModel.store.count() ; j++) {
                        row = grid.selModel.store.data.items[j];
                        if (row.data.fldId_Type == SelectedRow[i].data.fldId_Type)
                            HaveId = 1;
                    }

                    if (HaveId == 0) {
                        App.PnlAsliLetter.queryById('RuneveshtSelected').setValue(App.PnlAsliLetter.queryById('RuneveshtSelected').getValue() + SelectedRow[i].data.fldId_Type + ";");
                        var fldAshkhasHoghoghiTitlesId = null;
                        var fldCommisionId = SelectedRow[i].data.fldid;
                        if (SelectedRow[i].data.fldType == 2) {
                            fldCommisionId = null;
                            fldAshkhasHoghoghiTitlesId = SelectedRow[i].data.fldid;
                        }
                        grid.store.insert(0, { fldid: 0, fldAshkhasHoghoghiTitlesId: fldAshkhasHoghoghiTitlesId, fldCommisionId: fldCommisionId, fldId_Type: SelectedRow[i].data.fldId_Type, fldName: SelectedRow[i].data.fldReceiverComisionName, fldAssignmentTypeId: "" });
                        grid.getView().focusRow(0);
                        grid.editingPlugin.startEdit(grid.store.getAt(0), grid.columns[0]);
                    }
                }

                var DelId = 1;
                for (var j = 0; j < grid.selModel.store.count() ; j++) {
                    row = grid.selModel.store.data.items[j];
                    for (var i = 0; i < SelectedRow.length; i++) {
                        if (row.data.fldId_Type == SelectedRow[i].data.fldId_Type)
                            DelId = 0;
                    }
                    if (DelId == 1)
                        grid.store.removeAt(j);
                }
            }
            else if ('@ViewBag.State' == "3") {
                App.PnlAsliLetterV.queryById('RecieverSelected').setValue("");
                App.PnlAsliLetterV.queryById('txtReceiver').setValue("");
                for (var i = 0; i < SelectedRow.length; i++) {
                    App.PnlAsliLetterV.queryById('RecieverSelected').setValue(App.PnlAsliLetterV.queryById('RecieverSelected').getValue() + SelectedRow[i].data.fldId_Type + ";");
                    App.PnlAsliLetterV.queryById('txtReceiver').setValue(App.PnlAsliLetterV.queryById('txtReceiver').getValue() + SelectedRow[i].data.fldReceiverComisionName + "،");
                }

            }
            else if ('@ViewBag.State' == "4") {
                App.PnlAsliLetterV.queryById('SenderSelected').setValue("");
                App.PnlAsliLetterV.queryById('txtSender').setValue("");
                for (var i = 0; i < SelectedRow.length; i++) {
                    App.PnlAsliLetterV.queryById('SenderSelected').setValue(App.PnlAsliLetterV.queryById('SenderSelected').getValue() + SelectedRow[i].data.fldId_Type + ";");
                    App.PnlAsliLetterV.queryById('txtSender').setValue(App.PnlAsliLetterV.queryById('txtSender').getValue() + SelectedRow[i].data.fldReceiverComisionName + "،");
                }

            }
            else if ('@ViewBag.State' == "5") {
                var grid = App.PnlAsliLetterV.queryById('GridRunevesht');
                var ss = App.PnlAsliLetterV.queryById('RuneveshtSelected').getValue();


                App.PnlAsliLetterV.queryById('RuneveshtSelected').setValue("");
                for (var i = 0; i < SelectedRow.length; i++) {
                    var HaveId = 0;
                    for (var j = 0; j < grid.selModel.store.count() ; j++) {
                        row = grid.selModel.store.data.items[j];
                        if (row.data.fldId_Type == SelectedRow[i].data.fldId_Type)
                            HaveId = 1;
                    }

                    if (HaveId == 0) {
                        App.PnlAsliLetterV.queryById('RuneveshtSelected').setValue(App.PnlAsliLetterV.queryById('RuneveshtSelected').getValue() + SelectedRow[i].data.fldId_Type + ";");
                        var fldAshkhasHoghoghiTitlesId = null;
                        var fldCommisionId = SelectedRow[i].data.fldid;
                        if (SelectedRow[i].data.fldType == 2) {
                            fldCommisionId = null;
                            fldAshkhasHoghoghiTitlesId = SelectedRow[i].data.fldid;
                        }
                        grid.store.insert(0, { fldid: 0, fldAshkhasHoghoghiTitlesId: fldAshkhasHoghoghiTitlesId, fldCommisionId: fldCommisionId, fldId_Type: SelectedRow[i].data.fldId_Type, fldName: SelectedRow[i].data.fldReceiverComisionName, fldAssignmentTypeId: "" });
                        grid.getView().focusRow(0);
                        grid.editingPlugin.startEdit(grid.store.getAt(0), grid.columns[0]);
                    }
                }

                var DelId = 1;
                for (var j = 0; j < grid.selModel.store.count() ; j++) {
                    row = grid.selModel.store.data.items[j];
                    for (var i = 0; i < SelectedRow.length; i++) {
                        if (row.data.fldId_Type == SelectedRow[i].data.fldId_Type)
                            DelId = 0;
                    }
                    if (DelId == 1)
                        grid.store.removeAt(j);
                }
            }
            App.SearchReferralRules.destroy();
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا گیرنده مورد نظر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>