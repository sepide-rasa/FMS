@model IEnumerable<NewFMS.Models.spr_tblMergeFieldTypesSelect>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<br />
@(Html.X().Panel()
                .ID("MergeFieldTypes")
            .Title("ثبت بوکمارک ها")
        //.Listeners(li => { li.AfterRender.Handler = "MergeFieldTypesSetSize();"; li.Render.Fn = "addKeyMapMergeFieldTypes"; })
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
        .Border(false)
       .Items(
    X.Panel().Border(false).Items(X.Label()),
        X.Panel().Border(false).Buttons(
                    X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk).ItemID("btnSaveMergeFieldTypes")
                    .Listeners(l => { l.Click.Handler = "SaveMergeFieldTypes();"; })
            , X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                    .Listeners(l => { l.Click.Handler = "LoadMergeFieldTypes();"; })
            , X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)
                    .Listeners(l => { l.Click.Handler = "DeleteMergeFieldTypes();"; })
        //, X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help).Listeners(l => { l.Click.Handler = "HelpMergeFieldTypes();"; })
            , X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)
                        .OnClientClick("App.MergeFieldTypes.destroy()")
        ).ButtonAlign(Ext.Net.Alignment.Center)
        .Items(
            X.Panel().Border(false)
             .Layout(LayoutType.VBox)
                         .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.FieldSet().Border(true).Title("بوکمارک").Height(50)
                     .Defaults(new { Margin = 2 })
                    .Layout(LayoutType.Table)
                    .LayoutConfig(new TableLayoutConfig { Columns = 4 })
                .Items(
                    X.Hidden().ItemID("fldId"),
                        X.Label("نام فارسی:"),
                        X.TextField()
                        .ItemID("txtNameFa")
                            .MaxLength(300)
                            .EnforceMaxLength(true)
                            .MaskRe("[a-z,A-Z,آ-ی, ,_,-]")
                            .AllowBlank(false)
                            .BlankText("لطفا نام فارسی را وارد کنید.")
                            .AutoFocus(true)
                          , X.Label("نام انگلیسی:"),
                            X.TextField()
                            .ItemID("txtNameEn")
                                .MaxLength(400)
                                .EnforceMaxLength(true)
                                .MaskRe("[a-z,A-Z,آ-ی, ,_,-]")
                                .AllowBlank(false)
                                .BlankText("لطفا نام انگلیسی را وارد کنید.")
                                .AutoFocus(true)
                )
            )
        ),
        X.GridPanel()
                    .ItemID("MergeFieldTypesGrid")
            .BottomBar(X.PagingToolbar())
            .Store(
                            X.StoreForModel()
                                                .Listeners(l => l.DataChanged.Handler = "App.MergeFieldTypes.queryById('MergeFieldTypesGrid').selModel.refresh();")
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
                            )
                            .PageSize(20)
                            .RemoteFilter(true)
                            .RemotePaging(true)
                        )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                )
                    .Plugins(X.FilterHeader().Remote(true))
                     .Listeners(l =>
                     {
                         l.AfterRender.Handler = "var grid = App.MergeFieldTypes.queryById('MergeFieldTypesGrid');grid.setHeight(App.AutomationWin.getHeight() - 260); ";

                     })
                  .ColumnModel(
                        Html.X().RowNumbererColumn(),
                            Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                            Html.X().Column().DataIndex(Model, m => m.fldType).Text("نوع").Flex(1).Hidden(true),
                        Html.X().Column().DataIndex(Model, m => m.fldFaName).Text("نام فارسی").Flex(5),
                        Html.X().Column().DataIndex(Model, m => m.fldEnName).Text("نام انگلیسی").Flex(10)
                       )
                .SelectionModel(
                    Html.X().RowSelectionModel()
                        .Mode(Ext.Net.SelectionMode.Single)
           )
      )
)
<script type="text/javascript">

    function HelpMergeFieldTypes() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Automation/MergeFieldTypes/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function MergeFieldTypesSetSize() {
        App.MergeFieldTypes.setWidth(App.AutomationWin.getWidth());
        var grid = App.MergeFieldTypes.queryById('MergeFieldTypesGrid');
        grid.setHeight(App.AutomationWin.getHeight() - 335);
    }
    function LoadMergeFieldTypes() {
        var SelectedRow = App.MergeFieldTypes.queryById('MergeFieldTypesGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            if (SelectedRow.data.fldType == 0) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "بوکمارک موردنظر قابل ویرایش نمی باشد.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else{
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/MergeFieldTypes/Details',
                    params: {
                        Id: SelectedRow.data.fldId
                    },
                    success: function (data) {
                        var txtNameFa = App.MergeFieldTypes.queryById('txtNameFa');
                        txtNameFa.setValue(data.fldFaName);
                        var txtNameEn = App.MergeFieldTypes.queryById('txtNameEn');
                        txtNameEn.setValue(data.fldEnName);
                        var fldId = App.MergeFieldTypes.queryById('fldId');
                        fldId.setValue(data.fldId);
                        Ext.net.Mask.hide();
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function SaveMergeFieldTypes() {
        var txtNameFa = App.MergeFieldTypes.queryById('txtNameFa');
        var txtNameEn = App.MergeFieldTypes.queryById('txtNameEn');
        var fldId = App.MergeFieldTypes.queryById('fldId');
        var er = false;

        if (txtNameFa.validate() == false) {
            er = true;
        }
        if (er == true)
            return;

        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/MergeFieldTypes/Save',
            params: {
                fldId: fldId.getValue(),
                fldFaName: txtNameFa.getValue(),
                fldEnName: txtNameEn.getValue()
            },
            success: function (data) {
                Ext.net.Mask.hide();
                var ic = Ext.MessageBox.INFO;
                if (data.Err == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    Name: data.MsgName,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
                App.MergeFieldTypes.queryById('MergeFieldTypesGrid').store.load();
                if (data.Err != 1)
                    ClearMergeFieldTypes();
            }

        });
    }
    function DeleteMergeFieldTypes() {
        var SelectedRow = App.MergeFieldTypes.queryById('MergeFieldTypesGrid').selModel.getLastSelected();
        if (SelectedRow != null) {
            if (SelectedRow.data.fldType == 0) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "بوکمارک موردنظر قابل حذف نمی باشد.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                Ext.MessageBox.show({
                    title: "هشدار",
                    msg: "آیا برای حذف مطمئن هستید؟",
                    icon: Ext.MessageBox.WARNING,
                    buttons: Ext.MessageBox.YESNO,
                    fn: function (btn) {
                        if (btn == 'yes') {
                            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                            Ext.net.DirectMethod.request({
                                url: '/MergeFieldTypes/Delete',
                                params: {
                                    id: SelectedRow.data.fldId
                                },
                                success: function (data) {
                                    var ic = Ext.MessageBox.INFO;
                                    if (data.Er == 1)
                                        ic = Ext.MessageBox.ERROR;
                                    Ext.MessageBox.show({
                                        title: data.MsgTitle,
                                        msg: data.Msg,
                                        icon: ic,
                                        buttons: Ext.MessageBox.OK
                                    });
                                    App.MergeFieldTypes.queryById('MergeFieldTypesGrid').store.load()
                                }
                            });
                            Ext.net.Mask.hide();
                        }
                    }
                });
            }
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ClearMergeFieldTypes() {
        App.MergeFieldTypes.queryById('fldId').setValue(0);
        App.MergeFieldTypes.queryById('txtNameFa').setValue("");
        App.MergeFieldTypes.queryById('txtNameEn').setValue("");
    }
    var addKeyMapMergeFieldTypes = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.MergeFieldTypes.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtNameFa") {
                        nextfld = App.MergeFieldTypes.queryById('btnSaveMergeFieldTypes');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }
</script>