@model NewFMS.Models.AhkamKari
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{ var X = Html.X();}
<br />
@(Html.X().Panel()
            .ID("Commision")
        .Title("احکام کاری")
        .Closable(true)
        .CloseAction(Ext.Net.CloseAction.Destroy)
            .Border(false)
                .Listeners(li => li.AfterRender.Handler = "CommisionSetSize();")
       .Items(
    X.Panel().Border(false)//.Height(250)
        .Items(
                X.GridPanel()
                                .AutoScroll(true)
                                    .Listeners(l => l.ItemClick.Handler = "ReloadGridCommision();")
                                .TopBar(
                                    Html.X().Toolbar()
                                        .Items(
                                                   X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                                                )
                                        )
                                .ItemID("GridHeader")
                                .BottomBar(X.PagingToolbar())
                                        .Plugins(X.FilterHeader().Remote(true))
                                .Flex(2)
                                .Store(
                                             X.StoreFor(Model.Ashkhas)
                                        .Proxy(Html.X().AjaxProxy()
                                            .Url(Url.Action("ReadHeader"))
                                            .Reader(Html.X().JsonReader().Root("data")))
                                .PageSize(9)
                                .RemotePaging(true)
                .Listeners(l => l.DataChanged.Handler = "App.Commision.queryById('GridHeader').selModel.refresh();"))
                                .View(
                                    Html.X().GridView()
                                        .LoadingText("در حال بارگذاری...")
                                        .RTL(true))
                                .ColumnModel(
                                    Html.X().RowNumbererColumn(),
                                    Html.X().Column().DataIndex(Model.Ashkhas, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                    Html.X().Column().DataIndex(Model.Ashkhas, m => m.fldName).Text("نام").Flex(2),
                                    Html.X().Column().DataIndex(Model.Ashkhas, m => m.fldFamily).Text("نام خانوادگی").Flex(2),
                                    Html.X().Column().DataIndex(Model.Ashkhas, m => m.fldShenase_CodeMeli).Text("کد ملی").Flex(3),
                                    Html.X().Column().DataIndex(Model.Ashkhas, m => m.shomareshabt_father).Text("نام پدر").Flex(2)
                                    )
                                .SelectionModel(
                                    Html.X().RowSelectionModel()
                                        .Mode(Ext.Net.SelectionMode.Single)
                                        )
        ),
           X.Panel()
                                .ItemID("PnlGridDetail")
                                .Title("احکام کاری")
                                .Border(false)
                                .Layout(Ext.Net.LayoutType.Fit)
                                .Items(
                                X.GridPanel()
                                    .TopBar(
                                Html.X().Toolbar()
                                    .Items(
                                        X.Button()
                                            .Text("جدید")
                                            .Icon(Ext.Net.Icon.Add)
                                            .Listeners(li => li.Click.Handler = "NewCommision();")
                                            ,
                                            X.Button()
                                            .Text("ویرایش")
                                            .Icon(Ext.Net.Icon.Pencil)
                                            .Listeners(li => li.Click.Handler = "EditCommision();")
                                            ,
X.Button().Text("نمونه امضا").Icon(Ext.Net.Icon.BookAdd).Listeners(Li => Li.Click.Handler = "EmzaPersonalInfo();"),
                                            X.Button()
                                                .Text("حذف")
                                            .Icon(Ext.Net.Icon.Delete)
                                            .Listeners(li => li.Click.Handler = "DeleteCommision();")
                                            
                                            

                                    ))
                                        .BottomBar(X.PagingToolbar())
                                        .AutoScroll(true)
                                        .ItemID("GridDetail")
                                        .Flex(2).Height(187)
                                        .Store(
                                            X.StoreFor(Model.Ahkam)
                                            .PageSize(9)
                                            .RemotePaging(true)
                        )
                                        .View(
                                            Html.X().GridView()
                                                .LoadingText("در حال بارگذاری...")
                                                .RTL(true)
                        )
                                            .ColumnModel(
                                                Html.X().RowNumbererColumn(),
                                                    Html.X().Column().DataIndex(Model.Ahkam, m => m.fldID).Text("کد").Hidden(true),
                                                    Html.X().Column().DataIndex(Model.Ahkam, m => m.fldStartDate).Text("تاریخ شروع حکم").Flex(1),
                                                    Html.X().Column().DataIndex(Model.Ahkam, m => m.fldEndDate).Text("تاریخ پایان حکم").Flex(1),
                                                             Html.X().Column().DataIndex(Model.Ahkam, m => m.fldSignName).Text("حق امضا").Flex(1),
                                                    Html.X().Column().DataIndex(Model.Ahkam, m => m.fldOrganicNumber).Text("شماره حکم").Flex(1),
                                                    Html.X().Column().DataIndex(Model.Ahkam, m => m.fldO_postEjraee_Title).Text("پست سازمانی").Flex(4)
                                                    )
                                        .SelectionModel(
                                            Html.X().RowSelectionModel()
                                                .Mode(Ext.Net.SelectionMode.Single)
                                )
                    )
    )
)
<script type="text/javascript">
    function CommisionSetSize() {
        var grid = App.Commision.queryById('GridHeader');
        grid.setHeight(App.AutomationWin.getHeight() - 387);
        var GridDetail = App.Commision.queryById('GridDetail');
    }
    function EditCommision() {
        var SelectedRow = App.Commision.queryById("GridHeader").getSelectionModel().getLastSelected();
        var SelectedRowDetail = App.Commision.queryById("GridDetail").getSelectionModel().getLastSelected();
        if (SelectedRowDetail != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Automation/Commision/New',
                params: {
                    AshkhasID: SelectedRow.data.fldId,
                    Name: SelectedRow.data.fldName + " " + SelectedRow.data.fldFamily,
                    id: SelectedRowDetail.data.fldID
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ReloadGridCommision() {
        var SelectedRow = App.Commision.queryById("GridHeader").getSelectionModel().getLastSelected();
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Automation/Commision/ReloadDetail',
            params: {
                HeaderId: SelectedRow.data.fldId,
            },
            success: function (result) {
                App.Commision.queryById('GridDetail').getStore().loadData(result);
                Ext.net.Mask.hide();
            }
        });
    }
    function NewCommision() {
        var SelectedRow = App.Commision.queryById("GridHeader").getSelectionModel().getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Automation/Commision/New',
                params: {
                    AshkhasID: SelectedRow.data.fldId,
                    id: 0,
                    Name: SelectedRow.data.fldName + " " + SelectedRow.data.fldFamily
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function DeleteCommision() {
        var SelectedRow = App.Commision.queryById('GridDetail').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                        Ext.net.DirectMethod.request({
                            url: '/Automation/Commision/Delete',
                            params: {
                                id: SelectedRow.data.fldID
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.Commision.queryById('GridHeader').store.load();
                                App.Commision.queryById('GridDetail').store.load();
                            }
                        });
                        Ext.net.Mask.hide();
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EmzaPersonalInfo() {
        var SelectedRow = App.Commision.queryById('GridDetail').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Personeli/PersonalInfo/EmzaPersonalInfo',
                params: {
                    id: SelectedRow.data.fldID
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>