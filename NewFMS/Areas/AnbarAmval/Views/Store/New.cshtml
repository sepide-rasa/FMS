@model IEnumerable<NewFMS.WCF_AnbarAmval.OBJ_AnbarGroup>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using Ext.Net.Utilities;
@{
    var X = Html.X();
}

<style>
    .custom-icon {
        margin-right: 124px !important;
    }

    #TreeGroup .x-column-header-text {
        white-space: pre-wrap;
        height: 30px;
    }
</style>

@(Html.X().Window()
    .Closable(true)
    .CloseAction(CloseAction.Destroy)
    .Layout(LayoutType.Fit)
    .Modal(true)
    .Width(725)
        //.Resizable(false)
    .ID("NewStore")
    .Listeners(l => l.AfterRender.Handler = "LoadStore()")
        //.Listeners(l => l.Render.Handler = "App.NewStore.setHeight(Ext.getBody().getViewSize().height-200);")
    .Title("تعریف انبار")
    .ButtonAlign(Alignment.Center)
    .Buttons(
        Html.X().Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
            .Listeners(l => l.Click.Handler = "SaveStore()"),
        Html.X().Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .Listeners(l => l.Click.Handler = "App.NewStore.destroy()")
    )
    .Items(
        X.Panel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .Padding(0)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                Html.X().FieldSet()
                    .Border(false)
                    .Layout(LayoutType.VBox).Padding(0)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Items(
                        X.Hidden()
                            .ItemID("fldId"),
                         X.FieldSet()
                        .ItemID("StoreInformation").Title("اطلاعات انبار").Border(true).Defaults(new { Margin = 2 }).Layout(LayoutType.Table).LayoutConfig(new TableLayoutConfig { Columns = 4 })
                        .Items(
                           
                        X.Label("نام:"),
                        X.TextField()
                            .ItemID("txtName")
                            .AllowBlank(false)
                            .FieldStyle("padding-right:4px;")
                            .BlankText("لطفا نام را وارد کنید."),
                            X.Label("آدرس:"),
                            X.TextField()
                            .AllowBlank(false)
                            .Width(400)
                            .ItemID("txtAddress"),
                        X.Label("شماره تلفن:"),
                        X.TextField()
                        .ItemID("txtPhone")
                        .MinLength(8)
                        .EnforceMaxLength(true)
                        .MaxLength(11)
                        .AllowBlank(false)
                        .BlankText("لطفا شماره تلفن را وارد کنید.")
                        .MaskRe("/[0-9]/"),
                        
                        X.Label("توضیحات:"),
                        X.TextField()
                            .ColSpan(3)
                            .Width(400)
                            .ItemID("txtDesc")

                    ))
                        ,
                           X.GridPanel()
                           .Width(700)
                           .Height(300)
                           .Padding(10)
                            .AutoScroll(true)
                            .ItemID("GridGroupAnbar")
                            .BottomBar(X.PagingToolbar())
                            .Store(
                                X.StoreForModel()
        //.Listeners(l => l.DataChanged.Handler = "App.Store.queryById('GridGroupAnbar').selModel.refresh();")
                                    .Proxy(Html.X().AjaxProxy()
                                        .Url(Url.Action("ReadTree"))
                                        .Reader(Html.X().JsonReader().Root("data"))
                                    )
                                    .PageSize(10)
                                    .RemoteFilter(true)
                                    .RemotePaging(true)
                            )
                            .View(
                                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                            )
                            .Plugins(X.FilterHeader().Remote(true))
                            .ColumnModel(
                                Html.X().RowNumbererColumn(),
                                Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                Html.X().Column().DataIndex(Model, m => m.fldName).Text("نام انبار").Flex(4).Wrap(true),
                                Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(6).Wrap(true),
                                Html.X().ComponentColumn().Flex(2).ItemID("ButtonsTree").Component(Html.X().Button().ItemID("btnTree").IconCls("Tree").Text("ساختار درختی")
                                .Listeners(l => l.Click.Handler = "GoToTreeHaWin();")).Filterable(false)
                            )
                            .SelectionModel(
                                Html.X().RowSelectionModel()
                                    .Mode(Ext.Net.SelectionMode.Single)
                            )
                    
            )
    )
)

<script type="text/javascript">
    var AnbarTreeId = "";
    var AnbarTree = "";
    var GetParam = function (store, operation, eOpts) {
        var nodeId = operation.node.getId();
        operation.params.nod = nodeId;
        operation.params.StoreId = '@ViewBag.Id';
    };

    var CheckTreeId = function (view, record) {
        if ('@ViewBag.TreeIdStore' != 1 && record.getId() == 1) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا گروه کاربری را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            return;
        }
    };

    function GoToTreeHaWin() {
        var SelectedRow = App.NewStore.queryById("ButtonsTree").activeRecord.record;
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/AnbarAmval/Store/WinTree',
            params: {
                GroupId: SelectedRow.data.fldId,
                GroupName: SelectedRow.data.fldName
            },
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }

    var GetParamTreeDaramad = function (store, operation, eOpts) {
        var nodeId = operation.node.getId();
        operation.params.nod = nodeId;
    };
    
      function LoadStore() {
        if ('@ViewBag.Id' != "0") {
            /*App.StoreWin.body.mask("در حال بارگذاری...");*/
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/AnbarAmval/Store/Details',
                params: {
                    Id: '@ViewBag.Id'
                },
                success: function (data) {

                    var txtName = App.NewStore.queryById('txtName');
                    txtName.setValue(data.fldName);

                    var txtPhone = App.NewStore.queryById('txtPhone');
                    txtPhone.setValue(data.fldPhone);

                    var txtAddress = App.NewStore.queryById('txtAddress');
                    txtAddress.setValue(data.fldAddress);

                    var txtDesc = App.NewStore.queryById('txtDesc');
                    txtDesc.setValue(data.fldDesc);

                    var fldId = App.NewStore.queryById('fldId');
                    fldId.setValue(data.fldId);

                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            App.NewStore.queryById('txtName').validate();
            App.NewStore.queryById('txtPhone').validate();
            App.NewStore.queryById('txtAddress').validate();
        }
    }

    function SaveStore() {
        var txtName = App.NewStore.queryById('txtName');
        var txtPhone = App.NewStore.queryById('txtPhone');
        var txtAddress = App.NewStore.queryById('txtAddress');
        var txtDesc = App.NewStore.queryById('txtDesc');
        var fldId = App.NewStore.queryById('fldId');

        var StoreGroup = new Array();
        var er = false;

        if (txtName.validate() == false) {
            er = true;
        }
        if (txtPhone.validate() == false) {
            er = true;
        }
        if (txtAddress.validate() == false) {
            er = true;
        }

        if (er == true)
            return;

            var data = {
                fldId: fldId.getValue(),
                fldName:txtName.getValue(),
                fldDesc: txtDesc.getValue(),
                fldAddress: txtAddress.getValue(),
                fldPhone: txtPhone.getValue(),
                AnbarTree: AnbarTree
            };

            App.NewStore.body.mask("در حال ذخیره سازی");
            $.ajax({
                type: "POST",
                url: '/AnbarAmval/Store/Save',
                datatype: "json",
                data: JSON.stringify(data),
                contentType: 'application/json',
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    var result = data;
                    if (result.Er == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        title: result.MsgTitle,
                        msg: result.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.NewStore.body.mask().hide();
                    if (data.Er != 1) {
                        App.Store.queryById('GridStore').store.load();
                        ClearStore();
                    }
                },
                failure: function (data) {
                    alert(data.data);
                    Ext.net.Mask.hide();
                }
            });
    }

    function ClearStore() {
        App.NewStore.queryById('fldId').setValue(0);
        App.NewStore.queryById('txtPhone').setValue("");
        App.NewStore.queryById('txtName').setValue("");
        App.NewStore.queryById('txtAddress').setValue("");
        App.NewStore.queryById('txtDesc').setValue("");
    }

    function EnterNext() {
        var keyfield = App.NewStore.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        nextfld = keyfield.nextSibling().nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }
</script>