@model IEnumerable<NewFMS.WCF_Daramad.OBJ_ShomareHesabCodeDaramad>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
<style>
    .x-mcombo-item-unchecked {
        background-position: right;
        padding-right: 20px;
    }

    .x-mcombo-item-checked {
        background-position: right;
        padding-right: 20px;
    }
</style>
@(Html.X().Panel()
    .Closable(true)
    .AutoScroll(true)
    .Border(false)
    .Title("گزارش گروهی اسناد")
    .CloseAction(CloseAction.Destroy)
        .Listeners(li => { li.AfterRender.Handler = "setTitlePnlRpt()"; li.Render.Fn = "addKeyMapPrintDocument_Group"; })
        //  .Listeners(l => l.AfterRender.Handler = "setTitlePnlRpt()")
    .Layout(LayoutType.Fit)
        .ID("PrintDocument_Group"+@ViewBag.ModuleId)
    .Items(
        X.Panel()
            .AutoScroll(true)
            .Border(false)
        //.Layout(LayoutType.VBox)
        //.LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
        //.PaddingSpec("4px 12px 4px 12px")
            .Items(
                X.Panel()
                    .AutoScroll(true)
                    .Border(false)
                    .ButtonAlign(Alignment.Center)
                        .Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                    .Buttons(
                        Html.X().Button()
                            .Text("چاپ")
                            .ItemID("btnPrint")
                            .Icon(Ext.Net.Icon.Printer)
                            .Listeners(l => l.Click.Handler = "Print()"),
                        Html.X().Button()
                            .Text("خروج")
                            .ItemID("btnOut")
                            .Icon(Ext.Net.Icon.DoorOut)
                            .Listeners(l => l.Click.Handler = "destroyWin2()")
                    )
                    .Items(
                        X.FieldSet()
                            .Border(false).ItemID("fieldsetKoli")
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                                 .Defaults(new { Margin = 2 })
                            .Items(
                                X.Label().Text("از شماره سند:"),
                                X.TextField().AutoFocus(true).Width(100)
                                .ItemID("txtAzShomareSanad")
                                .AllowBlank(false)//.Width(170)
                                    .MaskRe("[0-9]")
                                    .BlankText("لطفا شماره سند را وارد کنید."),
                                X.Label().Text("تا شماره سند:"),
                                     X.TextField().Width(100)
                                             .ItemID("txtTaShomareSanad")
                                        .AllowBlank(false)//.Width(170)
                                            .MaskRe("[0-9]")
                                         .BlankText("لطفا شماره سند را وارد کنید."),
                                             X.Label("نوع سند:"),
                                    X.MultiCombo()
                                        .ItemID("CboTypeSanad")
                                        .TypeAhead(true)
                                        .AllowBlank(false)
                                        .BlankText("لطفا نوع سند انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .EmptyText("آئین نامه ...")
                                        .Listeners(l => l.AfterRender.Handler = "setAllType3()")
                                        .Items(
                                            new ListItem("موقت", "0"),
                                            new ListItem("قطعی", "1")
                                        ),
                                    X.Label("نحوه چاپ:"),
                                    X.ComboBox()
                                        .ItemID("CboTypePrint")
                                        .TypeAhead(true)
                                        .AllowBlank(false)
                                        .BlankText("لطفا نحوه چاپ انتخاب کنید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Listeners(l => l.AfterRender.Handler = "SetPortrait()")
                                        .Items(
                                            new ListItem("افقی", "1"),
                                            new ListItem("عمودی", "2")
                                        )



                        )

                        ),
                    Html.X().Panel()
                    .Border(true)
                    .Listeners(L => L.AfterRender.Handler = "setSizeRptPanel2()")
                    .AutoScroll(true)
                    .ItemID("RptPanel2")
            )

    )
)

<script type="text/javascript">

    function setSizeRptPanel2() {
        if ('@ViewBag.ModuleId' == 4) {
            Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').queryById('RptPanel2').setSize(App.AccountingWin.getWidth() - 20, App.AccountingWin.getHeight() - 240);
        }
        else if ('@ViewBag.ModuleId' == 10) {
            Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').queryById('RptPanel2').setSize(App.KhazanedariWin.getWidth() - 20, App.KhazanedariWin.getHeight() - 240);
        }
    }

    function destroyWin2() {
        var tabId = App.FirstTabAccounting.activeTab.id;
        Ext.getCmp(tabId).destroy();
    }

    function setAllType3() {
        const AllType = ["0", "1"];
        Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').queryById('CboTypeSanad').setValue(AllType);
    }

    function SetPortrait() {
        Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').queryById('CboTypePrint').setValue("2");
    }

    function setTitlePnlRpt() {
        if ('@ViewBag.ModuleId' == 4) {
            Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').setSize(App.AccountingWin.getWidth() - 20, App.AccountingWin.getHeight() - 170);
        }
        else if ('@ViewBag.ModuleId' == 10) {
            Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').setSize(App.KhazanedariWin.getWidth() - 20, App.KhazanedariWin.getHeight() - 170);
        }
    }

    function Print() {

        var txtAzShomareSanad = Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').queryById('txtAzShomareSanad');
        var txtTaShomareSanad = Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').queryById('txtTaShomareSanad');
        var CboTypeSanad = Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').queryById('CboTypeSanad');
        var CboTypePrint = Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').queryById('CboTypePrint');


        var height = 0;
        if ('@ViewBag.ModuleId' == 4) {
            height = App.AccountingWin.getHeight() - 245;
        }
        else if ('@ViewBag.ModuleId' == 10) {
            height = App.KhazanedariWin.getHeight() - 245;
        }
        if (txtAzShomareSanad.validate() == true && txtTaShomareSanad.validate() == true && CboTypeSanad.validate() == true) {
            if ((txtTaShomareSanad.getValue() < txtAzShomareSanad.getValue()) || txtAzShomareSanad.getValue() == 0) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "فرمت شماره دهی صحیح نمی باشد.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
            else {
                var Type = 2;
                if (CboTypeSanad.getValue().length == 1)
                    Type = CboTypeSanad.getValue()[0];
                Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').queryById('RptPanel2').update("<center><object class='se-pre-con' style='width:100%;height:" + height
                    + "px;border: 1px solid #ccc;' type='application/pdf' data='/Accounting/DocRegistration/GeneratePDFPrintDocument_Group?AzShomareSanad="
                    + txtAzShomareSanad.getValue() + "&TaShomareSanad=" + txtTaShomareSanad.getValue() + "&TypeSanad=" + Type + "&Year=" + '@ViewBag.Year' + "&ModuleId=" + '@ViewBag.ModuleId' +
                    "&Type=" + CboTypePrint.getValue() + "'></object></center>");
            }

        }
        else {
            return;
        }

    }
    var addKeyMapPrintDocument_Group = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = Ext.getCmp('PrintDocument_Group' + '@ViewBag.ModuleId').queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;

                    if (keyfield.itemId == "CboTypePrint") {
                        Print();
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                        nextfld.focus();

                    }
                }
            }]
        });
    };
</script>