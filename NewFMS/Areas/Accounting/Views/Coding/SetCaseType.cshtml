@model IEnumerable<NewFMS.WCF_Accounting.OBJ_CaseType>
@using Ext.Net.MVC;
@{
    var X = Html.X();
}


@(Html.X().Window()
    .Width(600)
    .Height(500)
    .Title("انواع پرونده")
    .ID("SetCaseType")
    .Closable(true)
    .Modal(true)
    .Layout(Ext.Net.LayoutType.Fit)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .Border(false)
                    .TopBar(
                        Html.X().Toolbar()
                            .Items(
                                X.Button()
                                    .Text("ذخیره")
                                        .Icon(Ext.Net.Icon.Disk)
                                    .Listeners(li => li.Click.Handler = "NextSetCaseType();")
                                )
                        )
                    .ItemID("GridSetCaseType")
                    .Store(
                        X.StoreForModel()

                    .Listeners(l => l.Load.Handler = "LoadSavedData();")
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("ReadCaseType"))
                                .Reader(Html.X().JsonReader().Root("data"))
        //   .ExtraParams(x => x.Add(new { NodeId = @ViewBag.NodeId }))
                        )
                        .PageSize(20000)
                        .RemoteFilter(false)
                        .RemotePaging(true)
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
        //.Plugins(X.FilterHeader().Remote(false))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                             Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldName).Text("عنوان").Flex(5)
                    )
                    .Listeners(a => a.CellDblClick.Handler = "NextSetCaseType();")
                    .SelectionModel(
                        Html.X().CheckboxSelectionModel().CheckOnly(true)
                            .Mode(Ext.Net.SelectionMode.Multi)
                    )

            )
        )
)

<script type="text/javascript">

    function LoadSavedData() {
        var CaseSelected = '@ViewBag.CaseSelected';

        if (CaseSelected != "") {
            var u = CaseSelected.split(";");
            for (var j = 0; j < u.length - 1; j++) {
                var index = App.SetCaseType.queryById('GridSetCaseType').getStore().findExact("fldId", parseInt(u[j]));
                App.SetCaseType.queryById('GridSetCaseType').getSelectionModel().select(index, true);
            }
        }
    }
    function NextSetCaseType() {
        var SelectedRow = App.SetCaseType.queryById('GridSetCaseType').getSelectionModel().getSelection();
        var cases = "";
        if (SelectedRow != null) {
             
                for (var i = 0; i < SelectedRow.length; i++) {
                   
                        cases=cases+ SelectedRow[i].data.fldId + ";";

                }

                Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
                Ext.net.DirectMethod.request({
                    url: '/Accounting/Coding/SaveCaseTypes',
                    params: {
                        cases: cases,
                        NodeId: '@ViewBag.NodeId'
                    },
                    success: function (data) {
                        Ext.net.Mask.hide();
                        var ic = Ext.MessageBox.INFO;
                        if (data.Er == 1)
                            ic = Ext.MessageBox.ERROR;
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: ic,
                            buttons: Ext.MessageBox.OK,
                            closable: false,
                            fn: function (btn) {
                                if (btn == "ok") {
                                    App.SetCaseType.destroy();
                                }
                            }
                        });
                    }
                });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا نوع پرونده مورد نظر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>