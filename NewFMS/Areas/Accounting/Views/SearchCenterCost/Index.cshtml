@model IEnumerable<NewFMS.WCF_Accounting.OBJ_CenterCost>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}
@(Html.X().Window().Modal(true)
            .Width(500).Height(360)
            .Title("مراکز هزینه")
                        .ID("SearchCenterCost")
        .Listeners(l => l.Destroy.Handler = "SetFocusCostCenterComponent()")
                        
            .Closable(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .Items(

                        X.GridPanel().AutoScroll(true).Border(false)
                            .Listeners(l => l.AfterRender.Handler = "HandleFocus3()")         
                        .TopBar(
                            Html.X().Toolbar()
                            .Items(
                                    X.Button().Text("انتخاب").Icon(Ext.Net.Icon.ArrowRedo)
                                                        .Listeners(li => li.Click.Handler = "NextSearchCenterCost();")

                            )
                        )
                                    .ItemID("GridSearchCenterCost").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(330)
                    .ColumnWidth(0.6)
                    .Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                            .Listeners(l => l.Load.Handler = "SelectFirstRowGridCenterCost()")
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))
                        )
                        .PageSize(10)
                        .RemoteFilter(true)
                        .RemotePaging(true)

                    )
                    //.View(
                    //    Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    //)
                    .ViewConfig(X.GridView().LoadingText("در حال بارگذاری...").RTL(true).Listeners(l => l.ItemKeyDown.Fn = "NextSearchCenterCostwithKey"))
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                           Html.X().RowNumbererColumn(),
                            Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                            Html.X().Column().DataIndex(Model, m => m.fldNameCenter).Text("نام مرکز هزینه").Flex(4),
                            Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(10)
                    )
                                .Listeners(a => a.CellDblClick.Handler = "NextSearchCenterCost();")
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )

            )
        )
)

<script type="text/javascript">
    var State = '@ViewBag.State';
    function NextSearchCenterCost() {
        var SelectedRow = App.SearchCenterCost.queryById('GridSearchCenterCost').selModel.getLastSelected();

        if (SelectedRow != null) {
            if (State == 1) {
                App.SabtCaseBills.queryById('txtCenterCo').setValue(SelectedRow.data.fldNameCenter);
                App.SabtCaseBills.queryById('CenterCoId').setValue(SelectedRow.data.fldId);
            }
            else if (State == 2) {
                App.ColCostCenter.getComponent(parseInt('@ViewBag.rowIdx')).setValue(SelectedRow.data.fldId);
            }
            else if (State == 3) {
                App.ColCostCenter_Khazane.getComponent(parseInt('@ViewBag.rowIdx')).setValue(SelectedRow.data.fldId);
            }
            App.SearchCenterCost.destroy();
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    var NextSearchCenterCostwithKey = function (view, record, item, index, e) {
        if (e.getKey() == 13) {
            if (State == 2) {
                App.ColCostCenter.getComponent(parseInt('@ViewBag.rowIdx')).setValue(parseInt(record.data.fldId));
            }
            else if (State == 3) {
                App.ColCostCenter_Khazane.getComponent(parseInt('@ViewBag.rowIdx')).setValue(parseInt(record.data.fldId));
            }
            App.SearchCenterCost.destroy();
        }
    };

    function SetFocusCostCenterComponent() {
        if (State == "2") {
            App.ColCostCenter.getComponent(parseInt('@ViewBag.rowIdx')).focus();
        }
        else if (State == "3") {
            App.ColCostCenter_Khazane.getComponent(parseInt('@ViewBag.rowIdx')).focus();
        }
    }

    function HandleFocus3() {
        App.SearchCenterCost.queryById('GridSearchCenterCost').columnManager.headerCt.el.on("keyup", function (e) {
            if (e.getKey() == 13) {
                var keyfield = Ext.getCmp(Ext.Element.getActiveElement().name);
                if (Ext.getCmp(Ext.Element.getActiveElement().name).filterRow != undefined) {
                    var nextfld = Ext.getCmp((Ext.Element.getActiveElement()).name).nextNode().items;
                    if (nextfld != undefined) {
                        Ext.getCmp((Ext.Element.getActiveElement()).name).nextNode().items.items[0].child().focus();
                    }
                    else {
                        App.SearchCenterCost.queryById('GridSearchCenterCost').getSelectionModel().select(0);
                    }
                }
            }
        });
    }

    function SelectFirstRowGridCenterCost() {
        App.SearchCenterCost.queryById('GridSearchCenterCost').plugins[0].fields[1].focus();
        /*App.SearchCenterCost.queryById('GridSearchCenterCost').getSelectionModel().select(0);*/
    }


</script>