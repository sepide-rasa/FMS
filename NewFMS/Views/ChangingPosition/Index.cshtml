@model IEnumerable<NewFMS.WCF_Common_Pay.OBJ_Items_Estekhdam>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net.Utilities
@using Ext.Net;
@{

    var X = Html.X();
}
<style>
    td {
        text-align: left;
    }
</style>



@(X.Window().Title("تغییر موقعیت").Modal(true).Border(false)//.Listeners(li => li.AfterRender.Handler = "LoadChangingPosition();")
    .ID("ChangingPosition")
    .Closable(false)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
          .Width(400)
          .Layout(LayoutType.VBox)
              .LayoutConfig(new VBoxLayoutConfig { Align=VBoxAlign.Center})
        //.Height(130)
             .ButtonAlign(Alignment.Center)
          
        .DefaultButton("btn")

             .Buttons(
                X.Button().Text("انتخاب").IconCls("Select")
                .Listeners(l =>
                {
                    l.Click.Handler = "SaveChangingPosition();";

                })
                .ItemID("btnRefresh")

                )
    .Items(
        //    X.FormPanel()

        //.Border(false)
        //.KeyMap(Html.X().KeyMap()
        //.Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
        //.Binding(b =>
        //{
        //    b.Add(Html.X().KeyBinding()
        //    .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
        //    .Handler("SaveChangingPosition(); ")
        //    );

        //}))

        //.TitleAlign(Ext.Net.TitleAlign.Center)
        //.Layout(Ext.Net.LayoutType.HBox)
        //.LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = HBoxAlign.Middle })

        //.Items(
            
                X.Panel().ItemID("Panel")
            .Border(false)
                .Layout(LayoutType.Table)
                .Width(360)
                .Padding(5)
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                .Defaults(new { Margin=2})
                //.PaddingSpec("10px 10px 0 0")
            .Items(
                X.Hidden().ItemID("fldId"),
                         X.Hidden().ItemID("OrganId"),
                               //X.Label("سازمان:"),
                        X.Label("سازمان:") ,       
                     X.ComboBox()
                     //.Width(200)
                     //.FieldLabel("سازمان")
                            .ItemID("CboOrgan")
                            .TypeAhead(true)
                            .Editable(true)
                            .QueryMode(DataLoadMode.Local)
                                .BlankText("لطفا سازمان را انتخاب کنید.")
                            .ForceSelection(true)
                            .TriggerAction(TriggerAction.All)
                                .DisplayField("fldTitle")
                            .ValueField("fldId")
                                .EmptyText("سازمان ...")
                                .Width(300)
                            .Store(X.Store()
                            .Model(X.Model()
                            .IDProperty("fldId")
                            .Fields(
                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" }
                                    )
                                        )
                            .Proxy(X.AjaxProxy()
                                    .Url(Url.Action("GetOrgan"))
                            .Reader(X.JsonReader().Root("data"))
                                            )
                                     .Listeners(l => l.Load.Handler = "setdefaultValueOrgan()")
                                    )
                                .AllowBlank(false)
        //                     X.TreePanel()
        //                        .ID("Tree_Organ")
        //                                .AutoScroll(true)
        //                                .Width(450)
        //                                .ColSpan(2)
        //                                .Height(450)
        //                                .UseArrows(true)
        //                                .Border(false)
        //                                    .Store(
        //                Html.X().TreeStore()
        //                    .Proxy(
        //                                Html.X().AjaxProxy().Url(Url.Action("Node"))
        //                    )
        //            )

            //                                .Listeners(a =>
        //                                {
        //                                    a.ItemClick.Handler = "GetId(record)";
        //                                    a.AfterRender.Handler = "this.getRootNode().expand(true);";
        //                                })
        //                   .Root(Html.X().Node().NodeID("0").Text(" سازمانها"))
        //                  .Listeners(l =>
        //                  {
        //                      l.BeforeLoad.Fn = "nodeLoadOrgan";
        //                  })
        //                  .Expand(true)
        //                                .View(
        //                                X.TreeView()
        //                                .Plugins(
        //                                X.TreeViewDragDrop().AppendOnly(true).ContainerScroll(true)

            //                            )


            //)
        //     , X.Label().Width(400)
        //                            .ItemID("lblOrgan")
        //                            .Text("مورد انتخاب شده:")
        )

                           //)

    )
)

<script type="text/javascript">
    function setdefaultValueOrgan() {
        var CboOrgan = App.ChangingPosition.queryById('CboOrgan');
        CboOrgan.select(CboOrgan.store.getAt(0));
    }
    /*var State = 'ViewBag.State';
    var Name = "";
     var NodeId_O = 0;
    var nodeLoadOrgan = function (store, operation, options) {
        var node = operation.node;
        Ext.net.DirectMethod.request({
            url: '/Comon/SearchOrganization/NodeLoad',
            params: {
                nod: node.getId()
            },
            success: function (result) {
                node.set('loading', false);
                node.set('loaded', true);
                node.appendChild(result);
                node.expand();
            },

            failure: function (errorMsg) {
                Ext.Msg.alert('Failure', errorMsg);
            }
        });

        return false;
    };*/

    /*function GetId(record) {
        NodeId_O = record.getId();
        if (NodeId_O != 0) {
            Ext.net.DirectMethod.request({
                url: '/Comon/SearchOrganization/GetName',
                params: {
                    id: NodeId_O
                },
                success: function (data) {
                  
                    Name = data.fldName;
                    lblOrgan = App.ChangingPosition.queryById("lblOrgan");
                    lblOrgan.setText("مورد انتخاب شده: " + data.fldName);
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "شما مجاز به انتخاب گزینه مورد نظر نمی باشید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    };*/


    /*function LoadChangingPosition() {
        var txtOrgan = App.ChangingPosition.queryById('txtOrgan');
        var txtTarikh = App.ChangingPosition.queryById('txtTarikh');
        var CboTypeFormul = App.ChangingPosition.queryById('CboTypeFormul');
        if ('ViewBag.Id' != '0') {
            /*Edit
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/ChangingPosition/Details',
                params: {
                    id: 'ViewBag.Id'
                },
                success: function (data) {
                    txtTarikh.setValue(data.fldAzTarikh);
                    txtOrgan.setValue(data.NameOrgan);
                    CboTypeFormul.setValue(data.fldType);
                    var Id = App.ChangingPosition.queryById('fldId');
                    Id.setValue(data.fldId);
                    var OrganId = App.ChangingPosition.queryById('OrganId');
                    OrganId.setValue(data.fldOrganId);
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            txtTarikh.validate();
            txtOrgan.validate();
            CboTypeFormul.validate();

        }

    }*/

    function SaveChangingPosition() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        var er = false;
        var CboOrgan = App.ChangingPosition.queryById('CboOrgan');
        if (CboOrgan.validate() == false) {
            er = true;
            CboOrgan.validate();
        }        
        if (er == true)
            return;
        Ext.net.DirectMethod.request({
            url: '/ChangingPosition/Save',
            params: {
                fldOrganId: CboOrgan.getValue()
            },
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    var id = "MenuItem" + String(data[i]);
                    App.Desktop1.desktop.queryById(id).show();
                }
                $('#_lbl').html("موقعیت کاربر: " + CboOrgan.getDisplayValue());
                 App.lblLocation.setText(CboOrgan.getDisplayValue());
                App.ChangingPosition.destroy();
                location.reload();
            }
            , failure: function (data) {
                alert();
            }
        });
    }
    

    /*function EnterNext() {
        var keyfield = App.ChangingPosition.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling().nextSibling();
        nextfld.focus();
        nextfld.selectText();

    }*/

</script>
