@model IEnumerable<NewFMS.WCF_Common.OBJ_UserGroup>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}



@(X.Window().Maximized(true).Listeners(li => li.AfterRender.Handler = "UserGroupMap() ;")
                    .ID("UserGroup")
            .Closable(true)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)

                .Items(
                             X.TabPanel().ID("UserGroupTab")
                    .AutoScroll(true).Height(630).Items(
                        X.Panel().ItemID("GridPanel")
                                .Title("گروه کاربری")
                        .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button().Text("جدید").Icon(Ext.Net.Icon.Add).ToolTip("کلید میانبر F8")
                                            .Listeners(li => li.Click.Handler = "NewUserGroup();"),
                            X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).ToolTip("کلید میانبر F2")
                                            .Listeners(Li => Li.Click.Handler = "EditUserGroup();"),
                            X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).ToolTip("کلید میانبر F9")
                                .Listeners(de =>
                                {
                                    de.Click.Handler = "if (App.UserGroup.queryById('Grid').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteUserGroup();";
                                })
                        )
                    )
                    .ItemID("Grid").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(600)
                    .ColumnWidth(0.6)
                    .Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                                    .Listeners(l => l.DataChanged.Handler = "App.UserGroup.queryById('Grid').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("عنوان گروه کاربری").Flex(5),
                        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(10)



                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )

                ))
            )
        )
)

<script type="text/javascript">

    function UserGroupMap() {
        var k = new Ext.KeyMap(
            document,
            [{
                target: Ext.get('UserGroup'),
                scope: this,
                key: [119],
                fn: function (key, event) {
                    if (App.UserGroup && App.NewUserGroup) {
                        if (App.NewUserGroup.active == false)
                            NewUserGroup();
                    }
                    else if (App.UserGroup && !App.NewUserGroup)
                        NewUserGroup();
                }
            },
            {
                target: App.UserGroup.getTargetEl(),
                scope: this,
                key: [113],
                fn: function (key, event) {
                    if (App.UserGroup && App.NewUserGroup) {
                        if (App.NewUserGroup.active == false)
                            EditUserGroup();
                    }
                    else if (App.UserGroup && !App.NewUserGroup)
                        EditUserGroup();
                }
            },
            {
                target: App.UserGroup.getTargetEl(),
                scope: this,
                key: [120],
                fn: function (key, event) {
                    if (App.UserGroup && App.NewUserGroup) {
                        if (App.NewUserGroup.active == false)
                            DeleteUserGroup();
                    }
                    else if (App.UserGroup && !App.NewUserGroup)
                        DeleteUserGroup();
                }
            }]
            )
    }
    function NewUserGroup() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/UserGroup/new',
            params: {
                id: 0
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function EditUserGroup() {
        var SelectedRow = App.UserGroup.queryById('Grid').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/UserGroup/new',
                params: {
                    id: SelectedRow.data.fldId,
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteUserGroup() {
        var SelectedHeaderRow = App.UserGroup.queryById('Grid').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/UserGroup/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId
                            },
                            success: function (data) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.INFO,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.UserGroup.queryById('Grid').store.load()
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

</script>
