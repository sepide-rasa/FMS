@model IEnumerable<NewFMS.WCF_Common.OBJ_User>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}
@(X.Panel().Title("کاربر").Border(false).Listeners(l => l.AfterRender.Handler = "ReplaceArabic();")
            .ID("User")
                .AutoScroll(true).Closable(true)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .KeyMap(Html.X().KeyMap()
                        .ID("UserMap")
                    .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                    .Binding(b =>
                    {
                        b.Add(Html.X().KeyBinding()
                            .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                            .Handler("if(App.UsersTab.activeTab.itemId=='GridPanel')NewUser(); ")
                        );
                        b.Add(Html.X().KeyBinding()
                            .KeysString(((int)Ext.Net.KeyCode.F2).ToString())
                            .Handler("EditUser(); ")
                        );
                        b.Add(Html.X().KeyBinding()
                            .KeysString(((int)Ext.Net.KeyCode.F9).ToString())
                            .Handler("DeleteUser(); ")
                        );

                    })).Layout(Ext.Net.LayoutType.Table)
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                .Items(
                        X.TabPanel().ID("UsersTab")
                    .AutoScroll(true).Items(
                    X.Panel().ItemID("GridPanel")
                        .Title(" کاربران")
                        .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button().Text("جدید").Icon(Ext.Net.Icon.UserAdd).ToolTip("کلید میانبر F8")
                                        .Listeners(li => li.Click.Handler = "NewUser();"),
                            X.Button().Text("ویرایش").Icon(Ext.Net.Icon.UserEdit).ToolTip("کلید میانبر F2")
                                        .Listeners(Li => Li.Click.Handler = "EditUser();"),
                            X.Button().Text("ریست پسورد").Icon(Ext.Net.Icon.Pencil)
                                    .Listeners(Li => Li.Click.Handler = "ResetPass();"),
                            X.Button().Text("حذف تمامی دسترسی ها").Icon(Ext.Net.Icon.UserDelete).ToolTip("کلید میانبر F9")
                                .Listeners(de =>
                                {
                                    de.Click.Handler = "if (App.User.queryById('GridUser').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteUser();";
                                })

                            , X.Button().Text("راهنما").Icon(Ext.Net.Icon.Help)
                            .Listeners(de =>
                                {
                                    de.Click.Handler = "HelpUser();";
                                })
                        )
                    )
                        .ItemID("GridUser").Flex(2)
                    .BottomBar(X.PagingToolbar())
        //.ColumnWidth(0.6)
        //.Layout(Ext.Net.LayoutType.Column)
                    .Listeners(l => l.AfterRender.Handler = "var grid=App.User.queryById('GridUser');grid.setHeight(App.UserWin.height-112);")
                    .Store(
                        X.StoreForModel()
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)

                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )

                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                            Html.X().Column().DataIndex(Model, m => m.fldNameEmployee).Text("نام کارمند").Flex(1),
                            //Html.X().Column().DataIndex(Model, m => m.fldNameOrgan).Text("سازمان").Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldUserName).Text("نام کاربری").Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldActive_DeactiveName).Text("وضعیت کاربر").Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(1)
                        )

                ))
            )
        )
)
<script type="text/javascript">
    function ResetPass() {
        var SelectedRow = App.User.queryById('GridUser').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/User/SaveResetPass',
                params: {
                    fldId: SelectedRow.data.fldId
                },
                success: function (data) {
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: Ext.MessageBox.INFO,
                        buttons: Ext.MessageBox.OK
                    });
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function EditUser() {
        var SelectedRow = App.User.queryById('GridUser').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/User/new',
                params: {
                    id: SelectedRow.data.fldId,
                    containerId: "UsersTab",
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewUser() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/User/New',
            params: {
                id: 0,
                containerId: "UsersTab"
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function DeleteUser() {
        var SelectedHeaderRow = App.User.queryById('GridUser').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/User/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId
                            },
                            success: function (data) {
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.INFO,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.User.queryById('GridUser').store.load()
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function HelpUser() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/User/Help',
            params: {

            },
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }

</script>